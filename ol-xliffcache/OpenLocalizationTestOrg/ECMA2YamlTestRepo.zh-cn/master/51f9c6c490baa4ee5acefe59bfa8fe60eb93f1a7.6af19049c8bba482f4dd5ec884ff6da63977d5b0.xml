{"nodes":[{"pos":[899,919],"content":"ValueTuple<T1,T2,T3>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3&gt;","pos":[0,20],"source":"ValueTuple<T1,T2,T3>"}]},{"pos":[1290,1324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1357,1391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1424,1458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1916,1936],"content":"ValueTuple(T1,T2,T3)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3)","pos":[0,20]}]},{"pos":[2262,2296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2347,2381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2432,2466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2669,2700],"content":"CompareTo(ValueTuple<T1,T2,T3>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3&gt;)","pos":[0,31],"source":"CompareTo(ValueTuple<T1,T2,T3>)"}]},{"pos":[3061,3095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3152,3186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3371,3385],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3695,3729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3788,3822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4059,4087],"content":"Equals(ValueTuple<T1,T2,T3>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3&gt;)","pos":[0,28],"source":"Equals(ValueTuple<T1,T2,T3>)"}]},{"pos":[4440,4474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4533,4567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4772,4785],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5087,5121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5274,5279],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[5516,5550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5703,5708],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[5945,5979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6132,6137],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[6374,6408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6753,6821],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[7290,7324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7404,7438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7495,7529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7882,7954],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[8436,8470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8558,8592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8651,8685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9020,9090],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[9584,9618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9675,9709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9952,9988],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[10344,10378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10435,10469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10628,10638],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10935,10969],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11083,11099],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[11201,11221],"content":"ValueTuple(T1,T2,T3)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3)","pos":[0,20]}]},{"pos":[11391,11393],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[11478,11480],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[11565,11567],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[11718,11749],"content":"CompareTo(ValueTuple<T1,T2,T3>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3&gt;)","pos":[0,31],"source":"CompareTo(ValueTuple<T1,T2,T3>)"}]},{"pos":[11956,11961],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12081,12101],"content":"ValueTuple<T1,T2,T3>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3&gt;","pos":[0,20],"source":"ValueTuple<T1,T2,T3>"}]},{"pos":[12286,12300],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[12475,12482],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12600,12606],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12769,12797],"content":"Equals(ValueTuple<T1,T2,T3>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3&gt;)","pos":[0,28],"source":"Equals(ValueTuple<T1,T2,T3>)"}]},{"pos":[13000,13007],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13131,13151],"content":"ValueTuple<T1,T2,T3>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3&gt;","pos":[0,20],"source":"ValueTuple<T1,T2,T3>"}]},{"pos":[13326,13339],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[13510,13515],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13654,13659],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[13799,13801],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[13927,13932],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[14072,14074],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[14200,14205],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[14345,14347],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[14562,14630],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[14911,14916],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15030,15036],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15179,15188],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[15440,15512],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[15803,15810],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15928,15934],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16085,16102],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[16361,16431],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[16716,16721],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16870,16887],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[17100,17136],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[17353,17358],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17472,17478],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17622,17632],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17798,17804],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`3\n  id: ValueTuple`3\n  children:\n  - System.ValueTuple`3.#ctor(`0,`1,`2)\n  - System.ValueTuple`3.CompareTo(System.ValueTuple`3)\n  - System.ValueTuple`3.Equals(System.Object)\n  - System.ValueTuple`3.Equals(System.ValueTuple`3)\n  - System.ValueTuple`3.GetHashCode\n  - System.ValueTuple`3.Item1\n  - System.ValueTuple`3.Item2\n  - System.ValueTuple`3.Item3\n  - System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`3.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`3.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3>\n  nameWithType: ValueTuple<T1,T2,T3>\n  fullName: System.ValueTuple<T1,T2,T3>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1,T2,T3> : IComparable, IComparable<ValueTuple<T1,T2,T3>>, IEquatable<ValueTuple<T1,T2,T3>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n    - id: T3\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1,T2,T3>>\n  - System.IEquatable<System.ValueTuple<T1,T2,T3>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.#ctor(`0,`1,`2)\n  id: '#ctor(`0,`1,`2)'\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: ValueTuple(T1,T2,T3)\n  nameWithType: ValueTuple<T1,T2,T3>.ValueTuple(T1,T2,T3)\n  fullName: System.ValueTuple<T1,T2,T3>.ValueTuple(T1,T2,T3)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2, T3 item3);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.CompareTo(System.ValueTuple`3)\n  id: CompareTo(System.ValueTuple`3)\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2,T3>)\n  nameWithType: ValueTuple<T1,T2,T3>.CompareTo(ValueTuple<T1,T2,T3>)\n  fullName: System.ValueTuple<T1,T2,T3>.CompareTo(ValueTuple<T1,T2,T3>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2,T3> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`3\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`3.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.Equals(System.ValueTuple`3)\n  id: Equals(System.ValueTuple`3)\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2,T3>)\n  nameWithType: ValueTuple<T1,T2,T3>.Equals(ValueTuple<T1,T2,T3>)\n  fullName: System.ValueTuple<T1,T2,T3>.Equals(ValueTuple<T1,T2,T3>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2,T3> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`3\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`3.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.Item1\n  id: Item1\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3>.Item1\n  fullName: System.ValueTuple<T1,T2,T3>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.Item2\n  id: Item2\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3>.Item2\n  fullName: System.ValueTuple<T1,T2,T3>.Item2\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.Item3\n  id: Item3\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3>.Item3\n  fullName: System.ValueTuple<T1,T2,T3>.Item3\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T3 Item3;\n    return:\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`3.ToString\n  id: ToString\n  parent: System.ValueTuple`3\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`3.#ctor(`0,`1,`2)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: ValueTuple(T1,T2,T3)\n  nameWithType: ValueTuple<T1,T2,T3>.ValueTuple(T1,T2,T3)\n  fullName: System.ValueTuple<T1,T2,T3>.ValueTuple(T1,T2,T3)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple`3.CompareTo(System.ValueTuple`3)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2,T3>)\n  nameWithType: ValueTuple<T1,T2,T3>.CompareTo(ValueTuple<T1,T2,T3>)\n  fullName: System.ValueTuple<T1,T2,T3>.CompareTo(ValueTuple<T1,T2,T3>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`3\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3>\n  nameWithType: ValueTuple<T1,T2,T3>\n  fullName: System.ValueTuple<T1,T2,T3>\n- uid: System.ValueTuple`3.Equals(System.Object)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`3.Equals(System.ValueTuple`3)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2,T3>)\n  nameWithType: ValueTuple<T1,T2,T3>.Equals(ValueTuple<T1,T2,T3>)\n  fullName: System.ValueTuple<T1,T2,T3>.Equals(ValueTuple<T1,T2,T3>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`3\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3>\n  nameWithType: ValueTuple<T1,T2,T3>\n  fullName: System.ValueTuple<T1,T2,T3>\n- uid: System.ValueTuple`3.GetHashCode\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`3.Item1\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3>.Item1\n  fullName: System.ValueTuple<T1,T2,T3>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`3.Item2\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3>.Item2\n  fullName: System.ValueTuple<T1,T2,T3>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`3.Item3\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3>.Item3\n  fullName: System.ValueTuple<T1,T2,T3>.Item3\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple`3.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`3.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`3.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`3.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`3.ToString\n  parent: System.ValueTuple`3\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`3.Equals*\n  parent: System.ValueTuple`3\n  isExternal: false\n  nameWithType: ValueTuple<T1,T2,T3>.\n"}