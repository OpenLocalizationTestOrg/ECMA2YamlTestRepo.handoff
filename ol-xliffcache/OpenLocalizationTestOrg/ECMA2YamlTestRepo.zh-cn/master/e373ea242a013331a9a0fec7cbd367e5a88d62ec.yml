### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.BuildEngine.TargetCollection
  id: TargetCollection
  children:
  - Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)
  - Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)
  - Microsoft.Build.BuildEngine.TargetCollection.Count
  - Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)
  - Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator
  - Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized
  - Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)
  - Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)
  - Microsoft.Build.BuildEngine.TargetCollection.SyncRoot
  langs:
  - csharp
  name: TargetCollection
  nameWithType: TargetCollection
  fullName: Microsoft.Build.BuildEngine.TargetCollection
  type: Class
  syntax:
    content: 'public class TargetCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)
  id: AddNewTarget(System.String)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: AddNewTarget(String)
  nameWithType: TargetCollection.AddNewTarget(String)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public Microsoft.Build.BuildEngine.Target AddNewTarget (string targetName);
    parameters:
    - id: targetName
      type: System.String
      description: Parameter description to be filled
    return:
      type: Microsoft.Build.BuildEngine.Target
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TargetCollection.CopyTo(Array,Int32)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.Count
  id: Count
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: Count
  nameWithType: TargetCollection.Count
  fullName: Microsoft.Build.BuildEngine.TargetCollection.Count
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)
  id: Exists(System.String)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: Exists(String)
  nameWithType: TargetCollection.Exists(String)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.Exists(String)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public bool Exists (string targetName);
    parameters:
    - id: targetName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator
  id: GetEnumerator
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TargetCollection.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator()
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized
  id: IsSynchronized
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: TargetCollection.IsSynchronized
  fullName: Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)
  id: Item(System.String)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TargetCollection.Item(String)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.Item(String)
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public Microsoft.Build.BuildEngine.Target this[string index] { get; }
    parameters:
    - id: index
      type: System.String
      description: Parameter description to be filled
    return:
      type: Microsoft.Build.BuildEngine.Target
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)
  id: RemoveTarget(Microsoft.Build.BuildEngine.Target)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: RemoveTarget(Target)
  nameWithType: TargetCollection.RemoveTarget(Target)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Target)
  type: Method
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public void RemoveTarget (Microsoft.Build.BuildEngine.Target targetToRemove);
    parameters:
    - id: targetToRemove
      type: Microsoft.Build.BuildEngine.Target
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Build.BuildEngine.TargetCollection.SyncRoot
  id: SyncRoot
  parent: Microsoft.Build.BuildEngine.TargetCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: TargetCollection.SyncRoot
  fullName: Microsoft.Build.BuildEngine.TargetCollection.SyncRoot
  type: Property
  assemblies:
  - Microsoft.Build.Engine
  namespace: Microsoft.Build.BuildEngine
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(System.String)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: AddNewTarget(String)
  nameWithType: TargetCollection.AddNewTarget(String)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.AddNewTarget(String)
- uid: Microsoft.Build.BuildEngine.Target
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Target
  nameWithType: Target
  fullName: Microsoft.Build.BuildEngine.Target
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.TargetCollection.CopyTo(System.Array,System.Int32)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TargetCollection.CopyTo(Array,Int32)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.TargetCollection.Count
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: Count
  nameWithType: TargetCollection.Count
  fullName: Microsoft.Build.BuildEngine.TargetCollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.BuildEngine.TargetCollection.Exists(System.String)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: Exists(String)
  nameWithType: TargetCollection.Exists(String)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.Exists(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TargetCollection.GetEnumerator()
  fullName: Microsoft.Build.BuildEngine.TargetCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: TargetCollection.IsSynchronized
  fullName: Microsoft.Build.BuildEngine.TargetCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.BuildEngine.TargetCollection.Item(System.String)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: Item(String)
  nameWithType: TargetCollection.Item(String)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.Item(String)
- uid: Microsoft.Build.BuildEngine.Target
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Target
  nameWithType: Target
  fullName: Microsoft.Build.BuildEngine.Target
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Microsoft.Build.BuildEngine.Target)
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: RemoveTarget(Target)
  nameWithType: TargetCollection.RemoveTarget(Target)
  fullName: Microsoft.Build.BuildEngine.TargetCollection.RemoveTarget(Target)
- uid: Microsoft.Build.BuildEngine.Target
  parent: Microsoft.Build.BuildEngine
  isExternal: false
  name: Target
  nameWithType: Target
  fullName: Microsoft.Build.BuildEngine.Target
- uid: Microsoft.Build.BuildEngine.TargetCollection.SyncRoot
  parent: Microsoft.Build.BuildEngine.TargetCollection
  isExternal: false
  name: SyncRoot
  nameWithType: TargetCollection.SyncRoot
  fullName: Microsoft.Build.BuildEngine.TargetCollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
