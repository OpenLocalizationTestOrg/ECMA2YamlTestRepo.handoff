{"nodes":[{"pos":[367,385],"content":"IDynamicExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"IDynamicExpression","pos":[0,18]}]},{"pos":[875,891],"content":"CreateCallSite()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateCallSite()","pos":[0,16]}]},{"pos":[1230,1264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1477,1489],"content":"DelegateType","needQuote":true,"needEscape":true,"nodes":[{"content":"DelegateType","pos":[0,12]}]},{"pos":[1802,1836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2115,2136],"content":"Rewrite(Expression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Rewrite(Expression[])","pos":[0,21]}]},{"pos":[2570,2604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2683,2717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2925,2941],"content":"CreateCallSite()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateCallSite()","pos":[0,16]}]},{"pos":[3132,3138],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3332,3344],"content":"DelegateType","needQuote":true,"needEscape":true,"nodes":[{"content":"DelegateType","pos":[0,12]}]},{"pos":[3525,3529],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[3752,3773],"content":"Rewrite(Expression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Rewrite(Expression[])","pos":[0,21]}]},{"pos":[4012,4022],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[4201,4211],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.IDynamicExpression\n  id: IDynamicExpression\n  children:\n  - System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  - System.Linq.Expressions.IDynamicExpression.DelegateType\n  - System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  langs:\n  - csharp\n  name: IDynamicExpression\n  nameWithType: IDynamicExpression\n  fullName: System.Linq.Expressions.IDynamicExpression\n  type: Interface\n  syntax:\n    content: 'public interface IDynamicExpression : System.Linq.Expressions.IArgumentProvider'\n  implements:\n  - System.Linq.Expressions.IArgumentProvider\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  id: CreateCallSite\n  parent: System.Linq.Expressions.IDynamicExpression\n  langs:\n  - csharp\n  name: CreateCallSite()\n  nameWithType: IDynamicExpression.CreateCallSite()\n  fullName: System.Linq.Expressions.IDynamicExpression.CreateCallSite()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public object CreateCallSite ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.IDynamicExpression.DelegateType\n  id: DelegateType\n  parent: System.Linq.Expressions.IDynamicExpression\n  langs:\n  - csharp\n  name: DelegateType\n  nameWithType: IDynamicExpression.DelegateType\n  fullName: System.Linq.Expressions.IDynamicExpression.DelegateType\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public Type DelegateType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  id: Rewrite(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.IDynamicExpression\n  langs:\n  - csharp\n  name: Rewrite(Expression[])\n  nameWithType: IDynamicExpression.Rewrite(Expression[])\n  fullName: System.Linq.Expressions.IDynamicExpression.Rewrite(Expression[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Linq.Expressions.Expression Rewrite (System.Linq.Expressions.Expression[] args);\n    parameters:\n    - id: args\n      type: System.Linq.Expressions.Expression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Linq.Expressions.IDynamicExpression.CreateCallSite\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: CreateCallSite()\n  nameWithType: IDynamicExpression.CreateCallSite()\n  fullName: System.Linq.Expressions.IDynamicExpression.CreateCallSite()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Linq.Expressions.IDynamicExpression.DelegateType\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: DelegateType\n  nameWithType: IDynamicExpression.DelegateType\n  fullName: System.Linq.Expressions.IDynamicExpression.DelegateType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Linq.Expressions.IDynamicExpression.Rewrite(System.Linq.Expressions.Expression[])\n  parent: System.Linq.Expressions.IDynamicExpression\n  isExternal: false\n  name: Rewrite(Expression[])\n  nameWithType: IDynamicExpression.Rewrite(Expression[])\n  fullName: System.Linq.Expressions.IDynamicExpression.Rewrite(Expression[])\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression[]\n"}