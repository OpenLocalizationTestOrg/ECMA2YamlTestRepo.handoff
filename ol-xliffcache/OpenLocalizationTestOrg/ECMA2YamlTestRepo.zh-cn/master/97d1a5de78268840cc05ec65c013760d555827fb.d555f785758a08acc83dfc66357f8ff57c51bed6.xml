{"nodes":[{"pos":[374,386],"content":"EncodingInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"EncodingInfo","pos":[0,12]}]},{"pos":[965,973],"content":"CodePage","needQuote":true,"needEscape":true,"nodes":[{"content":"CodePage","pos":[0,8]}]},{"pos":[1235,1269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1444,1455],"content":"DisplayName","needQuote":true,"needEscape":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[1730,1764],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1959,1973],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2281,2315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2374,2408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2583,2596],"content":"GetEncoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding()","pos":[0,13]}]},{"pos":[2908,2942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3117,3130],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3426,3460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3621,3625],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[3879,3913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4024,4037],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[4142,4150],"content":"CodePage","needQuote":true,"needEscape":true,"nodes":[{"content":"CodePage","pos":[0,8]}]},{"pos":[4300,4305],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4460,4471],"content":"DisplayName","needQuote":true,"needEscape":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[4628,4634],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[4801,4815],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4979,4986],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5104,5110],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5267,5280],"content":"GetEncoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding()","pos":[0,13]}]},{"pos":[5453,5461],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[5627,5640],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5800,5805],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5953,5957],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[6100,6106],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.EncodingInfo\n  id: EncodingInfo\n  children:\n  - System.Text.EncodingInfo.CodePage\n  - System.Text.EncodingInfo.DisplayName\n  - System.Text.EncodingInfo.Equals(System.Object)\n  - System.Text.EncodingInfo.GetEncoding\n  - System.Text.EncodingInfo.GetHashCode\n  - System.Text.EncodingInfo.Name\n  langs:\n  - csharp\n  name: EncodingInfo\n  nameWithType: EncodingInfo\n  fullName: System.Text.EncodingInfo\n  type: Class\n  syntax:\n    content: public sealed class EncodingInfo\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncodingInfo.CodePage\n  id: CodePage\n  parent: System.Text.EncodingInfo\n  langs:\n  - csharp\n  name: CodePage\n  nameWithType: EncodingInfo.CodePage\n  fullName: System.Text.EncodingInfo.CodePage\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public int CodePage { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncodingInfo.DisplayName\n  id: DisplayName\n  parent: System.Text.EncodingInfo\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: EncodingInfo.DisplayName\n  fullName: System.Text.EncodingInfo.DisplayName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public string DisplayName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncodingInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.EncodingInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: EncodingInfo.Equals(Object)\n  fullName: System.Text.EncodingInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncodingInfo.GetEncoding\n  id: GetEncoding\n  parent: System.Text.EncodingInfo\n  langs:\n  - csharp\n  name: GetEncoding()\n  nameWithType: EncodingInfo.GetEncoding()\n  fullName: System.Text.EncodingInfo.GetEncoding()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public System.Text.Encoding GetEncoding ();\n    parameters: []\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncodingInfo.GetHashCode\n  id: GetHashCode\n  parent: System.Text.EncodingInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: EncodingInfo.GetHashCode()\n  fullName: System.Text.EncodingInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncodingInfo.Name\n  id: Name\n  parent: System.Text.EncodingInfo\n  langs:\n  - csharp\n  name: Name\n  nameWithType: EncodingInfo.Name\n  fullName: System.Text.EncodingInfo.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Text.EncodingInfo.CodePage\n  parent: System.Text.EncodingInfo\n  isExternal: false\n  name: CodePage\n  nameWithType: EncodingInfo.CodePage\n  fullName: System.Text.EncodingInfo.CodePage\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncodingInfo.DisplayName\n  parent: System.Text.EncodingInfo\n  isExternal: false\n  name: DisplayName\n  nameWithType: EncodingInfo.DisplayName\n  fullName: System.Text.EncodingInfo.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.EncodingInfo.Equals(System.Object)\n  parent: System.Text.EncodingInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: EncodingInfo.Equals(Object)\n  fullName: System.Text.EncodingInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.EncodingInfo.GetEncoding\n  parent: System.Text.EncodingInfo\n  isExternal: false\n  name: GetEncoding()\n  nameWithType: EncodingInfo.GetEncoding()\n  fullName: System.Text.EncodingInfo.GetEncoding()\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.EncodingInfo.GetHashCode\n  parent: System.Text.EncodingInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: EncodingInfo.GetHashCode()\n  fullName: System.Text.EncodingInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncodingInfo.Name\n  parent: System.Text.EncodingInfo\n  isExternal: false\n  name: Name\n  nameWithType: EncodingInfo.Name\n  fullName: System.Text.EncodingInfo.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}