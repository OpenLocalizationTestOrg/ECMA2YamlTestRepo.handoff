{"nodes":[{"pos":[527,537],"content":"CatchBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[1292,1296],"content":"Body","needQuote":true,"needEscape":true,"nodes":[{"content":"Body","pos":[0,4]}]},{"pos":[1622,1656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1841,1847],"content":"Filter","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter","pos":[0,6]}]},{"pos":[2179,2213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2394,2398],"content":"Test","needQuote":true,"needEscape":true,"nodes":[{"content":"Test","pos":[0,4]}]},{"pos":[2671,2705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2894,2904],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[3218,3252],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3667,3716],"content":"Update(ParameterExpression,Expression,Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Update(ParameterExpression,Expression,Expression)","pos":[0,49]}]},{"pos":[4295,4329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4413,4447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4529,4563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4642,4676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4865,4873],"content":"Variable","needQuote":true,"needEscape":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[5229,5263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5374,5387],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5508,5512],"content":"Body","needQuote":true,"needEscape":true,"nodes":[{"content":"Body","pos":[0,4]}]},{"pos":[5701,5711],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[5908,5914],"content":"Filter","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter","pos":[0,6]}]},{"pos":[6107,6117],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[6312,6316],"content":"Test","needQuote":true,"needEscape":true,"nodes":[{"content":"Test","pos":[0,4]}]},{"pos":[6465,6469],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[6639,6649],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6812,6818],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7105,7154],"content":"Update(ParameterExpression,Expression,Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Update(ParameterExpression,Expression,Expression)","pos":[0,49]}]},{"pos":[7433,7443],"content":"CatchBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[7631,7650],"content":"ParameterExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[7847,7857],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[8036,8046],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[8245,8253],"content":"Variable","needQuote":true,"needEscape":true,"nodes":[{"content":"Variable","pos":[0,8]}]},{"pos":[8459,8478],"content":"ParameterExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.CatchBlock\n  id: CatchBlock\n  children:\n  - System.Linq.Expressions.CatchBlock.Body\n  - System.Linq.Expressions.CatchBlock.Filter\n  - System.Linq.Expressions.CatchBlock.Test\n  - System.Linq.Expressions.CatchBlock.ToString\n  - System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.CatchBlock.Variable\n  langs:\n  - csharp\n  name: CatchBlock\n  nameWithType: CatchBlock\n  fullName: System.Linq.Expressions.CatchBlock\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Linq.Expressions.Expression/CatchBlockProxy))]\n\n      public sealed class CatchBlock\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.CatchBlock.Body\n  id: Body\n  parent: System.Linq.Expressions.CatchBlock\n  langs:\n  - csharp\n  name: Body\n  nameWithType: CatchBlock.Body\n  fullName: System.Linq.Expressions.CatchBlock.Body\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Linq.Expressions.Expression Body { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.CatchBlock.Filter\n  id: Filter\n  parent: System.Linq.Expressions.CatchBlock\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: CatchBlock.Filter\n  fullName: System.Linq.Expressions.CatchBlock.Filter\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Linq.Expressions.Expression Filter { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.CatchBlock.Test\n  id: Test\n  parent: System.Linq.Expressions.CatchBlock\n  langs:\n  - csharp\n  name: Test\n  nameWithType: CatchBlock.Test\n  fullName: System.Linq.Expressions.CatchBlock.Test\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public Type Test { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.CatchBlock.ToString\n  id: ToString\n  parent: System.Linq.Expressions.CatchBlock\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CatchBlock.ToString()\n  fullName: System.Linq.Expressions.CatchBlock.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  id: Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.CatchBlock\n  langs:\n  - csharp\n  name: Update(ParameterExpression,Expression,Expression)\n  nameWithType: CatchBlock.Update(ParameterExpression,Expression,Expression)\n  fullName: System.Linq.Expressions.CatchBlock.Update(ParameterExpression,Expression,Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Linq.Expressions.CatchBlock Update (System.Linq.Expressions.ParameterExpression variable, System.Linq.Expressions.Expression filter, System.Linq.Expressions.Expression body);\n    parameters:\n    - id: variable\n      type: System.Linq.Expressions.ParameterExpression\n      description: Parameter description to be filled\n    - id: filter\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    - id: body\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.CatchBlock\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.CatchBlock.Variable\n  id: Variable\n  parent: System.Linq.Expressions.CatchBlock\n  langs:\n  - csharp\n  name: Variable\n  nameWithType: CatchBlock.Variable\n  fullName: System.Linq.Expressions.CatchBlock.Variable\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Linq.Expressions.ParameterExpression Variable { get; }\n    return:\n      type: System.Linq.Expressions.ParameterExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Linq.Expressions.CatchBlock.Body\n  parent: System.Linq.Expressions.CatchBlock\n  isExternal: false\n  name: Body\n  nameWithType: CatchBlock.Body\n  fullName: System.Linq.Expressions.CatchBlock.Body\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.CatchBlock.Filter\n  parent: System.Linq.Expressions.CatchBlock\n  isExternal: false\n  name: Filter\n  nameWithType: CatchBlock.Filter\n  fullName: System.Linq.Expressions.CatchBlock.Filter\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.CatchBlock.Test\n  parent: System.Linq.Expressions.CatchBlock\n  isExternal: false\n  name: Test\n  nameWithType: CatchBlock.Test\n  fullName: System.Linq.Expressions.CatchBlock.Test\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Linq.Expressions.CatchBlock.ToString\n  parent: System.Linq.Expressions.CatchBlock\n  isExternal: false\n  name: ToString()\n  nameWithType: CatchBlock.ToString()\n  fullName: System.Linq.Expressions.CatchBlock.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.CatchBlock\n  isExternal: false\n  name: Update(ParameterExpression,Expression,Expression)\n  nameWithType: CatchBlock.Update(ParameterExpression,Expression,Expression)\n  fullName: System.Linq.Expressions.CatchBlock.Update(ParameterExpression,Expression,Expression)\n- uid: System.Linq.Expressions.CatchBlock\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: CatchBlock\n  nameWithType: CatchBlock\n  fullName: System.Linq.Expressions.CatchBlock\n- uid: System.Linq.Expressions.ParameterExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ParameterExpression\n  nameWithType: ParameterExpression\n  fullName: System.Linq.Expressions.ParameterExpression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.CatchBlock.Variable\n  parent: System.Linq.Expressions.CatchBlock\n  isExternal: false\n  name: Variable\n  nameWithType: CatchBlock.Variable\n  fullName: System.Linq.Expressions.CatchBlock.Variable\n- uid: System.Linq.Expressions.ParameterExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ParameterExpression\n  nameWithType: ParameterExpression\n  fullName: System.Linq.Expressions.ParameterExpression\n"}