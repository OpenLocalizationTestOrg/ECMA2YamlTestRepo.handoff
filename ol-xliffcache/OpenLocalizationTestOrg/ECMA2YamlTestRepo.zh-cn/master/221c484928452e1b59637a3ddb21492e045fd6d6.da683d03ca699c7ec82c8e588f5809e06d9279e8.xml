{"nodes":[{"pos":[394,408],"content":"MutexAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAuditRule","pos":[0,14]}]},{"pos":[1903,1959],"content":"MutexAuditRule(IdentityReference,MutexRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAuditRule(IdentityReference,MutexRights,AuditFlags)","pos":[0,56]}]},{"pos":[2566,2600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2696,2730],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2819,2853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3068,3079],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[3457,3491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3628,3667],"content":"System.Security.AccessControl.AuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AuditRule","pos":[0,39]}]},{"pos":[3937,3993],"content":"MutexAuditRule(IdentityReference,MutexRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexAuditRule(IdentityReference,MutexRights,AuditFlags)","pos":[0,56]}]},{"pos":[4311,4328],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[4536,4547],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[4746,4756],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[4984,4995],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]},{"pos":[5225,5236],"content":"MutexRights","needQuote":true,"needEscape":true,"nodes":[{"content":"MutexRights","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.MutexAuditRule\n  id: MutexAuditRule\n  children:\n  - System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.MutexAuditRule.MutexRights\n  langs:\n  - csharp\n  name: MutexAuditRule\n  nameWithType: MutexAuditRule\n  fullName: System.Security.AccessControl.MutexAuditRule\n  type: Class\n  syntax:\n    content: 'public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.MutexAuditRule\n  langs:\n  - csharp\n  name: MutexAuditRule(IdentityReference,MutexRights,AuditFlags)\n  nameWithType: MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)\n  fullName: System.Security.AccessControl.MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: eventRights\n      type: System.Security.AccessControl.MutexRights\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.MutexAuditRule.MutexRights\n  id: MutexRights\n  parent: System.Security.AccessControl.MutexAuditRule\n  langs:\n  - csharp\n  name: MutexRights\n  nameWithType: MutexAuditRule.MutexRights\n  fullName: System.Security.AccessControl.MutexAuditRule.MutexRights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.MutexRights MutexRights { get; }\n    return:\n      type: System.Security.AccessControl.MutexRights\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.MutexAuditRule\n  isExternal: false\n  name: MutexAuditRule(IdentityReference,MutexRights,AuditFlags)\n  nameWithType: MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)\n  fullName: System.Security.AccessControl.MutexAuditRule.MutexAuditRule(IdentityReference,MutexRights,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.MutexRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexRights\n  fullName: System.Security.AccessControl.MutexRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.MutexAuditRule.MutexRights\n  parent: System.Security.AccessControl.MutexAuditRule\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexAuditRule.MutexRights\n  fullName: System.Security.AccessControl.MutexAuditRule.MutexRights\n- uid: System.Security.AccessControl.MutexRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: MutexRights\n  nameWithType: MutexRights\n  fullName: System.Security.AccessControl.MutexRights\n"}