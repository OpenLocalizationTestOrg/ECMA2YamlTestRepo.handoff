{"nodes":[{"pos":[549,560],"content":"CompoundAce","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAce","pos":[0,11]}]},{"pos":[2613,2675],"content":"CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)","pos":[0,62]}]},{"pos":[3295,3329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3395,3429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3533,3567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3658,3692],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3903,3915],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[4232,4266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4483,4498],"content":"CompoundAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAceType","pos":[0,15]}]},{"pos":[4895,4929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5198,5225],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[5622,5656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5718,5752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5888,5926],"content":"System.Security.AccessControl.KnownAce","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.KnownAce","pos":[0,38]}]},{"pos":[6206,6268],"content":"CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)","pos":[0,62]}]},{"pos":[6591,6599],"content":"AceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AceFlags","pos":[0,8]}]},{"pos":[6741,6746],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6915,6930],"content":"CompoundAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAceType","pos":[0,15]}]},{"pos":[7137,7155],"content":"SecurityIdentifier","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityIdentifier","pos":[0,18]}]},{"pos":[7390,7402],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[7576,7581],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7774,7789],"content":"CompoundAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAceType","pos":[0,15]}]},{"pos":[8025,8040],"content":"CompoundAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"CompoundAceType","pos":[0,15]}]},{"pos":[8302,8329],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[8532,8536],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8649,8654],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CompoundAce\n  id: CompoundAce\n  children:\n  - System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)\n  - System.Security.AccessControl.CompoundAce.BinaryLength\n  - System.Security.AccessControl.CompoundAce.CompoundAceType\n  - System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)\n  langs:\n  - csharp\n  name: CompoundAce\n  nameWithType: CompoundAce\n  fullName: System.Security.AccessControl.CompoundAce\n  type: Class\n  syntax:\n    content: 'public sealed class CompoundAce : System.Security.AccessControl.KnownAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)\n  id: '#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)'\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  nameWithType: CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CompoundAce (System.Security.AccessControl.AceFlags flags, int accessMask, System.Security.AccessControl.CompoundAceType compoundAceType, System.Security.Principal.SecurityIdentifier sid);\n    parameters:\n    - id: flags\n      type: System.Security.AccessControl.AceFlags\n      description: Parameter description to be filled\n    - id: accessMask\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: compoundAceType\n      type: System.Security.AccessControl.CompoundAceType\n      description: Parameter description to be filled\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CompoundAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: CompoundAce.BinaryLength\n  fullName: System.Security.AccessControl.CompoundAce.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CompoundAce.CompoundAceType\n  id: CompoundAceType\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: CompoundAceType\n  nameWithType: CompoundAce.CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAceType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.CompoundAceType CompoundAceType { get; set; }\n    return:\n      type: System.Security.AccessControl.CompoundAceType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CompoundAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CompoundAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CompoundAce.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: System.Security.AccessControl.KnownAce\n- uid: System.Security.AccessControl.CompoundAce.#ctor(System.Security.AccessControl.AceFlags,System.Int32,System.Security.AccessControl.CompoundAceType,System.Security.Principal.SecurityIdentifier)\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  nameWithType: CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAce(AceFlags,Int32,CompoundAceType,SecurityIdentifier)\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CompoundAceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CompoundAceType\n  nameWithType: CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAceType\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.CompoundAce.BinaryLength\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: CompoundAce.BinaryLength\n  fullName: System.Security.AccessControl.CompoundAce.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.CompoundAce.CompoundAceType\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: CompoundAceType\n  nameWithType: CompoundAce.CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAce.CompoundAceType\n- uid: System.Security.AccessControl.CompoundAceType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CompoundAceType\n  nameWithType: CompoundAceType\n  fullName: System.Security.AccessControl.CompoundAceType\n- uid: System.Security.AccessControl.CompoundAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.CompoundAce\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: CompoundAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.CompoundAce.GetBinaryForm(Byte[],Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}