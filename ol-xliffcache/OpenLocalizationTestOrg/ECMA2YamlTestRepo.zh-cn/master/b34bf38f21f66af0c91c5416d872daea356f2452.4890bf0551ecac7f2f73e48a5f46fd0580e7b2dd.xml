{"nodes":[{"pos":[920,926],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[1392,1406],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1720,1754],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1813,1847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2134,2148],"content":"Equals(OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(OpCode)","pos":[0,14]}]},{"pos":[2492,2526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2585,2619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2854,2865],"content":"FlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"FlowControl","pos":[0,11]}]},{"pos":[3199,3233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3418,3431],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3737,3771],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3942,3946],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[4210,4244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4551,4577],"content":"op_Equality(OpCode,OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(OpCode,OpCode)","pos":[0,26]}]},{"pos":[4988,5022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5096,5130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5189,5223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5534,5562],"content":"op_Inequality(OpCode,OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(OpCode,OpCode)","pos":[0,28]}]},{"pos":[5979,6013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6087,6121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6180,6214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6397,6407],"content":"OpCodeType","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCodeType","pos":[0,10]}]},{"pos":[6736,6770],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6955,6966],"content":"OperandType","needQuote":true,"needEscape":true,"nodes":[{"content":"OperandType","pos":[0,11]}]},{"pos":[7300,7334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7505,7509],"content":"Size","needQuote":true,"needEscape":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[7769,7803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8000,8017],"content":"StackBehaviourPop","needQuote":true,"needEscape":true,"nodes":[{"content":"StackBehaviourPop","pos":[0,17]}]},{"pos":[8375,8409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8608,8626],"content":"StackBehaviourPush","needQuote":true,"needEscape":true,"nodes":[{"content":"StackBehaviourPush","pos":[0,18]}]},{"pos":[8987,9021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9200,9210],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9511,9545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9718,9723],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[9988,10022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10136,10152],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[10280,10294],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10457,10464],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10582,10588],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10781,10795],"content":"Equals(OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(OpCode)","pos":[0,14]}]},{"pos":[10958,10965],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11115,11121],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[11304,11315],"content":"FlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"FlowControl","pos":[0,11]}]},{"pos":[11508,11519],"content":"FlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"FlowControl","pos":[0,11]}]},{"pos":[11712,11725],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11884,11889],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12047,12051],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[12193,12199],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12427,12453],"content":"op_Equality(OpCode,OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(OpCode,OpCode)","pos":[0,26]}]},{"pos":[12640,12647],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12797,12803],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[12967,12973],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[13219,13247],"content":"op_Inequality(OpCode,OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(OpCode,OpCode)","pos":[0,28]}]},{"pos":[13438,13445],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13595,13601],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[13765,13771],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[13953,13963],"content":"OpCodeType","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCodeType","pos":[0,10]}]},{"pos":[14153,14163],"content":"OpCodeType","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCodeType","pos":[0,10]}]},{"pos":[14354,14365],"content":"OperandType","needQuote":true,"needEscape":true,"nodes":[{"content":"OperandType","pos":[0,11]}]},{"pos":[14558,14569],"content":"OperandType","needQuote":true,"needEscape":true,"nodes":[{"content":"OperandType","pos":[0,11]}]},{"pos":[14755,14759],"content":"Size","needQuote":true,"needEscape":true,"nodes":[{"content":"Size","pos":[0,4]}]},{"pos":[14900,14905],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15076,15093],"content":"StackBehaviourPop","needQuote":true,"needEscape":true,"nodes":[{"content":"StackBehaviourPop","pos":[0,17]}]},{"pos":[15301,15315],"content":"StackBehaviour","needQuote":true,"needEscape":true,"nodes":[{"content":"StackBehaviour","pos":[0,14]}]},{"pos":[15521,15539],"content":"StackBehaviourPush","needQuote":true,"needEscape":true,"nodes":[{"content":"StackBehaviourPush","pos":[0,18]}]},{"pos":[15749,15763],"content":"StackBehaviour","needQuote":true,"needEscape":true,"nodes":[{"content":"StackBehaviour","pos":[0,14]}]},{"pos":[15959,15969],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[16123,16129],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16290,16295],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[16438,16443],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.OpCode\n  id: OpCode\n  children:\n  - System.Reflection.Emit.OpCode.Equals(System.Object)\n  - System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.OpCode.FlowControl\n  - System.Reflection.Emit.OpCode.GetHashCode\n  - System.Reflection.Emit.OpCode.Name\n  - System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.OpCode.OpCodeType\n  - System.Reflection.Emit.OpCode.OperandType\n  - System.Reflection.Emit.OpCode.Size\n  - System.Reflection.Emit.OpCode.StackBehaviourPop\n  - System.Reflection.Emit.OpCode.StackBehaviourPush\n  - System.Reflection.Emit.OpCode.ToString\n  - System.Reflection.Emit.OpCode.Value\n  langs:\n  - csharp\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct OpCode\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: OpCode.Equals(Object)\n  fullName: System.Reflection.Emit.OpCode.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.OpCode.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  id: Equals(System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Equals(OpCode)\n  nameWithType: OpCode.Equals(OpCode)\n  fullName: System.Reflection.Emit.OpCode.Equals(OpCode)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.OpCode obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.OpCode.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.FlowControl\n  id: FlowControl\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: FlowControl\n  nameWithType: OpCode.FlowControl\n  fullName: System.Reflection.Emit.OpCode.FlowControl\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.FlowControl FlowControl { get; }\n    return:\n      type: System.Reflection.Emit.FlowControl\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: OpCode.GetHashCode()\n  fullName: System.Reflection.Emit.OpCode.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.Name\n  id: Name\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Name\n  nameWithType: OpCode.Name\n  fullName: System.Reflection.Emit.OpCode.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  id: op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: op_Equality(OpCode,OpCode)\n  nameWithType: OpCode.op_Equality(OpCode,OpCode)\n  fullName: System.Reflection.Emit.OpCode.op_Equality(OpCode,OpCode)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  id: op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: op_Inequality(OpCode,OpCode)\n  nameWithType: OpCode.op_Inequality(OpCode,OpCode)\n  fullName: System.Reflection.Emit.OpCode.op_Inequality(OpCode,OpCode)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.OpCode a, System.Reflection.Emit.OpCode b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.OpCodeType\n  id: OpCodeType\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: OpCodeType\n  nameWithType: OpCode.OpCodeType\n  fullName: System.Reflection.Emit.OpCode.OpCodeType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.OpCodeType OpCodeType { get; }\n    return:\n      type: System.Reflection.Emit.OpCodeType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.OperandType\n  id: OperandType\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: OperandType\n  nameWithType: OpCode.OperandType\n  fullName: System.Reflection.Emit.OpCode.OperandType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.OperandType OperandType { get; }\n    return:\n      type: System.Reflection.Emit.OperandType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.Size\n  id: Size\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Size\n  nameWithType: OpCode.Size\n  fullName: System.Reflection.Emit.OpCode.Size\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Size { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPop\n  id: StackBehaviourPop\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: StackBehaviourPop\n  nameWithType: OpCode.StackBehaviourPop\n  fullName: System.Reflection.Emit.OpCode.StackBehaviourPop\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.StackBehaviour StackBehaviourPop { get; }\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPush\n  id: StackBehaviourPush\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: StackBehaviourPush\n  nameWithType: OpCode.StackBehaviourPush\n  fullName: System.Reflection.Emit.OpCode.StackBehaviourPush\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public System.Reflection.Emit.StackBehaviour StackBehaviourPush { get; }\n    return:\n      type: System.Reflection.Emit.StackBehaviour\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.ToString\n  id: ToString\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: OpCode.ToString()\n  fullName: System.Reflection.Emit.OpCode.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.OpCode.Value\n  id: Value\n  parent: System.Reflection.Emit.OpCode\n  langs:\n  - csharp\n  name: Value\n  nameWithType: OpCode.Value\n  fullName: System.Reflection.Emit.OpCode.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public short Value { get; }\n    return:\n      type: System.Int16\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.OpCode.Equals(System.Object)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: OpCode.Equals(Object)\n  fullName: System.Reflection.Emit.OpCode.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.OpCode.Equals(System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Equals(OpCode)\n  nameWithType: OpCode.Equals(OpCode)\n  fullName: System.Reflection.Emit.OpCode.Equals(OpCode)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.OpCode.FlowControl\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: FlowControl\n  nameWithType: OpCode.FlowControl\n  fullName: System.Reflection.Emit.OpCode.FlowControl\n- uid: System.Reflection.Emit.FlowControl\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FlowControl\n  nameWithType: FlowControl\n  fullName: System.Reflection.Emit.FlowControl\n- uid: System.Reflection.Emit.OpCode.GetHashCode\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: OpCode.GetHashCode()\n  fullName: System.Reflection.Emit.OpCode.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.OpCode.Name\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Name\n  nameWithType: OpCode.Name\n  fullName: System.Reflection.Emit.OpCode.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.OpCode.op_Equality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: op_Equality(OpCode,OpCode)\n  nameWithType: OpCode.op_Equality(OpCode,OpCode)\n  fullName: System.Reflection.Emit.OpCode.op_Equality(OpCode,OpCode)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.OpCode.op_Inequality(System.Reflection.Emit.OpCode,System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: op_Inequality(OpCode,OpCode)\n  nameWithType: OpCode.op_Inequality(OpCode,OpCode)\n  fullName: System.Reflection.Emit.OpCode.op_Inequality(OpCode,OpCode)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.OpCode.OpCodeType\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: OpCodeType\n  nameWithType: OpCode.OpCodeType\n  fullName: System.Reflection.Emit.OpCode.OpCodeType\n- uid: System.Reflection.Emit.OpCodeType\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCodeType\n  nameWithType: OpCodeType\n  fullName: System.Reflection.Emit.OpCodeType\n- uid: System.Reflection.Emit.OpCode.OperandType\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: OperandType\n  nameWithType: OpCode.OperandType\n  fullName: System.Reflection.Emit.OpCode.OperandType\n- uid: System.Reflection.Emit.OperandType\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OperandType\n  nameWithType: OperandType\n  fullName: System.Reflection.Emit.OperandType\n- uid: System.Reflection.Emit.OpCode.Size\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Size\n  nameWithType: OpCode.Size\n  fullName: System.Reflection.Emit.OpCode.Size\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPop\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: StackBehaviourPop\n  nameWithType: OpCode.StackBehaviourPop\n  fullName: System.Reflection.Emit.OpCode.StackBehaviourPop\n- uid: System.Reflection.Emit.StackBehaviour\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StackBehaviour\n  nameWithType: StackBehaviour\n  fullName: System.Reflection.Emit.StackBehaviour\n- uid: System.Reflection.Emit.OpCode.StackBehaviourPush\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: StackBehaviourPush\n  nameWithType: OpCode.StackBehaviourPush\n  fullName: System.Reflection.Emit.OpCode.StackBehaviourPush\n- uid: System.Reflection.Emit.StackBehaviour\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StackBehaviour\n  nameWithType: StackBehaviour\n  fullName: System.Reflection.Emit.StackBehaviour\n- uid: System.Reflection.Emit.OpCode.ToString\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: ToString()\n  nameWithType: OpCode.ToString()\n  fullName: System.Reflection.Emit.OpCode.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.OpCode.Value\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  name: Value\n  nameWithType: OpCode.Value\n  fullName: System.Reflection.Emit.OpCode.Value\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.OpCode.Equals*\n  parent: System.Reflection.Emit.OpCode\n  isExternal: false\n  nameWithType: OpCode.\n"}