{"nodes":[{"pos":[492,506],"content":"PipeAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRule","pos":[0,14]}]},{"pos":[1965,2033],"content":"PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)","pos":[0,68]}]},{"pos":[2631,2665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2747,2781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2876,2910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3279,3336],"content":"PipeAccessRule(String,PipeAccessRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRule(String,PipeAccessRights,AccessControlType)","pos":[0,57]}]},{"pos":[3845,3879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3961,3995],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4090,4124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4321,4337],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[4687,4721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4859,4899],"content":"System.Security.AccessControl.AccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AccessRule","pos":[0,40]}]},{"pos":[5139,5207],"content":"PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)","pos":[0,68]}]},{"pos":[5535,5552],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[5737,5753],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[5955,5972],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[6276,6333],"content":"PipeAccessRule(String,PipeAccessRights,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRule(String,PipeAccessRights,AccessControlType)","pos":[0,57]}]},{"pos":[6590,6596],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6740,6756],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[6958,6975],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[7194,7210],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]},{"pos":[7413,7429],"content":"PipeAccessRights","needQuote":true,"needEscape":true,"nodes":[{"content":"PipeAccessRights","pos":[0,16]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Pipes.PipeAccessRule\n  id: PipeAccessRule\n  children:\n  - System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)\n  - System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)\n  - System.IO.Pipes.PipeAccessRule.PipeAccessRights\n  langs:\n  - csharp\n  name: PipeAccessRule\n  nameWithType: PipeAccessRule\n  fullName: System.IO.Pipes.PipeAccessRule\n  type: Class\n  syntax:\n    content: 'public sealed class PipeAccessRule : System.Security.AccessControl.AccessRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AccessRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AccessRule.AccessControlType\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.IO.Pipes.PipeAccessRule\n  langs:\n  - csharp\n  name: PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)\n  nameWithType: PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)\n  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  syntax:\n    content: public PipeAccessRule (System.Security.Principal.IdentityReference identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: rights\n      type: System.IO.Pipes.PipeAccessRights\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)\n  id: '#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)'\n  parent: System.IO.Pipes.PipeAccessRule\n  langs:\n  - csharp\n  name: PipeAccessRule(String,PipeAccessRights,AccessControlType)\n  nameWithType: PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)\n  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  syntax:\n    content: public PipeAccessRule (string identity, System.IO.Pipes.PipeAccessRights rights, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identity\n      type: System.String\n      description: Parameter description to be filled\n    - id: rights\n      type: System.IO.Pipes.PipeAccessRights\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Pipes.PipeAccessRule.PipeAccessRights\n  id: PipeAccessRights\n  parent: System.IO.Pipes.PipeAccessRule\n  langs:\n  - csharp\n  name: PipeAccessRights\n  nameWithType: PipeAccessRule.PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRights\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.IO.Pipes\n  syntax:\n    content: public System.IO.Pipes.PipeAccessRights PipeAccessRights { get; }\n    return:\n      type: System.IO.Pipes.PipeAccessRights\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AccessRule\n  isExternal: false\n  name: System.Security.AccessControl.AccessRule\n- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.Security.Principal.IdentityReference,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeAccessRule\n  isExternal: false\n  name: PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)\n  nameWithType: PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)\n  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(IdentityReference,PipeAccessRights,AccessControlType)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.IO.Pipes.PipeAccessRule.#ctor(System.String,System.IO.Pipes.PipeAccessRights,System.Security.AccessControl.AccessControlType)\n  parent: System.IO.Pipes.PipeAccessRule\n  isExternal: false\n  name: PipeAccessRule(String,PipeAccessRights,AccessControlType)\n  nameWithType: PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)\n  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRule(String,PipeAccessRights,AccessControlType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.IO.Pipes.PipeAccessRule.PipeAccessRights\n  parent: System.IO.Pipes.PipeAccessRule\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRule.PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRule.PipeAccessRights\n- uid: System.IO.Pipes.PipeAccessRights\n  parent: System.IO.Pipes\n  isExternal: false\n  name: PipeAccessRights\n  nameWithType: PipeAccessRights\n  fullName: System.IO.Pipes.PipeAccessRights\n"}