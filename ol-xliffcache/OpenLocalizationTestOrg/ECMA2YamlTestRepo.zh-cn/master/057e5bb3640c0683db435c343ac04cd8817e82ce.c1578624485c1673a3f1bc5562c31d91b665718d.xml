{"nodes":[{"pos":[609,628],"content":"UsingTaskCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingTaskCollection","pos":[0,19]}]},{"pos":[1524,1549],"content":"CopyTo(UsingTask[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(UsingTask[],Int32)","pos":[0,25]}]},{"pos":[2000,2034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2095,2129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2462,2481],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[2859,2893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2954,2988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3265,3270],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[3583,3617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3842,3857],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[4255,4289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4516,4530],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[4873,4907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5122,5130],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[5456,5490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5601,5614],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5817,5842],"content":"CopyTo(UsingTask[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(UsingTask[],Int32)","pos":[0,25]}]},{"pos":[6102,6111],"content":"UsingTask","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingTask","pos":[0,9]}]},{"pos":[6255,6260],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6483,6502],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[6704,6709],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[6822,6827],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7022,7027],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7201,7206],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7409,7424],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[7648,7659],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[7887,7901],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[8095,8102],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8304,8312],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[8493,8499],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection\n  id: UsingTaskCollection\n  children:\n  - Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)\n  - Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)\n  - Microsoft.Build.BuildEngine.UsingTaskCollection.Count\n  - Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator\n  - Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized\n  - Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot\n  langs:\n  - csharp\n  name: UsingTaskCollection\n  nameWithType: UsingTaskCollection\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection\n  type: Class\n  syntax:\n    content: 'public class UsingTaskCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)\n  id: CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  langs:\n  - csharp\n  name: CopyTo(UsingTask[],Int32)\n  nameWithType: UsingTaskCollection.CopyTo(UsingTask[],Int32)\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(UsingTask[],Int32)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Engine\n  namespace: Microsoft.Build.BuildEngine\n  syntax:\n    content: public void CopyTo (Microsoft.Build.BuildEngine.UsingTask[] array, int index);\n    parameters:\n    - id: array\n      type: Microsoft.Build.BuildEngine.UsingTask[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: UsingTaskCollection.CopyTo(Array,Int32)\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Engine\n  namespace: Microsoft.Build.BuildEngine\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count\n  id: Count\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: UsingTaskCollection.Count\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.Count\n  type: Property\n  assemblies:\n  - Microsoft.Build.Engine\n  namespace: Microsoft.Build.BuildEngine\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator\n  id: GetEnumerator\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: UsingTaskCollection.GetEnumerator()\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Engine\n  namespace: Microsoft.Build.BuildEngine\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized\n  id: IsSynchronized\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: UsingTaskCollection.IsSynchronized\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - Microsoft.Build.Engine\n  namespace: Microsoft.Build.BuildEngine\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot\n  id: SyncRoot\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: UsingTaskCollection.SyncRoot\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot\n  type: Property\n  assemblies:\n  - Microsoft.Build.Engine\n  namespace: Microsoft.Build.BuildEngine\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Microsoft.Build.BuildEngine.UsingTask[],System.Int32)\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  name: CopyTo(UsingTask[],Int32)\n  nameWithType: UsingTaskCollection.CopyTo(UsingTask[],Int32)\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(UsingTask[],Int32)\n- uid: Microsoft.Build.BuildEngine.UsingTask\n  parent: Microsoft.Build.BuildEngine\n  isExternal: false\n  name: UsingTask\n  nameWithType: UsingTask\n  fullName: Microsoft.Build.BuildEngine.UsingTask[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(System.Array,System.Int32)\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: UsingTaskCollection.CopyTo(Array,Int32)\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.Count\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  name: Count\n  nameWithType: UsingTaskCollection.Count\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: UsingTaskCollection.GetEnumerator()\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: UsingTaskCollection.IsSynchronized\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: UsingTaskCollection.SyncRoot\n  fullName: Microsoft.Build.BuildEngine.UsingTaskCollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.Build.BuildEngine.UsingTaskCollection.CopyTo*\n  parent: Microsoft.Build.BuildEngine.UsingTaskCollection\n  isExternal: false\n  nameWithType: UsingTaskCollection.\n"}