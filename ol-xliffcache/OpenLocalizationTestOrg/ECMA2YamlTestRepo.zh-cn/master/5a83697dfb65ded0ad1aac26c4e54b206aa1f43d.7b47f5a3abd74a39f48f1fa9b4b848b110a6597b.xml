{"nodes":[{"pos":[1910,1925],"content":"EventLogSession","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession","pos":[0,15]}]},{"pos":[2683,2700],"content":"EventLogSession()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession()","pos":[0,17]}]},{"pos":[3245,3268],"content":"EventLogSession(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession(String)","pos":[0,23]}]},{"pos":[3651,3685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4160,4232],"content":"EventLogSession(String,String,String,SecureString,SessionAuthentication)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession(String,String,String,SecureString,SessionAuthentication)","pos":[0,72]}]},{"pos":[4848,4882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4945,4979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5040,5074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5154,5188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5297,5331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5582,5607],"content":"CancelCurrentOperations()","needQuote":true,"needEscape":true,"nodes":[{"content":"CancelCurrentOperations()","pos":[0,25]}]},{"pos":[6180,6196],"content":"ClearLog(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearLog(String)","pos":[0,16]}]},{"pos":[6560,6594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6946,6969],"content":"ClearLog(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearLog(String,String)","pos":[0,23]}]},{"pos":[7366,7400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7467,7501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7793,7802],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[8399,8415],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[8792,8826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9295,9335],"content":"ExportLog(String,PathType,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLog(String,PathType,String,String)","pos":[0,40]}]},{"pos":[9833,9867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9962,9996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10058,10092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10163,10197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10698,10746],"content":"ExportLog(String,PathType,String,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLog(String,PathType,String,String,Boolean)","pos":[0,48]}]},{"pos":[11286,11320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11415,11449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11511,11545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11616,11650],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11727,11761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12254,12305],"content":"ExportLogAndMessages(String,PathType,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLogAndMessages(String,PathType,String,String)","pos":[0,51]}]},{"pos":[12836,12870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12965,12999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13061,13095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13166,13200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13800,13871],"content":"ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)","pos":[0,71]}]},{"pos":[14520,14554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14649,14683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14745,14779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14850,14884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14961,14995],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15088,15122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15564,15598],"content":"GetLogInformation(String,PathType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLogInformation(String,PathType)","pos":[0,34]}]},{"pos":[16111,16145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16240,16274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16373,16407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16634,16647],"content":"GetLogNames()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLogNames()","pos":[0,13]}]},{"pos":[17073,17107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17344,17362],"content":"GetProviderNames()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetProviderNames()","pos":[0,18]}]},{"pos":[17803,17837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18068,18081],"content":"GlobalSession","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalSession","pos":[0,13]}]},{"pos":[18505,18539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18650,18663],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[18817,18834],"content":"EventLogSession()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession()","pos":[0,17]}]},{"pos":[19134,19157],"content":"EventLogSession(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession(String)","pos":[0,23]}]},{"pos":[19367,19373],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19705,19777],"content":"EventLogSession(String,String,String,SecureString,SessionAuthentication)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession(String,String,String,SecureString,SessionAuthentication)","pos":[0,72]}]},{"pos":[20085,20091],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20207,20213],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20329,20335],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20475,20487],"content":"SecureString","needQuote":true,"needEscape":true,"nodes":[{"content":"SecureString","pos":[0,12]}]},{"pos":[20695,20716],"content":"SessionAuthentication","needQuote":true,"needEscape":true,"nodes":[{"content":"SessionAuthentication","pos":[0,21]}]},{"pos":[20995,21020],"content":"CancelCurrentOperations()","needQuote":true,"needEscape":true,"nodes":[{"content":"CancelCurrentOperations()","pos":[0,25]}]},{"pos":[21339,21355],"content":"ClearLog(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearLog(String)","pos":[0,16]}]},{"pos":[21551,21557],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21792,21815],"content":"ClearLog(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearLog(String,String)","pos":[0,23]}]},{"pos":[22025,22031],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22147,22153],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22358,22367],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[22654,22670],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[22867,22874],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23170,23210],"content":"ExportLog(String,PathType,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLog(String,PathType,String,String)","pos":[0,40]}]},{"pos":[23454,23460],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23634,23642],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[23790,23796],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23912,23918],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24227,24275],"content":"ExportLog(String,PathType,String,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLog(String,PathType,String,String,Boolean)","pos":[0,48]}]},{"pos":[24535,24541],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24715,24723],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[24871,24877],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24993,24999],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25116,25123],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25430,25481],"content":"ExportLogAndMessages(String,PathType,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLogAndMessages(String,PathType,String,String)","pos":[0,51]}]},{"pos":[25747,25753],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25927,25935],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[26083,26089],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26205,26211],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26564,26635],"content":"ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)","pos":[0,71]}]},{"pos":[26941,26947],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27121,27129],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[27277,27283],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27399,27405],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27522,27529],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27680,27691],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[27989,28023],"content":"GetLogInformation(String,PathType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLogInformation(String,PathType)","pos":[0,34]}]},{"pos":[28324,28343],"content":"EventLogInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogInformation","pos":[0,19]}]},{"pos":[28513,28519],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28693,28701],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[28942,28955],"content":"GetLogNames()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLogNames()","pos":[0,13]}]},{"pos":[29205,29224],"content":"IEnumerable<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<String>"},{"pos":[29491,29509],"content":"GetProviderNames()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetProviderNames()","pos":[0,18]}]},{"pos":[29769,29788],"content":"IEnumerable<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<String>"},{"pos":[30052,30065],"content":"GlobalSession","needQuote":true,"needEscape":true,"nodes":[{"content":"GlobalSession","pos":[0,13]}]},{"pos":[30320,30335],"content":"EventLogSession","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  id: EventLogSession\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  - System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  - System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  langs:\n  - csharp\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n  type: Class\n  syntax:\n    content: 'public class EventLogSession : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: EventLogSession()\n  nameWithType: EventLogSession.EventLogSession()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogSession ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: EventLogSession(String)\n  nameWithType: EventLogSession.EventLogSession(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogSession (string server);\n    parameters:\n    - id: server\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  id: '#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: EventLogSession(String,String,String,SecureString,SessionAuthentication)\n  nameWithType: EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogSession (string server, string domain, string user, System.Security.SecureString password, System.Diagnostics.Eventing.Reader.SessionAuthentication logOnType);\n    parameters:\n    - id: server\n      type: System.String\n      description: Parameter description to be filled\n    - id: domain\n      type: System.String\n      description: Parameter description to be filled\n    - id: user\n      type: System.String\n      description: Parameter description to be filled\n    - id: password\n      type: System.Security.SecureString\n      description: Parameter description to be filled\n    - id: logOnType\n      type: System.Diagnostics.Eventing.Reader.SessionAuthentication\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  id: CancelCurrentOperations\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: CancelCurrentOperations()\n  nameWithType: EventLogSession.CancelCurrentOperations()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void CancelCurrentOperations ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  id: ClearLog(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ClearLog(String)\n  nameWithType: EventLogSession.ClearLog(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void ClearLog (string logName);\n    parameters:\n    - id: logName\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  id: ClearLog(System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ClearLog(String,String)\n  nameWithType: EventLogSession.ClearLog(String,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void ClearLog (string logName, string backupPath);\n    parameters:\n    - id: logName\n      type: System.String\n      description: Parameter description to be filled\n    - id: backupPath\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventLogSession.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventLogSession.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLog(String,PathType,String,String)\n  nameWithType: EventLogSession.ExportLog(String,PathType,String,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n    - id: query\n      type: System.String\n      description: Parameter description to be filled\n    - id: targetFilePath\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  id: ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLog(String,PathType,String,String,Boolean)\n  nameWithType: EventLogSession.ExportLog(String,PathType,String,String,Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String,Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void ExportLog (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n    - id: query\n      type: System.String\n      description: Parameter description to be filled\n    - id: targetFilePath\n      type: System.String\n      description: Parameter description to be filled\n    - id: tolerateQueryErrors\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLogAndMessages(String,PathType,String,String)\n  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n    - id: query\n      type: System.String\n      description: Parameter description to be filled\n    - id: targetFilePath\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  id: ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)\n  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void ExportLogAndMessages (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query, string targetFilePath, bool tolerateQueryErrors, System.Globalization.CultureInfo targetCultureInfo);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n    - id: query\n      type: System.String\n      description: Parameter description to be filled\n    - id: targetFilePath\n      type: System.String\n      description: Parameter description to be filled\n    - id: tolerateQueryErrors\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: targetCultureInfo\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  id: GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GetLogInformation(String,PathType)\n  nameWithType: EventLogSession.GetLogInformation(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(String,PathType)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogInformation GetLogInformation (string logName, System.Diagnostics.Eventing.Reader.PathType pathType);\n    parameters:\n    - id: logName\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  id: GetLogNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GetLogNames()\n  nameWithType: EventLogSession.GetLogNames()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<string> GetLogNames ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  id: GetProviderNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GetProviderNames()\n  nameWithType: EventLogSession.GetProviderNames()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<string> GetProviderNames ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  id: GlobalSession\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  langs:\n  - csharp\n  name: GlobalSession\n  nameWithType: EventLogSession.GlobalSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public static System.Diagnostics.Eventing.Reader.EventLogSession GlobalSession { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogSession\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession()\n  nameWithType: EventLogSession.EventLogSession()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession(String)\n  nameWithType: EventLogSession.EventLogSession(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.#ctor(System.String,System.String,System.String,System.Security.SecureString,System.Diagnostics.Eventing.Reader.SessionAuthentication)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: EventLogSession(String,String,String,SecureString,SessionAuthentication)\n  nameWithType: EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.EventLogSession(String,String,String,SecureString,SessionAuthentication)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.SecureString\n  parent: System.Security\n  isExternal: false\n  name: SecureString\n  nameWithType: SecureString\n  fullName: System.Security.SecureString\n- uid: System.Diagnostics.Eventing.Reader.SessionAuthentication\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: SessionAuthentication\n  nameWithType: SessionAuthentication\n  fullName: System.Diagnostics.Eventing.Reader.SessionAuthentication\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: CancelCurrentOperations()\n  nameWithType: EventLogSession.CancelCurrentOperations()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.CancelCurrentOperations()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ClearLog(String)\n  nameWithType: EventLogSession.ClearLog(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ClearLog(String,String)\n  nameWithType: EventLogSession.ClearLog(String,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventLogSession.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose()\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventLogSession.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLog(String,PathType,String,String)\n  nameWithType: EventLogSession.ExportLog(String,PathType,String,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLog(String,PathType,String,String,Boolean)\n  nameWithType: EventLogSession.ExportLog(String,PathType,String,String,Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog(String,PathType,String,String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLogAndMessages(String,PathType,String,String)\n  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String,System.String,System.Boolean,System.Globalization.CultureInfo)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)\n  nameWithType: EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages(String,PathType,String,String,Boolean,CultureInfo)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetLogInformation(String,PathType)\n  nameWithType: EventLogSession.GetLogInformation(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogInformation(String,PathType)\n- uid: System.Diagnostics.Eventing.Reader.EventLogInformation\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogInformation\n  nameWithType: EventLogInformation\n  fullName: System.Diagnostics.Eventing.Reader.EventLogInformation\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetLogNames()\n  nameWithType: EventLogSession.GetLogNames()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetLogNames()\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GetProviderNames()\n  nameWithType: EventLogSession.GetProviderNames()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GetProviderNames()\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  name: GlobalSession\n  nameWithType: EventLogSession.GlobalSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession.GlobalSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ClearLog*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  nameWithType: EventLogSession.\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.Dispose*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  nameWithType: EventLogSession.\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLog*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  nameWithType: EventLogSession.\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession.ExportLogAndMessages*\n  parent: System.Diagnostics.Eventing.Reader.EventLogSession\n  isExternal: false\n  nameWithType: EventLogSession.\n"}