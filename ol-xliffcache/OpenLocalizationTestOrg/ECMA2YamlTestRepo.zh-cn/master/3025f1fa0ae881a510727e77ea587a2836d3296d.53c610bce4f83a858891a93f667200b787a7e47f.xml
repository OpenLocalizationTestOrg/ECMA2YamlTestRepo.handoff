{"nodes":[{"pos":[2108,2131],"content":"TriggerActionCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerActionCollection","pos":[0,23]}]},{"pos":[3312,3337],"content":"TriggerActionCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerActionCollection()","pos":[0,25]}]},{"pos":[3866,3896],"content":"TriggerActionCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerActionCollection(Int32)","pos":[0,30]}]},{"pos":[4293,4327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4574,4592],"content":"Add(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TriggerAction)","pos":[0,18]}]},{"pos":[4974,5008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5199,5206],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[5717,5740],"content":"Contains(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TriggerAction)","pos":[0,23]}]},{"pos":[6137,6171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6230,6264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6547,6576],"content":"CopyTo(TriggerAction[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TriggerAction[],Int32)","pos":[0,29]}]},{"pos":[6998,7032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7093,7127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7318,7323],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7617,7651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7858,7873],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[8328,8362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8617,8639],"content":"IndexOf(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TriggerAction)","pos":[0,22]}]},{"pos":[9032,9066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9123,9157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9436,9463],"content":"Insert(Int32,TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,TriggerAction)","pos":[0,27]}]},{"pos":[9861,9895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9972,10006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10207,10217],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[10529,10563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10780,10791],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[11157,11191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11264,11298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11551,11572],"content":"Remove(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TriggerAction)","pos":[0,21]}]},{"pos":[11963,11997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12056,12090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12315,12330],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[12670,12704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13027,13077],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[13503,13537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13598,13632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13917,13962],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[14372,14406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14679,14718],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[15111,15145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15428,15474],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[15920,15954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16235,16271],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[16650,16684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16741,16775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17066,17107],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[17502,17536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17595,17629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17918,17958],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[18349,18383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18440,18474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18787,18832],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[19243,19277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19339,19373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19640,19676],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[20059,20093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20374,20410],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[20822,20856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20914,20948],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21235,21274],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[21663,21697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21808,21821],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[21951,21976],"content":"TriggerActionCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerActionCollection()","pos":[0,25]}]},{"pos":[22263,22293],"content":"TriggerActionCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerActionCollection(Int32)","pos":[0,30]}]},{"pos":[22512,22517],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22722,22740],"content":"Add(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TriggerAction)","pos":[0,18]}]},{"pos":[22959,22972],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[23173,23180],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[23450,23473],"content":"Contains(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TriggerAction)","pos":[0,23]}]},{"pos":[23680,23687],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23828,23841],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[24088,24117],"content":"CopyTo(TriggerAction[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TriggerAction[],Int32)","pos":[0,29]}]},{"pos":[24358,24371],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[24510,24515],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24692,24697],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[24866,24871],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25056,25071],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[25336,25362],"content":"IEnumerator<ph id=\"ph1\">&lt;TriggerAction&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<TriggerAction>"},{"pos":[25648,25670],"content":"IndexOf(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TriggerAction)","pos":[0,22]}]},{"pos":[25873,25878],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26015,26028],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[26273,26300],"content":"Insert(Int32,TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,TriggerAction)","pos":[0,27]}]},{"pos":[26513,26518],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26655,26668],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[26874,26884],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[27065,27072],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27266,27277],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[27482,27495],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[27632,27637],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27845,27866],"content":"Remove(TriggerAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TriggerAction)","pos":[0,21]}]},{"pos":[28069,28076],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28217,28230],"content":"TriggerAction","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerAction","pos":[0,13]}]},{"pos":[28448,28463],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[28652,28657],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28893,28943],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[29202,29207],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[29320,29325],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29542,29587],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[29838,29845],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30060,30099],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[30337,30343],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30561,30607],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[30888,30899],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[31138,31174],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[31405,31410],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31524,31530],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31752,31793],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[32036,32043],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32161,32167],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32388,32428],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[32667,32672],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32786,32792],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33025,33070],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[33319,33324],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33438,33444],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33654,33690],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[33923,33930],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34149,34185],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[34417,34423],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34538,34543],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34761,34800],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[35038,35044],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.TriggerActionCollection\n  id: TriggerActionCollection\n  children:\n  - System.Windows.TriggerActionCollection.#ctor\n  - System.Windows.TriggerActionCollection.#ctor(System.Int32)\n  - System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)\n  - System.Windows.TriggerActionCollection.Clear\n  - System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)\n  - System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)\n  - System.Windows.TriggerActionCollection.Count\n  - System.Windows.TriggerActionCollection.GetEnumerator\n  - System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)\n  - System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)\n  - System.Windows.TriggerActionCollection.IsReadOnly\n  - System.Windows.TriggerActionCollection.Item(System.Int32)\n  - System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)\n  - System.Windows.TriggerActionCollection.RemoveAt(System.Int32)\n  - System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: TriggerActionCollection\n  nameWithType: TriggerActionCollection\n  fullName: System.Windows.TriggerActionCollection\n  type: Class\n  syntax:\n    content: 'public sealed class TriggerActionCollection : System.Collections.Generic.ICollection<System.Windows.TriggerAction>, System.Collections.Generic.IEnumerable<System.Windows.TriggerAction>, System.Collections.Generic.IList<System.Windows.TriggerAction>, System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.TriggerAction>\n  - System.Collections.Generic.IEnumerable<System.Windows.TriggerAction>\n  - System.Collections.Generic.IList<System.Windows.TriggerAction>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: TriggerActionCollection()\n  nameWithType: TriggerActionCollection.TriggerActionCollection()\n  fullName: System.Windows.TriggerActionCollection.TriggerActionCollection()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public TriggerActionCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: TriggerActionCollection(Int32)\n  nameWithType: TriggerActionCollection.TriggerActionCollection(Int32)\n  fullName: System.Windows.TriggerActionCollection.TriggerActionCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public TriggerActionCollection (int initialSize);\n    parameters:\n    - id: initialSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)\n  id: Add(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Add(TriggerAction)\n  nameWithType: TriggerActionCollection.Add(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Add(TriggerAction)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public void Add (System.Windows.TriggerAction value);\n    parameters:\n    - id: value\n      type: System.Windows.TriggerAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Clear\n  id: Clear\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TriggerActionCollection.Clear()\n  fullName: System.Windows.TriggerActionCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)\n  id: Contains(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Contains(TriggerAction)\n  nameWithType: TriggerActionCollection.Contains(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Contains(TriggerAction)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public bool Contains (System.Windows.TriggerAction value);\n    parameters:\n    - id: value\n      type: System.Windows.TriggerAction\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)\n  id: CopyTo(System.Windows.TriggerAction[],System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: CopyTo(TriggerAction[],Int32)\n  nameWithType: TriggerActionCollection.CopyTo(TriggerAction[],Int32)\n  fullName: System.Windows.TriggerActionCollection.CopyTo(TriggerAction[],Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public void CopyTo (System.Windows.TriggerAction[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.TriggerAction[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Count\n  id: Count\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TriggerActionCollection.Count\n  fullName: System.Windows.TriggerActionCollection.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TriggerActionCollection.GetEnumerator()\n  fullName: System.Windows.TriggerActionCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Windows.TriggerAction> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.TriggerAction}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)\n  id: IndexOf(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: IndexOf(TriggerAction)\n  nameWithType: TriggerActionCollection.IndexOf(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.IndexOf(TriggerAction)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public int IndexOf (System.Windows.TriggerAction value);\n    parameters:\n    - id: value\n      type: System.Windows.TriggerAction\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)\n  id: Insert(System.Int32,System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Insert(Int32,TriggerAction)\n  nameWithType: TriggerActionCollection.Insert(Int32,TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Insert(Int32,TriggerAction)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public void Insert (int index, System.Windows.TriggerAction value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.TriggerAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: TriggerActionCollection.IsReadOnly\n  fullName: System.Windows.TriggerActionCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TriggerActionCollection.Item(Int32)\n  fullName: System.Windows.TriggerActionCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.TriggerAction this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.TriggerAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)\n  id: Remove(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: Remove(TriggerAction)\n  nameWithType: TriggerActionCollection.Remove(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Remove(TriggerAction)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public bool Remove (System.Windows.TriggerAction value);\n    parameters:\n    - id: value\n      type: System.Windows.TriggerAction\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: TriggerActionCollection.RemoveAt(Int32)\n  fullName: System.Windows.TriggerActionCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TriggerActionCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TriggerActionCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.TriggerActionCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TriggerActionCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.TriggerActionCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TriggerActionCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TriggerActionCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.TriggerActionCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.TriggerActionCollection.#ctor\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: TriggerActionCollection()\n  nameWithType: TriggerActionCollection.TriggerActionCollection()\n  fullName: System.Windows.TriggerActionCollection.TriggerActionCollection()\n- uid: System.Windows.TriggerActionCollection.#ctor(System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: TriggerActionCollection(Int32)\n  nameWithType: TriggerActionCollection.TriggerActionCollection(Int32)\n  fullName: System.Windows.TriggerActionCollection.TriggerActionCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.Add(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Add(TriggerAction)\n  nameWithType: TriggerActionCollection.Add(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Add(TriggerAction)\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction\n- uid: System.Windows.TriggerActionCollection.Clear\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TriggerActionCollection.Clear()\n  fullName: System.Windows.TriggerActionCollection.Clear()\n- uid: System.Windows.TriggerActionCollection.Contains(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Contains(TriggerAction)\n  nameWithType: TriggerActionCollection.Contains(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Contains(TriggerAction)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction\n- uid: System.Windows.TriggerActionCollection.CopyTo(System.Windows.TriggerAction[],System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: CopyTo(TriggerAction[],Int32)\n  nameWithType: TriggerActionCollection.CopyTo(TriggerAction[],Int32)\n  fullName: System.Windows.TriggerActionCollection.CopyTo(TriggerAction[],Int32)\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.Count\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Count\n  nameWithType: TriggerActionCollection.Count\n  fullName: System.Windows.TriggerActionCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.GetEnumerator\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TriggerActionCollection.GetEnumerator()\n  fullName: System.Windows.TriggerActionCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.TriggerAction}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TriggerAction>\n  nameWithType: IEnumerator<TriggerAction>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.TriggerAction>\n- uid: System.Windows.TriggerActionCollection.IndexOf(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: IndexOf(TriggerAction)\n  nameWithType: TriggerActionCollection.IndexOf(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.IndexOf(TriggerAction)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction\n- uid: System.Windows.TriggerActionCollection.Insert(System.Int32,System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Insert(Int32,TriggerAction)\n  nameWithType: TriggerActionCollection.Insert(Int32,TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Insert(Int32,TriggerAction)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction\n- uid: System.Windows.TriggerActionCollection.IsReadOnly\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: TriggerActionCollection.IsReadOnly\n  fullName: System.Windows.TriggerActionCollection.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TriggerActionCollection.Item(System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TriggerActionCollection.Item(Int32)\n  fullName: System.Windows.TriggerActionCollection.Item(Int32)\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.Remove(System.Windows.TriggerAction)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: Remove(TriggerAction)\n  nameWithType: TriggerActionCollection.Remove(TriggerAction)\n  fullName: System.Windows.TriggerActionCollection.Remove(TriggerAction)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TriggerAction\n  parent: System.Windows\n  isExternal: false\n  name: TriggerAction\n  nameWithType: TriggerAction\n  fullName: System.Windows.TriggerAction\n- uid: System.Windows.TriggerActionCollection.RemoveAt(System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: TriggerActionCollection.RemoveAt(Int32)\n  fullName: System.Windows.TriggerActionCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TriggerActionCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TriggerActionCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.TriggerActionCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TriggerActionCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TriggerActionCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.TriggerActionCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TriggerActionCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TriggerActionCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TriggerActionCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.TriggerActionCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.TriggerActionCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TriggerActionCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.TriggerActionCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}