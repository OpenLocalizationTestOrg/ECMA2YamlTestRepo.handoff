{"nodes":[{"pos":[932,955],"content":"ValueTuple<T1,T2,T3,T4>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4&gt;","pos":[0,23],"source":"ValueTuple<T1,T2,T3,T4>"}]},{"pos":[1341,1375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1408,1442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1475,1509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1542,1576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2046,2069],"content":"ValueTuple(T1,T2,T3,T4)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4)","pos":[0,23]}]},{"pos":[2417,2451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2502,2536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2587,2621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2672,2706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2909,2943],"content":"CompareTo(ValueTuple<T1,T2,T3,T4>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4&gt;)","pos":[0,34],"source":"CompareTo(ValueTuple<T1,T2,T3,T4>)"}]},{"pos":[3319,3353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3410,3444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3629,3643],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3959,3993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4052,4086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4323,4354],"content":"Equals(ValueTuple<T1,T2,T3,T4>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4&gt;)","pos":[0,31],"source":"Equals(ValueTuple<T1,T2,T3,T4>)"}]},{"pos":[4722,4756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4815,4849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5054,5067],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5375,5409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5562,5567],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[5810,5844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5997,6002],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[6245,6279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6432,6437],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[6680,6714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6867,6872],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[7115,7149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7494,7562],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[8037,8071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8151,8185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8242,8276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8629,8701],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[9189,9223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9311,9345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9404,9438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9773,9843],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[10343,10377],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10434,10468],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10711,10747],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[11109,11143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11200,11234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11393,11403],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11706,11740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11854,11870],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[11975,11998],"content":"ValueTuple(T1,T2,T3,T4)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4)","pos":[0,23]}]},{"pos":[12180,12182],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[12267,12269],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[12354,12356],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[12441,12443],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[12594,12628],"content":"CompareTo(ValueTuple<T1,T2,T3,T4>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4&gt;)","pos":[0,34],"source":"CompareTo(ValueTuple<T1,T2,T3,T4>)"}]},{"pos":[12847,12852],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12972,12995],"content":"ValueTuple<T1,T2,T3,T4>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4&gt;","pos":[0,23],"source":"ValueTuple<T1,T2,T3,T4>"}]},{"pos":[13186,13200],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13381,13388],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13506,13512],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13675,13706],"content":"Equals(ValueTuple<T1,T2,T3,T4>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4&gt;)","pos":[0,31],"source":"Equals(ValueTuple<T1,T2,T3,T4>)"}]},{"pos":[13921,13928],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14052,14075],"content":"ValueTuple<T1,T2,T3,T4>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4&gt;","pos":[0,23],"source":"ValueTuple<T1,T2,T3,T4>"}]},{"pos":[14256,14269],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[14446,14451],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14590,14595],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[14741,14743],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[14869,14874],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[15020,15022],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[15148,15153],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[15299,15301],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[15427,15432],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[15578,15580],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[15795,15863],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[16150,16155],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16269,16275],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16418,16427],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[16679,16751],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[17048,17055],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17173,17179],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17330,17347],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[17606,17676],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[17967,17972],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18121,18138],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[18351,18387],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[18610,18615],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18729,18735],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18879,18889],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[19061,19067],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`4\n  id: ValueTuple`4\n  children:\n  - System.ValueTuple`4.#ctor(`0,`1,`2,`3)\n  - System.ValueTuple`4.CompareTo(System.ValueTuple`4)\n  - System.ValueTuple`4.Equals(System.Object)\n  - System.ValueTuple`4.Equals(System.ValueTuple`4)\n  - System.ValueTuple`4.GetHashCode\n  - System.ValueTuple`4.Item1\n  - System.ValueTuple`4.Item2\n  - System.ValueTuple`4.Item3\n  - System.ValueTuple`4.Item4\n  - System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`4.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`4.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3,T4>\n  nameWithType: ValueTuple<T1,T2,T3,T4>\n  fullName: System.ValueTuple<T1,T2,T3,T4>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1,T2,T3,T4> : IComparable, IComparable<ValueTuple<T1,T2,T3,T4>>, IEquatable<ValueTuple<T1,T2,T3,T4>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n    - id: T3\n      description: Parameter description to be filled\n    - id: T4\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1,T2,T3,T4>>\n  - System.IEquatable<System.ValueTuple<T1,T2,T3,T4>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.#ctor(`0,`1,`2,`3)\n  id: '#ctor(`0,`1,`2,`3)'\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: ValueTuple(T1,T2,T3,T4)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.ValueTuple(T1,T2,T3,T4)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.ValueTuple(T1,T2,T3,T4)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.CompareTo(System.ValueTuple`4)\n  id: CompareTo(System.ValueTuple`4)\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2,T3,T4>)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.CompareTo(ValueTuple<T1,T2,T3,T4>)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.CompareTo(ValueTuple<T1,T2,T3,T4>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2,T3,T4> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`4\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`4.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.Equals(System.ValueTuple`4)\n  id: Equals(System.ValueTuple`4)\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2,T3,T4>)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Equals(ValueTuple<T1,T2,T3,T4>)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Equals(ValueTuple<T1,T2,T3,T4>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2,T3,T4> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`4\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`4.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.Item1\n  id: Item1\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.Item2\n  id: Item2\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item2\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.Item3\n  id: Item3\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item3\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T3 Item3;\n    return:\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.Item4\n  id: Item4\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item4\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T4 Item4;\n    return:\n      type: T4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`4.ToString\n  id: ToString\n  parent: System.ValueTuple`4\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`4.#ctor(`0,`1,`2,`3)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: ValueTuple(T1,T2,T3,T4)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.ValueTuple(T1,T2,T3,T4)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.ValueTuple(T1,T2,T3,T4)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.ValueTuple`4.CompareTo(System.ValueTuple`4)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2,T3,T4>)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.CompareTo(ValueTuple<T1,T2,T3,T4>)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.CompareTo(ValueTuple<T1,T2,T3,T4>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`4\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4>\n  nameWithType: ValueTuple<T1,T2,T3,T4>\n  fullName: System.ValueTuple<T1,T2,T3,T4>\n- uid: System.ValueTuple`4.Equals(System.Object)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`4.Equals(System.ValueTuple`4)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2,T3,T4>)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Equals(ValueTuple<T1,T2,T3,T4>)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Equals(ValueTuple<T1,T2,T3,T4>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`4\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4>\n  nameWithType: ValueTuple<T1,T2,T3,T4>\n  fullName: System.ValueTuple<T1,T2,T3,T4>\n- uid: System.ValueTuple`4.GetHashCode\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`4.Item1\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`4.Item2\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`4.Item3\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item3\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple`4.Item4\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4>.Item4\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.ValueTuple`4.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`4.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`4.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`4.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`4.ToString\n  parent: System.ValueTuple`4\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`4.Equals*\n  parent: System.ValueTuple`4\n  isExternal: false\n  nameWithType: ValueTuple<T1,T2,T3,T4>.\n"}