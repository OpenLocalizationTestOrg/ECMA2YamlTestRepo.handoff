### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  id: AuthenticablePrincipal
  children:
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  - System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  langs:
  - csharp
  name: AuthenticablePrincipal
  nameWithType: AuthenticablePrincipal
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  type: Class
  syntax:
    content: >-
      [System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")]

      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public class AuthenticablePrincipal : System.DirectoryServices.AccountManagement.Principal
  inheritance:
  - System.Object
  - System.DirectoryServices.AccountManagement.Principal
  implements: []
  inheritedMembers:
  - System.DirectoryServices.AccountManagement.Principal.CheckDisposedOrDeleted
  - System.DirectoryServices.AccountManagement.Principal.Context
  - System.DirectoryServices.AccountManagement.Principal.ContextRaw
  - System.DirectoryServices.AccountManagement.Principal.ContextType
  - System.DirectoryServices.AccountManagement.Principal.Delete
  - System.DirectoryServices.AccountManagement.Principal.Description
  - System.DirectoryServices.AccountManagement.Principal.DisplayName
  - System.DirectoryServices.AccountManagement.Principal.Dispose
  - System.DirectoryServices.AccountManagement.Principal.DistinguishedName
  - System.DirectoryServices.AccountManagement.Principal.Equals(System.Object)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionGet(System.String)
  - System.DirectoryServices.AccountManagement.Principal.ExtensionSet(System.String,System.Object)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.FindByIdentityWithType(System.DirectoryServices.AccountManagement.PrincipalContext,System.Type,System.String)
  - System.DirectoryServices.AccountManagement.Principal.GetGroups
  - System.DirectoryServices.AccountManagement.Principal.GetGroups(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.GetHashCode
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObject
  - System.DirectoryServices.AccountManagement.Principal.GetUnderlyingObjectType
  - System.DirectoryServices.AccountManagement.Principal.Guid
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.GroupPrincipal)
  - System.DirectoryServices.AccountManagement.Principal.IsMemberOf(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)
  - System.DirectoryServices.AccountManagement.Principal.Name
  - System.DirectoryServices.AccountManagement.Principal.SamAccountName
  - System.DirectoryServices.AccountManagement.Principal.Save
  - System.DirectoryServices.AccountManagement.Principal.Save(System.DirectoryServices.AccountManagement.PrincipalContext)
  - System.DirectoryServices.AccountManagement.Principal.Sid
  - System.DirectoryServices.AccountManagement.Principal.StructuralObjectClass
  - System.DirectoryServices.AccountManagement.Principal.ToString
  - System.DirectoryServices.AccountManagement.Principal.UserPrincipalName
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  id: '#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)'
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  type: Constructor
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected AuthenticablePrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName, string password, bool enabled);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: samAccountName
      type: System.String
      description: Parameter description to be filled
    - id: password
      type: System.String
      description: Parameter description to be filled
    - id: enabled
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  id: AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public Nullable<DateTime> AccountExpirationDate { get; set; }
    return:
      type: System.Nullable{System.DateTime}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  id: AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public Nullable<DateTime> AccountLockoutTime { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  id: AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public virtual System.DirectoryServices.AccountManagement.AdvancedFilters AdvancedSearchFilter { get; }
    return:
      type: System.DirectoryServices.AccountManagement.AdvancedFilters
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  id: AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool AllowReversiblePasswordEncryption { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  id: BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public int BadLogonCount { get; }
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  id: Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  id: ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public void ChangePassword (string oldPassword, string newPassword);
    parameters:
    - id: oldPassword
      type: System.String
      description: Parameter description to be filled
    - id: newPassword
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  id: DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool DelegationPermitted { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  id: Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public Nullable<bool> Enabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  id: ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public void ExpirePasswordNow ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByBadPasswordAttempt (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByBadPasswordAttempt<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByExpirationTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByExpirationTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLockoutTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLockoutTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByLogonTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByLogonTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  id: FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public static System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal> FindByPasswordSetTime (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  id: FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: protected static System.DirectoryServices.AccountManagement.PrincipalSearchResult<T> FindByPasswordSetTime<T> (System.DirectoryServices.AccountManagement.PrincipalContext context, DateTime time, System.DirectoryServices.AccountManagement.MatchType type);
    parameters:
    - id: context
      type: System.DirectoryServices.AccountManagement.PrincipalContext
      description: Parameter description to be filled
    - id: time
      type: System.DateTime
      description: Parameter description to be filled
    - id: type
      type: System.DirectoryServices.AccountManagement.MatchType
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  id: HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public string HomeDirectory { get; set; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  id: HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public string HomeDrive { get; set; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  id: IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool IsAccountLockedOut ();
    parameters: []
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  id: LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public Nullable<DateTime> LastBadPasswordAttempt { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  id: LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public Nullable<DateTime> LastLogon { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  id: LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public Nullable<DateTime> LastPasswordSet { get; }
    return:
      type: System.Nullable{System.DateTime}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  id: PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool PasswordNeverExpires { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  id: PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool PasswordNotRequired { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  id: PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public byte[] PermittedLogonTimes { get; set; }
    return:
      type: System.Byte[]
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  id: PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public System.DirectoryServices.AccountManagement.PrincipalValueCollection<string> PermittedWorkstations { get; }
    return:
      type: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  id: RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public void RefreshExpiredPassword ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  id: ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public string ScriptPath { get; set; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  id: SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public void SetPassword (string newPassword);
    parameters:
    - id: newPassword
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  id: SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool SmartcardLogonRequired { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  id: UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
  type: Method
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public void UnlockAccount ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  id: UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  langs:
  - csharp
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  type: Property
  assemblies:
  - System.DirectoryServices.AccountManagement
  namespace: System.DirectoryServices.AccountManagement
  syntax:
    content: public bool UserCannotChangePassword { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.DirectoryServices.AccountManagement.Principal
  isExternal: false
  name: System.DirectoryServices.AccountManagement.Principal
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String,System.String,System.Boolean)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  nameWithType: AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AuthenticablePrincipal(PrincipalContext,String,String,Boolean)
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountExpirationDate
  nameWithType: AuthenticablePrincipal.AccountExpirationDate
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountExpirationDate
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: false
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AccountLockoutTime
  nameWithType: AuthenticablePrincipal.AccountLockoutTime
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AccountLockoutTime
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: false
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AdvancedSearchFilter
  nameWithType: AuthenticablePrincipal.AdvancedSearchFilter
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AdvancedSearchFilter
- uid: System.DirectoryServices.AccountManagement.AdvancedFilters
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: AdvancedFilters
  nameWithType: AdvancedFilters
  fullName: System.DirectoryServices.AccountManagement.AdvancedFilters
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: AllowReversiblePasswordEncryption
  nameWithType: AuthenticablePrincipal.AllowReversiblePasswordEncryption
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.AllowReversiblePasswordEncryption
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: BadLogonCount
  nameWithType: AuthenticablePrincipal.BadLogonCount
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.BadLogonCount
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Certificates
  nameWithType: AuthenticablePrincipal.Certificates
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: true
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(System.String,System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ChangePassword(String,String)
  nameWithType: AuthenticablePrincipal.ChangePassword(String,String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ChangePassword(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: DelegationPermitted
  nameWithType: AuthenticablePrincipal.DelegationPermitted
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.DelegationPermitted
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: Enabled
  nameWithType: AuthenticablePrincipal.Enabled
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.Enabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: false
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ExpirePasswordNow()
  nameWithType: AuthenticablePrincipal.ExpirePasswordNow()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ExpirePasswordNow()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByBadPasswordAttempt(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByExpirationTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLockoutTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByLogonTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByLogonTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(System.DirectoryServices.AccountManagement.PrincipalContext,System.DateTime,System.DirectoryServices.AccountManagement.MatchType)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult{System.DirectoryServices.AccountManagement.AuthenticablePrincipal}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<AuthenticablePrincipal>
  nameWithType: PrincipalSearchResult<AuthenticablePrincipal>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<System.DirectoryServices.AccountManagement.AuthenticablePrincipal>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime``1(System.DirectoryServices.AccountManagement.PrincipalContext,System.Date``0ime,System.DirectoryServices.AccountManagement.Match``0ype)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  nameWithType: AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.FindByPasswordSetTime(PrincipalContext,DateTime,MatchType)
- uid: System.DirectoryServices.AccountManagement.PrincipalSearchResult`1
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalSearchResult<T>
  nameWithType: PrincipalSearchResult<T>
  fullName: System.DirectoryServices.AccountManagement.PrincipalSearchResult<T>
- uid: System.DirectoryServices.AccountManagement.PrincipalContext
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalContext
  nameWithType: PrincipalContext
  fullName: System.DirectoryServices.AccountManagement.PrincipalContext
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.AccountManagement.MatchType
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: MatchType
  nameWithType: MatchType
  fullName: System.DirectoryServices.AccountManagement.MatchType
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDirectory
  nameWithType: AuthenticablePrincipal.HomeDirectory
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDirectory
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: HomeDrive
  nameWithType: AuthenticablePrincipal.HomeDrive
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.HomeDrive
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: IsAccountLockedOut()
  nameWithType: AuthenticablePrincipal.IsAccountLockedOut()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.IsAccountLockedOut()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastBadPasswordAttempt
  nameWithType: AuthenticablePrincipal.LastBadPasswordAttempt
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastBadPasswordAttempt
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: false
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastLogon
  nameWithType: AuthenticablePrincipal.LastLogon
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastLogon
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: false
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: LastPasswordSet
  nameWithType: AuthenticablePrincipal.LastPasswordSet
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.LastPasswordSet
- uid: System.Nullable{System.DateTime}
  parent: System
  isExternal: false
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNeverExpires
  nameWithType: AuthenticablePrincipal.PasswordNeverExpires
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNeverExpires
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PasswordNotRequired
  nameWithType: AuthenticablePrincipal.PasswordNotRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PasswordNotRequired
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedLogonTimes
  nameWithType: AuthenticablePrincipal.PermittedLogonTimes
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedLogonTimes
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: PermittedWorkstations
  nameWithType: AuthenticablePrincipal.PermittedWorkstations
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.PermittedWorkstations
- uid: System.DirectoryServices.AccountManagement.PrincipalValueCollection{System.String}
  parent: System.DirectoryServices.AccountManagement
  isExternal: false
  name: PrincipalValueCollection<String>
  nameWithType: PrincipalValueCollection<String>
  fullName: System.DirectoryServices.AccountManagement.PrincipalValueCollection<System.String>
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: RefreshExpiredPassword()
  nameWithType: AuthenticablePrincipal.RefreshExpiredPassword()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.RefreshExpiredPassword()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: ScriptPath
  nameWithType: AuthenticablePrincipal.ScriptPath
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.ScriptPath
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(System.String)
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SetPassword(String)
  nameWithType: AuthenticablePrincipal.SetPassword(String)
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SetPassword(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: SmartcardLogonRequired
  nameWithType: AuthenticablePrincipal.SmartcardLogonRequired
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.SmartcardLogonRequired
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UnlockAccount()
  nameWithType: AuthenticablePrincipal.UnlockAccount()
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UnlockAccount()
- uid: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
  parent: System.DirectoryServices.AccountManagement.AuthenticablePrincipal
  isExternal: false
  name: UserCannotChangePassword
  nameWithType: AuthenticablePrincipal.UserCannotChangePassword
  fullName: System.DirectoryServices.AccountManagement.AuthenticablePrincipal.UserCannotChangePassword
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
