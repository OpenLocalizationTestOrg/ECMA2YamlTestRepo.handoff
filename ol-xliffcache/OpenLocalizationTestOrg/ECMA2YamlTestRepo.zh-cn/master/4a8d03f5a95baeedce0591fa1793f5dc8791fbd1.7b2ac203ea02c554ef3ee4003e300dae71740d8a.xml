{"nodes":[{"pos":[837,853],"content":"IListContract<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IListContract<T>"},{"pos":[1100,1134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1377,1383],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[1685,1719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1908,1915],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[2372,2383],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[2700,2734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2793,2827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3022,3032],"content":"GetCount()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCount()","pos":[0,10]}]},{"pos":[3351,3385],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3606,3629],"content":"GetEnumeratorContract()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumeratorContract()","pos":[0,23]}]},{"pos":[4059,4093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4298,4313],"content":"GetIsReadOnly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIsReadOnly()","pos":[0,15]}]},{"pos":[4650,4684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4905,4919],"content":"GetItem(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetItem(Int32)","pos":[0,14]}]},{"pos":[5253,5287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5333,5367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5568,5578],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[5891,5925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5982,6016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6241,6256],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[6602,6636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6685,6719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6918,6927],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[7238,7272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7331,7365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7588,7603],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[7943,7977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8204,8220],"content":"SetItem(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetItem(Int32,T)","pos":[0,16]}]},{"pos":[8569,8603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8652,8686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8877,8883],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[9031,9032],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[9192,9199],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[9434,9445],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[9621,9628],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9729,9730],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[9893,9903],"content":"GetCount()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCount()","pos":[0,10]}]},{"pos":[10075,10080],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10271,10294],"content":"GetEnumeratorContract()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumeratorContract()","pos":[0,23]}]},{"pos":[10538,10560],"content":"IEnumeratorContract<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumeratorContract<T>"},{"pos":[10792,10807],"content":"GetIsReadOnly()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIsReadOnly()","pos":[0,15]}]},{"pos":[10991,10998],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11193,11207],"content":"GetItem(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetItem(Int32)","pos":[0,14]}]},{"pos":[11371,11372],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[11470,11475],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11656,11666],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[11838,11843],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11940,11941],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[12119,12134],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[12316,12321],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12418,12419],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[12584,12593],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[12765,12772],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12873,12874],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[13051,13066],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[13248,13253],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13447,13463],"content":"SetItem(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetItem(Int32,T)","pos":[0,16]}]},{"pos":[13647,13652],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13749,13750],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.IListContract`1\n  id: IListContract`1\n  children:\n  - System.AddIn.Contract.IListContract`1.Add(`0)\n  - System.AddIn.Contract.IListContract`1.Clear\n  - System.AddIn.Contract.IListContract`1.Contains(`0)\n  - System.AddIn.Contract.IListContract`1.GetCount\n  - System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  - System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  - System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  - System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  - System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  - System.AddIn.Contract.IListContract`1.Remove(`0)\n  - System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  - System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  langs:\n  - csharp\n  name: IListContract<T>\n  nameWithType: IListContract<T>\n  fullName: System.AddIn.Contract.IListContract<T>\n  type: Interface\n  syntax:\n    content: 'public interface IListContract<T> : System.AddIn.Contract.IContract'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  implements:\n  - System.AddIn.Contract.IContract\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.Add(`0)\n  id: Add(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: IListContract<T>.Add(T)\n  fullName: System.AddIn.Contract.IListContract<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public void Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.Clear\n  id: Clear\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: IListContract<T>.Clear()\n  fullName: System.AddIn.Contract.IListContract<T>.Clear()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: IListContract<T>.Contains(T)\n  fullName: System.AddIn.Contract.IListContract<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.GetCount\n  id: GetCount\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetCount()\n  nameWithType: IListContract<T>.GetCount()\n  fullName: System.AddIn.Contract.IListContract<T>.GetCount()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public int GetCount ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  id: GetEnumeratorContract\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetEnumeratorContract()\n  nameWithType: IListContract<T>.GetEnumeratorContract()\n  fullName: System.AddIn.Contract.IListContract<T>.GetEnumeratorContract()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public System.AddIn.Contract.IEnumeratorContract<T> GetEnumeratorContract ();\n    parameters: []\n    return:\n      type: System.AddIn.Contract.IEnumeratorContract`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  id: GetIsReadOnly\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetIsReadOnly()\n  nameWithType: IListContract<T>.GetIsReadOnly()\n  fullName: System.AddIn.Contract.IListContract<T>.GetIsReadOnly()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public bool GetIsReadOnly ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IListContract<T>.GetItem(Int32)\n  fullName: System.AddIn.Contract.IListContract<T>.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public T GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: IListContract<T>.IndexOf(T)\n  fullName: System.AddIn.Contract.IListContract<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public int IndexOf (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Insert(Int32,T)\n  nameWithType: IListContract<T>.Insert(Int32,T)\n  fullName: System.AddIn.Contract.IListContract<T>.Insert(Int32,T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public void Insert (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: IListContract<T>.Remove(T)\n  fullName: System.AddIn.Contract.IListContract<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<T>.RemoveAt(Int32)\n  fullName: System.AddIn.Contract.IListContract<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  langs:\n  - csharp\n  name: SetItem(Int32,T)\n  nameWithType: IListContract<T>.SetItem(Int32,T)\n  fullName: System.AddIn.Contract.IListContract<T>.SetItem(Int32,T)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  syntax:\n    content: public void SetItem (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.AddIn.Contract.IListContract`1.Add(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: IListContract<T>.Add(T)\n  fullName: System.AddIn.Contract.IListContract<T>.Add(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IListContract`1.Clear\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Clear()\n  nameWithType: IListContract<T>.Clear()\n  fullName: System.AddIn.Contract.IListContract<T>.Clear()\n- uid: System.AddIn.Contract.IListContract`1.Contains(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: IListContract<T>.Contains(T)\n  fullName: System.AddIn.Contract.IListContract<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IListContract`1.GetCount\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetCount()\n  nameWithType: IListContract<T>.GetCount()\n  fullName: System.AddIn.Contract.IListContract<T>.GetCount()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetEnumeratorContract()\n  nameWithType: IListContract<T>.GetEnumeratorContract()\n  fullName: System.AddIn.Contract.IListContract<T>.GetEnumeratorContract()\n- uid: System.AddIn.Contract.IEnumeratorContract`1\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IEnumeratorContract<T>\n  nameWithType: IEnumeratorContract<T>\n  fullName: System.AddIn.Contract.IEnumeratorContract<T>\n- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetIsReadOnly()\n  nameWithType: IListContract<T>.GetIsReadOnly()\n  fullName: System.AddIn.Contract.IListContract<T>.GetIsReadOnly()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.IListContract`1.GetItem(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IListContract<T>.GetItem(Int32)\n  fullName: System.AddIn.Contract.IListContract<T>.GetItem(Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.IListContract`1.IndexOf(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: IListContract<T>.IndexOf(T)\n  fullName: System.AddIn.Contract.IListContract<T>.IndexOf(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Insert(Int32,T)\n  nameWithType: IListContract<T>.Insert(Int32,T)\n  fullName: System.AddIn.Contract.IListContract<T>.Insert(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IListContract`1.Remove(`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: IListContract<T>.Remove(T)\n  fullName: System.AddIn.Contract.IListContract<T>.Remove(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<T>.RemoveAt(Int32)\n  fullName: System.AddIn.Contract.IListContract<T>.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.IListContract`1\n  isExternal: false\n  name: SetItem(Int32,T)\n  nameWithType: IListContract<T>.SetItem(Int32,T)\n  fullName: System.AddIn.Contract.IListContract<T>.SetItem(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n"}