{"nodes":[{"pos":[367,381],"content":"TaskExtensions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskExtensions","pos":[0,14]}]},{"pos":[1187,1205],"content":"Unwrap(Task<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Unwrap(Task<Task>)"},{"pos":[1667,1701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1773,1807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2132,2159],"content":"Unwrap(Task&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Unwrap(Task<Task<TResult>>)"},{"pos":[2675,2709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2783,2817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2928,2941],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[3129,3147],"content":"Unwrap(Task<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Unwrap(Task<Task>)"},{"pos":[3363,3367],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[3554,3564],"content":"Task<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Task>"},{"pos":[3856,3883],"content":"Unwrap(Task&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Unwrap(Task<Task<TResult>>)"},{"pos":[4119,4132],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[4346,4365],"content":"Task&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Task<TResult>>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.TaskExtensions\n  id: TaskExtensions\n  children:\n  - System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)\n  - System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)\n  langs:\n  - csharp\n  name: TaskExtensions\n  nameWithType: TaskExtensions\n  fullName: System.Threading.Tasks.TaskExtensions\n  type: Class\n  syntax:\n    content: public static class TaskExtensions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)\n  id: Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)\n  parent: System.Threading.Tasks.TaskExtensions\n  langs:\n  - csharp\n  name: Unwrap(Task<Task>)\n  nameWithType: TaskExtensions.Unwrap(Task<Task>)\n  fullName: System.Threading.Tasks.TaskExtensions.Unwrap(Task<Task>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Unwrap (this System.Threading.Tasks.Task<System.Threading.Tasks.Task> task);\n    parameters:\n    - id: task\n      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)\n  id: Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)\n  parent: System.Threading.Tasks.TaskExtensions\n  langs:\n  - csharp\n  name: Unwrap(Task<Task<TResult>>)\n  nameWithType: TaskExtensions.Unwrap(Task<Task<TResult>>)\n  fullName: System.Threading.Tasks.TaskExtensions.Unwrap(Task<Task<TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> Unwrap<TResult> (this System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>> task);\n    parameters:\n    - id: task\n      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task}@)\n  parent: System.Threading.Tasks.TaskExtensions\n  isExternal: false\n  name: Unwrap(Task<Task>)\n  nameWithType: TaskExtensions.Unwrap(Task<Task>)\n  fullName: System.Threading.Tasks.TaskExtensions.Unwrap(Task<Task>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task{System.Threading.Tasks.Task}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Task>\n  nameWithType: Task<Task>\n  fullName: System.Threading.Tasks.Task<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}}@)\n  parent: System.Threading.Tasks.TaskExtensions\n  isExternal: false\n  name: Unwrap(Task<Task<TResult>>)\n  nameWithType: TaskExtensions.Unwrap(Task<Task<TResult>>)\n  fullName: System.Threading.Tasks.TaskExtensions.Unwrap(Task<Task<TResult>>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Task<TResult>>\n  nameWithType: Task<Task<TResult>>\n  fullName: System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>>\n"}