{"nodes":[{"pos":[16204,16213],"content":"Queryable","needQuote":true,"needEscape":true,"nodes":[{"content":"Queryable","pos":[0,9]}]},{"pos":[17037,17109],"content":"Aggregate(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)"},{"pos":[17665,17699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17819,17853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17905,17939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18300,18392],"content":"Aggregate(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TAccumulate,Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)"},{"pos":[19030,19064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19123,19157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19285,19319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19375,19409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19884,20014],"content":"Aggregate(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TAccumulate,Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;,Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)"},{"pos":[20804,20838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20897,20931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21059,21093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21213,21247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21299,21333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21688,21746],"content":"All(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[22259,22293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22417,22451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22510,22544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22763,22787],"content":"Any(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Any(IQueryable<TSource>)"},{"pos":[23166,23200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23259,23293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23696,23754],"content":"Any(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[24267,24301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24425,24459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24518,24552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24835,24859],"content":"AsQueryable(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[25253,25287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25354,25388],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25655,25689],"content":"AsQueryable(IEnumerable<ph id=\"ph1\">&lt;TElement&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AsQueryable(IEnumerable<TElement>)"},{"pos":[26159,26193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26270,26304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26547,26575],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Decimal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Decimal>)"},{"pos":[26967,27001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27060,27094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27378,27405],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Double>)"},{"pos":[27792,27826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27884,27918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28200,28226],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Int32>)"},{"pos":[28607,28641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28699,28733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29015,29041],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Int64>)"},{"pos":[29423,29457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29515,29549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29869,29907],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Decimal>>)"},{"pos":[30356,30390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30466,30500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30818,30855],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Double>>)"},{"pos":[31299,31333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31408,31442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31758,31794],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Int32>>)"},{"pos":[32232,32266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32341,32375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32691,32727],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Int64>>)"},{"pos":[33166,33200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33275,33309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33627,33664],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Single>>)"},{"pos":[34106,34140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34215,34249],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34533,34560],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Single&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Single>)"},{"pos":[34945,34979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35037,35071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35477,35539],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Decimal&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)"},{"pos":[36069,36103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36226,36260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36319,36353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36766,36827],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Double&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)"},{"pos":[37353,37387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37509,37543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37601,37635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38046,38106],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)"},{"pos":[38627,38661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38782,38816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38874,38908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39319,39379],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int64&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)"},{"pos":[39901,39935],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40056,40090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40148,40182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40631,40703],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Decimal&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)"},{"pos":[41273,41307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41447,41481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41557,41591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42038,42109],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Double&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)"},{"pos":[42675,42709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42848,42882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42957,42991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43436,43506],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int32&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)"},{"pos":[44067,44101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44239,44273],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44348,44382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44827,44897],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int64&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)"},{"pos":[45459,45493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45631,45665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45740,45774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46221,46292],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Single&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)"},{"pos":[46856,46890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47029,47063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47138,47172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47585,47646],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Single&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)"},{"pos":[48170,48204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48326,48360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48418,48452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48715,48731],"content":"Cast(IQueryable)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cast(IQueryable)","pos":[0,16]}]},{"pos":[49104,49138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49214,49248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49561,49609],"content":"Concat(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Concat(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[50125,50159],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50257,50291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50367,50401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50638,50675],"content":"Contains(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TSource)","needQuote":true,"needEscape":true,"source":"Contains(IQueryable<TSource>,TSource)"},{"pos":[51099,51133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51188,51222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51281,51315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51705,51769],"content":"Contains(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TSource,IEqualityComparer<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)"},{"pos":[52311,52345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52400,52434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52539,52573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52632,52666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52942,52968],"content":"Count(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Count(IQueryable<TSource>)"},{"pos":[53352,53386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53443,53477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53886,53946],"content":"Count(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[54464,54498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54622,54656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54713,54747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55038,55073],"content":"DefaultIfEmpty(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefaultIfEmpty(IQueryable<TSource>)"},{"pos":[55512,55546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55622,55656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55964,56007],"content":"DefaultIfEmpty(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TSource)","needQuote":true,"needEscape":true,"source":"DefaultIfEmpty(IQueryable<TSource>,TSource)"},{"pos":[56484,56518],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56581,56615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56691,56725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57013,57042],"content":"Distinct(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Distinct(IQueryable<TSource>)"},{"pos":[57463,57497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57573,57607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57989,58045],"content":"Distinct(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)"},{"pos":[58584,58618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58723,58757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58833,58867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59177,59213],"content":"ElementAt(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"ElementAt(IQueryable<TSource>,Int32)"},{"pos":[59636,59670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59731,59765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59817,59851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60126,60171],"content":"ElementAtOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"ElementAtOrDefault(IQueryable<TSource>,Int32)"},{"pos":[60621,60655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60716,60750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60802,60836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61149,61197],"content":"Except(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Except(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[61713,61747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61845,61879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61955,61989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62453,62528],"content":"Except(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[63162,63196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63294,63328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63433,63467],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63543,63577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63851,63877],"content":"First(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"First(IQueryable<TSource>)"},{"pos":[64265,64299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64351,64385],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64794,64854],"content":"First(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[65376,65410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65534,65568],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65620,65654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65945,65980],"content":"FirstOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FirstOrDefault(IQueryable<TSource>)"},{"pos":[66395,66429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66481,66515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66951,67020],"content":"FirstOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[67569,67603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67727,67761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67813,67847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68247,68306],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[68887,68921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69037,69071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69175,69209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69707,69790],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IEqualityComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)"},{"pos":[70480,70514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70630,70664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70766,70800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70904,70938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71450,71544],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)"},{"pos":[72281,72315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72431,72465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72589,72623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72728,72762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73383,73501],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;,IEqualityComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)"},{"pos":[74347,74381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74497,74531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74655,74689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74791,74825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74930,74964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75573,75684],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)"},{"pos":[76468,76502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76618,76652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76819,76853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76929,76963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77671,77806],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph3\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)"},{"pos":[78699,78733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78849,78883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79050,79084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79186,79220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79296,79330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80052,80199],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TElement&gt;</ph>,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)"},{"pos":[81141,81175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81291,81325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81449,81483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81651,81685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81761,81795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82626,82797],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TElement&gt;</ph>,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph3\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)"},{"pos":[83848,83882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83998,84032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84156,84190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84358,84392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84494,84528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84604,84638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85461,85623],"content":"GroupJoin(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,IEnumerable<ph id=\"ph3\">&lt;TInner&gt;</ph>,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)"},{"pos":[86644,86678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86773,86807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86927,86961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87081,87115],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87283,87317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87393,87427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88349,88535],"content":"GroupJoin(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,IEnumerable<ph id=\"ph3\">&lt;TInner&gt;</ph>,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph4\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)"},{"pos":[89665,89699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89794,89828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89948,89982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90102,90136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90304,90338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90440,90474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90550,90584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90976,91027],"content":"Intersect(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Intersect(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[91552,91586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91684,91718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91794,91828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92301,92379],"content":"Intersect(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[93022,93056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93154,93188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93293,93327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93403,93437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94150,94294],"content":"Join(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)"},{"pos":[95234,95268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95363,95397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95517,95551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95671,95705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95833,95867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95943,95977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96804,96972],"content":"Join(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph3\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)"},{"pos":[98021,98055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98150,98184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98304,98338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98458,98492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98620,98654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98756,98790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98866,98900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99189,99214],"content":"Last(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Last(IQueryable<TSource>)"},{"pos":[99599,99633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99685,99719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100125,100184],"content":"Last(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[100703,100737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100861,100895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100947,100981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101269,101303],"content":"LastOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"LastOrDefault(IQueryable<TSource>)"},{"pos":[101715,101749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101801,101835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102268,102336],"content":"LastOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[102882,102916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103040,103074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103126,103160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103449,103479],"content":"LongCount(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"LongCount(IQueryable<TSource>)"},{"pos":[103876,103910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103967,104001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[104422,104486],"content":"LongCount(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[105017,105051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105175,105209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105266,105300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105573,105597],"content":"Max(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Max(IQueryable<TSource>)"},{"pos":[105979,106013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106065,106099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106432,106490],"content":"Max(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)"},{"pos":[107016,107050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107166,107200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107252,107286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107505,107529],"content":"Min(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Min(IQueryable<TSource>)"},{"pos":[107911,107945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107997,108031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108364,108422],"content":"Min(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)"},{"pos":[108948,108982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109098,109132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109184,109218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109433,109451],"content":"OfType(IQueryable)","needQuote":true,"needEscape":true,"nodes":[{"content":"OfType(IQueryable)","pos":[0,18]}]},{"pos":[109830,109864],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109940,109974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110315,110374],"content":"OrderBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[110934,110968],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111084,111118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111201,111235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111717,111792],"content":"OrderBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[112437,112471],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112587,112621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112715,112749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112832,112866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113284,113353],"content":"OrderByDescending(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[113943,113977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114093,114127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114210,114244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114756,114841],"content":"OrderByDescending(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[115516,115550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115666,115700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115794,115828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115911,115945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116239,116267],"content":"Reverse(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Reverse(IQueryable<TSource>)"},{"pos":[116685,116719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116795,116829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117194,117261],"content":"Select(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)"},{"pos":[117836,117870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117999,118033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118109,118143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118541,118602],"content":"Select(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)"},{"pos":[119161,119195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119311,119345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119421,119455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119941,120019],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,IEnumerable<ph id=\"ph2\">&lt;TResult&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)"},{"pos":[120656,120690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120846,120880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120956,120990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121506,121590],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,IEnumerable<ph id=\"ph2\">&lt;TResult&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)"},{"pos":[122243,122277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122446,122480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122556,122590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123202,123330],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,IEnumerable<ph id=\"ph2\">&lt;TCollection&gt;</ph>&gt;&gt;,Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)"},{"pos":[124179,124213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124383,124417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124551,124585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124661,124695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125345,125479],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,IEnumerable<ph id=\"ph2\">&lt;TCollection&gt;</ph>&gt;&gt;,Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)"},{"pos":[126344,126378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126561,126595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126729,126763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126839,126873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127275,127330],"content":"SequenceEqual(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[127840,127874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127972,128006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128065,128099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128584,128666],"content":"SequenceEqual(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[129294,129328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129426,129460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129565,129599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129658,129692],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129975,130002],"content":"Single(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Single(IQueryable<TSource>)"},{"pos":[130393,130427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130479,130513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130925,130986],"content":"Single(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[131511,131545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[131669,131703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[131755,131789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132083,132119],"content":"SingleOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SingleOrDefault(IQueryable<TSource>)"},{"pos":[132537,132571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132623,132657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133096,133166],"content":"SingleOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[133718,133752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133876,133910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133962,133996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[134303,134334],"content":"Skip(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"Skip(IQueryable<TSource>,Int32)"},{"pos":[134766,134800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[134861,134895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[134971,135005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135372,135436],"content":"SkipWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[135994,136028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136152,136186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136262,136296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136743,136813],"content":"SkipWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)"},{"pos":[137387,137421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[137558,137592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[137668,137702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[137991,138015],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Decimal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Decimal>)"},{"pos":[138395,138429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138488,138522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138794,138817],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Double>)"},{"pos":[139192,139226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[139284,139318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[139588,139610],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Int32>)"},{"pos":[139976,140010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140067,140101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140371,140393],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Int64>)"},{"pos":[140761,140795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140852,140886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[141194,141228],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Decimal>>)"},{"pos":[141665,141699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[141775,141809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[142115,142148],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Double>>)"},{"pos":[142580,142614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[142689,142723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[143027,143059],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Int32>>)"},{"pos":[143482,143516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[143590,143624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[143928,143960],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Int64>>)"},{"pos":[144385,144419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[144493,144527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[144833,144866],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Single>>)"},{"pos":[145296,145330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[145405,145439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[145711,145734],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Single&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Single>)"},{"pos":[146107,146141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[146199,146233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[146627,146685],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Decimal&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)"},{"pos":[147203,147237],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[147360,147394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[147453,147487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[147888,147945],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Double&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)"},{"pos":[148459,148493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[148615,148649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[148707,148741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[149140,149196],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)"},{"pos":[149702,149736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[149857,149891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[149948,149982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[150381,150437],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int64&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)"},{"pos":[150945,150979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[151100,151134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[151191,151225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[151662,151730],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Decimal&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)"},{"pos":[152288,152322],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[152462,152496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[152572,152606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[153041,153108],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Double&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)"},{"pos":[153662,153696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[153835,153869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[153944,153978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[154411,154477],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int32&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)"},{"pos":[155023,155057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[155195,155229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[155303,155337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[155770,155836],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int64&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)"},{"pos":[156384,156418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[156556,156590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[156664,156698],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[157133,157200],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Single&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)"},{"pos":[157752,157786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[157925,157959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[158034,158068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[158469,158526],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Single&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)"},{"pos":[159038,159072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[159194,159228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[159286,159320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[159615,159646],"content":"Take(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"Take(IQueryable<TSource>,Int32)"},{"pos":[160078,160112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[160173,160207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[160283,160317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[160684,160748],"content":"TakeWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[161306,161340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[161464,161498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[161574,161608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[162055,162125],"content":"TakeWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)"},{"pos":[162699,162733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[162870,162904],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[162980,163014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[163421,163486],"content":"ThenBy(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[164071,164105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[164221,164255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[164338,164372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[164865,164946],"content":"ThenBy(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[165616,165650],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[165766,165800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[165894,165928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[166011,166045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[166474,166549],"content":"ThenByDescending(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[167164,167198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[167314,167348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[167431,167465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[167988,168079],"content":"ThenByDescending(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[168779,168813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[168929,168963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169057,169091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169174,169208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169585,169632],"content":"Union(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Union(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[170145,170179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[170277,170311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[170387,170421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[170882,170956],"content":"Union(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[171587,171621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[171719,171753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[171858,171892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[171968,172002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[172411,172471],"content":"Where(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[173017,173051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[173175,173209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[173285,173319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[173754,173820],"content":"Where(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)"},{"pos":[174382,174416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[174553,174587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[174663,174697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[175176,175261],"content":"Zip(IQueryable<ph id=\"ph1\">&lt;TFirst&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSecond&gt;</ph>,Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)"},{"pos":[175942,175976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176074,176108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176237,176271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176347,176381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176492,176505],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[176699,176771],"content":"Aggregate(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)"},{"pos":[177033,177040],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[177174,177193],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[177416,177457],"content":"Expression<Func<TSource,TSource,TSource>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TSource,TSource&gt;&gt;","pos":[0,41],"source":"Expression<Func<TSource,TSource,TSource>>"}]},{"pos":[177798,177890],"content":"Aggregate(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TAccumulate,Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)"},{"pos":[178196,178207],"content":"TAccumulate","needQuote":true,"needEscape":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[178349,178368],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[178508,178519],"content":"TAccumulate","needQuote":true,"needEscape":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[178722,178771],"content":"Expression<Func<TAccumulate,TSource,TAccumulate>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;","pos":[0,49],"source":"Expression<Func<TAccumulate,TSource,TAccumulate>>"}]},{"pos":[179185,179315],"content":"Aggregate(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TAccumulate,Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;,Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)"},{"pos":[179693,179700],"content":"TResult","needQuote":true,"needEscape":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[179834,179853],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[179993,180004],"content":"TAccumulate","needQuote":true,"needEscape":true,"nodes":[{"content":"TAccumulate","pos":[0,11]}]},{"pos":[180207,180256],"content":"Expression<Func<TAccumulate,TSource,TAccumulate>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TAccumulate,TSource,TAccumulate&gt;&gt;","pos":[0,49],"source":"Expression<Func<TAccumulate,TSource,TAccumulate>>"}]},{"pos":[180554,180591],"content":"Expression<Func<TAccumulate,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TAccumulate,TResult&gt;&gt;","pos":[0,37],"source":"Expression<Func<TAccumulate,TResult>>"}]},{"pos":[180921,180979],"content":"All(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[181225,181232],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[181373,181392],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[181614,181647],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[181908,181932],"content":"Any(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Any(IQueryable<TSource>)"},{"pos":[182110,182117],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[182258,182277],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[182552,182610],"content":"Any(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[182856,182863],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[183004,183023],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[183245,183278],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[183547,183571],"content":"AsQueryable(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"AsQueryable(IEnumerable)","pos":[0,24]}]},{"pos":[183762,183772],"content":"IQueryable","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable","pos":[0,10]}]},{"pos":[183930,183941],"content":"IEnumerable","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[184163,184197],"content":"AsQueryable(IEnumerable<ph id=\"ph1\">&lt;TElement&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AsQueryable(IEnumerable<TElement>)"},{"pos":[184418,184438],"content":"IQueryable<ph id=\"ph1\">&lt;TElement&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TElement>"},{"pos":[184642,184663],"content":"IEnumerable<ph id=\"ph1\">&lt;TElement&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TElement>"},{"pos":[184901,184929],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Decimal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Decimal>)"},{"pos":[185115,185122],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[185270,185289],"content":"IQueryable<ph id=\"ph1\">&lt;Decimal&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Decimal>"},{"pos":[185514,185541],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Double>)"},{"pos":[185724,185730],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[185875,185893],"content":"IQueryable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Double>"},{"pos":[186115,186141],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Int32>)"},{"pos":[186322,186328],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[186472,186489],"content":"IQueryable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Int32>"},{"pos":[186709,186735],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Int64>)"},{"pos":[186916,186922],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[187066,187083],"content":"IQueryable<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Int64>"},{"pos":[187322,187360],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Decimal>>)"},{"pos":[187583,187600],"content":"Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Decimal>"},{"pos":[187792,187821],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Decimal>>"},{"pos":[188090,188127],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Double>>)"},{"pos":[188347,188363],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[188552,188580],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Double&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Double>>"},{"pos":[188846,188882],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Int32>>)"},{"pos":[189100,189116],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[189304,189331],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Int32>>"},{"pos":[189595,189631],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Int64>>)"},{"pos":[189849,189865],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[190053,190080],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Int64>>"},{"pos":[190345,190382],"content":"Average(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Nullable<Single>>)"},{"pos":[190602,190618],"content":"Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Single>"},{"pos":[190807,190835],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Single&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Single>>"},{"pos":[191085,191112],"content":"Average(IQueryable<ph id=\"ph1\">&lt;Single&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<Single>)"},{"pos":[191295,191301],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[191446,191464],"content":"IQueryable<ph id=\"ph1\">&lt;Single&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Single>"},{"pos":[191748,191810],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Decimal&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)"},{"pos":[192064,192071],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[192212,192231],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[192453,192486],"content":"Expression<Func<TSource,Decimal>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Decimal&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Decimal>>"}]},{"pos":[192818,192879],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Double&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)"},{"pos":[193130,193136],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[193275,193294],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[193515,193547],"content":"Expression<Func<TSource,Double>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Double&gt;&gt;","pos":[0,32],"source":"Expression<Func<TSource,Double>>"}]},{"pos":[193876,193936],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)"},{"pos":[194185,194191],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[194330,194349],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[194569,194600],"content":"Expression<Func<TSource,Int32>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int32&gt;&gt;","pos":[0,31],"source":"Expression<Func<TSource,Int32>>"}]},{"pos":[194927,194987],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int64&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)"},{"pos":[195236,195242],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[195381,195400],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[195620,195651],"content":"Expression<Func<TSource,Int64>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int64&gt;&gt;","pos":[0,31],"source":"Expression<Func<TSource,Int64>>"}]},{"pos":[195997,196069],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Decimal&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)"},{"pos":[196360,196377],"content":"Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Decimal>"},{"pos":[196545,196564],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[196803,196846],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Decimal>>>"},{"pos":[197222,197293],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Double&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)"},{"pos":[197581,197597],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[197763,197782],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[198020,198062],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Double&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Double>>>"},{"pos":[198435,198505],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int32&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)"},{"pos":[198791,198807],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[198973,198992],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[199229,199270],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Int32>>>"},{"pos":[199641,199711],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int64&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)"},{"pos":[199997,200013],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[200179,200198],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[200435,200476],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Int64>>>"},{"pos":[200848,200919],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Single&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)"},{"pos":[201207,201223],"content":"Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Single>"},{"pos":[201389,201408],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[201646,201688],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Single&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Single>>>"},{"pos":[202045,202106],"content":"Average(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Single&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)"},{"pos":[202357,202363],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[202502,202521],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[202742,202774],"content":"Expression<Func<TSource,Single>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Single&gt;&gt;","pos":[0,32],"source":"Expression<Func<TSource,Single>>"}]},{"pos":[203029,203045],"content":"Cast(IQueryable)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cast(IQueryable)","pos":[0,16]}]},{"pos":[203229,203248],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[203409,203419],"content":"IQueryable","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable","pos":[0,10]}]},{"pos":[203655,203703],"content":"Concat(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Concat(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[203951,203970],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[204140,204159],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[204360,204380],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[204613,204650],"content":"Contains(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TSource)","needQuote":true,"needEscape":true,"source":"Contains(IQueryable<TSource>,TSource)"},{"pos":[204854,204861],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[205002,205021],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[205157,205164],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[205394,205458],"content":"Contains(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TSource,IEqualityComparer<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)"},{"pos":[205716,205723],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[205864,205883],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[206019,206026],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[206197,206223],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TSource>"},{"pos":[206461,206487],"content":"Count(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Count(IQueryable<TSource>)"},{"pos":[206667,206672],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[206809,206828],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[207105,207165],"content":"Count(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[207413,207418],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[207555,207574],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[207796,207829],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[208101,208136],"content":"DefaultIfEmpty(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefaultIfEmpty(IQueryable<TSource>)"},{"pos":[208358,208377],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[208547,208566],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[208788,208831],"content":"DefaultIfEmpty(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TSource)","needQuote":true,"needEscape":true,"source":"DefaultIfEmpty(IQueryable<TSource>,TSource)"},{"pos":[209069,209088],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[209258,209277],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[209413,209420],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[209596,209625],"content":"Distinct(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Distinct(IQueryable<TSource>)"},{"pos":[209835,209854],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[210024,210043],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[210305,210361],"content":"Distinct(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)"},{"pos":[210625,210644],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[210814,210833],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[211040,211066],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TSource>"},{"pos":[211321,211357],"content":"ElementAt(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"ElementAt(IQueryable<TSource>,Int32)"},{"pos":[211547,211554],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[211688,211707],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[211853,211858],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[212060,212105],"content":"ElementAtOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"ElementAtOrDefault(IQueryable<TSource>,Int32)"},{"pos":[212313,212320],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[212454,212473],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[212619,212624],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[212845,212893],"content":"Except(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Except(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[213141,213160],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[213330,213349],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[213550,213570],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[213891,213966],"content":"Except(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[214268,214287],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[214457,214476],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[214677,214697],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[214921,214947],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TSource>"},{"pos":[215185,215211],"content":"First(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"First(IQueryable<TSource>)"},{"pos":[215381,215388],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[215522,215541],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[215818,215878],"content":"First(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[216116,216123],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[216257,216276],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[216498,216531],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[216803,216838],"content":"FirstOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FirstOrDefault(IQueryable<TSource>)"},{"pos":[217026,217033],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[217167,217186],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[217472,217541],"content":"FirstOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[217797,217804],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[217938,217957],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[218179,218212],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[218534,218593],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[218891,218926],"content":"IQueryable<IGrouping<TKey,TSource>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable&lt;IGrouping&lt;TKey,TSource&gt;&gt;","pos":[0,35],"source":"IQueryable<IGrouping<TKey,TSource>>"}]},{"pos":[219140,219159],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[219371,219401],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[219760,219843],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IEqualityComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)"},{"pos":[220189,220224],"content":"IQueryable<IGrouping<TKey,TSource>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable&lt;IGrouping&lt;TKey,TSource&gt;&gt;","pos":[0,35],"source":"IQueryable<IGrouping<TKey,TSource>>"}]},{"pos":[220438,220457],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[220669,220699],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[220944,220967],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[221315,221409],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)"},{"pos":[221778,221814],"content":"IQueryable<IGrouping<TKey,TElement>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable&lt;IGrouping&lt;TKey,TElement&gt;&gt;","pos":[0,36],"source":"IQueryable<IGrouping<TKey,TElement>>"}]},{"pos":[222030,222049],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[222261,222291],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[222548,222582],"content":"Expression<Func<TSource,TElement>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TElement&gt;&gt;","pos":[0,34],"source":"Expression<Func<TSource,TElement>>"}]},{"pos":[223006,223124],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;,IEqualityComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)"},{"pos":[223541,223577],"content":"IQueryable<IGrouping<TKey,TElement>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable&lt;IGrouping&lt;TKey,TElement&gt;&gt;","pos":[0,36],"source":"IQueryable<IGrouping<TKey,TElement>>"}]},{"pos":[223793,223812],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[224024,224054],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[224311,224345],"content":"Expression<Func<TSource,TElement>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TElement&gt;&gt;","pos":[0,34],"source":"Expression<Func<TSource,TElement>>"}]},{"pos":[224598,224621],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[225013,225124],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)"},{"pos":[225498,225517],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[225687,225706],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[225918,225948],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[226249,226300],"content":"Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TResult&gt;&gt;","needQuote":true,"needEscape":true,"source":"Expression<Func<TKey,IEnumerable<TSource>,TResult>>"},{"pos":[226829,226964],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph3\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)"},{"pos":[227386,227405],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[227575,227594],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[227806,227836],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[228137,228188],"content":"Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,TResult&gt;&gt;","needQuote":true,"needEscape":true,"source":"Expression<Func<TKey,IEnumerable<TSource>,TResult>>"},{"pos":[228502,228525],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[228974,229121],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TElement&gt;</ph>,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)"},{"pos":[229567,229586],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[229756,229775],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[229987,230017],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[230274,230308],"content":"Expression<Func<TSource,TElement>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TElement&gt;&gt;","pos":[0,34],"source":"Expression<Func<TSource,TElement>>"}]},{"pos":[230618,230670],"content":"Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph1\">&lt;TElement&gt;</ph>,TResult&gt;&gt;","needQuote":true,"needEscape":true,"source":"Expression<Func<TKey,IEnumerable<TElement>,TResult>>"},{"pos":[231258,231429],"content":"GroupBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,Expression&lt;Func&lt;TSource,TElement&gt;&gt;,Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph2\">&lt;TElement&gt;</ph>,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph3\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)"},{"pos":[231923,231942],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[232112,232131],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[232343,232373],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[232630,232664],"content":"Expression<Func<TSource,TElement>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TElement&gt;&gt;","pos":[0,34],"source":"Expression<Func<TSource,TElement>>"}]},{"pos":[232974,233026],"content":"Expression&lt;Func&lt;TKey,IEnumerable<ph id=\"ph1\">&lt;TElement&gt;</ph>,TResult&gt;&gt;","needQuote":true,"needEscape":true,"source":"Expression<Func<TKey,IEnumerable<TElement>,TResult>>"},{"pos":[233342,233365],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[233860,234022],"content":"GroupJoin(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,IEnumerable<ph id=\"ph3\">&lt;TInner&gt;</ph>,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)"},{"pos":[234498,234517],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[234686,234704],"content":"IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TOuter>"},{"pos":[234902,234921],"content":"IEnumerable<ph id=\"ph1\">&lt;TInner&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TInner>"},{"pos":[235147,235176],"content":"Expression<Func<TOuter,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TOuter,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TOuter,TKey>>"}]},{"pos":[235426,235455],"content":"Expression<Func<TInner,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TInner,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TInner,TKey>>"}]},{"pos":[235755,235807],"content":"Expression&lt;Func&lt;TOuter,IEnumerable<ph id=\"ph1\">&lt;TInner&gt;</ph>,TResult&gt;&gt;","needQuote":true,"needEscape":true,"source":"Expression<Func<TOuter,IEnumerable<TInner>,TResult>>"},{"pos":[236441,236627],"content":"GroupJoin(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,IEnumerable<ph id=\"ph3\">&lt;TInner&gt;</ph>,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph4\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)"},{"pos":[237151,237170],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[237339,237357],"content":"IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TOuter>"},{"pos":[237555,237574],"content":"IEnumerable<ph id=\"ph1\">&lt;TInner&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TInner>"},{"pos":[237800,237829],"content":"Expression<Func<TOuter,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TOuter,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TOuter,TKey>>"}]},{"pos":[238079,238108],"content":"Expression<Func<TInner,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TInner,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TInner,TKey>>"}]},{"pos":[238408,238460],"content":"Expression&lt;Func&lt;TOuter,IEnumerable<ph id=\"ph1\">&lt;TInner&gt;</ph>,TResult&gt;&gt;","needQuote":true,"needEscape":true,"source":"Expression<Func<TOuter,IEnumerable<TInner>,TResult>>"},{"pos":[238776,238799],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[239079,239130],"content":"Intersect(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Intersect(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[239384,239403],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[239573,239592],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[239793,239813],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[240137,240215],"content":"Intersect(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[240523,240542],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[240712,240731],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[240932,240952],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[241176,241202],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TSource>"},{"pos":[241658,241802],"content":"Join(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)"},{"pos":[242242,242261],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[242430,242448],"content":"IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TOuter>"},{"pos":[242646,242665],"content":"IEnumerable<ph id=\"ph1\">&lt;TInner&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TInner>"},{"pos":[242891,242920],"content":"Expression<Func<TOuter,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TOuter,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TOuter,TKey>>"}]},{"pos":[243170,243199],"content":"Expression<Func<TInner,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TInner,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TInner,TKey>>"}]},{"pos":[243459,243498],"content":"Expression<Func<TOuter,TInner,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt;","pos":[0,39],"source":"Expression<Func<TOuter,TInner,TResult>>"}]},{"pos":[244034,244202],"content":"Join(IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TInner&gt;</ph>,Expression&lt;Func&lt;TOuter,TKey&gt;&gt;,Expression&lt;Func&lt;TInner,TKey&gt;&gt;,Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt;,IEqualityComparer<ph id=\"ph3\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)"},{"pos":[244690,244709],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[244878,244896],"content":"IQueryable<ph id=\"ph1\">&lt;TOuter&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TOuter>"},{"pos":[245094,245113],"content":"IEnumerable<ph id=\"ph1\">&lt;TInner&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TInner>"},{"pos":[245339,245368],"content":"Expression<Func<TOuter,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TOuter,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TOuter,TKey>>"}]},{"pos":[245618,245647],"content":"Expression<Func<TInner,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TInner,TKey&gt;&gt;","pos":[0,29],"source":"Expression<Func<TInner,TKey>>"}]},{"pos":[245907,245946],"content":"Expression<Func<TOuter,TInner,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TOuter,TInner,TResult&gt;&gt;","pos":[0,39],"source":"Expression<Func<TOuter,TInner,TResult>>"}]},{"pos":[246209,246232],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TKey>"},{"pos":[246463,246488],"content":"Last(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Last(IQueryable<TSource>)"},{"pos":[246656,246663],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[246797,246816],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[247092,247151],"content":"Last(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[247387,247394],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[247528,247547],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[247769,247802],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[248073,248107],"content":"LastOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"LastOrDefault(IQueryable<TSource>)"},{"pos":[248293,248300],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[248434,248453],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[248738,248806],"content":"LastOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[249060,249067],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[249201,249220],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[249442,249475],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[249742,249772],"content":"LongCount(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"LongCount(IQueryable<TSource>)"},{"pos":[249960,249965],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[250102,250121],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[250402,250466],"content":"LongCount(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[250722,250727],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[250864,250883],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[251105,251138],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[251399,251423],"content":"Max(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Max(IQueryable<TSource>)"},{"pos":[251589,251596],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[251730,251749],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[252013,252071],"content":"Max(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)"},{"pos":[252305,252312],"content":"TResult","needQuote":true,"needEscape":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[252446,252465],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[252680,252713],"content":"Expression<Func<TSource,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TResult&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,TResult>>"}]},{"pos":[252967,252991],"content":"Min(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Min(IQueryable<TSource>)"},{"pos":[253157,253164],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[253298,253317],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[253581,253639],"content":"Min(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)"},{"pos":[253873,253880],"content":"TResult","needQuote":true,"needEscape":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[254014,254033],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[254248,254281],"content":"Expression<Func<TSource,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TResult&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,TResult>>"}]},{"pos":[254533,254551],"content":"OfType(IQueryable)","needQuote":true,"needEscape":true,"nodes":[{"content":"OfType(IQueryable)","pos":[0,18]}]},{"pos":[254739,254758],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[254919,254929],"content":"IQueryable","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueryable","pos":[0,10]}]},{"pos":[255179,255238],"content":"OrderBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[255515,255541],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[255725,255744],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[255956,255986],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[256337,256412],"content":"OrderBy(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[256721,256747],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[256931,256950],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[257162,257192],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[257429,257444],"content":"IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<TKey>"},{"pos":[257729,257798],"content":"OrderByDescending(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[258095,258121],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[258305,258324],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[258536,258566],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[258927,259012],"content":"OrderByDescending(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[259341,259367],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[259551,259570],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[259782,259812],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[260049,260064],"content":"IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<TKey>"},{"pos":[260282,260310],"content":"Reverse(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Reverse(IQueryable<TSource>)"},{"pos":[260518,260537],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[260707,260726],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[261006,261073],"content":"Select(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)"},{"pos":[261359,261378],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[261548,261567],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[261795,261834],"content":"Expression<Func<TSource,Int32,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int32,TResult&gt;&gt;","pos":[0,39],"source":"Expression<Func<TSource,Int32,TResult>>"}]},{"pos":[262167,262228],"content":"Select(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)"},{"pos":[262502,262521],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[262691,262710],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[262925,262958],"content":"Expression<Func<TSource,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TResult&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,TResult>>"}]},{"pos":[263316,263394],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,IEnumerable<ph id=\"ph2\">&lt;TResult&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)"},{"pos":[263702,263721],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[263891,263910],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[264165,264211],"content":"Expression&lt;Func&lt;TSource,IEnumerable<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,IEnumerable<TResult>>>"},{"pos":[264635,264719],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,IEnumerable<ph id=\"ph2\">&lt;TResult&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)"},{"pos":[265039,265058],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[265228,265247],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[265515,265567],"content":"Expression&lt;Func&lt;TSource,Int32,IEnumerable<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Int32,IEnumerable<TResult>>>"},{"pos":[266058,266186],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,IEnumerable<ph id=\"ph2\">&lt;TCollection&gt;</ph>&gt;&gt;,Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)"},{"pos":[266594,266613],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[266783,266802],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[267061,267111],"content":"Expression&lt;Func&lt;TSource,IEnumerable<ph id=\"ph1\">&lt;TCollection&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,IEnumerable<TCollection>>>"},{"pos":[267446,267491],"content":"Expression<Func<TSource,TCollection,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt;","pos":[0,45],"source":"Expression<Func<TSource,TCollection,TResult>>"}]},{"pos":[267947,268081],"content":"SelectMany(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,IEnumerable<ph id=\"ph2\">&lt;TCollection&gt;</ph>&gt;&gt;,Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)"},{"pos":[268501,268520],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[268690,268709],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[268981,269037],"content":"Expression&lt;Func&lt;TSource,Int32,IEnumerable<ph id=\"ph1\">&lt;TCollection&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Int32,IEnumerable<TCollection>>>"},{"pos":[269391,269436],"content":"Expression<Func<TSource,TCollection,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TCollection,TResult&gt;&gt;","pos":[0,45],"source":"Expression<Func<TSource,TCollection,TResult>>"}]},{"pos":[269768,269823],"content":"SequenceEqual(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[270063,270070],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[270211,270230],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[270431,270451],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[270779,270861],"content":"SequenceEqual(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[271155,271162],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[271303,271322],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[271523,271543],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[271767,271793],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TSource>"},{"pos":[272032,272059],"content":"Single(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Single(IQueryable<TSource>)"},{"pos":[272231,272238],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[272372,272391],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[272669,272730],"content":"Single(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[272970,272977],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[273111,273130],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[273352,273385],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[273658,273694],"content":"SingleOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SingleOrDefault(IQueryable<TSource>)"},{"pos":[273884,273891],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[274025,274044],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[274331,274401],"content":"SingleOrDefault(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[274659,274666],"content":"TSource","needQuote":true,"needEscape":true,"nodes":[{"content":"TSource","pos":[0,7]}]},{"pos":[274800,274819],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[275041,275074],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[275349,275380],"content":"Skip(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"Skip(IQueryable<TSource>,Int32)"},{"pos":[275594,275613],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[275783,275802],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[275948,275953],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[276201,276265],"content":"SkipWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[276545,276564],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[276734,276753],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[276975,277008],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[277356,277426],"content":"SkipWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)"},{"pos":[277718,277737],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[277907,277926],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[278161,278200],"content":"Expression<Func<TSource,Int32,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;","pos":[0,39],"source":"Expression<Func<TSource,Int32,Boolean>>"}]},{"pos":[278488,278512],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Decimal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Decimal>)"},{"pos":[278690,278697],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[278845,278864],"content":"IQueryable<ph id=\"ph1\">&lt;Decimal&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Decimal>"},{"pos":[279085,279108],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Double>)"},{"pos":[279283,279289],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[279434,279452],"content":"IQueryable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Double>"},{"pos":[279670,279692],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Int32>)"},{"pos":[279864,279869],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[280011,280028],"content":"IQueryable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Int32>"},{"pos":[280244,280266],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Int64>)"},{"pos":[280438,280443],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[280585,280602],"content":"IQueryable<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Int64>"},{"pos":[280837,280871],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Decimal>>)"},{"pos":[281086,281103],"content":"Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Decimal>"},{"pos":[281295,281324],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Decimal>>"},{"pos":[281589,281622],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Double>>)"},{"pos":[281834,281850],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[282039,282067],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Double&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Double>>"},{"pos":[282329,282361],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Int32>>)"},{"pos":[282570,282585],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[282771,282798],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Int32>>"},{"pos":[283058,283090],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Int64>>)"},{"pos":[283299,283314],"content":"Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int64>"},{"pos":[283500,283527],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Int64>>"},{"pos":[283788,283821],"content":"Sum(IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Nullable<Single>>)"},{"pos":[284033,284049],"content":"Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Single>"},{"pos":[284238,284266],"content":"IQueryable&lt;Nullable<ph id=\"ph1\">&lt;Single&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Nullable<Single>>"},{"pos":[284512,284535],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;Single&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<Single>)"},{"pos":[284710,284716],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[284861,284879],"content":"IQueryable<ph id=\"ph1\">&lt;Single&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<Single>"},{"pos":[285159,285217],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Decimal&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)"},{"pos":[285463,285470],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[285611,285630],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[285852,285885],"content":"Expression<Func<TSource,Decimal>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Decimal&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Decimal>>"}]},{"pos":[286213,286270],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Double&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)"},{"pos":[286513,286519],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[286658,286677],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[286898,286930],"content":"Expression<Func<TSource,Double>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Double&gt;&gt;","pos":[0,32],"source":"Expression<Func<TSource,Double>>"}]},{"pos":[287255,287311],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)"},{"pos":[287551,287556],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[287693,287712],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[287932,287963],"content":"Expression<Func<TSource,Int32>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int32&gt;&gt;","pos":[0,31],"source":"Expression<Func<TSource,Int32>>"}]},{"pos":[288286,288342],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int64&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)"},{"pos":[288582,288587],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[288724,288743],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[288963,288994],"content":"Expression<Func<TSource,Int64>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int64&gt;&gt;","pos":[0,31],"source":"Expression<Func<TSource,Int64>>"}]},{"pos":[289336,289404],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Decimal&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)"},{"pos":[289687,289704],"content":"Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Decimal>"},{"pos":[289872,289891],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[290130,290173],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Decimal&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Decimal>>>"},{"pos":[290545,290612],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Double&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)"},{"pos":[290892,290908],"content":"Nullable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Double>"},{"pos":[291074,291093],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[291331,291373],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Double&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Double>>>"},{"pos":[291742,291808],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int32&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)"},{"pos":[292085,292100],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[292264,292283],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[292520,292561],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Int32>>>"},{"pos":[292928,292994],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Int64&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)"},{"pos":[293271,293286],"content":"Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int64>"},{"pos":[293450,293469],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[293706,293747],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Int64>>>"},{"pos":[294115,294182],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph2\">&lt;Single&gt;</ph>&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)"},{"pos":[294462,294478],"content":"Nullable<ph id=\"ph1\">&lt;Single&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Single>"},{"pos":[294644,294663],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[294901,294943],"content":"Expression&lt;Func&lt;TSource,Nullable<ph id=\"ph1\">&lt;Single&gt;</ph><ph id=\"ph2\">&gt;&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<Func<TSource,Nullable<Single>>>"},{"pos":[295296,295353],"content":"Sum(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Single&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)"},{"pos":[295596,295602],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[295741,295760],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[295981,296013],"content":"Expression<Func<TSource,Single>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Single&gt;&gt;","pos":[0,32],"source":"Expression<Func<TSource,Single>>"}]},{"pos":[296286,296317],"content":"Take(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"Take(IQueryable<TSource>,Int32)"},{"pos":[296531,296550],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[296720,296739],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[296885,296890],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[297138,297202],"content":"TakeWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[297482,297501],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[297671,297690],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[297912,297945],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[298293,298363],"content":"TakeWhile(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)"},{"pos":[298655,298674],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[298844,298863],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[299098,299137],"content":"Expression<Func<TSource,Int32,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;","pos":[0,39],"source":"Expression<Func<TSource,Int32,Boolean>>"}]},{"pos":[299484,299549],"content":"ThenBy(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[299838,299864],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[300055,300081],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[300307,300337],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[300694,300775],"content":"ThenBy(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[301096,301122],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[301313,301339],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[301565,301595],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[301832,301847],"content":"IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<TKey>"},{"pos":[302138,302213],"content":"ThenByDescending(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;)","needQuote":true,"needEscape":true,"source":"ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)"},{"pos":[302522,302548],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[302739,302765],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[302991,303021],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[303388,303479],"content":"ThenByDescending(IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,TKey&gt;&gt;,IComparer<ph id=\"ph2\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)"},{"pos":[303820,303846],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[304037,304063],"content":"IOrderedQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IOrderedQueryable<TSource>"},{"pos":[304289,304319],"content":"Expression<Func<TSource,TKey>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,TKey&gt;&gt;","pos":[0,30],"source":"Expression<Func<TSource,TKey>>"}]},{"pos":[304556,304571],"content":"IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<TKey>"},{"pos":[304831,304878],"content":"Union(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Union(IQueryable<TSource>,IEnumerable<TSource>)"},{"pos":[305124,305143],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[305313,305332],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[305533,305553],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[305873,305947],"content":"Union(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSource&gt;</ph>,IEqualityComparer<ph id=\"ph3\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)"},{"pos":[306247,306266],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[306436,306455],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[306656,306676],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[306900,306926],"content":"IEqualityComparer<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<TSource>"},{"pos":[307232,307292],"content":"Where(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)"},{"pos":[307564,307583],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[307753,307772],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[307994,308027],"content":"Expression<Func<TSource,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Boolean&gt;&gt;","pos":[0,33],"source":"Expression<Func<TSource,Boolean>>"}]},{"pos":[308371,308437],"content":"Where(IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)"},{"pos":[308721,308740],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[308910,308929],"content":"IQueryable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TSource>"},{"pos":[309164,309203],"content":"Expression<Func<TSource,Int32,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TSource,Int32,Boolean&gt;&gt;","pos":[0,39],"source":"Expression<Func<TSource,Int32,Boolean>>"}]},{"pos":[309588,309673],"content":"Zip(IQueryable<ph id=\"ph1\">&lt;TFirst&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;TSecond&gt;</ph>,Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt;)","needQuote":true,"needEscape":true,"source":"Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)"},{"pos":[309995,310014],"content":"IQueryable<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TResult>"},{"pos":[310183,310201],"content":"IQueryable<ph id=\"ph1\">&lt;TFirst&gt;</ph>","needQuote":true,"needEscape":true,"source":"IQueryable<TFirst>"},{"pos":[310400,310420],"content":"IEnumerable<ph id=\"ph1\">&lt;TSecond&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSecond>"},{"pos":[310659,310699],"content":"Expression<Func<TFirst,TSecond,TResult>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;TFirst,TSecond,TResult&gt;&gt;","pos":[0,40],"source":"Expression<Func<TFirst,TSecond,TResult>>"}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Queryable\n  id: Queryable\n  children:\n  - System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  - System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  - System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  - System.Linq.Queryable.All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable@)\n  - System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  - System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single}@)\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  - System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  - System.Linq.Queryable.Cast``1(System.Linq.IQueryable@)\n  - System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0)\n  - System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)\n  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)\n  - System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)\n  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  - System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  - System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  - System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  - System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OfType``1(System.Linq.IQueryable@)\n  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  - System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  - System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@)\n  - System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0}@,System.Int32)\n  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  - System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single}@)\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  - System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  - System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0}@,System.Int32)\n  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  - System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  - System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  - System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  - System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  langs:\n  - csharp\n  name: Queryable\n  nameWithType: Queryable\n  fullName: System.Linq.Queryable\n  type: Class\n  syntax:\n    content: public static class Queryable\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  id: Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)\n  nameWithType: Queryable.Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)\n  fullName: System.Linq.Queryable.Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Aggregate<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TSource,TSource>> func);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: func\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TSource,TSource}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  id: Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  nameWithType: Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  fullName: System.Linq.Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TAccumulate Aggregate<TSource,TAccumulate> (this System.Linq.IQueryable<TSource> source, TAccumulate seed, System.Linq.Expressions.Expression<Func<TAccumulate,TSource,TAccumulate>> func);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: seed\n      type: TAccumulate\n      description: Parameter description to be filled\n    - id: func\n      type: System.Linq.Expressions.Expression{System.Func{TAccumulate,TSource,TAccumulate}}\n      description: Parameter description to be filled\n    return:\n      type: TAccumulate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  id: Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)\n  nameWithType: Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)\n  fullName: System.Linq.Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TResult Aggregate<TSource,TAccumulate,TResult> (this System.Linq.IQueryable<TSource> source, TAccumulate seed, System.Linq.Expressions.Expression<Func<TAccumulate,TSource,TAccumulate>> func, System.Linq.Expressions.Expression<Func<TAccumulate,TResult>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: seed\n      type: TAccumulate\n      description: Parameter description to be filled\n    - id: func\n      type: System.Linq.Expressions.Expression{System.Func{TAccumulate,TSource,TAccumulate}}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TAccumulate,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: TResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool All<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@)\n  id: Any``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Any(IQueryable<TSource>)\n  nameWithType: Queryable.Any(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Any(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool Any<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Any<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool Any<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Any<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable@)\n  id: AsQueryable(System.Collections.IEnumerable@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable AsQueryable (this System.Collections.IEnumerable source);\n    parameters:\n    - id: source\n      type: System.Collections.IEnumerable\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)\n  id: AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: AsQueryable(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable(IEnumerable<TElement>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TElement> AsQueryable<TElement> (this System.Collections.Generic.IEnumerable<TElement> source);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TElement}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TElement}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal}@)\n  id: Average(System.Linq.IQueryable{System.Decimal}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Decimal>)\n  nameWithType: Queryable.Average(IQueryable<Decimal>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Decimal>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static decimal Average (this System.Linq.IQueryable<decimal> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Decimal}\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double}@)\n  id: Average(System.Linq.IQueryable{System.Double}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Double>)\n  nameWithType: Queryable.Average(IQueryable<Double>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Double>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Average (this System.Linq.IQueryable<double> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Double}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32}@)\n  id: Average(System.Linq.IQueryable{System.Int32}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Int32>)\n  nameWithType: Queryable.Average(IQueryable<Int32>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Int32>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Average (this System.Linq.IQueryable<int> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Int32}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64}@)\n  id: Average(System.Linq.IQueryable{System.Int64}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Int64>)\n  nameWithType: Queryable.Average(IQueryable<Int64>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Int64>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Average (this System.Linq.IQueryable<long> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  id: Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Decimal>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Decimal>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<decimal> Average (this System.Linq.IQueryable<Nullable<decimal>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Decimal}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Decimal}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  id: Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Double>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Double>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Average (this System.Linq.IQueryable<Nullable<double>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Double}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  id: Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int32>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Int32>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Average (this System.Linq.IQueryable<Nullable<int>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Int32}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  id: Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int64>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Int64>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Average (this System.Linq.IQueryable<Nullable<long>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Int64}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  id: Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Single>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Single>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<float> Average (this System.Linq.IQueryable<Nullable<float>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Single}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Single}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single}@)\n  id: Average(System.Linq.IQueryable{System.Single}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<Single>)\n  nameWithType: Queryable.Average(IQueryable<Single>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Single>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static float Average (this System.Linq.IQueryable<float> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Single}\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static decimal Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,decimal>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Decimal}}\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,double>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Double}}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32}}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,long>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int64}}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<decimal> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<decimal>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Decimal}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Decimal}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<double>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Double}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<int>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int32}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<long>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int64}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<float> Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<float>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Single}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Single}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  id: Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static float Average<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,float>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Single}}\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Average<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable@)\n  id: Cast``1(System.Linq.IQueryable@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Cast(IQueryable)\n  nameWithType: Queryable.Cast(IQueryable)\n  fullName: System.Linq.Queryable.Cast(IQueryable)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> Cast<TResult> (this System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  id: Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Concat(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Concat(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Concat(IQueryable<TSource>,IEnumerable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Concat<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0)\n  id: Contains``1(System.Linq.IQueryable{``0}@,``0)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Contains(IQueryable<TSource>,TSource)\n  nameWithType: Queryable.Contains(IQueryable<TSource>,TSource)\n  fullName: System.Linq.Queryable.Contains(IQueryable<TSource>,TSource)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool Contains<TSource> (this System.Linq.IQueryable<TSource> source, TSource item);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: item\n      type: TSource\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Contains<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})\n  id: Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool Contains<TSource> (this System.Linq.IQueryable<TSource> source, TSource item, System.Collections.Generic.IEqualityComparer<TSource> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: item\n      type: TSource\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Contains<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@)\n  id: Count``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Count(IQueryable<TSource>)\n  nameWithType: Queryable.Count(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Count(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static int Count<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Count<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static int Count<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Count<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)\n  id: DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: DefaultIfEmpty(IQueryable<TSource>)\n  nameWithType: Queryable.DefaultIfEmpty(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> DefaultIfEmpty<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.DefaultIfEmpty<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)\n  id: DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: DefaultIfEmpty(IQueryable<TSource>,TSource)\n  nameWithType: Queryable.DefaultIfEmpty(IQueryable<TSource>,TSource)\n  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable<TSource>,TSource)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> DefaultIfEmpty<TSource> (this System.Linq.IQueryable<TSource> source, TSource defaultValue);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: defaultValue\n      type: TSource\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.DefaultIfEmpty<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@)\n  id: Distinct``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Distinct(IQueryable<TSource>)\n  nameWithType: Queryable.Distinct(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Distinct(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Distinct<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Distinct<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})\n  id: Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Distinct<TSource> (this System.Linq.IQueryable<TSource> source, System.Collections.Generic.IEqualityComparer<TSource> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Distinct<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)\n  id: ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: ElementAt(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.ElementAt(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.ElementAt(IQueryable<TSource>,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource ElementAt<TSource> (this System.Linq.IQueryable<TSource> source, int index);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)\n  id: ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: ElementAtOrDefault(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.ElementAtOrDefault(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.ElementAtOrDefault(IQueryable<TSource>,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource ElementAtOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, int index);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  id: Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Except(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Except<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Except<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  id: Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Except<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Except<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@)\n  id: First``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: First(IQueryable<TSource>)\n  nameWithType: Queryable.First(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.First(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource First<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.First<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource First<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.First<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@)\n  id: FirstOrDefault``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: FirstOrDefault(IQueryable<TSource>)\n  nameWithType: Queryable.FirstOrDefault(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource FirstOrDefault<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.FirstOrDefault<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource FirstOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.FirstOrDefault<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TSource}}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  id: GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TSource>> GroupBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TSource}}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: elementSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TElement}}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<System.Linq.IGrouping<TKey,TElement>> GroupBy<TSource,TKey,TElement> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: elementSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TElement}}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>> resultSelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  id: GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  id: GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>> resultSelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: elementSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  id: GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> GroupBy<TSource,TKey,TElement,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Linq.Expressions.Expression<Func<TSource,TElement>> elementSelector, System.Linq.Expressions.Expression<Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: elementSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupBy<TSource,TKey,TElement,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  id: GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  nameWithType: Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  fullName: System.Linq.Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>> resultSelector);\n    parameters:\n    - id: outer\n      type: System.Linq.IQueryable{TOuter}\n      description: Parameter description to be filled\n    - id: inner\n      type: System.Collections.Generic.IEnumerable{TInner}\n      description: Parameter description to be filled\n    - id: outerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n      description: Parameter description to be filled\n    - id: innerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupJoin<TOuter,TInner,TKey,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  id: GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> GroupJoin<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: outer\n      type: System.Linq.IQueryable{TOuter}\n      description: Parameter description to be filled\n    - id: inner\n      type: System.Collections.Generic.IEnumerable{TInner}\n      description: Parameter description to be filled\n    - id: outerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n      description: Parameter description to be filled\n    - id: innerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.GroupJoin<TOuter,TInner,TKey,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  id: Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Intersect(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Intersect<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Intersect<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  id: Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Intersect<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Intersect<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  id: Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)\n  nameWithType: Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)\n  fullName: System.Linq.Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,TInner,TResult>> resultSelector);\n    parameters:\n    - id: outer\n      type: System.Linq.IQueryable{TOuter}\n      description: Parameter description to be filled\n    - id: inner\n      type: System.Collections.Generic.IEnumerable{TInner}\n      description: Parameter description to be filled\n    - id: outerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n      description: Parameter description to be filled\n    - id: innerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,TInner,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Join<TOuter,TInner,TKey,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  id: Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> Join<TOuter,TInner,TKey,TResult> (this System.Linq.IQueryable<TOuter> outer, System.Collections.Generic.IEnumerable<TInner> inner, System.Linq.Expressions.Expression<Func<TOuter,TKey>> outerKeySelector, System.Linq.Expressions.Expression<Func<TInner,TKey>> innerKeySelector, System.Linq.Expressions.Expression<Func<TOuter,TInner,TResult>> resultSelector, System.Collections.Generic.IEqualityComparer<TKey> comparer);\n    parameters:\n    - id: outer\n      type: System.Linq.IQueryable{TOuter}\n      description: Parameter description to be filled\n    - id: inner\n      type: System.Collections.Generic.IEnumerable{TInner}\n      description: Parameter description to be filled\n    - id: outerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n      description: Parameter description to be filled\n    - id: innerKeySelector\n      type: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TOuter,TInner,TResult}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Join<TOuter,TInner,TKey,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@)\n  id: Last``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Last(IQueryable<TSource>)\n  nameWithType: Queryable.Last(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Last(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Last<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Last<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Last<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Last<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@)\n  id: LastOrDefault``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: LastOrDefault(IQueryable<TSource>)\n  nameWithType: Queryable.LastOrDefault(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.LastOrDefault(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource LastOrDefault<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.LastOrDefault<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource LastOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.LastOrDefault<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@)\n  id: LongCount``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: LongCount(IQueryable<TSource>)\n  nameWithType: Queryable.LongCount(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.LongCount(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static long LongCount<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.LongCount<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static long LongCount<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.LongCount<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0}@)\n  id: Max``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Max(IQueryable<TSource>)\n  nameWithType: Queryable.Max(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Max(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Max<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  fullName: System.Linq.Queryable.Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TResult Max<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TResult>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: TResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0}@)\n  id: Min``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Min(IQueryable<TSource>)\n  nameWithType: Queryable.Min(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Min(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Min<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  fullName: System.Linq.Queryable.Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TResult Min<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TResult>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: TResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable@)\n  id: OfType``1(System.Linq.IQueryable@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: OfType(IQueryable)\n  nameWithType: Queryable.OfType(IQueryable)\n  fullName: System.Linq.Queryable.OfType(IQueryable)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> OfType<TResult> (this System.Linq.IQueryable source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> OrderBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.OrderBy<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  id: OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> OrderBy<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.OrderBy<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> OrderByDescending<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.OrderByDescending<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  id: OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> OrderByDescending<TSource,TKey> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.OrderByDescending<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0}@)\n  id: Reverse``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Reverse(IQueryable<TSource>)\n  nameWithType: Queryable.Reverse(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Reverse(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Reverse<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  id: Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)\n  nameWithType: Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)\n  fullName: System.Linq.Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> Select<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,TResult>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Select<TSource,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  fullName: System.Linq.Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> Select<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TResult>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Select<TSource,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  id: SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,System.Collections.Generic.IEnumerable<TResult>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Collections.Generic.IEnumerable{TResult}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SelectMany<TSource,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  id: SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,System.Collections.Generic.IEnumerable<TResult>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TResult}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SelectMany<TSource,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  id: SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,System.Collections.Generic.IEnumerable<TCollection>>> collectionSelector, System.Linq.Expressions.Expression<Func<TSource,TCollection,TResult>> resultSelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: collectionSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TCollection,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SelectMany<TSource,TCollection,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  id: SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> SelectMany<TSource,TCollection,TResult> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,System.Collections.Generic.IEnumerable<TCollection>>> collectionSelector, System.Linq.Expressions.Expression<Func<TSource,TCollection,TResult>> resultSelector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: collectionSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TCollection}}}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TCollection,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SelectMany<TSource,TCollection,TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  id: SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool SequenceEqual<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SequenceEqual<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  id: SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static bool SequenceEqual<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SequenceEqual<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@)\n  id: Single``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Single(IQueryable<TSource>)\n  nameWithType: Queryable.Single(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Single(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Single<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Single<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource Single<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Single<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@)\n  id: SingleOrDefault``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SingleOrDefault(IQueryable<TSource>)\n  nameWithType: Queryable.SingleOrDefault(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource SingleOrDefault<TSource> (this System.Linq.IQueryable<TSource> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SingleOrDefault<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static TSource SingleOrDefault<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: TSource\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SingleOrDefault<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0}@,System.Int32)\n  id: Skip``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Skip(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.Skip(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.Skip(IQueryable<TSource>,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Skip<TSource> (this System.Linq.IQueryable<TSource> source, int count);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> SkipWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SkipWhile<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  id: SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  fullName: System.Linq.Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> SkipWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.SkipWhile<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal}@)\n  id: Sum(System.Linq.IQueryable{System.Decimal}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Decimal>)\n  nameWithType: Queryable.Sum(IQueryable<Decimal>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Decimal>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static decimal Sum (this System.Linq.IQueryable<decimal> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Decimal}\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double}@)\n  id: Sum(System.Linq.IQueryable{System.Double}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Double>)\n  nameWithType: Queryable.Sum(IQueryable<Double>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Double>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Sum (this System.Linq.IQueryable<double> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Double}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32}@)\n  id: Sum(System.Linq.IQueryable{System.Int32}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Int32>)\n  nameWithType: Queryable.Sum(IQueryable<Int32>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Int32>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static int Sum (this System.Linq.IQueryable<int> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Int32}\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64}@)\n  id: Sum(System.Linq.IQueryable{System.Int64}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Int64>)\n  nameWithType: Queryable.Sum(IQueryable<Int64>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Int64>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static long Sum (this System.Linq.IQueryable<long> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  id: Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Decimal>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Decimal>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<decimal> Sum (this System.Linq.IQueryable<Nullable<decimal>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Decimal}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Decimal}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  id: Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Double>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Double>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Sum (this System.Linq.IQueryable<Nullable<double>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Double}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  id: Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int32>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Int32>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<int> Sum (this System.Linq.IQueryable<Nullable<int>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Int32}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  id: Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int64>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Int64>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<long> Sum (this System.Linq.IQueryable<Nullable<long>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Int64}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Int64}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  id: Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Single>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Single>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<float> Sum (this System.Linq.IQueryable<Nullable<float>> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Nullable{System.Single}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Single}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single}@)\n  id: Sum(System.Linq.IQueryable{System.Single}@)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<Single>)\n  nameWithType: Queryable.Sum(IQueryable<Single>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Single>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static float Sum (this System.Linq.IQueryable<float> source);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{System.Single}\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static decimal Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,decimal>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Decimal}}\n      description: Parameter description to be filled\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static double Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,double>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Double}}\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static int Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32}}\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static long Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,long>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int64}}\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<decimal> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<decimal>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Decimal}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Decimal}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<double> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<double>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Double}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Double}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<int> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<int>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int32}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<long> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<long>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int64}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Int64}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static Nullable<float> Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,Nullable<float>>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Single}}}\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Single}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  id: Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static float Sum<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,float>> selector);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Single}}\n      description: Parameter description to be filled\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Sum<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0}@,System.Int32)\n  id: Take``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Take(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.Take(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.Take(IQueryable<TSource>,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Take<TSource> (this System.Linq.IQueryable<TSource> source, int count);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> TakeWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.TakeWhile<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  id: TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  fullName: System.Linq.Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> TakeWhile<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.TakeWhile<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> ThenBy<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);\n    parameters:\n    - id: source\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.ThenBy<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  id: ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> ThenBy<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.ThenBy<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  id: ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> ThenByDescending<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector);\n    parameters:\n    - id: source\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.ThenByDescending<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  id: ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IOrderedQueryable<TSource> ThenByDescending<TSource,TKey> (this System.Linq.IOrderedQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,TKey>> keySelector, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: source\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n    - id: keySelector\n      type: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IOrderedQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.ThenByDescending<TSource,TKey>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  id: Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Union(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Union<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Union<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  id: Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Union<TSource> (this System.Linq.IQueryable<TSource> source1, System.Collections.Generic.IEnumerable<TSource> source2, System.Collections.Generic.IEqualityComparer<TSource> comparer);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Union<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  id: Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Where<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Where<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  id: Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  fullName: System.Linq.Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TSource> Where<TSource> (this System.Linq.IQueryable<TSource> source, System.Linq.Expressions.Expression<Func<TSource,int,bool>> predicate);\n    parameters:\n    - id: source\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TSource}\n      description: Parameter description to be filled\n  overload: System.Linq.Queryable.Where<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  id: Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  langs:\n  - csharp\n  name: Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)\n  nameWithType: Queryable.Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)\n  fullName: System.Linq.Queryable.Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq\n  syntax:\n    content: public static System.Linq.IQueryable<TResult> Zip<TFirst,TSecond,TResult> (this System.Linq.IQueryable<TFirst> source1, System.Collections.Generic.IEnumerable<TSecond> source2, System.Linq.Expressions.Expression<Func<TFirst,TSecond,TResult>> resultSelector);\n    parameters:\n    - id: source1\n      type: System.Linq.IQueryable{TFirst}\n      description: Parameter description to be filled\n    - id: source2\n      type: System.Collections.Generic.IEnumerable{TSecond}\n      description: Parameter description to be filled\n    - id: resultSelector\n      type: System.Linq.Expressions.Expression{System.Func{TFirst,TSecond,TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.IQueryable{TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Linq.Queryable.Aggregate``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``0,``0}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)\n  nameWithType: Queryable.Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)\n  fullName: System.Linq.Queryable.Aggregate(IQueryable<TSource>,Expression<Func<TSource,TSource,TSource>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TSource,TSource}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TSource,TSource>>\n  nameWithType: Expression<Func<TSource,TSource,TSource>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TSource,TSource>>\n- uid: System.Linq.Queryable.Aggregate``2(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  nameWithType: Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)\n  fullName: System.Linq.Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>)\n- uid: TAccumulate\n  parent: ''\n  isExternal: true\n  name: TAccumulate\n  nameWithType: TAccumulate\n  fullName: TAccumulate\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: TAccumulate\n  parent: ''\n  isExternal: true\n  name: TAccumulate\n  nameWithType: TAccumulate\n  fullName: TAccumulate\n- uid: System.Linq.Expressions.Expression{System.Func{TAccumulate,TSource,TAccumulate}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TAccumulate,TSource,TAccumulate>>\n  nameWithType: Expression<Func<TAccumulate,TSource,TAccumulate>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TAccumulate,TSource,TAccumulate>>\n- uid: System.Linq.Queryable.Aggregate``3(System.Linq.IQueryable{``0}@,``1,System.Linq.Expressions.Expression{System.Func{``1,``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)\n  nameWithType: Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)\n  fullName: System.Linq.Queryable.Aggregate(IQueryable<TSource>,TAccumulate,Expression<Func<TAccumulate,TSource,TAccumulate>>,Expression<Func<TAccumulate,TResult>>)\n- uid: TResult\n  parent: ''\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: TAccumulate\n  parent: ''\n  isExternal: true\n  name: TAccumulate\n  nameWithType: TAccumulate\n  fullName: TAccumulate\n- uid: System.Linq.Expressions.Expression{System.Func{TAccumulate,TSource,TAccumulate}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TAccumulate,TSource,TAccumulate>>\n  nameWithType: Expression<Func<TAccumulate,TSource,TAccumulate>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TAccumulate,TSource,TAccumulate>>\n- uid: System.Linq.Expressions.Expression{System.Func{TAccumulate,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TAccumulate,TResult>>\n  nameWithType: Expression<Func<TAccumulate,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TAccumulate,TResult>>\n- uid: System.Linq.Queryable.All``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.All(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Any(IQueryable<TSource>)\n  nameWithType: Queryable.Any(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Any(IQueryable<TSource>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Any``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Any(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: System.Linq.Queryable.AsQueryable(IEnumerable)\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable<TElement>)\n  nameWithType: Queryable.AsQueryable(IEnumerable<TElement>)\n  fullName: System.Linq.Queryable.AsQueryable(IEnumerable<TElement>)\n- uid: System.Linq.IQueryable{TElement}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TElement>\n  nameWithType: IQueryable<TElement>\n  fullName: System.Linq.IQueryable<TElement>\n- uid: System.Collections.Generic.IEnumerable{TElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TElement>\n  nameWithType: IEnumerable<TElement>\n  fullName: System.Collections.Generic.IEnumerable<TElement>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Decimal}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Decimal>)\n  nameWithType: Queryable.Average(IQueryable<Decimal>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Decimal>)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Linq.IQueryable{System.Decimal}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Decimal>\n  nameWithType: IQueryable<Decimal>\n  fullName: System.Linq.IQueryable<System.Decimal>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Double}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Double>)\n  nameWithType: Queryable.Average(IQueryable<Double>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Double>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{System.Double}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Double>\n  nameWithType: IQueryable<Double>\n  fullName: System.Linq.IQueryable<System.Double>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int32}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Int32>)\n  nameWithType: Queryable.Average(IQueryable<Int32>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Int32>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{System.Int32}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Int32>\n  nameWithType: IQueryable<Int32>\n  fullName: System.Linq.IQueryable<System.Int32>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Int64}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Int64>)\n  nameWithType: Queryable.Average(IQueryable<Int64>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Int64>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{System.Int64}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Int64>\n  nameWithType: IQueryable<Int64>\n  fullName: System.Linq.IQueryable<System.Int64>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Decimal>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Decimal>>)\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: Nullable<Decimal>\n  nameWithType: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n- uid: System.Linq.IQueryable{System.Nullable{System.Decimal}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Decimal>>\n  nameWithType: IQueryable<Nullable<Decimal>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Decimal>>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Double>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Double>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{System.Nullable{System.Double}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Double>>\n  nameWithType: IQueryable<Nullable<Double>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Double>>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int32>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Int32>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{System.Nullable{System.Int32}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Int32>>\n  nameWithType: IQueryable<Nullable<Int32>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Int32>>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Int64>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Int64>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{System.Nullable{System.Int64}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Int64>>\n  nameWithType: IQueryable<Nullable<Int64>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Int64>>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Average(IQueryable<Nullable<Single>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Nullable<Single>>)\n- uid: System.Nullable{System.Single}\n  parent: System\n  isExternal: false\n  name: Nullable<Single>\n  nameWithType: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n- uid: System.Linq.IQueryable{System.Nullable{System.Single}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Single>>\n  nameWithType: IQueryable<Nullable<Single>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Single>>\n- uid: System.Linq.Queryable.Average(System.Linq.IQueryable{System.Single}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<Single>)\n  nameWithType: Queryable.Average(IQueryable<Single>)\n  fullName: System.Linq.Queryable.Average(IQueryable<Single>)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Linq.IQueryable{System.Single}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Single>\n  nameWithType: IQueryable<Single>\n  fullName: System.Linq.IQueryable<System.Single>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Decimal}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Decimal>>\n  nameWithType: Expression<Func<TSource,Decimal>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Decimal>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Double}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Double>>\n  nameWithType: Expression<Func<TSource,Double>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Double>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32>>\n  nameWithType: Expression<Func<TSource,Int32>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int64}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int64>>\n  nameWithType: Expression<Func<TSource,Int64>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int64>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: Nullable<Decimal>\n  nameWithType: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Decimal}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Decimal>>>\n  nameWithType: Expression<Func<TSource,Nullable<Decimal>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Decimal>>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Double}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Double>>>\n  nameWithType: Expression<Func<TSource,Nullable<Double>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Double>>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int32}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Int32>>>\n  nameWithType: Expression<Func<TSource,Nullable<Int32>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Int32>>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int64}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Int64>>>\n  nameWithType: Expression<Func<TSource,Nullable<Int64>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Int64>>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n- uid: System.Nullable{System.Single}\n  parent: System\n  isExternal: false\n  name: Nullable<Single>\n  nameWithType: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Single}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Single>>>\n  nameWithType: Expression<Func<TSource,Nullable<Single>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Single>>>\n- uid: System.Linq.Queryable.Average``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  fullName: System.Linq.Queryable.Average(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Single}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Single>>\n  nameWithType: Expression<Func<TSource,Single>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Single>>\n- uid: System.Linq.Queryable.Cast``1(System.Linq.IQueryable@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Cast(IQueryable)\n  nameWithType: Queryable.Cast(IQueryable)\n  fullName: System.Linq.Queryable.Cast(IQueryable)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Linq.Queryable.Concat``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Concat(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Concat(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Concat(IQueryable<TSource>,IEnumerable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Contains(IQueryable<TSource>,TSource)\n  nameWithType: Queryable.Contains(IQueryable<TSource>,TSource)\n  fullName: System.Linq.Queryable.Contains(IQueryable<TSource>,TSource)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.Queryable.Contains``1(System.Linq.IQueryable{``0}@,``0,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Contains(IQueryable<TSource>,TSource,IEqualityComparer<TSource>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Collections.Generic.IEqualityComparer{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TSource>\n  nameWithType: IEqualityComparer<TSource>\n  fullName: System.Collections.Generic.IEqualityComparer<TSource>\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Count(IQueryable<TSource>)\n  nameWithType: Queryable.Count(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Count(IQueryable<TSource>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Count``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Count(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: DefaultIfEmpty(IQueryable<TSource>)\n  nameWithType: Queryable.DefaultIfEmpty(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.DefaultIfEmpty``1(System.Linq.IQueryable{``0}@,``0)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: DefaultIfEmpty(IQueryable<TSource>,TSource)\n  nameWithType: Queryable.DefaultIfEmpty(IQueryable<TSource>,TSource)\n  fullName: System.Linq.Queryable.DefaultIfEmpty(IQueryable<TSource>,TSource)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Distinct(IQueryable<TSource>)\n  nameWithType: Queryable.Distinct(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Distinct(IQueryable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Distinct``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Distinct(IQueryable<TSource>,IEqualityComparer<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEqualityComparer{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TSource>\n  nameWithType: IEqualityComparer<TSource>\n  fullName: System.Collections.Generic.IEqualityComparer<TSource>\n- uid: System.Linq.Queryable.ElementAt``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ElementAt(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.ElementAt(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.ElementAt(IQueryable<TSource>,Int32)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.Queryable.ElementAtOrDefault``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ElementAtOrDefault(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.ElementAtOrDefault(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.ElementAtOrDefault(IQueryable<TSource>,Int32)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Except(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Linq.Queryable.Except``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Except(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Collections.Generic.IEqualityComparer{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TSource>\n  nameWithType: IEqualityComparer<TSource>\n  fullName: System.Collections.Generic.IEqualityComparer<TSource>\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: First(IQueryable<TSource>)\n  nameWithType: Queryable.First(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.First(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.First``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.First(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: FirstOrDefault(IQueryable<TSource>)\n  nameWithType: Queryable.FirstOrDefault(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.FirstOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.FirstOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n- uid: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TSource}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<IGrouping<TKey,TSource>>\n  nameWithType: IQueryable<IGrouping<TKey,TSource>>\n  fullName: System.Linq.IQueryable<System.Linq.IGrouping<TKey,TSource>>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Queryable.GroupBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IEqualityComparer<TKey>)\n- uid: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TSource}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<IGrouping<TKey,TSource>>\n  nameWithType: IQueryable<IGrouping<TKey,TSource>>\n  fullName: System.Linq.IQueryable<System.Linq.IGrouping<TKey,TSource>>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>)\n- uid: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TElement}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<IGrouping<TKey,TElement>>\n  nameWithType: IQueryable<IGrouping<TKey,TElement>>\n  fullName: System.Linq.IQueryable<System.Linq.IGrouping<TKey,TElement>>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TElement>>\n  nameWithType: Expression<Func<TSource,TElement>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TElement>>\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,IEqualityComparer<TKey>)\n- uid: System.Linq.IQueryable{System.Linq.IGrouping{TKey,TElement}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<IGrouping<TKey,TElement>>\n  nameWithType: IQueryable<IGrouping<TKey,TElement>>\n  fullName: System.Linq.IQueryable<System.Linq.IGrouping<TKey,TElement>>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TElement>>\n  nameWithType: Expression<Func<TSource,TElement>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TElement>>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TKey,IEnumerable<TSource>,TResult>>\n  nameWithType: Expression<Func<TKey,IEnumerable<TSource>,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>>\n- uid: System.Linq.Queryable.GroupBy``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TKey,IEnumerable<TSource>,TResult>>,IEqualityComparer<TKey>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TSource},TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TKey,IEnumerable<TSource>,TResult>>\n  nameWithType: Expression<Func<TKey,IEnumerable<TSource>,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TKey,System.Collections.Generic.IEnumerable<TSource>,TResult>>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TElement>>\n  nameWithType: Expression<Func<TSource,TElement>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TElement>>\n- uid: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TKey,IEnumerable<TElement>,TResult>>\n  nameWithType: Expression<Func<TKey,IEnumerable<TElement>,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>>\n- uid: System.Linq.Queryable.GroupBy``4(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3}},System.Collections.Generic.IEqualityComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,Expression<Func<TSource,TElement>>,Expression<Func<TKey,IEnumerable<TElement>,TResult>>,IEqualityComparer<TKey>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TElement}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TElement>>\n  nameWithType: Expression<Func<TSource,TElement>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TElement>>\n- uid: System.Linq.Expressions.Expression{System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TKey,IEnumerable<TElement>,TResult>>\n  nameWithType: Expression<Func<TKey,IEnumerable<TElement>,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  nameWithType: Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n  fullName: System.Linq.Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TOuter}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TOuter>\n  nameWithType: IQueryable<TOuter>\n  fullName: System.Linq.IQueryable<TOuter>\n- uid: System.Collections.Generic.IEnumerable{TInner}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TInner>\n  nameWithType: IEnumerable<TInner>\n  fullName: System.Collections.Generic.IEnumerable<TInner>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,TKey>>\n  nameWithType: Expression<Func<TOuter,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TInner,TKey>>\n  nameWithType: Expression<Func<TInner,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TInner,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,IEnumerable<TInner>,TResult>>\n  nameWithType: Expression<Func<TOuter,IEnumerable<TInner>,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>>\n- uid: System.Linq.Queryable.GroupJoin``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.GroupJoin(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,IEnumerable<TInner>,TResult>>,IEqualityComparer<TKey>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TOuter}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TOuter>\n  nameWithType: IQueryable<TOuter>\n  fullName: System.Linq.IQueryable<TOuter>\n- uid: System.Collections.Generic.IEnumerable{TInner}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TInner>\n  nameWithType: IEnumerable<TInner>\n  fullName: System.Collections.Generic.IEnumerable<TInner>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,TKey>>\n  nameWithType: Expression<Func<TOuter,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TInner,TKey>>\n  nameWithType: Expression<Func<TInner,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TInner,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,System.Collections.Generic.IEnumerable{TInner},TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,IEnumerable<TInner>,TResult>>\n  nameWithType: Expression<Func<TOuter,IEnumerable<TInner>,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,System.Collections.Generic.IEnumerable<TInner>,TResult>>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Intersect(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Linq.Queryable.Intersect``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Intersect(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Collections.Generic.IEqualityComparer{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TSource>\n  nameWithType: IEqualityComparer<TSource>\n  fullName: System.Collections.Generic.IEqualityComparer<TSource>\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)\n  nameWithType: Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)\n  fullName: System.Linq.Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TOuter}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TOuter>\n  nameWithType: IQueryable<TOuter>\n  fullName: System.Linq.IQueryable<TOuter>\n- uid: System.Collections.Generic.IEnumerable{TInner}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TInner>\n  nameWithType: IEnumerable<TInner>\n  fullName: System.Collections.Generic.IEnumerable<TInner>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,TKey>>\n  nameWithType: Expression<Func<TOuter,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TInner,TKey>>\n  nameWithType: Expression<Func<TInner,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TInner,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,TInner,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,TInner,TResult>>\n  nameWithType: Expression<Func<TOuter,TInner,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,TInner,TResult>>\n- uid: System.Linq.Queryable.Join``4(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``2}},System.Linq.Expressions.Expression{System.Func{``1,``2}},System.Linq.Expressions.Expression{System.Func{``0,``1,``3}},System.Collections.Generic.IEqualityComparer{``2})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)\n  nameWithType: Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)\n  fullName: System.Linq.Queryable.Join(IQueryable<TOuter>,IEnumerable<TInner>,Expression<Func<TOuter,TKey>>,Expression<Func<TInner,TKey>>,Expression<Func<TOuter,TInner,TResult>>,IEqualityComparer<TKey>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TOuter}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TOuter>\n  nameWithType: IQueryable<TOuter>\n  fullName: System.Linq.IQueryable<TOuter>\n- uid: System.Collections.Generic.IEnumerable{TInner}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TInner>\n  nameWithType: IEnumerable<TInner>\n  fullName: System.Collections.Generic.IEnumerable<TInner>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,TKey>>\n  nameWithType: Expression<Func<TOuter,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TInner,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TInner,TKey>>\n  nameWithType: Expression<Func<TInner,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TInner,TKey>>\n- uid: System.Linq.Expressions.Expression{System.Func{TOuter,TInner,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TOuter,TInner,TResult>>\n  nameWithType: Expression<Func<TOuter,TInner,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TOuter,TInner,TResult>>\n- uid: System.Collections.Generic.IEqualityComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TKey>\n  nameWithType: IEqualityComparer<TKey>\n  fullName: System.Collections.Generic.IEqualityComparer<TKey>\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Last(IQueryable<TSource>)\n  nameWithType: Queryable.Last(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Last(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Last``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Last(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LastOrDefault(IQueryable<TSource>)\n  nameWithType: Queryable.LastOrDefault(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.LastOrDefault(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.LastOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.LastOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LongCount(IQueryable<TSource>)\n  nameWithType: Queryable.LongCount(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.LongCount(IQueryable<TSource>)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.LongCount``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.LongCount(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.Max``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Max(IQueryable<TSource>)\n  nameWithType: Queryable.Max(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Max(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Max``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  fullName: System.Linq.Queryable.Max(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n- uid: TResult\n  parent: ''\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TResult>>\n  nameWithType: Expression<Func<TSource,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TResult>>\n- uid: System.Linq.Queryable.Min``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Min(IQueryable<TSource>)\n  nameWithType: Queryable.Min(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Min(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Min``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  fullName: System.Linq.Queryable.Min(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n- uid: TResult\n  parent: ''\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TResult>>\n  nameWithType: Expression<Func<TSource,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TResult>>\n- uid: System.Linq.Queryable.OfType``1(System.Linq.IQueryable@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OfType(IQueryable)\n  nameWithType: Queryable.OfType(IQueryable)\n  fullName: System.Linq.Queryable.OfType(IQueryable)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable\n  nameWithType: IQueryable\n  fullName: System.Linq.IQueryable\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Queryable.OrderBy``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.OrderBy(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Queryable.OrderByDescending``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.OrderByDescending(IQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n- uid: System.Linq.Queryable.Reverse``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Reverse(IQueryable<TSource>)\n  nameWithType: Queryable.Reverse(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Reverse(IQueryable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)\n  nameWithType: Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)\n  fullName: System.Linq.Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,Int32,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32,TResult>>\n  nameWithType: Expression<Func<TSource,Int32,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32,TResult>>\n- uid: System.Linq.Queryable.Select``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  nameWithType: Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n  fullName: System.Linq.Queryable.Select(IQueryable<TSource>,Expression<Func<TSource,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TResult>>\n  nameWithType: Expression<Func<TSource,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TResult>>\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TResult>>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Collections.Generic.IEnumerable{TResult}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,IEnumerable<TResult>>>\n  nameWithType: Expression<Func<TSource,IEnumerable<TResult>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Collections.Generic.IEnumerable<TResult>>>\n- uid: System.Linq.Queryable.SelectMany``2(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TResult>>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TResult}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32,IEnumerable<TResult>>>\n  nameWithType: Expression<Func<TSource,Int32,IEnumerable<TResult>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32,System.Collections.Generic.IEnumerable<TResult>>>\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Collections.Generic.IEnumerable{TCollection}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,IEnumerable<TCollection>>>\n  nameWithType: Expression<Func<TSource,IEnumerable<TCollection>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Collections.Generic.IEnumerable<TCollection>>>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TCollection,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TCollection,TResult>>\n  nameWithType: Expression<Func<TSource,TCollection,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TCollection,TResult>>\n- uid: System.Linq.Queryable.SelectMany``3(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}}},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  nameWithType: Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n  fullName: System.Linq.Queryable.SelectMany(IQueryable<TSource>,Expression<Func<TSource,Int32,IEnumerable<TCollection>>>,Expression<Func<TSource,TCollection,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Collections.Generic.IEnumerable{TCollection}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32,IEnumerable<TCollection>>>\n  nameWithType: Expression<Func<TSource,Int32,IEnumerable<TCollection>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32,System.Collections.Generic.IEnumerable<TCollection>>>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TCollection,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TCollection,TResult>>\n  nameWithType: Expression<Func<TSource,TCollection,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TCollection,TResult>>\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Linq.Queryable.SequenceEqual``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.SequenceEqual(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Collections.Generic.IEqualityComparer{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TSource>\n  nameWithType: IEqualityComparer<TSource>\n  fullName: System.Collections.Generic.IEqualityComparer<TSource>\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Single(IQueryable<TSource>)\n  nameWithType: Queryable.Single(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.Single(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.Single``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Single(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SingleOrDefault(IQueryable<TSource>)\n  nameWithType: Queryable.SingleOrDefault(IQueryable<TSource>)\n  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable<TSource>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Queryable.SingleOrDefault``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.SingleOrDefault(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: TSource\n  parent: ''\n  isExternal: true\n  name: TSource\n  nameWithType: TSource\n  fullName: TSource\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.Skip``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Skip(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.Skip(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.Skip(IQueryable<TSource>,Int32)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.SkipWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  fullName: System.Linq.Queryable.SkipWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32,Boolean>>\n  nameWithType: Expression<Func<TSource,Int32,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32,System.Boolean>>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Decimal}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Decimal>)\n  nameWithType: Queryable.Sum(IQueryable<Decimal>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Decimal>)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Linq.IQueryable{System.Decimal}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Decimal>\n  nameWithType: IQueryable<Decimal>\n  fullName: System.Linq.IQueryable<System.Decimal>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Double}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Double>)\n  nameWithType: Queryable.Sum(IQueryable<Double>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Double>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{System.Double}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Double>\n  nameWithType: IQueryable<Double>\n  fullName: System.Linq.IQueryable<System.Double>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int32}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Int32>)\n  nameWithType: Queryable.Sum(IQueryable<Int32>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Int32>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.IQueryable{System.Int32}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Int32>\n  nameWithType: IQueryable<Int32>\n  fullName: System.Linq.IQueryable<System.Int32>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Int64}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Int64>)\n  nameWithType: Queryable.Sum(IQueryable<Int64>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Int64>)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Linq.IQueryable{System.Int64}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Int64>\n  nameWithType: IQueryable<Int64>\n  fullName: System.Linq.IQueryable<System.Int64>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Decimal}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Decimal>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Decimal>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Decimal>>)\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: Nullable<Decimal>\n  nameWithType: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n- uid: System.Linq.IQueryable{System.Nullable{System.Decimal}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Decimal>>\n  nameWithType: IQueryable<Nullable<Decimal>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Decimal>>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Double}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Double>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Double>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Double>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{System.Nullable{System.Double}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Double>>\n  nameWithType: IQueryable<Nullable<Double>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Double>>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int32}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Int32>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int32>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Int32>>)\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Linq.IQueryable{System.Nullable{System.Int32}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Int32>>\n  nameWithType: IQueryable<Nullable<Int32>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Int32>>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Int64}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Int64>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Int64>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Int64>>)\n- uid: System.Nullable{System.Int64}\n  parent: System\n  isExternal: false\n  name: Nullable<Int64>\n  nameWithType: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n- uid: System.Linq.IQueryable{System.Nullable{System.Int64}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Int64>>\n  nameWithType: IQueryable<Nullable<Int64>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Int64>>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Nullable{System.Single}}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Nullable<Single>>)\n  nameWithType: Queryable.Sum(IQueryable<Nullable<Single>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Nullable<Single>>)\n- uid: System.Nullable{System.Single}\n  parent: System\n  isExternal: false\n  name: Nullable<Single>\n  nameWithType: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n- uid: System.Linq.IQueryable{System.Nullable{System.Single}}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Nullable<Single>>\n  nameWithType: IQueryable<Nullable<Single>>\n  fullName: System.Linq.IQueryable<System.Nullable<System.Single>>\n- uid: System.Linq.Queryable.Sum(System.Linq.IQueryable{System.Single}@)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<Single>)\n  nameWithType: Queryable.Sum(IQueryable<Single>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<Single>)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Linq.IQueryable{System.Single}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<Single>\n  nameWithType: IQueryable<Single>\n  fullName: System.Linq.IQueryable<System.Single>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Decimal>>)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Decimal}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Decimal>>\n  nameWithType: Expression<Func<TSource,Decimal>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Decimal>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Double}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Double>>)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Double}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Double>>\n  nameWithType: Expression<Func<TSource,Double>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Double>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int32>>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32>>\n  nameWithType: Expression<Func<TSource,Int32>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int64}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Int64>>)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int64}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int64>>\n  nameWithType: Expression<Func<TSource,Int64>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int64>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Decimal>>>)\n- uid: System.Nullable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: Nullable<Decimal>\n  nameWithType: Nullable<Decimal>\n  fullName: System.Nullable<System.Decimal>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Decimal}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Decimal>>>\n  nameWithType: Expression<Func<TSource,Nullable<Decimal>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Decimal>>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Double>>>)\n- uid: System.Nullable{System.Double}\n  parent: System\n  isExternal: false\n  name: Nullable<Double>\n  nameWithType: Nullable<Double>\n  fullName: System.Nullable<System.Double>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Double}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Double>>>\n  nameWithType: Expression<Func<TSource,Nullable<Double>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Double>>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int32>>>)\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int32}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Int32>>>\n  nameWithType: Expression<Func<TSource,Nullable<Int32>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Int32>>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Int64>>>)\n- uid: System.Nullable{System.Int64}\n  parent: System\n  isExternal: false\n  name: Nullable<Int64>\n  nameWithType: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Int64}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Int64>>>\n  nameWithType: Expression<Func<TSource,Nullable<Int64>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Int64>>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Nullable<Single>>>)\n- uid: System.Nullable{System.Single}\n  parent: System\n  isExternal: false\n  name: Nullable<Single>\n  nameWithType: Nullable<Single>\n  fullName: System.Nullable<System.Single>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Nullable{System.Single}}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Nullable<Single>>>\n  nameWithType: Expression<Func<TSource,Nullable<Single>>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Nullable<System.Single>>>\n- uid: System.Linq.Queryable.Sum``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Single}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  nameWithType: Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n  fullName: System.Linq.Queryable.Sum(IQueryable<TSource>,Expression<Func<TSource,Single>>)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Single}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Single>>\n  nameWithType: Expression<Func<TSource,Single>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Single>>\n- uid: System.Linq.Queryable.Take``1(System.Linq.IQueryable{``0}@,System.Int32)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Take(IQueryable<TSource>,Int32)\n  nameWithType: Queryable.Take(IQueryable<TSource>,Int32)\n  fullName: System.Linq.Queryable.Take(IQueryable<TSource>,Int32)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.TakeWhile``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  fullName: System.Linq.Queryable.TakeWhile(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32,Boolean>>\n  nameWithType: Expression<Func<TSource,Int32,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32,System.Boolean>>\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Queryable.ThenBy``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.ThenBy(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  nameWithType: Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Linq.Queryable.ThenByDescending``2(System.Linq.IOrderedQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IComparer{``1})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  nameWithType: Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n  fullName: System.Linq.Queryable.ThenByDescending(IOrderedQueryable<TSource>,Expression<Func<TSource,TKey>>,IComparer<TKey>)\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.IOrderedQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IOrderedQueryable<TSource>\n  nameWithType: IOrderedQueryable<TSource>\n  fullName: System.Linq.IOrderedQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,TKey}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,TKey>>\n  nameWithType: Expression<Func<TSource,TKey>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,TKey>>\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Union(IQueryable<TSource>,IEnumerable<TSource>)\n  nameWithType: Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>)\n  fullName: System.Linq.Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Linq.Queryable.Union``1(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  nameWithType: Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n  fullName: System.Linq.Queryable.Union(IQueryable<TSource>,IEnumerable<TSource>,IEqualityComparer<TSource>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Collections.Generic.IEqualityComparer{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<TSource>\n  nameWithType: IEqualityComparer<TSource>\n  fullName: System.Collections.Generic.IEqualityComparer<TSource>\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  nameWithType: Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n  fullName: System.Linq.Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Boolean>>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Boolean>>\n  nameWithType: Expression<Func<TSource,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Boolean>>\n- uid: System.Linq.Queryable.Where``1(System.Linq.IQueryable{``0}@,System.Linq.Expressions.Expression{System.Func{``0,System.Int32,System.Boolean}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  nameWithType: Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n  fullName: System.Linq.Queryable.Where(IQueryable<TSource>,Expression<Func<TSource,Int32,Boolean>>)\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.IQueryable{TSource}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TSource>\n  nameWithType: IQueryable<TSource>\n  fullName: System.Linq.IQueryable<TSource>\n- uid: System.Linq.Expressions.Expression{System.Func{TSource,System.Int32,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TSource,Int32,Boolean>>\n  nameWithType: Expression<Func<TSource,Int32,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TSource,System.Int32,System.Boolean>>\n- uid: System.Linq.Queryable.Zip``3(System.Linq.IQueryable{``0}@,System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``0,``1,``2}})\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)\n  nameWithType: Queryable.Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)\n  fullName: System.Linq.Queryable.Zip(IQueryable<TFirst>,IEnumerable<TSecond>,Expression<Func<TFirst,TSecond,TResult>>)\n- uid: System.Linq.IQueryable{TResult}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TResult>\n  nameWithType: IQueryable<TResult>\n  fullName: System.Linq.IQueryable<TResult>\n- uid: System.Linq.IQueryable{TFirst}\n  parent: System.Linq\n  isExternal: false\n  name: IQueryable<TFirst>\n  nameWithType: IQueryable<TFirst>\n  fullName: System.Linq.IQueryable<TFirst>\n- uid: System.Collections.Generic.IEnumerable{TSecond}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSecond>\n  nameWithType: IEnumerable<TSecond>\n  fullName: System.Collections.Generic.IEnumerable<TSecond>\n- uid: System.Linq.Expressions.Expression{System.Func{TFirst,TSecond,TResult}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<TFirst,TSecond,TResult>>\n  nameWithType: Expression<Func<TFirst,TSecond,TResult>>\n  fullName: System.Linq.Expressions.Expression<System.Func<TFirst,TSecond,TResult>>\n- uid: System.Linq.Queryable.Any<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Average*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Average<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Contains<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Count<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.DefaultIfEmpty<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Distinct<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Except<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.First<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.FirstOrDefault<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.GroupBy<TSource,TKey>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.GroupBy<TSource,TKey,TElement>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.GroupBy<TSource,TKey,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.GroupBy<TSource,TKey,TElement,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.GroupJoin<TOuter,TInner,TKey,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Intersect<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Join<TOuter,TInner,TKey,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Last<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.LastOrDefault<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.LongCount<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.OrderBy<TSource,TKey>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.OrderByDescending<TSource,TKey>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Select<TSource,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.SelectMany<TSource,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.SelectMany<TSource,TCollection,TResult>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.SequenceEqual<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Single<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.SingleOrDefault<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.SkipWhile<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Sum*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Sum<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.TakeWhile<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.ThenBy<TSource,TKey>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.ThenByDescending<TSource,TKey>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Union<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n- uid: System.Linq.Queryable.Where<TSource>*\n  parent: System.Linq.Queryable\n  isExternal: false\n  nameWithType: Queryable.\n"}