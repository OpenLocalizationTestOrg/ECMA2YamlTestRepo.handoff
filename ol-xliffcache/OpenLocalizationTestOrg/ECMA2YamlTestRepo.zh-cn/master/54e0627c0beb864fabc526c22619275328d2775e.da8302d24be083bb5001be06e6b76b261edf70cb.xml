{"nodes":[{"pos":[512,529],"content":"Lazy<T,TMetadata>","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy&lt;T,TMetadata&gt;","pos":[0,17],"source":"Lazy<T,TMetadata>"}]},{"pos":[732,766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[806,840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1080,1095],"content":"Lazy(TMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy(TMetadata)","pos":[0,15]}]},{"pos":[1424,1458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1657,1680],"content":"Lazy(Func<ph id=\"ph1\">&lt;T&gt;</ph>,TMetadata)","needQuote":true,"needEscape":true,"source":"Lazy(Func<T>,TMetadata)"},{"pos":[2056,2090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2151,2185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2382,2405],"content":"Lazy(TMetadata,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy(TMetadata,Boolean)","pos":[0,23]}]},{"pos":[2769,2803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2873,2907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3154,3190],"content":"Lazy(TMetadata,LazyThreadSafetyMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy(TMetadata,LazyThreadSafetyMode)","pos":[0,36]}]},{"pos":[3605,3639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3724,3758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3987,4018],"content":"Lazy(Func<ph id=\"ph1\">&lt;T&gt;</ph>,TMetadata,Boolean)","needQuote":true,"needEscape":true,"source":"Lazy(Func<T>,TMetadata,Boolean)"},{"pos":[4429,4463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4524,4558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4628,4662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4941,4985],"content":"Lazy(Func<ph id=\"ph1\">&lt;T&gt;</ph>,TMetadata,LazyThreadSafetyMode)","needQuote":true,"needEscape":true,"source":"Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)"},{"pos":[5447,5481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5542,5576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5661,5695],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5842,5850],"content":"Metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata","pos":[0,8]}]},{"pos":[6140,6174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6285,6299],"content":"System.Lazy<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"System.Lazy<T>"},{"pos":[6391,6406],"content":"Lazy(TMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy(TMetadata)","pos":[0,15]}]},{"pos":[6567,6576],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]},{"pos":[6732,6755],"content":"Lazy(Func<ph id=\"ph1\">&lt;T&gt;</ph>,TMetadata)","needQuote":true,"needEscape":true,"source":"Lazy(Func<T>,TMetadata)"},{"pos":[6941,6948],"content":"Func<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<T>"},{"pos":[7057,7066],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]},{"pos":[7221,7244],"content":"Lazy(TMetadata,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy(TMetadata,Boolean)","pos":[0,23]}]},{"pos":[7421,7430],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]},{"pos":[7546,7553],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7736,7772],"content":"Lazy(TMetadata,LazyThreadSafetyMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Lazy(TMetadata,LazyThreadSafetyMode)","pos":[0,36]}]},{"pos":[7975,7984],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]},{"pos":[8132,8152],"content":"LazyThreadSafetyMode","needQuote":true,"needEscape":true,"nodes":[{"content":"LazyThreadSafetyMode","pos":[0,20]}]},{"pos":[8362,8393],"content":"Lazy(Func<ph id=\"ph1\">&lt;T&gt;</ph>,TMetadata,Boolean)","needQuote":true,"needEscape":true,"source":"Lazy(Func<T>,TMetadata,Boolean)"},{"pos":[8595,8602],"content":"Func<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<T>"},{"pos":[8711,8720],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]},{"pos":[8836,8843],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9042,9086],"content":"Lazy(Func<ph id=\"ph1\">&lt;T&gt;</ph>,TMetadata,LazyThreadSafetyMode)","needQuote":true,"needEscape":true,"source":"Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)"},{"pos":[9314,9321],"content":"Func<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<T>"},{"pos":[9430,9439],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]},{"pos":[9587,9607],"content":"LazyThreadSafetyMode","needQuote":true,"needEscape":true,"nodes":[{"content":"LazyThreadSafetyMode","pos":[0,20]}]},{"pos":[9777,9785],"content":"Metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata","pos":[0,8]}]},{"pos":[9932,9941],"content":"TMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"TMetadata","pos":[0,9]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Lazy`2\n  id: Lazy`2\n  children:\n  - System.Lazy`2.#ctor(`0Metadata)\n  - System.Lazy`2.#ctor(System.Func{`0},`0Metadata)\n  - System.Lazy`2.#ctor(`0Metadata,System.Boolean)\n  - System.Lazy`2.#ctor(`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)\n  - System.Lazy`2.#ctor(System.Func{`0},`0Metadata,System.Boolean)\n  - System.Lazy`2.#ctor(System.Func{`0},`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)\n  - System.Lazy`2.Metadata\n  langs:\n  - csharp\n  name: Lazy<T,TMetadata>\n  nameWithType: Lazy<T,TMetadata>\n  fullName: System.Lazy<T,TMetadata>\n  type: Class\n  syntax:\n    content: 'public class Lazy<T,TMetadata> : Lazy<T>'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n    - id: TMetadata\n      description: Parameter description to be filled\n  inheritance:\n  - System.Lazy`1\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.#ctor(`0Metadata)\n  id: '#ctor(`0Metadata)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy(TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy(TMetadata)\n  fullName: System.Lazy<T,TMetadata>.Lazy(TMetadata)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public Lazy (TMetadata metadata);\n    parameters:\n    - id: metadata\n      type: TMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.#ctor(System.Func{`0},`0Metadata)\n  id: '#ctor(System.Func{`0},`0Metadata)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy(Func<T>,TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata)\n  fullName: System.Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public Lazy (Func<T> valueFactory, TMetadata metadata);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: Parameter description to be filled\n    - id: metadata\n      type: TMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.#ctor(`0Metadata,System.Boolean)\n  id: '#ctor(`0Metadata,System.Boolean)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy(TMetadata,Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy(TMetadata,Boolean)\n  fullName: System.Lazy<T,TMetadata>.Lazy(TMetadata,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public Lazy (TMetadata metadata, bool isThreadSafe);\n    parameters:\n    - id: metadata\n      type: TMetadata\n      description: Parameter description to be filled\n    - id: isThreadSafe\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.#ctor(`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)\n  id: '#ctor(`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy(TMetadata,LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy(TMetadata,LazyThreadSafetyMode)\n  fullName: System.Lazy<T,TMetadata>.Lazy(TMetadata,LazyThreadSafetyMode)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public Lazy (TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);\n    parameters:\n    - id: metadata\n      type: TMetadata\n      description: Parameter description to be filled\n    - id: mode\n      type: System.Threading.LazyThreadSafetyMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.#ctor(System.Func{`0},`0Metadata,System.Boolean)\n  id: '#ctor(System.Func{`0},`0Metadata,System.Boolean)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy(Func<T>,TMetadata,Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,Boolean)\n  fullName: System.Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public Lazy (Func<T> valueFactory, TMetadata metadata, bool isThreadSafe);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: Parameter description to be filled\n    - id: metadata\n      type: TMetadata\n      description: Parameter description to be filled\n    - id: isThreadSafe\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.#ctor(System.Func{`0},`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)\n  id: '#ctor(System.Func{`0},`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)'\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)\n  fullName: System.Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public Lazy (Func<T> valueFactory, TMetadata metadata, System.Threading.LazyThreadSafetyMode mode);\n    parameters:\n    - id: valueFactory\n      type: System.Func{T}\n      description: Parameter description to be filled\n    - id: metadata\n      type: TMetadata\n      description: Parameter description to be filled\n    - id: mode\n      type: System.Threading.LazyThreadSafetyMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Lazy`2.Metadata\n  id: Metadata\n  parent: System.Lazy`2\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: Lazy<T,TMetadata>.Metadata\n  fullName: System.Lazy<T,TMetadata>.Metadata\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System\n  syntax:\n    content: public TMetadata Metadata { get; }\n    return:\n      type: TMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Lazy`1\n  isExternal: false\n  name: System.Lazy<T>\n- uid: System.Lazy`2.#ctor(`0Metadata)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy(TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy(TMetadata)\n  fullName: System.Lazy<T,TMetadata>.Lazy(TMetadata)\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Lazy`2.#ctor(System.Func{`0},`0Metadata)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy(Func<T>,TMetadata)\n  nameWithType: Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata)\n  fullName: System.Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata)\n- uid: System.Func{T}\n  parent: System\n  isExternal: true\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Lazy`2.#ctor(`0Metadata,System.Boolean)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy(TMetadata,Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy(TMetadata,Boolean)\n  fullName: System.Lazy<T,TMetadata>.Lazy(TMetadata,Boolean)\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Lazy`2.#ctor(`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy(TMetadata,LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy(TMetadata,LazyThreadSafetyMode)\n  fullName: System.Lazy<T,TMetadata>.Lazy(TMetadata,LazyThreadSafetyMode)\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Threading.LazyThreadSafetyMode\n  parent: System.Threading\n  isExternal: true\n  name: LazyThreadSafetyMode\n  nameWithType: LazyThreadSafetyMode\n  fullName: System.Threading.LazyThreadSafetyMode\n- uid: System.Lazy`2.#ctor(System.Func{`0},`0Metadata,System.Boolean)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy(Func<T>,TMetadata,Boolean)\n  nameWithType: Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,Boolean)\n  fullName: System.Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,Boolean)\n- uid: System.Func{T}\n  parent: System\n  isExternal: true\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Lazy`2.#ctor(System.Func{`0},`0Metadata,System.`0hreading.Lazy`0hreadSafetyMode)\n  parent: System.Lazy`2\n  isExternal: false\n  name: Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)\n  nameWithType: Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)\n  fullName: System.Lazy<T,TMetadata>.Lazy(Func<T>,TMetadata,LazyThreadSafetyMode)\n- uid: System.Func{T}\n  parent: System\n  isExternal: true\n  name: Func<T>\n  nameWithType: Func<T>\n  fullName: System.Func<T>\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n- uid: System.Threading.LazyThreadSafetyMode\n  parent: System.Threading\n  isExternal: true\n  name: LazyThreadSafetyMode\n  nameWithType: LazyThreadSafetyMode\n  fullName: System.Threading.LazyThreadSafetyMode\n- uid: System.Lazy`2.Metadata\n  parent: System.Lazy`2\n  isExternal: false\n  name: Metadata\n  nameWithType: Lazy<T,TMetadata>.Metadata\n  fullName: System.Lazy<T,TMetadata>.Metadata\n- uid: TMetadata\n  parent: ''\n  isExternal: true\n  name: TMetadata\n  nameWithType: TMetadata\n  fullName: TMetadata\n"}