{"nodes":[{"pos":[812,818],"content":"ILease","needQuote":true,"needEscape":true,"nodes":[{"content":"ILease","pos":[0,6]}]},{"pos":[1256,1272],"content":"CurrentLeaseTime","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentLeaseTime","pos":[0,16]}]},{"pos":[1596,1630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1837,1849],"content":"CurrentState","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentState","pos":[0,12]}]},{"pos":[2224,2258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2473,2489],"content":"InitialLeaseTime","needQuote":true,"needEscape":true,"nodes":[{"content":"InitialLeaseTime","pos":[0,16]}]},{"pos":[2818,2852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3137,3155],"content":"Register(ISponsor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Register(ISponsor)","pos":[0,18]}]},{"pos":[3553,3587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3966,3993],"content":"Register(ISponsor,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Register(ISponsor,TimeSpan)","pos":[0,27]}]},{"pos":[4431,4465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4535,4569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4858,4873],"content":"Renew(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Renew(TimeSpan)","pos":[0,15]}]},{"pos":[5223,5257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5317,5351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5564,5579],"content":"RenewOnCallTime","needQuote":true,"needEscape":true,"nodes":[{"content":"RenewOnCallTime","pos":[0,15]}]},{"pos":[5905,5939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6158,6176],"content":"SponsorshipTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"SponsorshipTimeout","pos":[0,18]}]},{"pos":[6511,6545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6834,6854],"content":"Unregister(ISponsor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Unregister(ISponsor)","pos":[0,20]}]},{"pos":[7258,7292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7496,7512],"content":"CurrentLeaseTime","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentLeaseTime","pos":[0,16]}]},{"pos":[7690,7698],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[7890,7902],"content":"CurrentState","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentState","pos":[0,12]}]},{"pos":[8126,8136],"content":"LeaseState","needQuote":true,"needEscape":true,"nodes":[{"content":"LeaseState","pos":[0,10]}]},{"pos":[8362,8378],"content":"InitialLeaseTime","needQuote":true,"needEscape":true,"nodes":[{"content":"InitialLeaseTime","pos":[0,16]}]},{"pos":[8556,8564],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[8795,8813],"content":"Register(ISponsor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Register(ISponsor)","pos":[0,18]}]},{"pos":[9047,9055],"content":"ISponsor","needQuote":true,"needEscape":true,"nodes":[{"content":"ISponsor","pos":[0,8]}]},{"pos":[9328,9355],"content":"Register(ISponsor,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Register(ISponsor,TimeSpan)","pos":[0,27]}]},{"pos":[9607,9615],"content":"ISponsor","needQuote":true,"needEscape":true,"nodes":[{"content":"ISponsor","pos":[0,8]}]},{"pos":[9763,9771],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[9973,9988],"content":"Renew(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Renew(TimeSpan)","pos":[0,15]}]},{"pos":[10164,10172],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[10294,10302],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[10497,10512],"content":"RenewOnCallTime","needQuote":true,"needEscape":true,"nodes":[{"content":"RenewOnCallTime","pos":[0,15]}]},{"pos":[10688,10696],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[10894,10912],"content":"SponsorshipTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"SponsorshipTimeout","pos":[0,18]}]},{"pos":[11094,11102],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[11335,11355],"content":"Unregister(ISponsor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Unregister(ISponsor)","pos":[0,20]}]},{"pos":[11593,11601],"content":"ISponsor","needQuote":true,"needEscape":true,"nodes":[{"content":"ISponsor","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Lifetime.ILease\n  id: ILease\n  children:\n  - System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime\n  - System.Runtime.Remoting.Lifetime.ILease.CurrentState\n  - System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime\n  - System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)\n  - System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)\n  - System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)\n  - System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime\n  - System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout\n  - System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)\n  langs:\n  - csharp\n  name: ILease\n  nameWithType: ILease\n  fullName: System.Runtime.Remoting.Lifetime.ILease\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ILease\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime\n  id: CurrentLeaseTime\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: CurrentLeaseTime\n  nameWithType: ILease.CurrentLeaseTime\n  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public TimeSpan CurrentLeaseTime { get; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentState\n  id: CurrentState\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: CurrentState\n  nameWithType: ILease.CurrentState\n  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentState\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public System.Runtime.Remoting.Lifetime.LeaseState CurrentState { get; }\n    return:\n      type: System.Runtime.Remoting.Lifetime.LeaseState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime\n  id: InitialLeaseTime\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: InitialLeaseTime\n  nameWithType: ILease.InitialLeaseTime\n  fullName: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public TimeSpan InitialLeaseTime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)\n  id: Register(System.Runtime.Remoting.Lifetime.ISponsor)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: Register(ISponsor)\n  nameWithType: ILease.Register(ISponsor)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj);\n    parameters:\n    - id: obj\n      type: System.Runtime.Remoting.Lifetime.ISponsor\n      description: Parameter description to be filled\n  overload: System.Runtime.Remoting.Lifetime.ILease.Register*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)\n  id: Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: Register(ISponsor,TimeSpan)\n  nameWithType: ILease.Register(ISponsor,TimeSpan)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor,TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public void Register (System.Runtime.Remoting.Lifetime.ISponsor obj, TimeSpan renewalTime);\n    parameters:\n    - id: obj\n      type: System.Runtime.Remoting.Lifetime.ISponsor\n      description: Parameter description to be filled\n    - id: renewalTime\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  overload: System.Runtime.Remoting.Lifetime.ILease.Register*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)\n  id: Renew(System.TimeSpan)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: Renew(TimeSpan)\n  nameWithType: ILease.Renew(TimeSpan)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Renew(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public TimeSpan Renew (TimeSpan renewalTime);\n    parameters:\n    - id: renewalTime\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime\n  id: RenewOnCallTime\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: RenewOnCallTime\n  nameWithType: ILease.RenewOnCallTime\n  fullName: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public TimeSpan RenewOnCallTime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout\n  id: SponsorshipTimeout\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: SponsorshipTimeout\n  nameWithType: ILease.SponsorshipTimeout\n  fullName: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public TimeSpan SponsorshipTimeout { get; set; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)\n  id: Unregister(System.Runtime.Remoting.Lifetime.ISponsor)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  langs:\n  - csharp\n  name: Unregister(ISponsor)\n  nameWithType: ILease.Unregister(ISponsor)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Unregister(ISponsor)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Lifetime\n  syntax:\n    content: public void Unregister (System.Runtime.Remoting.Lifetime.ISponsor obj);\n    parameters:\n    - id: obj\n      type: System.Runtime.Remoting.Lifetime.ISponsor\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: CurrentLeaseTime\n  nameWithType: ILease.CurrentLeaseTime\n  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentLeaseTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease.CurrentState\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: CurrentState\n  nameWithType: ILease.CurrentState\n  fullName: System.Runtime.Remoting.Lifetime.ILease.CurrentState\n- uid: System.Runtime.Remoting.Lifetime.LeaseState\n  parent: System.Runtime.Remoting.Lifetime\n  isExternal: false\n  name: LeaseState\n  nameWithType: LeaseState\n  fullName: System.Runtime.Remoting.Lifetime.LeaseState\n- uid: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: InitialLeaseTime\n  nameWithType: ILease.InitialLeaseTime\n  fullName: System.Runtime.Remoting.Lifetime.ILease.InitialLeaseTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: Register(ISponsor)\n  nameWithType: ILease.Register(ISponsor)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor)\n- uid: System.Runtime.Remoting.Lifetime.ISponsor\n  parent: System.Runtime.Remoting.Lifetime\n  isExternal: false\n  name: ISponsor\n  nameWithType: ISponsor\n  fullName: System.Runtime.Remoting.Lifetime.ISponsor\n- uid: System.Runtime.Remoting.Lifetime.ILease.Register(System.Runtime.Remoting.Lifetime.ISponsor,System.TimeSpan)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: Register(ISponsor,TimeSpan)\n  nameWithType: ILease.Register(ISponsor,TimeSpan)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Register(ISponsor,TimeSpan)\n- uid: System.Runtime.Remoting.Lifetime.ISponsor\n  parent: System.Runtime.Remoting.Lifetime\n  isExternal: false\n  name: ISponsor\n  nameWithType: ISponsor\n  fullName: System.Runtime.Remoting.Lifetime.ISponsor\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease.Renew(System.TimeSpan)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: Renew(TimeSpan)\n  nameWithType: ILease.Renew(TimeSpan)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Renew(TimeSpan)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: RenewOnCallTime\n  nameWithType: ILease.RenewOnCallTime\n  fullName: System.Runtime.Remoting.Lifetime.ILease.RenewOnCallTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: SponsorshipTimeout\n  nameWithType: ILease.SponsorshipTimeout\n  fullName: System.Runtime.Remoting.Lifetime.ILease.SponsorshipTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Runtime.Remoting.Lifetime.ILease.Unregister(System.Runtime.Remoting.Lifetime.ISponsor)\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  name: Unregister(ISponsor)\n  nameWithType: ILease.Unregister(ISponsor)\n  fullName: System.Runtime.Remoting.Lifetime.ILease.Unregister(ISponsor)\n- uid: System.Runtime.Remoting.Lifetime.ISponsor\n  parent: System.Runtime.Remoting.Lifetime\n  isExternal: false\n  name: ISponsor\n  nameWithType: ISponsor\n  fullName: System.Runtime.Remoting.Lifetime.ISponsor\n- uid: System.Runtime.Remoting.Lifetime.ILease.Register*\n  parent: System.Runtime.Remoting.Lifetime.ILease\n  isExternal: false\n  nameWithType: ILease.\n"}