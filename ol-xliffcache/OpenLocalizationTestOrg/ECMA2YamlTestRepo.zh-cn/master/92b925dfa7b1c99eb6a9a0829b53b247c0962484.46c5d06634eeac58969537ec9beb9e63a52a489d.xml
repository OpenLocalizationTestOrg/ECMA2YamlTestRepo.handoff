{"nodes":[{"pos":[673,701],"content":"AsymmetricSignatureFormatter","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricSignatureFormatter","pos":[0,28]}]},{"pos":[1545,1575],"content":"AsymmetricSignatureFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricSignatureFormatter()","pos":[0,30]}]},{"pos":[2205,2228],"content":"CreateSignature(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSignature(Byte[])","pos":[0,23]}]},{"pos":[2635,2669],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2727,2761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3185,3215],"content":"CreateSignature(HashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSignature(HashAlgorithm)","pos":[0,30]}]},{"pos":[3694,3728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3786,3820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4188,4212],"content":"SetHashAlgorithm(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHashAlgorithm(String)","pos":[0,24]}]},{"pos":[4620,4654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4985,5012],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[5485,5519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5630,5643],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5811,5841],"content":"AsymmetricSignatureFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricSignatureFormatter()","pos":[0,30]}]},{"pos":[6211,6234],"content":"CreateSignature(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSignature(Byte[])","pos":[0,23]}]},{"pos":[6462,6466],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6578,6582],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6851,6881],"content":"CreateSignature(HashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSignature(HashAlgorithm)","pos":[0,30]}]},{"pos":[7123,7127],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[7292,7305],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[7584,7608],"content":"SetHashAlgorithm(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetHashAlgorithm(String)","pos":[0,24]}]},{"pos":[7840,7846],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8114,8141],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[8436,8455],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter\n  id: AsymmetricSignatureFormatter\n  children:\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)\n  - System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: AsymmetricSignatureFormatter\n  nameWithType: AsymmetricSignatureFormatter\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class AsymmetricSignatureFormatter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  langs:\n  - csharp\n  name: AsymmetricSignatureFormatter()\n  nameWithType: AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected AsymmetricSignatureFormatter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])\n  id: CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  langs:\n  - csharp\n  name: CreateSignature(Byte[])\n  nameWithType: AsymmetricSignatureFormatter.CreateSignature(Byte[])\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract byte[] CreateSignature (byte[] rgbHash);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  id: CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  langs:\n  - csharp\n  name: CreateSignature(HashAlgorithm)\n  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual byte[] CreateSignature (System.Security.Cryptography.HashAlgorithm hash);\n    parameters:\n    - id: hash\n      type: System.Security.Cryptography.HashAlgorithm\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)\n  id: SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  langs:\n  - csharp\n  name: SetHashAlgorithm(String)\n  nameWithType: AsymmetricSignatureFormatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract void SetHashAlgorithm (string strName);\n    parameters:\n    - id: strName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public abstract void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.#ctor\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: AsymmetricSignatureFormatter()\n  nameWithType: AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.AsymmetricSignatureFormatter()\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: CreateSignature(Byte[])\n  nameWithType: AsymmetricSignatureFormatter.CreateSignature(Byte[])\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(System.Security.Cryptography.HashAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: CreateSignature(HashAlgorithm)\n  nameWithType: AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature(HashAlgorithm)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.HashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: HashAlgorithm\n  fullName: System.Security.Cryptography.HashAlgorithm\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(System.String)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: SetHashAlgorithm(String)\n  nameWithType: AsymmetricSignatureFormatter.SetHashAlgorithm(String)\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetHashAlgorithm(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.AsymmetricSignatureFormatter.CreateSignature*\n  parent: System.Security.Cryptography.AsymmetricSignatureFormatter\n  isExternal: false\n  nameWithType: AsymmetricSignatureFormatter.\n"}