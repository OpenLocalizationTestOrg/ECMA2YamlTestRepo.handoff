{"nodes":[{"pos":[1445,1457],"content":"UTF7Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7Encoding","pos":[0,12]}]},{"pos":[4241,4255],"content":"UTF7Encoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7Encoding()","pos":[0,14]}]},{"pos":[4686,4707],"content":"UTF7Encoding(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7Encoding(Boolean)","pos":[0,21]}]},{"pos":[5043,5077],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5272,5286],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5594,5628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5687,5721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5928,5948],"content":"GetByteCount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(String)","pos":[0,20]}]},{"pos":[6265,6299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6356,6390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6672,6697],"content":"GetByteCount(Char*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char*,Int32)","pos":[0,25]}]},{"pos":[7041,7075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7136,7170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7227,7261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7571,7603],"content":"GetByteCount(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[],Int32,Int32)","pos":[0,32]}]},{"pos":[7974,8008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8069,8103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8164,8198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8255,8289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8615,8648],"content":"GetBytes(Char<bpt id=\"p1\">*</bpt>,Int32,Byte<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetBytes(Char*,Int32,Byte*,Int32)"},{"pos":[9036,9070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9135,9169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9230,9264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9329,9363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9420,9454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9806,9847],"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[10269,10303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10368,10402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10467,10501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10563,10597],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10662,10696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10753,10787],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11139,11180],"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[11594,11628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11693,11727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11792,11826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11888,11922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11987,12021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12078,12112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12390,12415],"content":"GetCharCount(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte*,Int32)","pos":[0,25]}]},{"pos":[12759,12793],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12854,12888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12945,12979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13289,13321],"content":"GetCharCount(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[],Int32,Int32)","pos":[0,32]}]},{"pos":[13692,13726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13787,13821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13882,13916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13973,14007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14333,14366],"content":"GetChars(Byte<bpt id=\"p1\">*</bpt>,Int32,Char<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetChars(Byte*,Int32,Char*,Int32)"},{"pos":[14754,14788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14853,14887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14948,14982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15047,15081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15138,15172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15524,15565],"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","pos":[0,41]}]},{"pos":[15987,16021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16086,16120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16185,16219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16281,16315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16380,16414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16471,16505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16725,16737],"content":"GetDecoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDecoder()","pos":[0,12]}]},{"pos":[17053,17087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17260,17272],"content":"GetEncoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoder()","pos":[0,12]}]},{"pos":[17588,17622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17797,17810],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18106,18140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18351,18373],"content":"GetMaxByteCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxByteCount(Int32)","pos":[0,22]}]},{"pos":[18709,18743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18800,18834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19045,19067],"content":"GetMaxCharCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxCharCount(Int32)","pos":[0,22]}]},{"pos":[19403,19437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19494,19528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19781,19810],"content":"GetString(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[20175,20209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20270,20304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20365,20399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20457,20491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20609,20629],"content":"System.Text.Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Text.Encoding","pos":[0,20]}]},{"pos":[20731,20745],"content":"UTF7Encoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7Encoding()","pos":[0,14]}]},{"pos":[20959,20980],"content":"UTF7Encoding(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7Encoding(Boolean)","pos":[0,21]}]},{"pos":[21158,21165],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21334,21348],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[21512,21519],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21637,21643],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21816,21836],"content":"GetByteCount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(String)","pos":[0,20]}]},{"pos":[22010,22015],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22129,22135],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22320,22345],"content":"GetByteCount(Char*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char*,Int32)","pos":[0,25]}]},{"pos":[22529,22534],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22647,22652],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22849,22881],"content":"GetByteCount(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[],Int32,Int32)","pos":[0,32]}]},{"pos":[23079,23084],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23196,23200],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[23313,23318],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23431,23436],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23641,23674],"content":"GetBytes(Char<bpt id=\"p1\">*</bpt>,Int32,Byte<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetBytes(Char*,Int32,Byte*,Int32)"},{"pos":[23874,23879],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23992,23997],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24110,24115],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24335,24376],"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[24592,24597],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24709,24713],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[24826,24831],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24944,24949],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25061,25065],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25178,25183],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25403,25444],"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[25660,25665],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25779,25785],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25900,25905],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26018,26023],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26135,26139],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[26252,26257],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26440,26465],"content":"GetCharCount(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte*,Int32)","pos":[0,25]}]},{"pos":[26649,26654],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26767,26772],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26969,27001],"content":"GetCharCount(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[],Int32,Int32)","pos":[0,32]}]},{"pos":[27199,27204],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27316,27320],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27433,27438],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27551,27556],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27761,27794],"content":"GetChars(Byte<bpt id=\"p1\">*</bpt>,Int32,Char<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetChars(Byte*,Int32,Char*,Int32)"},{"pos":[27994,27999],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28112,28117],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28230,28235],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28455,28496],"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","pos":[0,41]}]},{"pos":[28712,28717],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28829,28833],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[28946,28951],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29064,29069],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29181,29185],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[29298,29303],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29457,29469],"content":"GetDecoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDecoder()","pos":[0,12]}]},{"pos":[29639,29646],"content":"Decoder","needQuote":true,"needEscape":true,"nodes":[{"content":"Decoder","pos":[0,7]}]},{"pos":[29809,29821],"content":"GetEncoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoder()","pos":[0,12]}]},{"pos":[29991,29998],"content":"Encoder","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoder","pos":[0,7]}]},{"pos":[30162,30175],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[30335,30340],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30513,30535],"content":"GetMaxByteCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxByteCount(Int32)","pos":[0,22]}]},{"pos":[30713,30718],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30831,30836],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31009,31031],"content":"GetMaxCharCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxCharCount(Int32)","pos":[0,22]}]},{"pos":[31209,31214],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31327,31332],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31526,31555],"content":"GetString(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[31748,31754],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31868,31872],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31985,31990],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32103,32108],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.UTF7Encoding\n  id: UTF7Encoding\n  children:\n  - System.Text.UTF7Encoding.#ctor\n  - System.Text.UTF7Encoding.#ctor(System.Boolean)\n  - System.Text.UTF7Encoding.Equals(System.Object)\n  - System.Text.UTF7Encoding.GetByteCount(System.String)\n  - System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)\n  - System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  - System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  - System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)\n  - System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  - System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  - System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  - System.Text.UTF7Encoding.GetDecoder\n  - System.Text.UTF7Encoding.GetEncoder\n  - System.Text.UTF7Encoding.GetHashCode\n  - System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)\n  - System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)\n  - System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)\n  langs:\n  - csharp\n  name: UTF7Encoding\n  nameWithType: UTF7Encoding\n  fullName: System.Text.UTF7Encoding\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class UTF7Encoding : System.Text.Encoding\n  inheritance:\n  - System.Object\n  - System.Text.Encoding\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Text.Encoding.ASCII\n  - System.Text.Encoding.BigEndianUnicode\n  - System.Text.Encoding.BodyName\n  - System.Text.Encoding.Clone\n  - System.Text.Encoding.CodePage\n  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])\n  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.DecoderFallback\n  - System.Text.Encoding.Default\n  - System.Text.Encoding.EncoderFallback\n  - System.Text.Encoding.EncodingName\n  - System.Text.Encoding.GetByteCount(System.Char[])\n  - System.Text.Encoding.GetBytes(System.Char[])\n  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetBytes(System.String)\n  - System.Text.Encoding.GetCharCount(System.Byte[])\n  - System.Text.Encoding.GetChars(System.Byte[])\n  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetEncoding(System.Int32)\n  - System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.GetEncoding(System.String)\n  - System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.GetEncodings\n  - System.Text.Encoding.GetPreamble\n  - System.Text.Encoding.GetString(System.Byte*,System.Int32)\n  - System.Text.Encoding.GetString(System.Byte[])\n  - System.Text.Encoding.HeaderName\n  - System.Text.Encoding.IsAlwaysNormalized\n  - System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)\n  - System.Text.Encoding.IsBrowserDisplay\n  - System.Text.Encoding.IsBrowserSave\n  - System.Text.Encoding.IsMailNewsDisplay\n  - System.Text.Encoding.IsMailNewsSave\n  - System.Text.Encoding.IsReadOnly\n  - System.Text.Encoding.IsSingleByte\n  - System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)\n  - System.Text.Encoding.Unicode\n  - System.Text.Encoding.UTF32\n  - System.Text.Encoding.UTF7\n  - System.Text.Encoding.UTF8\n  - System.Text.Encoding.WebName\n  - System.Text.Encoding.WindowsCodePage\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.#ctor\n  id: '#ctor'\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: UTF7Encoding()\n  nameWithType: UTF7Encoding.UTF7Encoding()\n  fullName: System.Text.UTF7Encoding.UTF7Encoding()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public UTF7Encoding ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: UTF7Encoding(Boolean)\n  nameWithType: UTF7Encoding.UTF7Encoding(Boolean)\n  fullName: System.Text.UTF7Encoding.UTF7Encoding(Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public UTF7Encoding (bool allowOptionals);\n    parameters:\n    - id: allowOptionals\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: UTF7Encoding.Equals(Object)\n  fullName: System.Text.UTF7Encoding.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetByteCount(System.String)\n  id: GetByteCount(System.String)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetByteCount(String)\n  nameWithType: UTF7Encoding.GetByteCount(String)\n  fullName: System.Text.UTF7Encoding.GetByteCount(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetByteCount (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)\n  id: GetByteCount(System.Char*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetByteCount(Char*,Int32)\n  nameWithType: UTF7Encoding.GetByteCount(Char*,Int32)\n  fullName: System.Text.UTF7Encoding.GetByteCount(Char*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetByteCount (char* chars, int count);\n    parameters:\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  id: GetByteCount(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetByteCount(Char[],Int32,Int32)\n  nameWithType: UTF7Encoding.GetByteCount(Char[],Int32,Int32)\n  fullName: System.Text.UTF7Encoding.GetByteCount(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetByteCount (char[] chars, int index, int count);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  id: GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetBytes(Char*,Int32,Byte*,Int32)\n  nameWithType: UTF7Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n  fullName: System.Text.UTF7Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);\n    parameters:\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  nameWithType: UTF7Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  fullName: System.Text.UTF7Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetBytes(String,Int32,Int32,Byte[],Int32)\n  nameWithType: UTF7Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  fullName: System.Text.UTF7Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);\n    parameters:\n    - id: s\n      type: System.String\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)\n  id: GetCharCount(System.Byte*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte*,Int32)\n  nameWithType: UTF7Encoding.GetCharCount(Byte*,Int32)\n  fullName: System.Text.UTF7Encoding.GetCharCount(Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetCharCount (byte* bytes, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  id: GetCharCount(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte[],Int32,Int32)\n  nameWithType: UTF7Encoding.GetCharCount(Byte[],Int32,Int32)\n  fullName: System.Text.UTF7Encoding.GetCharCount(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetCharCount (byte[] bytes, int index, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  id: GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetChars(Byte*,Int32,Char*,Int32)\n  nameWithType: UTF7Encoding.GetChars(Byte*,Int32,Char*,Int32)\n  fullName: System.Text.UTF7Encoding.GetChars(Byte*,Int32,Char*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetChars (byte* bytes, int byteCount, char* chars, int charCount);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetChars(Byte[],Int32,Int32,Char[],Int32)\n  nameWithType: UTF7Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  fullName: System.Text.UTF7Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.UTF7Encoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetDecoder\n  id: GetDecoder\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetDecoder()\n  nameWithType: UTF7Encoding.GetDecoder()\n  fullName: System.Text.UTF7Encoding.GetDecoder()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override System.Text.Decoder GetDecoder ();\n    parameters: []\n    return:\n      type: System.Text.Decoder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetEncoder\n  id: GetEncoder\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetEncoder()\n  nameWithType: UTF7Encoding.GetEncoder()\n  fullName: System.Text.UTF7Encoding.GetEncoder()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override System.Text.Encoder GetEncoder ();\n    parameters: []\n    return:\n      type: System.Text.Encoder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetHashCode\n  id: GetHashCode\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: UTF7Encoding.GetHashCode()\n  fullName: System.Text.UTF7Encoding.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)\n  id: GetMaxByteCount(System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetMaxByteCount(Int32)\n  nameWithType: UTF7Encoding.GetMaxByteCount(Int32)\n  fullName: System.Text.UTF7Encoding.GetMaxByteCount(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetMaxByteCount (int charCount);\n    parameters:\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)\n  id: GetMaxCharCount(System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetMaxCharCount(Int32)\n  nameWithType: UTF7Encoding.GetMaxCharCount(Int32)\n  fullName: System.Text.UTF7Encoding.GetMaxCharCount(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetMaxCharCount (int byteCount);\n    parameters:\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)\n  id: GetString(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.UTF7Encoding\n  langs:\n  - csharp\n  name: GetString(Byte[],Int32,Int32)\n  nameWithType: UTF7Encoding.GetString(Byte[],Int32,Int32)\n  fullName: System.Text.UTF7Encoding.GetString(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override string GetString (byte[] bytes, int index, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Text.Encoding\n  isExternal: false\n  name: System.Text.Encoding\n- uid: System.Text.UTF7Encoding.#ctor\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: UTF7Encoding()\n  nameWithType: UTF7Encoding.UTF7Encoding()\n  fullName: System.Text.UTF7Encoding.UTF7Encoding()\n- uid: System.Text.UTF7Encoding.#ctor(System.Boolean)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: UTF7Encoding(Boolean)\n  nameWithType: UTF7Encoding.UTF7Encoding(Boolean)\n  fullName: System.Text.UTF7Encoding.UTF7Encoding(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.UTF7Encoding.Equals(System.Object)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: UTF7Encoding.Equals(Object)\n  fullName: System.Text.UTF7Encoding.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.UTF7Encoding.GetByteCount(System.String)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetByteCount(String)\n  nameWithType: UTF7Encoding.GetByteCount(String)\n  fullName: System.Text.UTF7Encoding.GetByteCount(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.UTF7Encoding.GetByteCount(System.Char*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetByteCount(Char*,Int32)\n  nameWithType: UTF7Encoding.GetByteCount(Char*,Int32)\n  fullName: System.Text.UTF7Encoding.GetByteCount(Char*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetByteCount(Char[],Int32,Int32)\n  nameWithType: UTF7Encoding.GetByteCount(Char[],Int32,Int32)\n  fullName: System.Text.UTF7Encoding.GetByteCount(Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetBytes(Char*,Int32,Byte*,Int32)\n  nameWithType: UTF7Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n  fullName: System.Text.UTF7Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  nameWithType: UTF7Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  fullName: System.Text.UTF7Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetBytes(String,Int32,Int32,Byte[],Int32)\n  nameWithType: UTF7Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  fullName: System.Text.UTF7Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetCharCount(System.Byte*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetCharCount(Byte*,Int32)\n  nameWithType: UTF7Encoding.GetCharCount(Byte*,Int32)\n  fullName: System.Text.UTF7Encoding.GetCharCount(Byte*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetCharCount(Byte[],Int32,Int32)\n  nameWithType: UTF7Encoding.GetCharCount(Byte[],Int32,Int32)\n  fullName: System.Text.UTF7Encoding.GetCharCount(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetChars(Byte*,Int32,Char*,Int32)\n  nameWithType: UTF7Encoding.GetChars(Byte*,Int32,Char*,Int32)\n  fullName: System.Text.UTF7Encoding.GetChars(Byte*,Int32,Char*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetChars(Byte[],Int32,Int32,Char[],Int32)\n  nameWithType: UTF7Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  fullName: System.Text.UTF7Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetDecoder\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetDecoder()\n  nameWithType: UTF7Encoding.GetDecoder()\n  fullName: System.Text.UTF7Encoding.GetDecoder()\n- uid: System.Text.Decoder\n  parent: System.Text\n  isExternal: false\n  name: Decoder\n  nameWithType: Decoder\n  fullName: System.Text.Decoder\n- uid: System.Text.UTF7Encoding.GetEncoder\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetEncoder()\n  nameWithType: UTF7Encoding.GetEncoder()\n  fullName: System.Text.UTF7Encoding.GetEncoder()\n- uid: System.Text.Encoder\n  parent: System.Text\n  isExternal: false\n  name: Encoder\n  nameWithType: Encoder\n  fullName: System.Text.Encoder\n- uid: System.Text.UTF7Encoding.GetHashCode\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: UTF7Encoding.GetHashCode()\n  fullName: System.Text.UTF7Encoding.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetMaxByteCount(System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetMaxByteCount(Int32)\n  nameWithType: UTF7Encoding.GetMaxByteCount(Int32)\n  fullName: System.Text.UTF7Encoding.GetMaxByteCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetMaxCharCount(System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetMaxCharCount(Int32)\n  nameWithType: UTF7Encoding.GetMaxCharCount(Int32)\n  fullName: System.Text.UTF7Encoding.GetMaxCharCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetString(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  name: GetString(Byte[],Int32,Int32)\n  nameWithType: UTF7Encoding.GetString(Byte[],Int32,Int32)\n  fullName: System.Text.UTF7Encoding.GetString(Byte[],Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.UTF7Encoding.GetByteCount*\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  nameWithType: UTF7Encoding.\n- uid: System.Text.UTF7Encoding.GetBytes*\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  nameWithType: UTF7Encoding.\n- uid: System.Text.UTF7Encoding.GetCharCount*\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  nameWithType: UTF7Encoding.\n- uid: System.Text.UTF7Encoding.GetChars*\n  parent: System.Text.UTF7Encoding\n  isExternal: false\n  nameWithType: UTF7Encoding.\n"}