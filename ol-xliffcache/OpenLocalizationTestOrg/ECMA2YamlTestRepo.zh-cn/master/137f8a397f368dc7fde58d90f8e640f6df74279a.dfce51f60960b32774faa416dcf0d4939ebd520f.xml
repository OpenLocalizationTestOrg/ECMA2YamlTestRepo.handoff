{"nodes":[{"pos":[744,768],"content":"CSharpReference<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"CSharpReference<TResult>"},{"pos":[1246,1280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3078,3095],"content":"CSharpReference()","needQuote":true,"needEscape":true,"nodes":[{"content":"CSharpReference()","pos":[0,17]}]},{"pos":[3640,3663],"content":"CSharpReference(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CSharpReference(String)","pos":[0,23]}]},{"pos":[4072,4106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4407,4442],"content":"CacheMetadata(CodeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(CodeActivityMetadata)","pos":[0,35]}]},{"pos":[4930,4964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5251,5279],"content":"Execute(CodeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(CodeActivityContext)","pos":[0,28]}]},{"pos":[5774,5808],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5888,5922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6145,6159],"content":"ExpressionText","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpressionText","pos":[0,14]}]},{"pos":[6513,6547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6776,6795],"content":"GetExpressionTree()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExpressionTree()","pos":[0,19]}]},{"pos":[7218,7252],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7463,7471],"content":"Language","needQuote":true,"needEscape":true,"nodes":[{"content":"Language","pos":[0,8]}]},{"pos":[7802,7836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8069,8088],"content":"RequiresCompilation","needQuote":true,"needEscape":true,"nodes":[{"content":"RequiresCompilation","pos":[0,19]}]},{"pos":[8451,8485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8615,8682],"content":"System.Activities.CodeActivity&lt;System.Activities.Location<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"System.Activities.CodeActivity<System.Activities.Location<TResult>>"},{"pos":[8826,8843],"content":"CSharpReference()","needQuote":true,"needEscape":true,"nodes":[{"content":"CSharpReference()","pos":[0,17]}]},{"pos":[9144,9167],"content":"CSharpReference(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CSharpReference(String)","pos":[0,23]}]},{"pos":[9388,9394],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9635,9670],"content":"CacheMetadata(CodeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(CodeActivityMetadata)","pos":[0,35]}]},{"pos":[9951,9971],"content":"CodeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeActivityMetadata","pos":[0,20]}]},{"pos":[10244,10272],"content":"Execute(CodeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(CodeActivityContext)","pos":[0,28]}]},{"pos":[10536,10553],"content":"Location<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Location<TResult>"},{"pos":[10737,10756],"content":"CodeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeActivityContext","pos":[0,19]}]},{"pos":[10995,11009],"content":"ExpressionText","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpressionText","pos":[0,14]}]},{"pos":[11212,11218],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11423,11442],"content":"GetExpressionTree()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetExpressionTree()","pos":[0,19]}]},{"pos":[11693,11703],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[11924,11932],"content":"Language","needQuote":true,"needEscape":true,"nodes":[{"content":"Language","pos":[0,8]}]},{"pos":[12123,12129],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12336,12355],"content":"RequiresCompilation","needQuote":true,"needEscape":true,"nodes":[{"content":"RequiresCompilation","pos":[0,19]}]},{"pos":[12569,12576],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.CSharp.Activities.CSharpReference`1\n  id: CSharpReference`1\n  children:\n  - Microsoft.CSharp.Activities.CSharpReference`1.#ctor\n  - Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)\n  - Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  - Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)\n  - Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText\n  - Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree\n  - Microsoft.CSharp.Activities.CSharpReference`1.Language\n  - Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation\n  langs:\n  - csharp\n  name: CSharpReference<TResult>\n  nameWithType: CSharpReference<TResult>\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerStepThrough]\n\n      [System.Windows.Markup.ContentProperty(\"ExpressionText\")]\n\n      public class CSharpReference<TResult> : System.Activities.CodeActivity<System.Activities.Location<TResult>>, System.Activities.Expressions.ITextExpression\n    typeParameters:\n    - id: TResult\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.CodeActivity`1\n  implements:\n  - System.Activities.Expressions.ITextExpression\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.CodeActivity`1.Implementation\n  - System.Activities.CodeActivity`1.ImplementationVersion\n  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: CSharpReference()\n  nameWithType: CSharpReference<TResult>.CSharpReference()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public CSharpReference ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: CSharpReference(String)\n  nameWithType: CSharpReference<TResult>.CSharpReference(String)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference(String)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public CSharpReference (string expressionText);\n    parameters:\n    - id: expressionText\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  id: CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.CodeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)\n  id: Execute(System.Activities.CodeActivityContext)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: Execute(CodeActivityContext)\n  nameWithType: CSharpReference<TResult>.Execute(CodeActivityContext)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Execute(CodeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: protected override System.Activities.Location<TResult> Execute (System.Activities.CodeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.CodeActivityContext\n      description: Parameter description to be filled\n    return:\n      type: System.Activities.Location{TResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText\n  id: ExpressionText\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: ExpressionText\n  nameWithType: CSharpReference<TResult>.ExpressionText\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.ExpressionText\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public string ExpressionText { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree\n  id: GetExpressionTree\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: GetExpressionTree()\n  nameWithType: CSharpReference<TResult>.GetExpressionTree()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.GetExpressionTree()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public System.Linq.Expressions.Expression GetExpressionTree ();\n    parameters: []\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language\n  id: Language\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: Language\n  nameWithType: CSharpReference<TResult>.Language\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Language\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public string Language { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation\n  id: RequiresCompilation\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  langs:\n  - csharp\n  name: RequiresCompilation\n  nameWithType: CSharpReference<TResult>.RequiresCompilation\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.RequiresCompilation\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: Microsoft.CSharp.Activities\n  syntax:\n    content: public bool RequiresCompilation { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.CodeActivity`1\n  isExternal: false\n  name: System.Activities.CodeActivity<System.Activities.Location<TResult>>\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CSharpReference()\n  nameWithType: CSharpReference<TResult>.CSharpReference()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference()\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.#ctor(System.String)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CSharpReference(String)\n  nameWithType: CSharpReference<TResult>.CSharpReference(String)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CSharpReference(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.CacheMetadata(System.Activities.CodeActivityMetadata)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: CacheMetadata(CodeActivityMetadata)\n  nameWithType: CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.CacheMetadata(CodeActivityMetadata)\n- uid: System.Activities.CodeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityMetadata\n  nameWithType: CodeActivityMetadata\n  fullName: System.Activities.CodeActivityMetadata\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Execute(System.Activities.CodeActivityContext)\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: Execute(CodeActivityContext)\n  nameWithType: CSharpReference<TResult>.Execute(CodeActivityContext)\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Execute(CodeActivityContext)\n- uid: System.Activities.Location{TResult}\n  parent: System.Activities\n  isExternal: false\n  name: Location<TResult>\n  nameWithType: Location<TResult>\n  fullName: System.Activities.Location<TResult>\n- uid: System.Activities.CodeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: CodeActivityContext\n  nameWithType: CodeActivityContext\n  fullName: System.Activities.CodeActivityContext\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.ExpressionText\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: ExpressionText\n  nameWithType: CSharpReference<TResult>.ExpressionText\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.ExpressionText\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.GetExpressionTree\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: GetExpressionTree()\n  nameWithType: CSharpReference<TResult>.GetExpressionTree()\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.GetExpressionTree()\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.Language\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: Language\n  nameWithType: CSharpReference<TResult>.Language\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.Language\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.CSharp.Activities.CSharpReference`1.RequiresCompilation\n  parent: Microsoft.CSharp.Activities.CSharpReference`1\n  isExternal: false\n  name: RequiresCompilation\n  nameWithType: CSharpReference<TResult>.RequiresCompilation\n  fullName: Microsoft.CSharp.Activities.CSharpReference<TResult>.RequiresCompilation\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}