{"nodes":[{"pos":[594,613],"content":"FirstMatchCodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstMatchCodeGroup","pos":[0,19]}]},{"pos":[3008,3065],"content":"FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)","pos":[0,57]}]},{"pos":[3641,3675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3763,3797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3994,4000],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[4360,4394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4603,4613],"content":"MergeLogic","needQuote":true,"needEscape":true,"nodes":[{"content":"MergeLogic","pos":[0,10]}]},{"pos":[4930,4964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5233,5250],"content":"Resolve(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolve(Evidence)","pos":[0,17]}]},{"pos":[5684,5718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5801,5835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6140,6175],"content":"ResolveMatchingCodeGroups(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMatchingCodeGroups(Evidence)","pos":[0,35]}]},{"pos":[6657,6691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6768,6802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6932,6964],"content":"System.Security.Policy.CodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Policy.CodeGroup","pos":[0,32]}]},{"pos":[7186,7243],"content":"FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)","pos":[0,57]}]},{"pos":[7563,7583],"content":"IMembershipCondition","needQuote":true,"needEscape":true,"nodes":[{"content":"IMembershipCondition","pos":[0,20]}]},{"pos":[7784,7799],"content":"PolicyStatement","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement","pos":[0,15]}]},{"pos":[8019,8025],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[8232,8241],"content":"CodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeGroup","pos":[0,9]}]},{"pos":[8455,8465],"content":"MergeLogic","needQuote":true,"needEscape":true,"nodes":[{"content":"MergeLogic","pos":[0,10]}]},{"pos":[8645,8651],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8873,8890],"content":"Resolve(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolve(Evidence)","pos":[0,17]}]},{"pos":[9125,9140],"content":"PolicyStatement","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement","pos":[0,15]}]},{"pos":[9324,9332],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[9592,9627],"content":"ResolveMatchingCodeGroups(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMatchingCodeGroups(Evidence)","pos":[0,35]}]},{"pos":[9892,9901],"content":"CodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeGroup","pos":[0,9]}]},{"pos":[10073,10081],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.FirstMatchCodeGroup\n  id: FirstMatchCodeGroup\n  children:\n  - System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  - System.Security.Policy.FirstMatchCodeGroup.Copy\n  - System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  - System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  - System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: FirstMatchCodeGroup\n  nameWithType: FirstMatchCodeGroup\n  fullName: System.Security.Policy.FirstMatchCodeGroup\n  type: Class\n  syntax:\n    content: >-\n      [System.Obsolete(\"This type is obsolete and will be removed in a future release of the .NET Framework. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.\")]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class FirstMatchCodeGroup : System.Security.Policy.CodeGroup\n  inheritance:\n  - System.Object\n  - System.Security.Policy.CodeGroup\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.AttributeString\n  - System.Security.Policy.CodeGroup.Children\n  - System.Security.Policy.CodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.Description\n  - System.Security.Policy.CodeGroup.Equals(System.Object)\n  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.GetHashCode\n  - System.Security.Policy.CodeGroup.MembershipCondition\n  - System.Security.Policy.CodeGroup.Name\n  - System.Security.Policy.CodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.PermissionSetName\n  - System.Security.Policy.CodeGroup.PolicyStatement\n  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.ToXml\n  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  id: '#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)'\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)\n  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)\n  fullName: System.Security.Policy.FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public FirstMatchCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition, System.Security.Policy.PolicyStatement policy);\n    parameters:\n    - id: membershipCondition\n      type: System.Security.Policy.IMembershipCondition\n      description: Parameter description to be filled\n    - id: policy\n      type: System.Security.Policy.PolicyStatement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.FirstMatchCodeGroup.Copy\n  id: Copy\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: FirstMatchCodeGroup.Copy()\n  fullName: System.Security.Policy.FirstMatchCodeGroup.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.CodeGroup Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  id: MergeLogic\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: MergeLogic\n  nameWithType: FirstMatchCodeGroup.MergeLogic\n  fullName: System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override string MergeLogic { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  id: Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: Resolve(Evidence)\n  nameWithType: FirstMatchCodeGroup.Resolve(Evidence)\n  fullName: System.Security.Policy.FirstMatchCodeGroup.Resolve(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  langs:\n  - csharp\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.FirstMatchCodeGroup.#ctor(System.Security.Policy.IMembershipCondition,System.Security.Policy.PolicyStatement)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)\n  nameWithType: FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)\n  fullName: System.Security.Policy.FirstMatchCodeGroup.FirstMatchCodeGroup(IMembershipCondition,PolicyStatement)\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.FirstMatchCodeGroup.Copy\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: Copy()\n  nameWithType: FirstMatchCodeGroup.Copy()\n  fullName: System.Security.Policy.FirstMatchCodeGroup.Copy()\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: FirstMatchCodeGroup.MergeLogic\n  fullName: System.Security.Policy.FirstMatchCodeGroup.MergeLogic\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.FirstMatchCodeGroup.Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: Resolve(Evidence)\n  nameWithType: FirstMatchCodeGroup.Resolve(Evidence)\n  fullName: System.Security.Policy.FirstMatchCodeGroup.Resolve(Evidence)\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.FirstMatchCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: System.Security.Policy.FirstMatchCodeGroup.ResolveMatchingCodeGroups(Evidence)\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n"}