{"nodes":[{"pos":[940,942],"content":"If","needQuote":true,"needEscape":true,"nodes":[{"content":"If","pos":[0,2]}]},{"pos":[2599,2603],"content":"If()","needQuote":true,"needEscape":true,"nodes":[{"content":"If()","pos":[0,4]}]},{"pos":[3097,3118],"content":"If(Activity<ph id=\"ph1\">&lt;Boolean&gt;</ph>)","needQuote":true,"needEscape":true,"source":"If(Activity<Boolean>)"},{"pos":[3513,3547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3818,3841],"content":"If(InArgument<ph id=\"ph1\">&lt;Boolean&gt;</ph>)","needQuote":true,"needEscape":true,"source":"If(InArgument<Boolean>)"},{"pos":[4244,4278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4655,4700],"content":"If(Expression<Func<ActivityContext,Boolean>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"If(Expression&lt;Func&lt;ActivityContext,Boolean&gt;&gt;)","pos":[0,45],"source":"If(Expression<Func<ActivityContext,Boolean>>)"}]},{"pos":[5246,5280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5557,5594],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[6048,6082],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6267,6276],"content":"Condition","needQuote":true,"needEscape":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[6632,6666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6841,6845],"content":"Else","needQuote":true,"needEscape":true,"nodes":[{"content":"Else","pos":[0,4]}]},{"pos":[7160,7194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7457,7487],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[7917,7951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8350,8416],"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","pos":[0,66]}]},{"pos":[9030,9064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9150,9184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9359,9363],"content":"Then","needQuote":true,"needEscape":true,"nodes":[{"content":"Then","pos":[0,4]}]},{"pos":[9678,9712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9842,9874],"content":"System.Activities.NativeActivity","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.NativeActivity","pos":[0,32]}]},{"pos":[9990,9994],"content":"If()","needQuote":true,"needEscape":true,"nodes":[{"content":"If()","pos":[0,4]}]},{"pos":[10227,10248],"content":"If(Activity<ph id=\"ph1\">&lt;Boolean&gt;</ph>)","needQuote":true,"needEscape":true,"source":"If(Activity<Boolean>)"},{"pos":[10462,10479],"content":"Activity<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Activity<Boolean>"},{"pos":[10730,10753],"content":"If(InArgument<ph id=\"ph1\">&lt;Boolean&gt;</ph>)","needQuote":true,"needEscape":true,"source":"If(InArgument<Boolean>)"},{"pos":[10973,10992],"content":"InArgument<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"InArgument<Boolean>"},{"pos":[11300,11345],"content":"If(Expression<Func<ActivityContext,Boolean>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"If(Expression&lt;Func&lt;ActivityContext,Boolean&gt;&gt;)","pos":[0,45],"source":"If(Expression<Func<ActivityContext,Boolean>>)"}]},{"pos":[11668,11709],"content":"Expression<Func<ActivityContext,Boolean>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression&lt;Func&lt;ActivityContext,Boolean&gt;&gt;","pos":[0,41],"source":"Expression<Func<ActivityContext,Boolean>>"}]},{"pos":[12043,12080],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[12324,12346],"content":"NativeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityMetadata","pos":[0,22]}]},{"pos":[12558,12567],"content":"Condition","needQuote":true,"needEscape":true,"nodes":[{"content":"Condition","pos":[0,9]}]},{"pos":[12759,12778],"content":"InArgument<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"InArgument<Boolean>"},{"pos":[12986,12990],"content":"Else","needQuote":true,"needEscape":true,"nodes":[{"content":"Else","pos":[0,4]}]},{"pos":[13154,13162],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[13385,13415],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[13644,13665],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[13982,14048],"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","pos":[0,66]}]},{"pos":[14387,14418],"content":"NativeActivityUpdateMapMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityUpdateMapMetadata","pos":[0,31]}]},{"pos":[14633,14641],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[14820,14824],"content":"Then","needQuote":true,"needEscape":true,"nodes":[{"content":"Then","pos":[0,4]}]},{"pos":[14988,14996],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.If\n  id: If\n  children:\n  - System.Activities.Statements.If.#ctor\n  - System.Activities.Statements.If.#ctor(System.Activities.Activity{System.Boolean})\n  - System.Activities.Statements.If.#ctor(System.Activities.InArgument{System.Boolean})\n  - System.Activities.Statements.If.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  - System.Activities.Statements.If.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.If.Condition\n  - System.Activities.Statements.If.Else\n  - System.Activities.Statements.If.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.If.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.If.Then\n  langs:\n  - csharp\n  name: If\n  nameWithType: If\n  fullName: System.Activities.Statements.If\n  type: Class\n  syntax:\n    content: 'public sealed class If : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: If()\n  nameWithType: If.If()\n  fullName: System.Activities.Statements.If.If()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public If ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.#ctor(System.Activities.Activity{System.Boolean})\n  id: '#ctor(System.Activities.Activity{System.Boolean})'\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: If(Activity<Boolean>)\n  nameWithType: If.If(Activity<Boolean>)\n  fullName: System.Activities.Statements.If.If(Activity<Boolean>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public If (System.Activities.Activity<bool> condition);\n    parameters:\n    - id: condition\n      type: System.Activities.Activity{System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.#ctor(System.Activities.InArgument{System.Boolean})\n  id: '#ctor(System.Activities.InArgument{System.Boolean})'\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: If(InArgument<Boolean>)\n  nameWithType: If.If(InArgument<Boolean>)\n  fullName: System.Activities.Statements.If.If(InArgument<Boolean>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public If (System.Activities.InArgument<bool> condition);\n    parameters:\n    - id: condition\n      type: System.Activities.InArgument{System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  id: '#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})'\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: If(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: If.If(Expression<Func<ActivityContext,Boolean>>)\n  fullName: System.Activities.Statements.If.If(Expression<Func<ActivityContext,Boolean>>)\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public If (System.Linq.Expressions.Expression<Func<System.Activities.ActivityContext,bool>> condition);\n    parameters:\n    - id: condition\n      type: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: If.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.If.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.Condition\n  id: Condition\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: Condition\n  nameWithType: If.Condition\n  fullName: System.Activities.Statements.If.Condition\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.InArgument<bool> Condition { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.Else\n  id: Else\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: Else\n  nameWithType: If.Else\n  fullName: System.Activities.Statements.If.Else\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.Activity Else { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: If.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.If.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: If.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.If.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: Parameter description to be filled\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.If.Then\n  id: Then\n  parent: System.Activities.Statements.If\n  langs:\n  - csharp\n  name: Then\n  nameWithType: If.Then\n  fullName: System.Activities.Statements.If.Then\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.Activity Then { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.If.#ctor\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: If()\n  nameWithType: If.If()\n  fullName: System.Activities.Statements.If.If()\n- uid: System.Activities.Statements.If.#ctor(System.Activities.Activity{System.Boolean})\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: If(Activity<Boolean>)\n  nameWithType: If.If(Activity<Boolean>)\n  fullName: System.Activities.Statements.If.If(Activity<Boolean>)\n- uid: System.Activities.Activity{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: Activity<Boolean>\n  nameWithType: Activity<Boolean>\n  fullName: System.Activities.Activity<System.Boolean>\n- uid: System.Activities.Statements.If.#ctor(System.Activities.InArgument{System.Boolean})\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: If(InArgument<Boolean>)\n  nameWithType: If.If(InArgument<Boolean>)\n  fullName: System.Activities.Statements.If.If(InArgument<Boolean>)\n- uid: System.Activities.InArgument{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<Boolean>\n  nameWithType: InArgument<Boolean>\n  fullName: System.Activities.InArgument<System.Boolean>\n- uid: System.Activities.Statements.If.#ctor(System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}})\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: If(Expression<Func<ActivityContext,Boolean>>)\n  nameWithType: If.If(Expression<Func<ActivityContext,Boolean>>)\n  fullName: System.Activities.Statements.If.If(Expression<Func<ActivityContext,Boolean>>)\n- uid: System.Linq.Expressions.Expression{System.Func{System.Activities.ActivityContext,System.Boolean}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<ActivityContext,Boolean>>\n  nameWithType: Expression<Func<ActivityContext,Boolean>>\n  fullName: System.Linq.Expressions.Expression<System.Func<System.Activities.ActivityContext,System.Boolean>>\n- uid: System.Activities.Statements.If.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: If.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.If.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.If.Condition\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: Condition\n  nameWithType: If.Condition\n  fullName: System.Activities.Statements.If.Condition\n- uid: System.Activities.InArgument{System.Boolean}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<Boolean>\n  nameWithType: InArgument<Boolean>\n  fullName: System.Activities.InArgument<System.Boolean>\n- uid: System.Activities.Statements.If.Else\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: Else\n  nameWithType: If.Else\n  fullName: System.Activities.Statements.If.Else\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.If.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: If.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.If.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.If.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: If.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.If.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.If.Then\n  parent: System.Activities.Statements.If\n  isExternal: false\n  name: Then\n  nameWithType: If.Then\n  fullName: System.Activities.Statements.If.Then\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n"}