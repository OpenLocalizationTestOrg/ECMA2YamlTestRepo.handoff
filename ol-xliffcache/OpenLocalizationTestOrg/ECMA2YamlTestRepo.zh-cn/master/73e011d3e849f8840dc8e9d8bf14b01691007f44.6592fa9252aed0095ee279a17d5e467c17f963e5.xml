{"nodes":[{"pos":[1319,1342],"content":"ProjectElementContainer","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElementContainer","pos":[0,23]}]},{"pos":[2802,2813],"content":"AllChildren","needQuote":true,"needEscape":true,"nodes":[{"content":"AllChildren","pos":[0,11]}]},{"pos":[3298,3332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3653,3680],"content":"AppendChild(ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"AppendChild(ProjectElement)","pos":[0,27]}]},{"pos":[4140,4174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4399,4407],"content":"Children","needQuote":true,"needEscape":true,"nodes":[{"content":"Children","pos":[0,8]}]},{"pos":[4883,4917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5158,5174],"content":"ChildrenReversed","needQuote":true,"needEscape":true,"nodes":[{"content":"ChildrenReversed","pos":[0,16]}]},{"pos":[5674,5708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5927,5932],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[6248,6282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6511,6521],"content":"FirstChild","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstChild","pos":[0,10]}]},{"pos":[6923,6957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7376,7423],"content":"InsertAfterChild(ProjectElement,ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertAfterChild(ProjectElement,ProjectElement)","pos":[0,47]}]},{"pos":[7983,8017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8113,8147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8568,8616],"content":"InsertBeforeChild(ProjectElement,ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertBeforeChild(ProjectElement,ProjectElement)","pos":[0,48]}]},{"pos":[9179,9213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9309,9343],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9570,9579],"content":"LastChild","needQuote":true,"needEscape":true,"nodes":[{"content":"LastChild","pos":[0,9]}]},{"pos":[9978,10012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10335,10363],"content":"PrependChild(ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"PrependChild(ProjectElement)","pos":[0,28]}]},{"pos":[10826,10860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11103,11122],"content":"RemoveAllChildren()","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAllChildren()","pos":[0,19]}]},{"pos":[11755,11782],"content":"RemoveChild(ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveChild(ProjectElement)","pos":[0,27]}]},{"pos":[12242,12276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12417,12460],"content":"Microsoft.Build.Construction.ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"Microsoft.Build.Construction.ProjectElement","pos":[0,43]}]},{"pos":[12624,12635],"content":"AllChildren","needQuote":true,"needEscape":true,"nodes":[{"content":"AllChildren","pos":[0,11]}]},{"pos":[12921,12948],"content":"IEnumerable<ph id=\"ph1\">&lt;ProjectElement&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<ProjectElement>"},{"pos":[13297,13324],"content":"AppendChild(ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"AppendChild(ProjectElement)","pos":[0,27]}]},{"pos":[13604,13618],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[13866,13874],"content":"Children","needQuote":true,"needEscape":true,"nodes":[{"content":"Children","pos":[0,8]}]},{"pos":[14154,14181],"content":"ICollection<ph id=\"ph1\">&lt;ProjectElement&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<ProjectElement>"},{"pos":[14490,14506],"content":"ChildrenReversed","needQuote":true,"needEscape":true,"nodes":[{"content":"ChildrenReversed","pos":[0,16]}]},{"pos":[14802,14829],"content":"ICollection<ph id=\"ph1\">&lt;ProjectElement&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<ProjectElement>"},{"pos":[15127,15132],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[15315,15320],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15530,15540],"content":"FirstChild","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstChild","pos":[0,10]}]},{"pos":[15786,15800],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[16145,16192],"content":"InsertAfterChild(ProjectElement,ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertAfterChild(ProjectElement,ProjectElement)","pos":[0,47]}]},{"pos":[16512,16526],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[16732,16746],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[17092,17140],"content":"InsertBeforeChild(ProjectElement,ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertBeforeChild(ProjectElement,ProjectElement)","pos":[0,48]}]},{"pos":[17462,17476],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[17682,17696],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[17945,17954],"content":"LastChild","needQuote":true,"needEscape":true,"nodes":[{"content":"LastChild","pos":[0,9]}]},{"pos":[18198,18212],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[18509,18537],"content":"PrependChild(ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"PrependChild(ProjectElement)","pos":[0,28]}]},{"pos":[18819,18833],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]},{"pos":[19090,19109],"content":"RemoveAllChildren()","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAllChildren()","pos":[0,19]}]},{"pos":[19463,19490],"content":"RemoveChild(ProjectElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveChild(ProjectElement)","pos":[0,27]}]},{"pos":[19770,19784],"content":"ProjectElement","needQuote":true,"needEscape":true,"nodes":[{"content":"ProjectElement","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Construction.ProjectElementContainer\n  id: ProjectElementContainer\n  children:\n  - Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  - Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.Children\n  - Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  - Microsoft.Build.Construction.ProjectElementContainer.Count\n  - Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  - Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  - Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  - Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  - Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  langs:\n  - csharp\n  name: ProjectElementContainer\n  nameWithType: ProjectElementContainer\n  fullName: Microsoft.Build.Construction.ProjectElementContainer\n  type: Class\n  syntax:\n    content: 'public abstract class ProjectElementContainer : Microsoft.Build.Construction.ProjectElement'\n  inheritance:\n  - System.Object\n  - Microsoft.Build.Construction.ProjectElement\n  implements: []\n  inheritedMembers:\n  - Microsoft.Build.Construction.ProjectElement.AllParents\n  - Microsoft.Build.Construction.ProjectElement.Condition\n  - Microsoft.Build.Construction.ProjectElement.ConditionLocation\n  - Microsoft.Build.Construction.ProjectElement.ContainingProject\n  - Microsoft.Build.Construction.ProjectElement.Label\n  - Microsoft.Build.Construction.ProjectElement.LabelLocation\n  - Microsoft.Build.Construction.ProjectElement.Location\n  - Microsoft.Build.Construction.ProjectElement.NextSibling\n  - Microsoft.Build.Construction.ProjectElement.Parent\n  - Microsoft.Build.Construction.ProjectElement.PreviousSibling\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  id: AllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: AllChildren\n  nameWithType: ProjectElementContainer.AllChildren\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement> AllChildren { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  id: AppendChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: AppendChild(ProjectElement)\n  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public void AppendChild (Microsoft.Build.Construction.ProjectElement child);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Children\n  id: Children\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: Children\n  nameWithType: ProjectElementContainer.Children\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> Children { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  id: ChildrenReversed\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: ChildrenReversed\n  nameWithType: ProjectElementContainer.ChildrenReversed\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement> ChildrenReversed { get; }\n    return:\n      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Count\n  id: Count\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ProjectElementContainer.Count\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  id: FirstChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: FirstChild\n  nameWithType: ProjectElementContainer.FirstChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElement FirstChild { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  id: InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: InsertAfterChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public void InsertAfterChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n    - id: reference\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  id: InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: InsertBeforeChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public void InsertBeforeChild (Microsoft.Build.Construction.ProjectElement child, Microsoft.Build.Construction.ProjectElement reference);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n    - id: reference\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  id: LastChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: LastChild\n  nameWithType: ProjectElementContainer.LastChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  type: Property\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public Microsoft.Build.Construction.ProjectElement LastChild { get; }\n    return:\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  id: PrependChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: PrependChild(ProjectElement)\n  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public void PrependChild (Microsoft.Build.Construction.ProjectElement child);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  id: RemoveAllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: RemoveAllChildren()\n  nameWithType: ProjectElementContainer.RemoveAllChildren()\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public void RemoveAllChildren ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  id: RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  langs:\n  - csharp\n  name: RemoveChild(ProjectElement)\n  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)\n  type: Method\n  assemblies:\n  - Microsoft.Build\n  namespace: Microsoft.Build.Construction\n  syntax:\n    content: public void RemoveChild (Microsoft.Build.Construction.ProjectElement child);\n    parameters:\n    - id: child\n      type: Microsoft.Build.Construction.ProjectElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.Build.Construction.ProjectElement\n  isExternal: false\n  name: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: AllChildren\n  nameWithType: ProjectElementContainer.AllChildren\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AllChildren\n- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ProjectElement>\n  nameWithType: IEnumerable<ProjectElement>\n  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Construction.ProjectElement>\n- uid: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: AppendChild(ProjectElement)\n  nameWithType: ProjectElementContainer.AppendChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.AppendChild(ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Children\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Children\n  nameWithType: ProjectElementContainer.Children\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Children\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<ProjectElement>\n  nameWithType: ICollection<ProjectElement>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>\n- uid: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: ChildrenReversed\n  nameWithType: ProjectElementContainer.ChildrenReversed\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed\n- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectElement}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<ProjectElement>\n  nameWithType: ICollection<ProjectElement>\n  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectElement>\n- uid: Microsoft.Build.Construction.ProjectElementContainer.Count\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: Count\n  nameWithType: ProjectElementContainer.Count\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: FirstChild\n  nameWithType: ProjectElementContainer.FirstChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.FirstChild\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: InsertAfterChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(ProjectElement,ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: InsertBeforeChild(ProjectElement,ProjectElement)\n  nameWithType: ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(ProjectElement,ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: LastChild\n  nameWithType: ProjectElementContainer.LastChild\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.LastChild\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: PrependChild(ProjectElement)\n  nameWithType: ProjectElementContainer.PrependChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.PrependChild(ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: RemoveAllChildren()\n  nameWithType: ProjectElementContainer.RemoveAllChildren()\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren()\n- uid: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)\n  parent: Microsoft.Build.Construction.ProjectElementContainer\n  isExternal: false\n  name: RemoveChild(ProjectElement)\n  nameWithType: ProjectElementContainer.RemoveChild(ProjectElement)\n  fullName: Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(ProjectElement)\n- uid: Microsoft.Build.Construction.ProjectElement\n  parent: Microsoft.Build.Construction\n  isExternal: false\n  name: ProjectElement\n  nameWithType: ProjectElement\n  fullName: Microsoft.Build.Construction.ProjectElement\n"}