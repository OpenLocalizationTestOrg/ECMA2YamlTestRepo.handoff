{"nodes":[{"pos":[1125,1144],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[1977,1998],"content":"AsymmetricAlgorithm()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm()","pos":[0,21]}]},{"pos":[2515,2522],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[2996,3004],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[3412,3446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3758,3772],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[4174,4208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4301,4335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4619,4628],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[5212,5228],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5598,5632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5959,5980],"content":"FromXmlString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String)","pos":[0,21]}]},{"pos":[6364,6398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6639,6659],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[7017,7051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7266,7273],"content":"KeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySize","pos":[0,7]}]},{"pos":[7593,7627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7852,7864],"content":"KeySizeValue","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizeValue","pos":[0,12]}]},{"pos":[8178,8212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8439,8452],"content":"LegalKeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"LegalKeySizes","pos":[0,13]}]},{"pos":[8848,8882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9119,9137],"content":"LegalKeySizesValue","needQuote":true,"needEscape":true,"nodes":[{"content":"LegalKeySizesValue","pos":[0,18]}]},{"pos":[9532,9566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9803,9821],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[10173,10207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10462,10482],"content":"ToXmlString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(Boolean)","pos":[0,20]}]},{"pos":[10893,10927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10985,11019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11130,11143],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11293,11314],"content":"AsymmetricAlgorithm()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm()","pos":[0,21]}]},{"pos":[11605,11612],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[11876,11884],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[12123,12142],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[12405,12419],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[12670,12689],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[12853,12859],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13060,13069],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[13354,13370],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13569,13576],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13800,13821],"content":"FromXmlString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String)","pos":[0,21]}]},{"pos":[14029,14035],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14249,14269],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[14475,14481],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14682,14689],"content":"KeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySize","pos":[0,7]}]},{"pos":[14868,14873],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15077,15089],"content":"KeySizeValue","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizeValue","pos":[0,12]}]},{"pos":[15278,15283],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15488,15501],"content":"LegalKeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"LegalKeySizes","pos":[0,13]}]},{"pos":[15739,15747],"content":"KeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizes","pos":[0,8]}]},{"pos":[15987,16005],"content":"LegalKeySizesValue","needQuote":true,"needEscape":true,"nodes":[{"content":"LegalKeySizesValue","pos":[0,18]}]},{"pos":[16253,16261],"content":"KeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizes","pos":[0,8]}]},{"pos":[16501,16519],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[16721,16727],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16948,16968],"content":"ToXmlString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(Boolean)","pos":[0,20]}]},{"pos":[17174,17180],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17297,17304],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  id: AsymmetricAlgorithm\n  children:\n  - System.Security.Cryptography.AsymmetricAlgorithm.#ctor\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Create\n  - System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\n  - System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)\n  langs:\n  - csharp\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class AsymmetricAlgorithm : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: AsymmetricAlgorithm()\n  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected AsymmetricAlgorithm ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  id: Clear\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: AsymmetricAlgorithm.Clear()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create\n  id: Create\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: AsymmetricAlgorithm.Create()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.AsymmetricAlgorithm Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricAlgorithm.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: AsymmetricAlgorithm.Create(String)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.AsymmetricAlgorithm Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricAlgorithm.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  id: Dispose\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: AsymmetricAlgorithm.Dispose()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)\n  id: FromXmlString(System.String)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: FromXmlString(String)\n  nameWithType: AsymmetricAlgorithm.FromXmlString(String)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual void FromXmlString (string xmlString);\n    parameters:\n    - id: xmlString\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: AsymmetricAlgorithm.KeySize\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual int KeySize { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  id: KeySizeValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: KeySizeValue\n  nameWithType: AsymmetricAlgorithm.KeySizeValue\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected int KeySizeValue;\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: AsymmetricAlgorithm.LegalKeySizes\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  id: LegalKeySizesValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: LegalKeySizesValue\n  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected System.Security.Cryptography.KeySizes[] LegalKeySizesValue;\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)\n  id: ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  langs:\n  - csharp\n  name: ToXmlString(Boolean)\n  nameWithType: AsymmetricAlgorithm.ToXmlString(Boolean)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual string ToXmlString (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.#ctor\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: AsymmetricAlgorithm()\n  nameWithType: AsymmetricAlgorithm.AsymmetricAlgorithm()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.AsymmetricAlgorithm()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: AsymmetricAlgorithm.Clear()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Create()\n  nameWithType: AsymmetricAlgorithm.Create()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create(System.String)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Create(String)\n  nameWithType: AsymmetricAlgorithm.Create(String)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Create(String)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: AsymmetricAlgorithm.Dispose()\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AsymmetricAlgorithm.Dispose(Boolean)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(System.String)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: FromXmlString(String)\n  nameWithType: AsymmetricAlgorithm.FromXmlString(String)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.FromXmlString(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: AsymmetricAlgorithm.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeySize\n  nameWithType: AsymmetricAlgorithm.KeySize\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: AsymmetricAlgorithm.KeySizeValue\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: AsymmetricAlgorithm.LegalKeySizes\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n- uid: System.Security.Cryptography.KeySizes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes[]\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: AsymmetricAlgorithm.LegalKeySizesValue\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.KeySizes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes[]\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: AsymmetricAlgorithm.SignatureAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.SignatureAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  name: ToXmlString(Boolean)\n  nameWithType: AsymmetricAlgorithm.ToXmlString(Boolean)\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm.ToXmlString(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Create*\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  nameWithType: AsymmetricAlgorithm.\n- uid: System.Security.Cryptography.AsymmetricAlgorithm.Dispose*\n  parent: System.Security.Cryptography.AsymmetricAlgorithm\n  isExternal: false\n  nameWithType: AsymmetricAlgorithm.\n"}