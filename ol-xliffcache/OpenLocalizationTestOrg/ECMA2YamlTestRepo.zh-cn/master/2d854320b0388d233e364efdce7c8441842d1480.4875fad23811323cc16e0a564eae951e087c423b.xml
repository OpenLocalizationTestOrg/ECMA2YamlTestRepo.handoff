{"nodes":[{"pos":[332,356],"content":"DynamicExpressionVisitor","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicExpressionVisitor","pos":[0,24]}]},{"pos":[5160,5186],"content":"DynamicExpressionVisitor()","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicExpressionVisitor()","pos":[0,26]}]},{"pos":[5821,5852],"content":"VisitDynamic(DynamicExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDynamic(DynamicExpression)","pos":[0,31]}]},{"pos":[6345,6379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6458,6492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6631,6672],"content":"System.Linq.Expressions.ExpressionVisitor","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Linq.Expressions.ExpressionVisitor","pos":[0,41]}]},{"pos":[6822,6848],"content":"DynamicExpressionVisitor()","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicExpressionVisitor()","pos":[0,26]}]},{"pos":[7204,7235],"content":"VisitDynamic(DynamicExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDynamic(DynamicExpression)","pos":[0,31]}]},{"pos":[7506,7516],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[7702,7719],"content":"DynamicExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicExpression","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.DynamicExpressionVisitor\n  id: DynamicExpressionVisitor\n  children:\n  - System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  - System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  langs:\n  - csharp\n  name: DynamicExpressionVisitor\n  nameWithType: DynamicExpressionVisitor\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor\n  type: Class\n  syntax:\n    content: 'public abstract class DynamicExpressionVisitor : System.Linq.Expressions.ExpressionVisitor'\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.ExpressionVisitor\n  implements: []\n  inheritedMembers:\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.Func{``0,``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  id: '#ctor'\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  langs:\n  - csharp\n  name: DynamicExpressionVisitor()\n  nameWithType: DynamicExpressionVisitor.DynamicExpressionVisitor()\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor.DynamicExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected DynamicExpressionVisitor ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  id: VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected override System.Linq.Expressions.Expression VisitDynamic (System.Linq.Expressions.DynamicExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DynamicExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: System.Linq.Expressions.ExpressionVisitor\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  isExternal: false\n  name: DynamicExpressionVisitor()\n  nameWithType: DynamicExpressionVisitor.DynamicExpressionVisitor()\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor.DynamicExpressionVisitor()\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  isExternal: false\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.DynamicExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DynamicExpression\n  nameWithType: DynamicExpression\n  fullName: System.Linq.Expressions.DynamicExpression\n"}