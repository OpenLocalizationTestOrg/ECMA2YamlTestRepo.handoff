{"nodes":[{"pos":[1557,1572],"content":"SecurityManager","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityManager","pos":[0,15]}]},{"pos":[2338,2358],"content":"CheckExecutionRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CheckExecutionRights","pos":[0,20]}]},{"pos":[2685,2719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2972,3017],"content":"CurrentThreadRequiresSecurityContextCapture()","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentThreadRequiresSecurityContextCapture()","pos":[0,45]}]},{"pos":[3424,3458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3727,3755],"content":"GetStandardSandbox(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetStandardSandbox(Evidence)","pos":[0,28]}]},{"pos":[4189,4223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4297,4331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4652,4689],"content":"GetZoneAndOrigin(ArrayList,ArrayList)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetZoneAndOrigin(ArrayList,ArrayList)","pos":[0,37]}]},{"pos":[5145,5179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5257,5291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5534,5556],"content":"IsGranted(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGranted(IPermission)","pos":[0,22]}]},{"pos":[5928,5962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6021,6055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6362,6409],"content":"LoadPolicyLevelFromFile(String,PolicyLevelType)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadPolicyLevelFromFile(String,PolicyLevelType)","pos":[0,47]}]},{"pos":[6878,6912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6991,7025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7104,7138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7449,7498],"content":"LoadPolicyLevelFromString(String,PolicyLevelType)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadPolicyLevelFromString(String,PolicyLevelType)","pos":[0,49]}]},{"pos":[7971,8005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8084,8118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8197,8231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8428,8445],"content":"PolicyHierarchy()","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyHierarchy()","pos":[0,17]}]},{"pos":[8810,8844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9103,9126],"content":"ResolvePolicy(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence)","pos":[0,23]}]},{"pos":[9545,9579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9653,9687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10009,10034],"content":"ResolvePolicy(Evidence[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence[])","pos":[0,25]}]},{"pos":[10463,10497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10571,10605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11165,11244],"content":"ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)","pos":[0,79]}]},{"pos":[11936,11970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12051,12085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12165,12199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12280,12314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12393,12427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12501,12535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12865,12894],"content":"ResolvePolicyGroups(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicyGroups(Evidence)","pos":[0,29]}]},{"pos":[13332,13366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13441,13475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13746,13775],"content":"ResolveSystemPolicy(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveSystemPolicy(Evidence)","pos":[0,29]}]},{"pos":[14212,14246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14320,14354],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14541,14553],"content":"SavePolicy()","needQuote":true,"needEscape":true,"nodes":[{"content":"SavePolicy()","pos":[0,12]}]},{"pos":[15071,15099],"content":"SavePolicyLevel(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"SavePolicyLevel(PolicyLevel)","pos":[0,28]}]},{"pos":[15505,15539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15736,15751],"content":"SecurityEnabled","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityEnabled","pos":[0,15]}]},{"pos":[16063,16097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16208,16221],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[16352,16372],"content":"CheckExecutionRights","needQuote":true,"needEscape":true,"nodes":[{"content":"CheckExecutionRights","pos":[0,20]}]},{"pos":[16558,16565],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16770,16815],"content":"CurrentThreadRequiresSecurityContextCapture()","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentThreadRequiresSecurityContextCapture()","pos":[0,45]}]},{"pos":[17051,17058],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17271,17299],"content":"GetStandardSandbox(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetStandardSandbox(Evidence)","pos":[0,28]}]},{"pos":[17525,17538],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[17711,17719],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[17976,18013],"content":"GetZoneAndOrigin(ArrayList,ArrayList)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetZoneAndOrigin(ArrayList,ArrayList)","pos":[0,37]}]},{"pos":[18259,18268],"content":"ArrayList","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayList","pos":[0,9]}]},{"pos":[18429,18438],"content":"ArrayList","needQuote":true,"needEscape":true,"nodes":[{"content":"ArrayList","pos":[0,9]}]},{"pos":[18654,18676],"content":"IsGranted(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGranted(IPermission)","pos":[0,22]}]},{"pos":[18866,18873],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19014,19025],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[19274,19321],"content":"LoadPolicyLevelFromFile(String,PolicyLevelType)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadPolicyLevelFromFile(String,PolicyLevelType)","pos":[0,47]}]},{"pos":[19597,19608],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[19750,19756],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19899,19914],"content":"PolicyLevelType","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevelType","pos":[0,15]}]},{"pos":[20173,20222],"content":"LoadPolicyLevelFromString(String,PolicyLevelType)","needQuote":true,"needEscape":true,"nodes":[{"content":"LoadPolicyLevelFromString(String,PolicyLevelType)","pos":[0,49]}]},{"pos":[20502,20513],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[20655,20661],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20804,20819],"content":"PolicyLevelType","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevelType","pos":[0,15]}]},{"pos":[21021,21038],"content":"PolicyHierarchy()","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyHierarchy()","pos":[0,17]}]},{"pos":[21246,21257],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[21485,21508],"content":"ResolvePolicy(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence)","pos":[0,23]}]},{"pos":[21724,21737],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[21910,21918],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[22146,22171],"content":"ResolvePolicy(Evidence[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence[])","pos":[0,25]}]},{"pos":[22391,22404],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[22577,22585],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[22934,23013],"content":"ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)","pos":[0,79]}]},{"pos":[23341,23354],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[23527,23535],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[23696,23709],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[23873,23886],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[24050,24063],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[24227,24240],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[24475,24504],"content":"ResolvePolicyGroups(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolvePolicyGroups(Evidence)","pos":[0,29]}]},{"pos":[24736,24747],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[24919,24927],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[25159,25188],"content":"ResolveSystemPolicy(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveSystemPolicy(Evidence)","pos":[0,29]}]},{"pos":[25416,25429],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[25602,25610],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[25800,25812],"content":"SavePolicy()","needQuote":true,"needEscape":true,"nodes":[{"content":"SavePolicy()","pos":[0,12]}]},{"pos":[26076,26104],"content":"SavePolicyLevel(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"SavePolicyLevel(PolicyLevel)","pos":[0,28]}]},{"pos":[26342,26353],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[26554,26569],"content":"SecurityEnabled","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityEnabled","pos":[0,15]}]},{"pos":[26745,26752],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.SecurityManager\n  id: SecurityManager\n  children:\n  - System.Security.SecurityManager.CheckExecutionRights\n  - System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  - System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  - System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  - System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  - System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  - System.Security.SecurityManager.PolicyHierarchy\n  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  - System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  - System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  - System.Security.SecurityManager.SavePolicy\n  - System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  - System.Security.SecurityManager.SecurityEnabled\n  langs:\n  - csharp\n  name: SecurityManager\n  nameWithType: SecurityManager\n  fullName: System.Security.SecurityManager\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public static class SecurityManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.CheckExecutionRights\n  id: CheckExecutionRights\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: CheckExecutionRights\n  nameWithType: SecurityManager.CheckExecutionRights\n  fullName: System.Security.SecurityManager.CheckExecutionRights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static bool CheckExecutionRights { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  id: CurrentThreadRequiresSecurityContextCapture\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: CurrentThreadRequiresSecurityContextCapture()\n  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static bool CurrentThreadRequiresSecurityContextCapture ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  id: GetStandardSandbox(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: GetStandardSandbox(Evidence)\n  nameWithType: SecurityManager.GetStandardSandbox(Evidence)\n  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.PermissionSet GetStandardSandbox (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  id: GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: GetZoneAndOrigin(ArrayList,ArrayList)\n  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)\n  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static void GetZoneAndOrigin (out System.Collections.ArrayList zone, out System.Collections.ArrayList origin);\n    parameters:\n    - id: zone\n      type: System.Collections.ArrayList\n      description: Parameter description to be filled\n    - id: origin\n      type: System.Collections.ArrayList\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  id: IsGranted(System.Security.IPermission)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: IsGranted(IPermission)\n  nameWithType: SecurityManager.IsGranted(IPermission)\n  fullName: System.Security.SecurityManager.IsGranted(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static bool IsGranted (System.Security.IPermission perm);\n    parameters:\n    - id: perm\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  id: LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: LoadPolicyLevelFromFile(String,PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)\n  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromFile (string path, System.Security.PolicyLevelType type);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.PolicyLevelType\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  id: LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: LoadPolicyLevelFromString(String,PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)\n  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.Policy.PolicyLevel LoadPolicyLevelFromString (string str, System.Security.PolicyLevelType type);\n    parameters:\n    - id: str\n      type: System.String\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.PolicyLevelType\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.PolicyHierarchy\n  id: PolicyHierarchy\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: PolicyHierarchy()\n  nameWithType: SecurityManager.PolicyHierarchy()\n  fullName: System.Security.SecurityManager.PolicyHierarchy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Collections.IEnumerator PolicyHierarchy ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  id: ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence)\n  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  overload: System.Security.SecurityManager.ResolvePolicy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  id: ResolvePolicy(System.Security.Policy.Evidence[])\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence[])\n  nameWithType: SecurityManager.ResolvePolicy(Evidence[])\n  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence[] evidences);\n    parameters:\n    - id: evidences\n      type: System.Security.Policy.Evidence[]\n      description: Parameter description to be filled\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  overload: System.Security.SecurityManager.ResolvePolicy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  id: ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence, System.Security.PermissionSet reqdPset, System.Security.PermissionSet optPset, System.Security.PermissionSet denyPset, out System.Security.PermissionSet denied);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: reqdPset\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optPset\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: denyPset\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: denied\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  overload: System.Security.SecurityManager.ResolvePolicy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  id: ResolvePolicyGroups(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolvePolicyGroups(Evidence)\n  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)\n  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Collections.IEnumerator ResolvePolicyGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  id: ResolveSystemPolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: ResolveSystemPolicy(Evidence)\n  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)\n  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static System.Security.PermissionSet ResolveSystemPolicy (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.SavePolicy\n  id: SavePolicy\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: SavePolicy()\n  nameWithType: SecurityManager.SavePolicy()\n  fullName: System.Security.SecurityManager.SavePolicy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static void SavePolicy ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  id: SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: SavePolicyLevel(PolicyLevel)\n  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)\n  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static void SavePolicyLevel (System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityManager.SecurityEnabled\n  id: SecurityEnabled\n  parent: System.Security.SecurityManager\n  langs:\n  - csharp\n  name: SecurityEnabled\n  nameWithType: SecurityManager.SecurityEnabled\n  fullName: System.Security.SecurityManager.SecurityEnabled\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public static bool SecurityEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.SecurityManager.CheckExecutionRights\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: CheckExecutionRights\n  nameWithType: SecurityManager.CheckExecutionRights\n  fullName: System.Security.SecurityManager.CheckExecutionRights\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: CurrentThreadRequiresSecurityContextCapture()\n  nameWithType: SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n  fullName: System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.SecurityManager.GetStandardSandbox(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: GetStandardSandbox(Evidence)\n  nameWithType: SecurityManager.GetStandardSandbox(Evidence)\n  fullName: System.Security.SecurityManager.GetStandardSandbox(Evidence)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.SecurityManager.GetZoneAndOrigin(System.Collections.ArrayList@,System.Collections.ArrayList@)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: GetZoneAndOrigin(ArrayList,ArrayList)\n  nameWithType: SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)\n  fullName: System.Security.SecurityManager.GetZoneAndOrigin(ArrayList,ArrayList)\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Collections.ArrayList\n  parent: System.Collections\n  isExternal: false\n  name: ArrayList\n  nameWithType: ArrayList\n  fullName: System.Collections.ArrayList\n- uid: System.Security.SecurityManager.IsGranted(System.Security.IPermission)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: IsGranted(IPermission)\n  nameWithType: SecurityManager.IsGranted(IPermission)\n  fullName: System.Security.SecurityManager.IsGranted(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: LoadPolicyLevelFromFile(String,PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)\n  fullName: System.Security.SecurityManager.LoadPolicyLevelFromFile(String,PolicyLevelType)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.PolicyLevelType\n  parent: System.Security\n  isExternal: false\n  name: PolicyLevelType\n  nameWithType: PolicyLevelType\n  fullName: System.Security.PolicyLevelType\n- uid: System.Security.SecurityManager.LoadPolicyLevelFromString(System.String,System.Security.PolicyLevelType)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: LoadPolicyLevelFromString(String,PolicyLevelType)\n  nameWithType: SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)\n  fullName: System.Security.SecurityManager.LoadPolicyLevelFromString(String,PolicyLevelType)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.PolicyLevelType\n  parent: System.Security\n  isExternal: false\n  name: PolicyLevelType\n  nameWithType: PolicyLevelType\n  fullName: System.Security.PolicyLevelType\n- uid: System.Security.SecurityManager.PolicyHierarchy\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: PolicyHierarchy()\n  nameWithType: SecurityManager.PolicyHierarchy()\n  fullName: System.Security.SecurityManager.PolicyHierarchy()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence)\n  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence[])\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence[])\n  nameWithType: SecurityManager.ResolvePolicy(Evidence[])\n  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence[])\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence[]\n- uid: System.Security.SecurityManager.ResolvePolicy(System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet@)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.Security.SecurityManager.ResolvePolicy(Evidence,PermissionSet,PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.SecurityManager.ResolvePolicyGroups(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolvePolicyGroups(Evidence)\n  nameWithType: SecurityManager.ResolvePolicyGroups(Evidence)\n  fullName: System.Security.SecurityManager.ResolvePolicyGroups(Evidence)\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.SecurityManager.ResolveSystemPolicy(System.Security.Policy.Evidence)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: ResolveSystemPolicy(Evidence)\n  nameWithType: SecurityManager.ResolveSystemPolicy(Evidence)\n  fullName: System.Security.SecurityManager.ResolveSystemPolicy(Evidence)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.SecurityManager.SavePolicy\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SavePolicy()\n  nameWithType: SecurityManager.SavePolicy()\n  fullName: System.Security.SecurityManager.SavePolicy()\n- uid: System.Security.SecurityManager.SavePolicyLevel(System.Security.Policy.PolicyLevel)\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SavePolicyLevel(PolicyLevel)\n  nameWithType: SecurityManager.SavePolicyLevel(PolicyLevel)\n  fullName: System.Security.SecurityManager.SavePolicyLevel(PolicyLevel)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.SecurityManager.SecurityEnabled\n  parent: System.Security.SecurityManager\n  isExternal: false\n  name: SecurityEnabled\n  nameWithType: SecurityManager.SecurityEnabled\n  fullName: System.Security.SecurityManager.SecurityEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.SecurityManager.ResolvePolicy*\n  parent: System.Security.SecurityManager\n  isExternal: false\n  nameWithType: SecurityManager.\n"}