{"nodes":[{"pos":[515,523],"content":"Debugger","needQuote":true,"needEscape":true,"nodes":[{"content":"Debugger","pos":[0,8]}]},{"pos":[1235,1245],"content":"Debugger()","needQuote":true,"needEscape":true,"nodes":[{"content":"Debugger()","pos":[0,10]}]},{"pos":[1642,1649],"content":"Break()","needQuote":true,"needEscape":true,"nodes":[{"content":"Break()","pos":[0,7]}]},{"pos":[2064,2079],"content":"DefaultCategory","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultCategory","pos":[0,15]}]},{"pos":[2377,2411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2590,2600],"content":"IsAttached","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAttached","pos":[0,10]}]},{"pos":[2884,2918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3095,3106],"content":"IsLogging()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsLogging()","pos":[0,11]}]},{"pos":[3403,3437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3608,3616],"content":"Launch()","needQuote":true,"needEscape":true,"nodes":[{"content":"Launch()","pos":[0,8]}]},{"pos":[3904,3938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4187,4211],"content":"Log(Int32,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log(Int32,String,String)","pos":[0,24]}]},{"pos":[4569,4603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4668,4702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4766,4800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5017,5048],"content":"NotifyOfCrossThreadDependency()","needQuote":true,"needEscape":true,"nodes":[{"content":"NotifyOfCrossThreadDependency()","pos":[0,31]}]},{"pos":[5457,5470],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5578,5588],"content":"Debugger()","needQuote":true,"needEscape":true,"nodes":[{"content":"Debugger()","pos":[0,10]}]},{"pos":[5783,5790],"content":"Break()","needQuote":true,"needEscape":true,"nodes":[{"content":"Break()","pos":[0,7]}]},{"pos":[5989,6004],"content":"DefaultCategory","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultCategory","pos":[0,15]}]},{"pos":[6168,6174],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6336,6346],"content":"IsAttached","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAttached","pos":[0,10]}]},{"pos":[6501,6508],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6671,6682],"content":"IsLogging()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsLogging()","pos":[0,11]}]},{"pos":[6839,6846],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7006,7014],"content":"Launch()","needQuote":true,"needEscape":true,"nodes":[{"content":"Launch()","pos":[0,8]}]},{"pos":[7165,7172],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7371,7395],"content":"Log(Int32,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Log(Int32,String,String)","pos":[0,24]}]},{"pos":[7576,7581],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7695,7701],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7817,7823],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8004,8035],"content":"NotifyOfCrossThreadDependency()","needQuote":true,"needEscape":true,"nodes":[{"content":"NotifyOfCrossThreadDependency()","pos":[0,31]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Debugger\n  id: Debugger\n  children:\n  - System.Diagnostics.Debugger.#ctor\n  - System.Diagnostics.Debugger.Break\n  - System.Diagnostics.Debugger.DefaultCategory\n  - System.Diagnostics.Debugger.IsAttached\n  - System.Diagnostics.Debugger.IsLogging\n  - System.Diagnostics.Debugger.Launch\n  - System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  - System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  langs:\n  - csharp\n  name: Debugger\n  nameWithType: Debugger\n  fullName: System.Diagnostics.Debugger\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class Debugger\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Debugger()\n  nameWithType: Debugger.Debugger()\n  fullName: System.Diagnostics.Debugger.Debugger()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public Debugger ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.Break\n  id: Break\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Break()\n  nameWithType: Debugger.Break()\n  fullName: System.Diagnostics.Debugger.Break()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static void Break ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.DefaultCategory\n  id: DefaultCategory\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: DefaultCategory\n  nameWithType: Debugger.DefaultCategory\n  fullName: System.Diagnostics.Debugger.DefaultCategory\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static readonly string DefaultCategory;\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.IsAttached\n  id: IsAttached\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: IsAttached\n  nameWithType: Debugger.IsAttached\n  fullName: System.Diagnostics.Debugger.IsAttached\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static bool IsAttached { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.IsLogging\n  id: IsLogging\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: IsLogging()\n  nameWithType: Debugger.IsLogging()\n  fullName: System.Diagnostics.Debugger.IsLogging()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static bool IsLogging ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.Launch\n  id: Launch\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Launch()\n  nameWithType: Debugger.Launch()\n  fullName: System.Diagnostics.Debugger.Launch()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static bool Launch ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  id: Log(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: Log(Int32,String,String)\n  nameWithType: Debugger.Log(Int32,String,String)\n  fullName: System.Diagnostics.Debugger.Log(Int32,String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static void Log (int level, string category, string message);\n    parameters:\n    - id: level\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: category\n      type: System.String\n      description: Parameter description to be filled\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  id: NotifyOfCrossThreadDependency\n  parent: System.Diagnostics.Debugger\n  langs:\n  - csharp\n  name: NotifyOfCrossThreadDependency()\n  nameWithType: Debugger.NotifyOfCrossThreadDependency()\n  fullName: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics\n  syntax:\n    content: public static void NotifyOfCrossThreadDependency ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Debugger.#ctor\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Debugger()\n  nameWithType: Debugger.Debugger()\n  fullName: System.Diagnostics.Debugger.Debugger()\n- uid: System.Diagnostics.Debugger.Break\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Break()\n  nameWithType: Debugger.Break()\n  fullName: System.Diagnostics.Debugger.Break()\n- uid: System.Diagnostics.Debugger.DefaultCategory\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: DefaultCategory\n  nameWithType: Debugger.DefaultCategory\n  fullName: System.Diagnostics.Debugger.DefaultCategory\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Debugger.IsAttached\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: IsAttached\n  nameWithType: Debugger.IsAttached\n  fullName: System.Diagnostics.Debugger.IsAttached\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Debugger.IsLogging\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: IsLogging()\n  nameWithType: Debugger.IsLogging()\n  fullName: System.Diagnostics.Debugger.IsLogging()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Debugger.Launch\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Launch()\n  nameWithType: Debugger.Launch()\n  fullName: System.Diagnostics.Debugger.Launch()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Debugger.Log(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: Log(Int32,String,String)\n  nameWithType: Debugger.Log(Int32,String,String)\n  fullName: System.Diagnostics.Debugger.Log(Int32,String,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency\n  parent: System.Diagnostics.Debugger\n  isExternal: false\n  name: NotifyOfCrossThreadDependency()\n  nameWithType: Debugger.NotifyOfCrossThreadDependency()\n  fullName: System.Diagnostics.Debugger.NotifyOfCrossThreadDependency()\n"}