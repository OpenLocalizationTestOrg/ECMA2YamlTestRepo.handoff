{"nodes":[{"pos":[1214,1224],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[1913,1943],"content":"Compare(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(FontWeight,FontWeight)","pos":[0,30]}]},{"pos":[2353,2387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2461,2495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2552,2586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2783,2797],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3111,3145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3204,3238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3505,3523],"content":"Equals(FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FontWeight)","pos":[0,18]}]},{"pos":[3867,3901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3960,3994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4259,4284],"content":"FromOpenTypeWeight(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromOpenTypeWeight(Int32)","pos":[0,25]}]},{"pos":[4663,4697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4767,4801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4978,4991],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5297,5331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5614,5648],"content":"op_Equality(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FontWeight,FontWeight)","pos":[0,34]}]},{"pos":[6073,6107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6181,6215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6274,6308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6597,6634],"content":"op_GreaterThan(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(FontWeight,FontWeight)","pos":[0,37]}]},{"pos":[7068,7102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7176,7210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7269,7303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7606,7650],"content":"op_GreaterThanOrEqual(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(FontWeight,FontWeight)","pos":[0,44]}]},{"pos":[8105,8139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8213,8247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8306,8340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8627,8663],"content":"op_Inequality(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FontWeight,FontWeight)","pos":[0,36]}]},{"pos":[9094,9128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9202,9236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9295,9329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9612,9646],"content":"op_LessThan(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(FontWeight,FontWeight)","pos":[0,34]}]},{"pos":[10071,10105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10179,10213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10272,10306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10603,10644],"content":"op_LessThanOrEqual(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(FontWeight,FontWeight)","pos":[0,41]}]},{"pos":[11090,11124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11198,11232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11291,11325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11626,11678],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[12101,12135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12209,12243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12301,12335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12522,12540],"content":"ToOpenTypeWeight()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToOpenTypeWeight()","pos":[0,18]}]},{"pos":[12852,12886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13057,13067],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13368,13402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13516,13532],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[13691,13721],"content":"Compare(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(FontWeight,FontWeight)","pos":[0,30]}]},{"pos":[13914,13919],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14053,14063],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[14215,14225],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[14410,14424],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14587,14594],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14712,14718],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14899,14917],"content":"Equals(FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FontWeight)","pos":[0,18]}]},{"pos":[15088,15095],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15233,15243],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[15439,15464],"content":"FromOpenTypeWeight(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromOpenTypeWeight(Int32)","pos":[0,25]}]},{"pos":[15668,15678],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[15809,15814],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15971,15984],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16143,16148],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16358,16392],"content":"op_Equality(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FontWeight,FontWeight)","pos":[0,34]}]},{"pos":[16595,16602],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16740,16750],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[16902,16912],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[17143,17180],"content":"op_GreaterThan(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(FontWeight,FontWeight)","pos":[0,37]}]},{"pos":[17389,17396],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17534,17544],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[17696,17706],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[17944,17988],"content":"op_GreaterThanOrEqual(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(FontWeight,FontWeight)","pos":[0,44]}]},{"pos":[18211,18218],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18356,18366],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[18518,18528],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[18758,18794],"content":"op_Inequality(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FontWeight,FontWeight)","pos":[0,36]}]},{"pos":[19001,19008],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19146,19156],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[19308,19318],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[19546,19580],"content":"op_LessThan(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(FontWeight,FontWeight)","pos":[0,34]}]},{"pos":[19783,19790],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19928,19938],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[20090,20100],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[20335,20376],"content":"op_LessThanOrEqual(FontWeight,FontWeight)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(FontWeight,FontWeight)","pos":[0,41]}]},{"pos":[20593,20600],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20738,20748],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[20900,20910],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[21140,21192],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[21430,21436],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21552,21558],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21683,21698],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[21880,21898],"content":"ToOpenTypeWeight()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToOpenTypeWeight()","pos":[0,18]}]},{"pos":[22067,22072],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22226,22236],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22390,22396],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FontWeight\n  id: FontWeight\n  children:\n  - System.Windows.FontWeight.Compare(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.Equals(System.Object)\n  - System.Windows.FontWeight.Equals(System.Windows.FontWeight)\n  - System.Windows.FontWeight.FromOpenTypeWeight(System.Int32)\n  - System.Windows.FontWeight.GetHashCode\n  - System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.op_GreaterThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.op_GreaterThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.op_LessThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.op_LessThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  - System.Windows.FontWeight.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.FontWeight.ToOpenTypeWeight\n  - System.Windows.FontWeight.ToString\n  langs:\n  - csharp\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.FontWeightConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None)]\n\n      public struct FontWeight : IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.Compare(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: Compare(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: Compare(FontWeight,FontWeight)\n  nameWithType: FontWeight.Compare(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.Compare(FontWeight,FontWeight)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static int Compare (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FontWeight.Equals(Object)\n  fullName: System.Windows.FontWeight.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.FontWeight.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.Equals(System.Windows.FontWeight)\n  id: Equals(System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: Equals(FontWeight)\n  nameWithType: FontWeight.Equals(FontWeight)\n  fullName: System.Windows.FontWeight.Equals(FontWeight)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Equals (System.Windows.FontWeight obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.FontWeight.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.FromOpenTypeWeight(System.Int32)\n  id: FromOpenTypeWeight(System.Int32)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: FromOpenTypeWeight(Int32)\n  nameWithType: FontWeight.FromOpenTypeWeight(Int32)\n  fullName: System.Windows.FontWeight.FromOpenTypeWeight(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static System.Windows.FontWeight FromOpenTypeWeight (int weightValue);\n    parameters:\n    - id: weightValue\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FontWeight.GetHashCode()\n  fullName: System.Windows.FontWeight.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: op_Equality(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_Equality(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_Equality(FontWeight,FontWeight)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Equality (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.op_GreaterThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: op_GreaterThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: op_GreaterThan(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_GreaterThan(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_GreaterThan(FontWeight,FontWeight)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_GreaterThan (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.op_GreaterThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: op_GreaterThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_GreaterThanOrEqual(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_GreaterThanOrEqual(FontWeight,FontWeight)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: op_Inequality(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_Inequality(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_Inequality(FontWeight,FontWeight)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Inequality (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.op_LessThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: op_LessThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: op_LessThan(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_LessThan(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_LessThan(FontWeight,FontWeight)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_LessThan (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.op_LessThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  id: op_LessThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_LessThanOrEqual(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_LessThanOrEqual(FontWeight,FontWeight)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_LessThanOrEqual (System.Windows.FontWeight left, System.Windows.FontWeight right);\n    parameters:\n    - id: left\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: FontWeight.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.FontWeight.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.ToOpenTypeWeight\n  id: ToOpenTypeWeight\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: ToOpenTypeWeight()\n  nameWithType: FontWeight.ToOpenTypeWeight()\n  fullName: System.Windows.FontWeight.ToOpenTypeWeight()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public int ToOpenTypeWeight ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontWeight.ToString\n  id: ToString\n  parent: System.Windows.FontWeight\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FontWeight.ToString()\n  fullName: System.Windows.FontWeight.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.FontWeight.Compare(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: Compare(FontWeight,FontWeight)\n  nameWithType: FontWeight.Compare(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.Compare(FontWeight,FontWeight)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.Equals(System.Object)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FontWeight.Equals(Object)\n  fullName: System.Windows.FontWeight.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FontWeight.Equals(System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: Equals(FontWeight)\n  nameWithType: FontWeight.Equals(FontWeight)\n  fullName: System.Windows.FontWeight.Equals(FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.FromOpenTypeWeight(System.Int32)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: FromOpenTypeWeight(Int32)\n  nameWithType: FontWeight.FromOpenTypeWeight(Int32)\n  fullName: System.Windows.FontWeight.FromOpenTypeWeight(Int32)\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontWeight.GetHashCode\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FontWeight.GetHashCode()\n  fullName: System.Windows.FontWeight.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontWeight.op_Equality(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: op_Equality(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_Equality(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_Equality(FontWeight,FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.op_GreaterThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: op_GreaterThan(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_GreaterThan(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_GreaterThan(FontWeight,FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.op_GreaterThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: op_GreaterThanOrEqual(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_GreaterThanOrEqual(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_GreaterThanOrEqual(FontWeight,FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.op_Inequality(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: op_Inequality(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_Inequality(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_Inequality(FontWeight,FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.op_LessThan(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: op_LessThan(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_LessThan(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_LessThan(FontWeight,FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.op_LessThanOrEqual(System.Windows.FontWeight,System.Windows.FontWeight)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: op_LessThanOrEqual(FontWeight,FontWeight)\n  nameWithType: FontWeight.op_LessThanOrEqual(FontWeight,FontWeight)\n  fullName: System.Windows.FontWeight.op_LessThanOrEqual(FontWeight,FontWeight)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.FontWeight.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: FontWeight.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.FontWeight.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.FontWeight.ToOpenTypeWeight\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: ToOpenTypeWeight()\n  nameWithType: FontWeight.ToOpenTypeWeight()\n  fullName: System.Windows.FontWeight.ToOpenTypeWeight()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontWeight.ToString\n  parent: System.Windows.FontWeight\n  isExternal: false\n  name: ToString()\n  nameWithType: FontWeight.ToString()\n  fullName: System.Windows.FontWeight.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.FontWeight.Equals*\n  parent: System.Windows.FontWeight\n  isExternal: false\n  nameWithType: FontWeight.\n"}