{"nodes":[{"pos":[1133,1146],"content":"ISymbolMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolMethod","pos":[0,13]}]},{"pos":[1605,1619],"content":"GetNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNamespace()","pos":[0,14]}]},{"pos":[2028,2062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2421,2459],"content":"GetOffset(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffset(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[2949,2983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3043,3077],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3139,3173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3230,3264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3483,3498],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[3912,3946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4305,4343],"content":"GetRanges(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRanges(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[4835,4869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4929,4963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5025,5059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5118,5152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5389,5404],"content":"GetScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetScope(Int32)","pos":[0,15]}]},{"pos":[5784,5818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5906,5940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6417,6493],"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","pos":[0,76]}]},{"pos":[7093,7127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7228,7262],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7325,7359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7424,7458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7524,7558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7626,7660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8047,8099],"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","pos":[0,52]}]},{"pos":[8628,8662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8725,8759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8824,8858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8917,8951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9162,9171],"content":"RootScope","needQuote":true,"needEscape":true,"nodes":[{"content":"RootScope","pos":[0,9]}]},{"pos":[9547,9581],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9810,9828],"content":"SequencePointCount","needQuote":true,"needEscape":true,"nodes":[{"content":"SequencePointCount","pos":[0,18]}]},{"pos":[10160,10194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10397,10402],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[10764,10798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11008,11022],"content":"GetNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNamespace()","pos":[0,14]}]},{"pos":[11264,11280],"content":"ISymbolNamespace","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolNamespace","pos":[0,16]}]},{"pos":[11593,11631],"content":"GetOffset(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffset(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[11862,11867],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12038,12053],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[12210,12215],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12328,12333],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12530,12545],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[12788,12803],"content":"ISymbolVariable","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolVariable","pos":[0,15]}]},{"pos":[13116,13154],"content":"GetRanges(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRanges(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[13385,13390],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13563,13578],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[13735,13740],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13853,13858],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14064,14079],"content":"GetScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetScope(Int32)","pos":[0,15]}]},{"pos":[14319,14331],"content":"ISymbolScope","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolScope","pos":[0,12]}]},{"pos":[14482,14487],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14813,14889],"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","pos":[0,76]}]},{"pos":[15196,15201],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15374,15389],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[15548,15553],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15668,15673],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15788,15793],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15908,15913],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16196,16248],"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","pos":[0,52]}]},{"pos":[16509,16516],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16691,16706],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[16865,16870],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16985,16990],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17185,17194],"content":"RootScope","needQuote":true,"needEscape":true,"nodes":[{"content":"RootScope","pos":[0,9]}]},{"pos":[17422,17434],"content":"ISymbolScope","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolScope","pos":[0,12]}]},{"pos":[17674,17692],"content":"SequencePointCount","needQuote":true,"needEscape":true,"nodes":[{"content":"SequencePointCount","pos":[0,18]}]},{"pos":[17883,17888],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18077,18082],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[18301,18312],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod\n  id: ISymbolMethod\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  - System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  - System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  langs:\n  - csharp\n  name: ISymbolMethod\n  nameWithType: ISymbolMethod\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolMethod\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  id: GetNamespace\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetNamespace()\n  nameWithType: ISymbolMethod.GetNamespace()\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetOffset(ISymbolDocument,Int32,Int32)\n  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: Parameter description to be filled\n    - id: line\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: column\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  id: GetParameters\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: ISymbolMethod.GetParameters()\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetRanges(ISymbolDocument,Int32,Int32)\n  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: Parameter description to be filled\n    - id: line\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: column\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  id: GetScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetScope(Int32)\n  nameWithType: ISymbolMethod.GetScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);\n    parameters:\n    - id: offsets\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: documents\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: Parameter description to be filled\n    - id: lines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: columns\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endLines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endColumns\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);\n    parameters:\n    - id: docs\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: Parameter description to be filled\n    - id: lines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: columns\n      type: System.Int32[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  id: RootScope\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: RootScope\n  nameWithType: ISymbolMethod.RootScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  id: SequencePointCount\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: SequencePointCount\n  nameWithType: ISymbolMethod.SequencePointCount\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public int SequencePointCount { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  id: Token\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  langs:\n  - csharp\n  name: Token\n  nameWithType: ISymbolMethod.Token\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.SymbolToken Token { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetNamespace()\n  nameWithType: ISymbolMethod.GetNamespace()\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetNamespace()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetOffset(ISymbolDocument,Int32,Int32)\n  nameWithType: ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetOffset(ISymbolDocument,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetParameters()\n  nameWithType: ISymbolMethod.GetParameters()\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetParameters()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetRanges(ISymbolDocument,Int32,Int32)\n  nameWithType: ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetRanges(ISymbolDocument,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetScope(Int32)\n  nameWithType: ISymbolMethod.GetScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetScope(Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  nameWithType: ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: RootScope\n  nameWithType: ISymbolMethod.RootScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.RootScope\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: SequencePointCount\n  nameWithType: ISymbolMethod.SequencePointCount\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.SequencePointCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolMethod.Token\n  parent: System.Diagnostics.SymbolStore.ISymbolMethod\n  isExternal: false\n  name: Token\n  nameWithType: ISymbolMethod.Token\n  fullName: System.Diagnostics.SymbolStore.ISymbolMethod.Token\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n"}