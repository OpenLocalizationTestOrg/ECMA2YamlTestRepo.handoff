{"nodes":[{"pos":[541,578],"content":"ManipulationBoundaryFeedbackEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationBoundaryFeedbackEventArgs","pos":[0,37]}]},{"pos":[1899,1915],"content":"BoundaryFeedback","needQuote":true,"needEscape":true,"nodes":[{"content":"BoundaryFeedback","pos":[0,16]}]},{"pos":[2338,2372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2691,2726],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[3211,3245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3315,3349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3612,3633],"content":"ManipulationContainer","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationContainer","pos":[0,21]}]},{"pos":[4051,4085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4330,4342],"content":"Manipulators","needQuote":true,"needEscape":true,"nodes":[{"content":"Manipulators","pos":[0,12]}]},{"pos":[4823,4857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4990,5025],"content":"System.Windows.Input.InputEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.InputEventArgs","pos":[0,35]}]},{"pos":[5206,5222],"content":"BoundaryFeedback","needQuote":true,"needEscape":true,"nodes":[{"content":"BoundaryFeedback","pos":[0,16]}]},{"pos":[5487,5504],"content":"ManipulationDelta","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationDelta","pos":[0,17]}]},{"pos":[5803,5838],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[6104,6112],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[6232,6238],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6473,6494],"content":"ManipulationContainer","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationContainer","pos":[0,21]}]},{"pos":[6753,6766],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[7014,7026],"content":"Manipulators","needQuote":true,"needEscape":true,"nodes":[{"content":"Manipulators","pos":[0,12]}]},{"pos":[7324,7349],"content":"IEnumerable<ph id=\"ph1\">&lt;IManipulator&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<IManipulator>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  id: ManipulationBoundaryFeedbackEventArgs\n  children:\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  - System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  langs:\n  - csharp\n  name: ManipulationBoundaryFeedbackEventArgs\n  nameWithType: ManipulationBoundaryFeedbackEventArgs\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  type: Class\n  syntax:\n    content: 'public sealed class ManipulationBoundaryFeedbackEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  id: BoundaryFeedback\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: BoundaryFeedback\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.ManipulationDelta BoundaryFeedback { get; }\n    return:\n      type: System.Windows.Input.ManipulationDelta\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: genericTarget\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  id: ManipulationContainer\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: ManipulationContainer\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.IInputElement ManipulationContainer { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  id: Manipulators\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  langs:\n  - csharp\n  name: Manipulators\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: BoundaryFeedback\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.BoundaryFeedback\n- uid: System.Windows.Input.ManipulationDelta\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.ManipulationContainer\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n  parent: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationBoundaryFeedbackEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationBoundaryFeedbackEventArgs.Manipulators\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<IManipulator>\n  nameWithType: IEnumerable<IManipulator>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>\n"}