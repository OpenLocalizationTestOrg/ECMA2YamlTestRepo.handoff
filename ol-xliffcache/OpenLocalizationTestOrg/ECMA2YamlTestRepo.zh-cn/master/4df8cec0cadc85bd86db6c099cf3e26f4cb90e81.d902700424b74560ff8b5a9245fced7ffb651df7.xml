{"nodes":[{"pos":[383,399],"content":"GenericPrincipal","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPrincipal","pos":[0,16]}]},{"pos":[2908,2944],"content":"GenericPrincipal(IIdentity,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPrincipal(IIdentity,String[])","pos":[0,36]}]},{"pos":[3406,3440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3504,3538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3743,3751],"content":"Identity","needQuote":true,"needEscape":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[4113,4147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4382,4398],"content":"IsInRole(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInRole(String)","pos":[0,16]}]},{"pos":[4746,4780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4839,4873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5009,5047],"content":"System.Security.Claims.ClaimsPrincipal","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Claims.ClaimsPrincipal","pos":[0,38]}]},{"pos":[5238,5274],"content":"GenericPrincipal(IIdentity,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPrincipal(IIdentity,String[])","pos":[0,36]}]},{"pos":[5544,5553],"content":"IIdentity","needQuote":true,"needEscape":true,"nodes":[{"content":"IIdentity","pos":[0,9]}]},{"pos":[5694,5700],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[5892,5900],"content":"Identity","needQuote":true,"needEscape":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[6114,6123],"content":"IIdentity","needQuote":true,"needEscape":true,"nodes":[{"content":"IIdentity","pos":[0,9]}]},{"pos":[6353,6369],"content":"IsInRole(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInRole(String)","pos":[0,16]}]},{"pos":[6559,6566],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6684,6690],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.GenericPrincipal\n  id: GenericPrincipal\n  children:\n  - System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\n  - System.Security.Principal.GenericPrincipal.Identity\n  - System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  langs:\n  - csharp\n  name: GenericPrincipal\n  nameWithType: GenericPrincipal\n  fullName: System.Security.Principal.GenericPrincipal\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class GenericPrincipal : System.Security.Claims.ClaimsPrincipal\n  inheritance:\n  - System.Object\n  - System.Security.Claims.ClaimsPrincipal\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})\n  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)\n  - System.Security.Claims.ClaimsPrincipal.Claims\n  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector\n  - System.Security.Claims.ClaimsPrincipal.Clone\n  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)\n  - System.Security.Claims.ClaimsPrincipal.Current\n  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData\n  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)\n  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)\n  - System.Security.Claims.ClaimsPrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})\n  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)\n  - System.Security.Claims.ClaimsPrincipal.Identities\n  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector\n  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)\n  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\n  id: '#ctor(System.Security.Principal.IIdentity,System.String[])'\n  parent: System.Security.Principal.GenericPrincipal\n  langs:\n  - csharp\n  name: GenericPrincipal(IIdentity,String[])\n  nameWithType: GenericPrincipal.GenericPrincipal(IIdentity,String[])\n  fullName: System.Security.Principal.GenericPrincipal.GenericPrincipal(IIdentity,String[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public GenericPrincipal (System.Security.Principal.IIdentity identity, string[] roles);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IIdentity\n      description: Parameter description to be filled\n    - id: roles\n      type: System.String[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.GenericPrincipal.Identity\n  id: Identity\n  parent: System.Security.Principal.GenericPrincipal\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: GenericPrincipal.Identity\n  fullName: System.Security.Principal.GenericPrincipal.Identity\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override System.Security.Principal.IIdentity Identity { get; }\n    return:\n      type: System.Security.Principal.IIdentity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  id: IsInRole(System.String)\n  parent: System.Security.Principal.GenericPrincipal\n  langs:\n  - csharp\n  name: IsInRole(String)\n  nameWithType: GenericPrincipal.IsInRole(String)\n  fullName: System.Security.Principal.GenericPrincipal.IsInRole(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override bool IsInRole (string role);\n    parameters:\n    - id: role\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Claims.ClaimsPrincipal\n  isExternal: false\n  name: System.Security.Claims.ClaimsPrincipal\n- uid: System.Security.Principal.GenericPrincipal.#ctor(System.Security.Principal.IIdentity,System.String[])\n  parent: System.Security.Principal.GenericPrincipal\n  isExternal: false\n  name: GenericPrincipal(IIdentity,String[])\n  nameWithType: GenericPrincipal.GenericPrincipal(IIdentity,String[])\n  fullName: System.Security.Principal.GenericPrincipal.GenericPrincipal(IIdentity,String[])\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  nameWithType: IIdentity\n  fullName: System.Security.Principal.IIdentity\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Security.Principal.GenericPrincipal.Identity\n  parent: System.Security.Principal.GenericPrincipal\n  isExternal: false\n  name: Identity\n  nameWithType: GenericPrincipal.Identity\n  fullName: System.Security.Principal.GenericPrincipal.Identity\n- uid: System.Security.Principal.IIdentity\n  parent: System.Security.Principal\n  isExternal: false\n  name: IIdentity\n  nameWithType: IIdentity\n  fullName: System.Security.Principal.IIdentity\n- uid: System.Security.Principal.GenericPrincipal.IsInRole(System.String)\n  parent: System.Security.Principal.GenericPrincipal\n  isExternal: false\n  name: IsInRole(String)\n  nameWithType: GenericPrincipal.IsInRole(String)\n  fullName: System.Security.Principal.GenericPrincipal.IsInRole(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}