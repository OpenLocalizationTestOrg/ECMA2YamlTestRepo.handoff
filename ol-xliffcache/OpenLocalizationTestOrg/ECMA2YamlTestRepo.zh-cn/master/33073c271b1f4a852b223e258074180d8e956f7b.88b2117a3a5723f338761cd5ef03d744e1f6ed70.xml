{"nodes":[{"pos":[953,965],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[2528,2542],"content":"BitmapEffect()","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect()","pos":[0,14]}]},{"pos":[3018,3025],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[3403,3437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3658,3677],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[4091,4125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4358,4383],"content":"CreateBitmapEffectOuter()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateBitmapEffectOuter()","pos":[0,25]}]},{"pos":[4825,4859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5088,5111],"content":"CreateUnmanagedEffect()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateUnmanagedEffect()","pos":[0,23]}]},{"pos":[5549,5583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5884,5912],"content":"GetOutput(BitmapEffectInput)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOutput(BitmapEffectInput)","pos":[0,28]}]},{"pos":[6394,6428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6514,6548],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6949,6994],"content":"InitializeBitmapEffect(SafeHandle,SafeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"InitializeBitmapEffect(SafeHandle,SafeHandle)","pos":[0,45]}]},{"pos":[7553,7587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7683,7717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8062,8096],"content":"SetValue(SafeHandle,String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(SafeHandle,String,Object)","pos":[0,34]}]},{"pos":[8589,8623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8692,8726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8788,8822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9151,9191],"content":"UpdateUnmanagedPropertyState(SafeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateUnmanagedPropertyState(SafeHandle)","pos":[0,40]}]},{"pos":[9701,9735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9874,9915],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[10051,10065],"content":"BitmapEffect()","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect()","pos":[0,14]}]},{"pos":[10314,10321],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[10537,10549],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[10780,10799],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[11039,11051],"content":"BitmapEffect","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffect","pos":[0,12]}]},{"pos":[11288,11313],"content":"CreateBitmapEffectOuter()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateBitmapEffectOuter()","pos":[0,25]}]},{"pos":[11567,11577],"content":"SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[11810,11833],"content":"CreateUnmanagedEffect()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateUnmanagedEffect()","pos":[0,23]}]},{"pos":[12083,12093],"content":"SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[12362,12390],"content":"GetOutput(BitmapEffectInput)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOutput(BitmapEffectInput)","pos":[0,28]}]},{"pos":[12648,12660],"content":"BitmapSource","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapSource","pos":[0,12]}]},{"pos":[12865,12882],"content":"BitmapEffectInput","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapEffectInput","pos":[0,17]}]},{"pos":[13213,13258],"content":"InitializeBitmapEffect(SafeHandle,SafeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"InitializeBitmapEffect(SafeHandle,SafeHandle)","pos":[0,45]}]},{"pos":[13552,13562],"content":"SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[13762,13772],"content":"SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[14063,14097],"content":"SetValue(SafeHandle,String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(SafeHandle,String,Object)","pos":[0,34]}]},{"pos":[14369,14379],"content":"SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]},{"pos":[14527,14533],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14649,14655],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14906,14946],"content":"UpdateUnmanagedPropertyState(SafeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateUnmanagedPropertyState(SafeHandle)","pos":[0,40]}]},{"pos":[15230,15240],"content":"SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeHandle","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Effects.BitmapEffect\n  id: BitmapEffect\n  children:\n  - System.Windows.Media.Effects.BitmapEffect.#ctor\n  - System.Windows.Media.Effects.BitmapEffect.Clone\n  - System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue\n  - System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter\n  - System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect\n  - System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  - System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  - System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  - System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  langs:\n  - csharp\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n  type: Class\n  syntax:\n    content: 'public abstract class BitmapEffect : System.Windows.Media.Animation.Animatable'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: BitmapEffect()\n  nameWithType: BitmapEffect.BitmapEffect()\n  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected BitmapEffect ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.Clone\n  id: Clone\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BitmapEffect.Clone()\n  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Effects.BitmapEffect Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: BitmapEffect.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Effects.BitmapEffect CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Effects.BitmapEffect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter\n  id: CreateBitmapEffectOuter\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: CreateBitmapEffectOuter()\n  nameWithType: BitmapEffect.CreateBitmapEffectOuter()\n  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected static System.Runtime.InteropServices.SafeHandle CreateBitmapEffectOuter ();\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.SafeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect\n  id: CreateUnmanagedEffect\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: CreateUnmanagedEffect()\n  nameWithType: BitmapEffect.CreateUnmanagedEffect()\n  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected abstract System.Runtime.InteropServices.SafeHandle CreateUnmanagedEffect ();\n    parameters: []\n    return:\n      type: System.Runtime.InteropServices.SafeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  id: GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: GetOutput(BitmapEffectInput)\n  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)\n  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: public System.Windows.Media.Imaging.BitmapSource GetOutput (System.Windows.Media.Effects.BitmapEffectInput input);\n    parameters:\n    - id: input\n      type: System.Windows.Media.Effects.BitmapEffectInput\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Imaging.BitmapSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  id: InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: InitializeBitmapEffect(SafeHandle,SafeHandle)\n  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)\n  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected static void InitializeBitmapEffect (System.Runtime.InteropServices.SafeHandle outerObject, System.Runtime.InteropServices.SafeHandle innerObject);\n    parameters:\n    - id: outerObject\n      type: System.Runtime.InteropServices.SafeHandle\n      description: Parameter description to be filled\n    - id: innerObject\n      type: System.Runtime.InteropServices.SafeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  id: SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: SetValue(SafeHandle,String,Object)\n  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)\n  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected static void SetValue (System.Runtime.InteropServices.SafeHandle effect, string propertyName, object value);\n    parameters:\n    - id: effect\n      type: System.Runtime.InteropServices.SafeHandle\n      description: Parameter description to be filled\n    - id: propertyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  id: UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  langs:\n  - csharp\n  name: UpdateUnmanagedPropertyState(SafeHandle)\n  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Effects\n  syntax:\n    content: protected abstract void UpdateUnmanagedPropertyState (System.Runtime.InteropServices.SafeHandle unmanagedEffect);\n    parameters:\n    - id: unmanagedEffect\n      type: System.Runtime.InteropServices.SafeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.Effects.BitmapEffect.#ctor\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: BitmapEffect()\n  nameWithType: BitmapEffect.BitmapEffect()\n  fullName: System.Windows.Media.Effects.BitmapEffect.BitmapEffect()\n- uid: System.Windows.Media.Effects.BitmapEffect.Clone\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: Clone()\n  nameWithType: BitmapEffect.Clone()\n  fullName: System.Windows.Media.Effects.BitmapEffect.Clone()\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: BitmapEffect.CloneCurrentValue()\n  fullName: System.Windows.Media.Effects.BitmapEffect.CloneCurrentValue()\n- uid: System.Windows.Media.Effects.BitmapEffect\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffect\n  nameWithType: BitmapEffect\n  fullName: System.Windows.Media.Effects.BitmapEffect\n- uid: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: CreateBitmapEffectOuter()\n  nameWithType: BitmapEffect.CreateBitmapEffectOuter()\n  fullName: System.Windows.Media.Effects.BitmapEffect.CreateBitmapEffectOuter()\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: CreateUnmanagedEffect()\n  nameWithType: BitmapEffect.CreateUnmanagedEffect()\n  fullName: System.Windows.Media.Effects.BitmapEffect.CreateUnmanagedEffect()\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Windows.Media.Effects.BitmapEffect.GetOutput(System.Windows.Media.Effects.BitmapEffectInput)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: GetOutput(BitmapEffectInput)\n  nameWithType: BitmapEffect.GetOutput(BitmapEffectInput)\n  fullName: System.Windows.Media.Effects.BitmapEffect.GetOutput(BitmapEffectInput)\n- uid: System.Windows.Media.Imaging.BitmapSource\n  parent: System.Windows.Media.Imaging\n  isExternal: false\n  name: BitmapSource\n  nameWithType: BitmapSource\n  fullName: System.Windows.Media.Imaging.BitmapSource\n- uid: System.Windows.Media.Effects.BitmapEffectInput\n  parent: System.Windows.Media.Effects\n  isExternal: false\n  name: BitmapEffectInput\n  nameWithType: BitmapEffectInput\n  fullName: System.Windows.Media.Effects.BitmapEffectInput\n- uid: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(System.Runtime.InteropServices.SafeHandle,System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: InitializeBitmapEffect(SafeHandle,SafeHandle)\n  nameWithType: BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)\n  fullName: System.Windows.Media.Effects.BitmapEffect.InitializeBitmapEffect(SafeHandle,SafeHandle)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.Windows.Media.Effects.BitmapEffect.SetValue(System.Runtime.InteropServices.SafeHandle,System.String,System.Object)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: SetValue(SafeHandle,String,Object)\n  nameWithType: BitmapEffect.SetValue(SafeHandle,String,Object)\n  fullName: System.Windows.Media.Effects.BitmapEffect.SetValue(SafeHandle,String,Object)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(System.Runtime.InteropServices.SafeHandle)\n  parent: System.Windows.Media.Effects.BitmapEffect\n  isExternal: false\n  name: UpdateUnmanagedPropertyState(SafeHandle)\n  nameWithType: BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n  fullName: System.Windows.Media.Effects.BitmapEffect.UpdateUnmanagedPropertyState(SafeHandle)\n- uid: System.Runtime.InteropServices.SafeHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: SafeHandle\n  nameWithType: SafeHandle\n  fullName: System.Runtime.InteropServices.SafeHandle\n"}