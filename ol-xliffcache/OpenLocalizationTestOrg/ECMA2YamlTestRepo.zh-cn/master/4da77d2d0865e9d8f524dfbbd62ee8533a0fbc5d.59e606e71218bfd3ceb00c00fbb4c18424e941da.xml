{"nodes":[{"pos":[2781,2803],"content":"FreezableCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"FreezableCollection<T>"},{"pos":[3342,3376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4922,4943],"content":"FreezableCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezableCollection()","pos":[0,21]}]},{"pos":[5505,5540],"content":"FreezableCollection(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FreezableCollection(IEnumerable<T>)"},{"pos":[6000,6034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6251,6277],"content":"FreezableCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezableCollection(Int32)","pos":[0,26]}]},{"pos":[6649,6683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6874,6880],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[7177,7211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7398,7405],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[7839,7846],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8207,8241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8488,8508],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[8899,8933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9144,9163],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[9560,9594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9865,9897],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[10324,10358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10559,10570],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[10882,10916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10975,11009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11236,11253],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[11590,11624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11685,11719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11906,11911],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[12198,12232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12445,12465],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[12852,12886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13115,13134],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[13502,13536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13595,13629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13888,13914],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[14323,14357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14640,14678],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[15123,15157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15360,15375],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[15782,15816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16015,16025],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[16333,16367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16424,16458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16681,16696],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[17036,17070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17120,17154],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17367,17378],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[17710,17744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17790,17824],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18021,18030],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[18336,18370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18429,18463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18684,18699],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[19032,19066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19361,19399],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[19795,19829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20130,20170],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[20621,20655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20974,21024],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[21443,21477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21538,21572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21853,21898],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[22301,22335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22604,22643],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[23029,23063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23342,23388],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[23827,23861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24138,24174],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[24546,24580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24637,24671],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24958,24999],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[25387,25421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25480,25514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25799,25839],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[26223,26257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26314,26348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26657,26702],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[27106,27140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27202,27236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27499,27535],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[27911,27945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28206,28241],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[28614,28648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28925,28961],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[29366,29400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29458,29492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29775,29814],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[30196,30230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30369,30410],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[30536,30557],"content":"FreezableCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezableCollection()","pos":[0,21]}]},{"pos":[30858,30893],"content":"FreezableCollection(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FreezableCollection(IEnumerable<T>)"},{"pos":[31168,31182],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[31407,31433],"content":"FreezableCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezableCollection(Int32)","pos":[0,26]}]},{"pos":[31642,31647],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31822,31828],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[31981,31982],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[32140,32147],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[32378,32385],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[32588,32610],"content":"FreezableCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"FreezableCollection<T>"},{"pos":[32855,32875],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[33091,33100],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[33301,33320],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[33547,33569],"content":"FreezableCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"FreezableCollection<T>"},{"pos":[33826,33858],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[34098,34107],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[34303,34314],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[34495,34502],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34603,34604],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34782,34799],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[34974,34975],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35075,35080],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35253,35258],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[35425,35430],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35616,35636],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[35852,35861],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36071,36090],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[36287,36294],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36413,36420],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36633,36659],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[36887,36896],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[37133,37171],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[37423,37432],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[37629,37644],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[37874,37907],"content":"FreezableCollection<ph id=\"ph1\">&lt;T&gt;</ph>+Enumerator","needQuote":true,"needEscape":true,"source":"FreezableCollection<T>+Enumerator"},{"pos":[38150,38160],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[38337,38342],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38439,38440],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[38616,38631],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[38818,38823],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38920,38921],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[39092,39103],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[39266,39267],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[39365,39370],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39548,39557],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[39734,39741],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39842,39843],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[40018,40033],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[40220,40225],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40445,40483],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[40718,40725],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40952,40992],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[41277,41291],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[41561,41611],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[41868,41873],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[41986,41991],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42204,42249],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[42498,42505],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42716,42755],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[42991,42997],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43211,43257],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[43536,43547],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[43782,43818],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[44047,44052],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44166,44172],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[44390,44431],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[44672,44679],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44797,44803],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45020,45060],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[45297,45302],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45416,45422],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[45651,45696],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[45943,45948],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46062,46068],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46274,46310],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[46541,46548],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46755,46790],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[47019,47026],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47241,47277],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[47507,47513],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47628,47633],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47847,47886],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[48122,48128],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FreezableCollection`1\n  id: FreezableCollection`1\n  children:\n  - System.Windows.FreezableCollection`1.#ctor\n  - System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  - System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  - System.Windows.FreezableCollection`1.Add(`0)\n  - System.Windows.FreezableCollection`1.Clear\n  - System.Windows.FreezableCollection`1.Clone\n  - System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.CloneCurrentValue\n  - System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.Contains(`0)\n  - System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  - System.Windows.FreezableCollection`1.Count\n  - System.Windows.FreezableCollection`1.CreateInstanceCore\n  - System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  - System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.FreezableCollection`1.GetEnumerator\n  - System.Windows.FreezableCollection`1.IndexOf(`0)\n  - System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  - System.Windows.FreezableCollection`1.Item(System.Int32)\n  - System.Windows.FreezableCollection`1.Remove(`0)\n  - System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  - System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  - System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>\n  fullName: System.Windows.FreezableCollection<T>\n  type: Class\n  syntax:\n    content: 'public class FreezableCollection<T> : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IList<T>\n  - System.Collections.IList\n  - System.Collections.Specialized.INotifyCollectionChanged\n  - System.ComponentModel.INotifyPropertyChanged\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.#ctor\n  id: '#ctor'\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezableCollection()\n  nameWithType: FreezableCollection<T>.FreezableCollection()\n  fullName: System.Windows.FreezableCollection<T>.FreezableCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public FreezableCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  id: '#ctor(System.Collections.Generic.IEnumerable`1)'\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezableCollection(IEnumerable<T>)\n  nameWithType: FreezableCollection<T>.FreezableCollection(IEnumerable<T>)\n  fullName: System.Windows.FreezableCollection<T>.FreezableCollection(IEnumerable<T>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public FreezableCollection (System.Collections.Generic.IEnumerable<T> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezableCollection(Int32)\n  nameWithType: FreezableCollection<T>.FreezableCollection(Int32)\n  fullName: System.Windows.FreezableCollection<T>.FreezableCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public FreezableCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: FreezableCollection<T>.Add(T)\n  fullName: System.Windows.FreezableCollection<T>.Add(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Clear\n  id: Clear\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: FreezableCollection<T>.Clear()\n  fullName: System.Windows.FreezableCollection<T>.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Clone\n  id: Clone\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: FreezableCollection<T>.Clone()\n  fullName: System.Windows.FreezableCollection<T>.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.FreezableCollection<T> Clone ();\n    parameters: []\n    return:\n      type: System.Windows.FreezableCollection`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: FreezableCollection<T>.CloneCurrentValue()\n  fullName: System.Windows.FreezableCollection<T>.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.FreezableCollection<T> CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.FreezableCollection`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: FreezableCollection<T>.Contains(T)\n  fullName: System.Windows.FreezableCollection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Contains (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: FreezableCollection<T>.CopyTo(T[],Int32)\n  fullName: System.Windows.FreezableCollection<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Count\n  id: Count\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: FreezableCollection<T>.Count\n  fullName: System.Windows.FreezableCollection<T>.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: FreezableCollection<T>.CreateInstanceCore()\n  fullName: System.Windows.FreezableCollection<T>.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: FreezableCollection<T>.FreezeCore(Boolean)\n  fullName: System.Windows.FreezableCollection<T>.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: FreezableCollection<T>.GetEnumerator()\n  fullName: System.Windows.FreezableCollection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.FreezableCollection<T>.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.FreezableCollection`1.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: FreezableCollection<T>.IndexOf(T)\n  fullName: System.Windows.FreezableCollection<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public int IndexOf (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Insert(Int32,T)\n  nameWithType: FreezableCollection<T>.Insert(Int32,T)\n  fullName: System.Windows.FreezableCollection<T>.Insert(Int32,T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void Insert (int index, T value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: FreezableCollection<T>.Item(Int32)\n  fullName: System.Windows.FreezableCollection<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public T this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: FreezableCollection<T>.Remove(T)\n  fullName: System.Windows.FreezableCollection<T>.Remove(T)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Remove (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: FreezableCollection<T>.RemoveAt(Int32)\n  fullName: System.Windows.FreezableCollection<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: FreezableCollection<T>.System.Collections.Generic.ICollection\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: FreezableCollection<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: FreezableCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Add(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.FreezableCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.FreezableCollection`1.#ctor\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection()\n  nameWithType: FreezableCollection<T>.FreezableCollection()\n  fullName: System.Windows.FreezableCollection<T>.FreezableCollection()\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection(IEnumerable<T>)\n  nameWithType: FreezableCollection<T>.FreezableCollection(IEnumerable<T>)\n  fullName: System.Windows.FreezableCollection<T>.FreezableCollection(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Windows.FreezableCollection`1.#ctor(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezableCollection(Int32)\n  nameWithType: FreezableCollection<T>.FreezableCollection(Int32)\n  fullName: System.Windows.FreezableCollection<T>.FreezableCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.Add(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: FreezableCollection<T>.Add(T)\n  fullName: System.Windows.FreezableCollection<T>.Add(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.Clear\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: FreezableCollection<T>.Clear()\n  fullName: System.Windows.FreezableCollection<T>.Clear()\n- uid: System.Windows.FreezableCollection`1.Clone\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Clone()\n  nameWithType: FreezableCollection<T>.Clone()\n  fullName: System.Windows.FreezableCollection<T>.Clone()\n- uid: System.Windows.FreezableCollection`1\n  parent: System.Windows\n  isExternal: false\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>\n  fullName: System.Windows.FreezableCollection<T>\n- uid: System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValue\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: FreezableCollection<T>.CloneCurrentValue()\n  fullName: System.Windows.FreezableCollection<T>.CloneCurrentValue()\n- uid: System.Windows.FreezableCollection`1\n  parent: System.Windows\n  isExternal: false\n  name: FreezableCollection<T>\n  nameWithType: FreezableCollection<T>\n  fullName: System.Windows.FreezableCollection<T>\n- uid: System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.FreezableCollection`1.Contains(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: FreezableCollection<T>.Contains(T)\n  fullName: System.Windows.FreezableCollection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: FreezableCollection<T>.CopyTo(T[],Int32)\n  fullName: System.Windows.FreezableCollection<T>.CopyTo(T[],Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.Count\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: FreezableCollection<T>.Count\n  fullName: System.Windows.FreezableCollection<T>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.CreateInstanceCore\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: FreezableCollection<T>.CreateInstanceCore()\n  fullName: System.Windows.FreezableCollection<T>.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: FreezableCollection<T>.FreezeCore(Boolean)\n  fullName: System.Windows.FreezableCollection<T>.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.FreezableCollection<T>.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.FreezableCollection`1.GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: FreezableCollection<T>.GetEnumerator()\n  fullName: System.Windows.FreezableCollection<T>.GetEnumerator()\n- uid: System.Windows.FreezableCollection`1.Enumerator\n  parent: System.Windows\n  isExternal: false\n  name: FreezableCollection<T>+Enumerator\n  nameWithType: FreezableCollection<T>+Enumerator\n  fullName: System.Windows.FreezableCollection<T>+Enumerator\n- uid: System.Windows.FreezableCollection`1.IndexOf(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: FreezableCollection<T>.IndexOf(T)\n  fullName: System.Windows.FreezableCollection<T>.IndexOf(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.Insert(System.Int32,`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Insert(Int32,T)\n  nameWithType: FreezableCollection<T>.Insert(Int32,T)\n  fullName: System.Windows.FreezableCollection<T>.Insert(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.Item(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: FreezableCollection<T>.Item(Int32)\n  fullName: System.Windows.FreezableCollection<T>.Item(Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.Remove(`0)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: FreezableCollection<T>.Remove(T)\n  fullName: System.Windows.FreezableCollection<T>.Remove(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Windows.FreezableCollection`1.RemoveAt(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: FreezableCollection<T>.RemoveAt(Int32)\n  fullName: System.Windows.FreezableCollection<T>.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: FreezableCollection<T>.System.Collections.Generic.ICollection\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: FreezableCollection<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FreezableCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: FreezableCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Add(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: FreezableCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.FreezableCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: FreezableCollection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.FreezableCollection<T>.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}