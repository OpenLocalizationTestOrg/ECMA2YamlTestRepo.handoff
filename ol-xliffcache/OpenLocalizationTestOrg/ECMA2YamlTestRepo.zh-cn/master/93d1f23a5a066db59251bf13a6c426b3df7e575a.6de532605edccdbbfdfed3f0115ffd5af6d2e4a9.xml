{"nodes":[{"pos":[1409,1422],"content":"SemaphoreSlim","needQuote":true,"needEscape":true,"nodes":[{"content":"SemaphoreSlim","pos":[0,13]}]},{"pos":[2289,2309],"content":"SemaphoreSlim(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SemaphoreSlim(Int32)","pos":[0,20]}]},{"pos":[2649,2683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2914,2940],"content":"SemaphoreSlim(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SemaphoreSlim(Int32,Int32)","pos":[0,26]}]},{"pos":[3306,3340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3404,3438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3641,3660],"content":"AvailableWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"AvailableWaitHandle","pos":[0,19]}]},{"pos":[4006,4040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4229,4241],"content":"CurrentCount","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentCount","pos":[0,12]}]},{"pos":[4527,4561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4740,4749],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[5243,5259],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5593,5627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5858,5867],"content":"Release()","needQuote":true,"needEscape":true,"nodes":[{"content":"Release()","pos":[0,9]}]},{"pos":[6154,6188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6447,6461],"content":"Release(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Release(Int32)","pos":[0,14]}]},{"pos":[6782,6816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6873,6907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7132,7138],"content":"Wait()","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait()","pos":[0,6]}]},{"pos":[7610,7621],"content":"Wait(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32)","pos":[0,11]}]},{"pos":[7948,7982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8041,8075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8369,8392],"content":"Wait(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(CancellationToken)","pos":[0,23]}]},{"pos":[8792,8826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9082,9096],"content":"Wait(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(TimeSpan)","pos":[0,14]}]},{"pos":[9413,9447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9506,9540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9860,9889],"content":"Wait(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32,CancellationToken)","pos":[0,29]}]},{"pos":[10306,10340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10435,10469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10528,10562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10888,10920],"content":"Wait(TimeSpan,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(TimeSpan,CancellationToken)","pos":[0,32]}]},{"pos":[11327,11361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11456,11490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11549,11583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11815,11826],"content":"WaitAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync()","pos":[0,11]}]},{"pos":[12158,12192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12457,12473],"content":"WaitAsync(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(Int32)","pos":[0,16]}]},{"pos":[12844,12878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12966,13000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13309,13337],"content":"WaitAsync(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(CancellationToken)","pos":[0,28]}]},{"pos":[13775,13809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13881,13915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14186,14205],"content":"WaitAsync(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(TimeSpan)","pos":[0,19]}]},{"pos":[14566,14600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14688,14722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15057,15091],"content":"WaitAsync(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(Int32,CancellationToken)","pos":[0,34]}]},{"pos":[15552,15586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15681,15715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15803,15837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16178,16215],"content":"WaitAsync(TimeSpan,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(TimeSpan,CancellationToken)","pos":[0,37]}]},{"pos":[16666,16700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16795,16829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16917,16951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17116,17129],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[17257,17277],"content":"SemaphoreSlim(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SemaphoreSlim(Int32)","pos":[0,20]}]},{"pos":[17458,17463],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17651,17677],"content":"SemaphoreSlim(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SemaphoreSlim(Int32,Int32)","pos":[0,26]}]},{"pos":[17870,17875],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17988,17993],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18168,18187],"content":"AvailableWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"AvailableWaitHandle","pos":[0,19]}]},{"pos":[18391,18401],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[18589,18601],"content":"CurrentCount","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentCount","pos":[0,12]}]},{"pos":[18766,18771],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18934,18943],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[19168,19184],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[19359,19366],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19533,19542],"content":"Release()","needQuote":true,"needEscape":true,"nodes":[{"content":"Release()","pos":[0,9]}]},{"pos":[19701,19706],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19883,19897],"content":"Release(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Release(Int32)","pos":[0,14]}]},{"pos":[20066,20071],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20184,20189],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20349,20355],"content":"Wait()","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait()","pos":[0,6]}]},{"pos":[20569,20580],"content":"Wait(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32)","pos":[0,11]}]},{"pos":[20745,20752],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20869,20874],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21070,21093],"content":"Wait(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(CancellationToken)","pos":[0,23]}]},{"pos":[21312,21329],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[21540,21554],"content":"Wait(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(TimeSpan)","pos":[0,14]}]},{"pos":[21725,21732],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21852,21860],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[22075,22104],"content":"Wait(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32,CancellationToken)","pos":[0,29]}]},{"pos":[22305,22312],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22429,22434],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22579,22596],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[22842,22874],"content":"Wait(TimeSpan,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(TimeSpan,CancellationToken)","pos":[0,32]}]},{"pos":[23081,23088],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23208,23216],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[23367,23384],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[23583,23594],"content":"WaitAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync()","pos":[0,11]}]},{"pos":[23788,23792],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[23985,24001],"content":"WaitAsync(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(Int32)","pos":[0,16]}]},{"pos":[24221,24234],"content":"Task<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Boolean>"},{"pos":[24386,24391],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24592,24620],"content":"WaitAsync(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(CancellationToken)","pos":[0,28]}]},{"pos":[24848,24852],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[25011,25028],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[25244,25263],"content":"WaitAsync(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(TimeSpan)","pos":[0,19]}]},{"pos":[25489,25502],"content":"Task<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Boolean>"},{"pos":[25657,25665],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[25885,25919],"content":"WaitAsync(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(Int32,CancellationToken)","pos":[0,34]}]},{"pos":[26175,26188],"content":"Task<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Boolean>"},{"pos":[26340,26345],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26490,26507],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[26758,26795],"content":"WaitAsync(TimeSpan,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAsync(TimeSpan,CancellationToken)","pos":[0,37]}]},{"pos":[27057,27070],"content":"Task<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Boolean>"},{"pos":[27225,27233],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[27384,27401],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.SemaphoreSlim\n  id: SemaphoreSlim\n  children:\n  - System.Threading.SemaphoreSlim.#ctor(System.Int32)\n  - System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)\n  - System.Threading.SemaphoreSlim.AvailableWaitHandle\n  - System.Threading.SemaphoreSlim.CurrentCount\n  - System.Threading.SemaphoreSlim.Dispose\n  - System.Threading.SemaphoreSlim.Dispose(System.Boolean)\n  - System.Threading.SemaphoreSlim.Release\n  - System.Threading.SemaphoreSlim.Release(System.Int32)\n  - System.Threading.SemaphoreSlim.Wait\n  - System.Threading.SemaphoreSlim.Wait(System.Int32)\n  - System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)\n  - System.Threading.SemaphoreSlim.Wait(System.TimeSpan)\n  - System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)\n  - System.Threading.SemaphoreSlim.WaitAsync\n  - System.Threading.SemaphoreSlim.WaitAsync(System.Int32)\n  - System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)\n  - System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)\n  - System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: SemaphoreSlim\n  nameWithType: SemaphoreSlim\n  fullName: System.Threading.SemaphoreSlim\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Current Count = {m_currentCount}\")]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class SemaphoreSlim : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: SemaphoreSlim(Int32)\n  nameWithType: SemaphoreSlim.SemaphoreSlim(Int32)\n  fullName: System.Threading.SemaphoreSlim.SemaphoreSlim(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public SemaphoreSlim (int initialCount);\n    parameters:\n    - id: initialCount\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32)'\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: SemaphoreSlim(Int32,Int32)\n  nameWithType: SemaphoreSlim.SemaphoreSlim(Int32,Int32)\n  fullName: System.Threading.SemaphoreSlim.SemaphoreSlim(Int32,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public SemaphoreSlim (int initialCount, int maxCount);\n    parameters:\n    - id: initialCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: maxCount\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.AvailableWaitHandle\n  id: AvailableWaitHandle\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: AvailableWaitHandle\n  nameWithType: SemaphoreSlim.AvailableWaitHandle\n  fullName: System.Threading.SemaphoreSlim.AvailableWaitHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.WaitHandle AvailableWaitHandle { get; }\n    return:\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.CurrentCount\n  id: CurrentCount\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: CurrentCount\n  nameWithType: SemaphoreSlim.CurrentCount\n  fullName: System.Threading.SemaphoreSlim.CurrentCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public int CurrentCount { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Dispose\n  id: Dispose\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SemaphoreSlim.Dispose()\n  fullName: System.Threading.SemaphoreSlim.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Threading.SemaphoreSlim.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SemaphoreSlim.Dispose(Boolean)\n  fullName: System.Threading.SemaphoreSlim.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Release\n  id: Release\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Release()\n  nameWithType: SemaphoreSlim.Release()\n  fullName: System.Threading.SemaphoreSlim.Release()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public int Release ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Release*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Release(System.Int32)\n  id: Release(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Release(Int32)\n  nameWithType: SemaphoreSlim.Release(Int32)\n  fullName: System.Threading.SemaphoreSlim.Release(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public int Release (int releaseCount);\n    parameters:\n    - id: releaseCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Release*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Wait\n  id: Wait\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Wait()\n  nameWithType: SemaphoreSlim.Wait()\n  fullName: System.Threading.SemaphoreSlim.Wait()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public void Wait ();\n    parameters: []\n  overload: System.Threading.SemaphoreSlim.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Wait(System.Int32)\n  id: Wait(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Wait(Int32)\n  nameWithType: SemaphoreSlim.Wait(Int32)\n  fullName: System.Threading.SemaphoreSlim.Wait(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public bool Wait (int millisecondsTimeout);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)\n  id: Wait(System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Wait(CancellationToken)\n  nameWithType: SemaphoreSlim.Wait(CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.Wait(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public void Wait (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Wait(System.TimeSpan)\n  id: Wait(System.TimeSpan)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Wait(TimeSpan)\n  nameWithType: SemaphoreSlim.Wait(TimeSpan)\n  fullName: System.Threading.SemaphoreSlim.Wait(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public bool Wait (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)\n  id: Wait(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Wait(Int32,CancellationToken)\n  nameWithType: SemaphoreSlim.Wait(Int32,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.Wait(Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)\n  id: Wait(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: Wait(TimeSpan,CancellationToken)\n  nameWithType: SemaphoreSlim.Wait(TimeSpan,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.Wait(TimeSpan,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public bool Wait (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.WaitAsync\n  id: WaitAsync\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: WaitAsync()\n  nameWithType: SemaphoreSlim.WaitAsync()\n  fullName: System.Threading.SemaphoreSlim.WaitAsync()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.Tasks.Task WaitAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.WaitAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.Int32)\n  id: WaitAsync(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: WaitAsync(Int32)\n  nameWithType: SemaphoreSlim.WaitAsync(Int32)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> WaitAsync (int millisecondsTimeout);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.WaitAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)\n  id: WaitAsync(System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: WaitAsync(CancellationToken)\n  nameWithType: SemaphoreSlim.WaitAsync(CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.Tasks.Task WaitAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.WaitAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)\n  id: WaitAsync(System.TimeSpan)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: WaitAsync(TimeSpan)\n  nameWithType: SemaphoreSlim.WaitAsync(TimeSpan)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> WaitAsync (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.WaitAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)\n  id: WaitAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: WaitAsync(Int32,CancellationToken)\n  nameWithType: SemaphoreSlim.WaitAsync(Int32,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> WaitAsync (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.WaitAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)\n  id: WaitAsync(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  langs:\n  - csharp\n  name: WaitAsync(TimeSpan,CancellationToken)\n  nameWithType: SemaphoreSlim.WaitAsync(TimeSpan,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(TimeSpan,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public System.Threading.Tasks.Task<bool> WaitAsync (TimeSpan timeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Boolean}\n      description: Parameter description to be filled\n  overload: System.Threading.SemaphoreSlim.WaitAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.SemaphoreSlim.#ctor(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: SemaphoreSlim(Int32)\n  nameWithType: SemaphoreSlim.SemaphoreSlim(Int32)\n  fullName: System.Threading.SemaphoreSlim.SemaphoreSlim(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.#ctor(System.Int32,System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: SemaphoreSlim(Int32,Int32)\n  nameWithType: SemaphoreSlim.SemaphoreSlim(Int32,Int32)\n  fullName: System.Threading.SemaphoreSlim.SemaphoreSlim(Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.AvailableWaitHandle\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: AvailableWaitHandle\n  nameWithType: SemaphoreSlim.AvailableWaitHandle\n  fullName: System.Threading.SemaphoreSlim.AvailableWaitHandle\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.SemaphoreSlim.CurrentCount\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: CurrentCount\n  nameWithType: SemaphoreSlim.CurrentCount\n  fullName: System.Threading.SemaphoreSlim.CurrentCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.Dispose\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Dispose()\n  nameWithType: SemaphoreSlim.Dispose()\n  fullName: System.Threading.SemaphoreSlim.Dispose()\n- uid: System.Threading.SemaphoreSlim.Dispose(System.Boolean)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SemaphoreSlim.Dispose(Boolean)\n  fullName: System.Threading.SemaphoreSlim.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.SemaphoreSlim.Release\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Release()\n  nameWithType: SemaphoreSlim.Release()\n  fullName: System.Threading.SemaphoreSlim.Release()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.Release(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Release(Int32)\n  nameWithType: SemaphoreSlim.Release(Int32)\n  fullName: System.Threading.SemaphoreSlim.Release(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.Wait\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Wait()\n  nameWithType: SemaphoreSlim.Wait()\n  fullName: System.Threading.SemaphoreSlim.Wait()\n- uid: System.Threading.SemaphoreSlim.Wait(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Wait(Int32)\n  nameWithType: SemaphoreSlim.Wait(Int32)\n  fullName: System.Threading.SemaphoreSlim.Wait(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.Wait(System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Wait(CancellationToken)\n  nameWithType: SemaphoreSlim.Wait(CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.Wait(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.SemaphoreSlim.Wait(System.TimeSpan)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Wait(TimeSpan)\n  nameWithType: SemaphoreSlim.Wait(TimeSpan)\n  fullName: System.Threading.SemaphoreSlim.Wait(TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.SemaphoreSlim.Wait(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Wait(Int32,CancellationToken)\n  nameWithType: SemaphoreSlim.Wait(Int32,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.Wait(Int32,CancellationToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.SemaphoreSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: Wait(TimeSpan,CancellationToken)\n  nameWithType: SemaphoreSlim.Wait(TimeSpan,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.Wait(TimeSpan,CancellationToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.SemaphoreSlim.WaitAsync\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: WaitAsync()\n  nameWithType: SemaphoreSlim.WaitAsync()\n  fullName: System.Threading.SemaphoreSlim.WaitAsync()\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.Int32)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: WaitAsync(Int32)\n  nameWithType: SemaphoreSlim.WaitAsync(Int32)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(Int32)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Boolean>\n  nameWithType: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: WaitAsync(CancellationToken)\n  nameWithType: SemaphoreSlim.WaitAsync(CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: WaitAsync(TimeSpan)\n  nameWithType: SemaphoreSlim.WaitAsync(TimeSpan)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(TimeSpan)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Boolean>\n  nameWithType: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: WaitAsync(Int32,CancellationToken)\n  nameWithType: SemaphoreSlim.WaitAsync(Int32,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Boolean>\n  nameWithType: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.SemaphoreSlim.WaitAsync(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  name: WaitAsync(TimeSpan,CancellationToken)\n  nameWithType: SemaphoreSlim.WaitAsync(TimeSpan,CancellationToken)\n  fullName: System.Threading.SemaphoreSlim.WaitAsync(TimeSpan,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Boolean}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Boolean>\n  nameWithType: Task<Boolean>\n  fullName: System.Threading.Tasks.Task<System.Boolean>\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.SemaphoreSlim.Dispose*\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  nameWithType: SemaphoreSlim.\n- uid: System.Threading.SemaphoreSlim.Release*\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  nameWithType: SemaphoreSlim.\n- uid: System.Threading.SemaphoreSlim.Wait*\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  nameWithType: SemaphoreSlim.\n- uid: System.Threading.SemaphoreSlim.WaitAsync*\n  parent: System.Threading.SemaphoreSlim\n  isExternal: false\n  nameWithType: SemaphoreSlim.\n"}