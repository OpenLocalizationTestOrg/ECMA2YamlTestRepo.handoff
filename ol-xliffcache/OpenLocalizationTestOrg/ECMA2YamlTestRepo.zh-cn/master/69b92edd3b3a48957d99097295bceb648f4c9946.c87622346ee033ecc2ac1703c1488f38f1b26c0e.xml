{"nodes":[{"pos":[454,478],"content":"EventWaitHandleAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleAuditRule","pos":[0,24]}]},{"pos":[2043,2119],"content":"EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)","pos":[0,76]}]},{"pos":[2806,2840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2946,2980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3069,3103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3358,3379],"content":"EventWaitHandleRights","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleRights","pos":[0,21]}]},{"pos":[3827,3861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3998,4037],"content":"System.Security.AccessControl.AuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.AuditRule","pos":[0,39]}]},{"pos":[4337,4413],"content":"EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)","pos":[0,76]}]},{"pos":[4791,4808],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[5026,5047],"content":"EventWaitHandleRights","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleRights","pos":[0,21]}]},{"pos":[5266,5276],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[5534,5555],"content":"EventWaitHandleRights","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleRights","pos":[0,21]}]},{"pos":[5835,5856],"content":"EventWaitHandleRights","needQuote":true,"needEscape":true,"nodes":[{"content":"EventWaitHandleRights","pos":[0,21]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.EventWaitHandleAuditRule\n  id: EventWaitHandleAuditRule\n  children:\n  - System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights\n  langs:\n  - csharp\n  name: EventWaitHandleAuditRule\n  nameWithType: EventWaitHandleAuditRule\n  fullName: System.Security.AccessControl.EventWaitHandleAuditRule\n  type: Class\n  syntax:\n    content: 'public sealed class EventWaitHandleAuditRule : System.Security.AccessControl.AuditRule'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.AuthorizationRule\n  - System.Security.AccessControl.AuditRule\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.AuditRule.AuditFlags\n  - System.Security.AccessControl.AuthorizationRule.AccessMask\n  - System.Security.AccessControl.AuthorizationRule.IdentityReference\n  - System.Security.AccessControl.AuthorizationRule.InheritanceFlags\n  - System.Security.AccessControl.AuthorizationRule.IsInherited\n  - System.Security.AccessControl.AuthorizationRule.PropagationFlags\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)\n  id: '#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)'\n  parent: System.Security.AccessControl.EventWaitHandleAuditRule\n  langs:\n  - csharp\n  name: EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)\n  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)\n  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public EventWaitHandleAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.EventWaitHandleRights eventRights, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identity\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: eventRights\n      type: System.Security.AccessControl.EventWaitHandleRights\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights\n  id: EventWaitHandleRights\n  parent: System.Security.AccessControl.EventWaitHandleAuditRule\n  langs:\n  - csharp\n  name: EventWaitHandleRights\n  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights\n  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.EventWaitHandleRights EventWaitHandleRights { get; }\n    return:\n      type: System.Security.AccessControl.EventWaitHandleRights\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.AuditRule\n  isExternal: false\n  name: System.Security.AccessControl.AuditRule\n- uid: System.Security.AccessControl.EventWaitHandleAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.EventWaitHandleRights,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.EventWaitHandleAuditRule\n  isExternal: false\n  name: EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)\n  nameWithType: EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)\n  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleAuditRule(IdentityReference,EventWaitHandleRights,AuditFlags)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Security.AccessControl.EventWaitHandleRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: EventWaitHandleRights\n  nameWithType: EventWaitHandleRights\n  fullName: System.Security.AccessControl.EventWaitHandleRights\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights\n  parent: System.Security.AccessControl.EventWaitHandleAuditRule\n  isExternal: false\n  name: EventWaitHandleRights\n  nameWithType: EventWaitHandleAuditRule.EventWaitHandleRights\n  fullName: System.Security.AccessControl.EventWaitHandleAuditRule.EventWaitHandleRights\n- uid: System.Security.AccessControl.EventWaitHandleRights\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: EventWaitHandleRights\n  nameWithType: EventWaitHandleRights\n  fullName: System.Security.AccessControl.EventWaitHandleRights\n"}