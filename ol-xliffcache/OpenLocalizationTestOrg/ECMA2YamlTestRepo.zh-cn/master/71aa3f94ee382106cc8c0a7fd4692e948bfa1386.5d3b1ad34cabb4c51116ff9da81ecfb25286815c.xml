{"nodes":[{"pos":[697,710],"content":"EventMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"EventMetadata","pos":[0,13]}]},{"pos":[1439,1450],"content":"Description","needQuote":true,"needEscape":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1776,1810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2015,2017],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[2313,2347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2564,2572],"content":"Keywords","needQuote":true,"needEscape":true,"nodes":[{"content":"Keywords","pos":[0,8]}]},{"pos":[3044,3078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3289,3294],"content":"Level","needQuote":true,"needEscape":true,"nodes":[{"content":"Level","pos":[0,5]}]},{"pos":[3673,3707],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3922,3929],"content":"LogLink","needQuote":true,"needEscape":true,"nodes":[{"content":"LogLink","pos":[0,7]}]},{"pos":[4318,4352],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4565,4571],"content":"Opcode","needQuote":true,"needEscape":true,"nodes":[{"content":"Opcode","pos":[0,6]}]},{"pos":[4955,4989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5198,5202],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[5576,5610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5827,5835],"content":"Template","needQuote":true,"needEscape":true,"nodes":[{"content":"Template","pos":[0,8]}]},{"pos":[6152,6186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6401,6408],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[6718,6752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6863,6876],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7032,7043],"content":"Description","needQuote":true,"needEscape":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[7225,7231],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7427,7429],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[7592,7597],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[7797,7805],"content":"Keywords","needQuote":true,"needEscape":true,"nodes":[{"content":"Keywords","pos":[0,8]}]},{"pos":[8075,8100],"content":"IEnumerable<ph id=\"ph1\">&lt;EventKeyword&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<EventKeyword>"},{"pos":[8392,8397],"content":"Level","needQuote":true,"needEscape":true,"nodes":[{"content":"Level","pos":[0,5]}]},{"pos":[8627,8637],"content":"EventLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLevel","pos":[0,10]}]},{"pos":[8874,8881],"content":"LogLink","needQuote":true,"needEscape":true,"nodes":[{"content":"LogLink","pos":[0,7]}]},{"pos":[9117,9129],"content":"EventLogLink","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogLink","pos":[0,12]}]},{"pos":[9369,9375],"content":"Opcode","needQuote":true,"needEscape":true,"nodes":[{"content":"Opcode","pos":[0,6]}]},{"pos":[9608,9619],"content":"EventOpcode","needQuote":true,"needEscape":true,"nodes":[{"content":"EventOpcode","pos":[0,11]}]},{"pos":[9855,9859],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[10086,10095],"content":"EventTask","needQuote":true,"needEscape":true,"nodes":[{"content":"EventTask","pos":[0,9]}]},{"pos":[10331,10339],"content":"Template","needQuote":true,"needEscape":true,"nodes":[{"content":"Template","pos":[0,8]}]},{"pos":[10515,10521],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10722,10729],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[10901,10905],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata\n  id: EventMetadata\n  children:\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Description\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Id\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Keywords\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Level\n  - System.Diagnostics.Eventing.Reader.EventMetadata.LogLink\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Opcode\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Task\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Template\n  - System.Diagnostics.Eventing.Reader.EventMetadata.Version\n  langs:\n  - csharp\n  name: EventMetadata\n  nameWithType: EventMetadata\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata\n  type: Class\n  syntax:\n    content: public sealed class EventMetadata\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Description\n  id: Description\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Description\n  nameWithType: EventMetadata.Description\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Description\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string Description { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Id\n  id: Id\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Id\n  nameWithType: EventMetadata.Id\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Id\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public long Id { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Keywords\n  id: Keywords\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Keywords\n  nameWithType: EventMetadata.Keywords\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Keywords\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Diagnostics.Eventing.Reader.EventKeyword> Keywords { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Diagnostics.Eventing.Reader.EventKeyword}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Level\n  id: Level\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Level\n  nameWithType: EventMetadata.Level\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Level\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLevel Level { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.LogLink\n  id: LogLink\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: LogLink\n  nameWithType: EventMetadata.LogLink\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.LogLink\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogLink LogLink { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogLink\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Opcode\n  id: Opcode\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Opcode\n  nameWithType: EventMetadata.Opcode\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Opcode\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventOpcode Opcode { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventOpcode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Task\n  id: Task\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Task\n  nameWithType: EventMetadata.Task\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Task\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventTask Task { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventTask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Template\n  id: Template\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Template\n  nameWithType: EventMetadata.Template\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Template\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string Template { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Version\n  id: Version\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  langs:\n  - csharp\n  name: Version\n  nameWithType: EventMetadata.Version\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Version\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public byte Version { get; }\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Description\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Description\n  nameWithType: EventMetadata.Description\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Description\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Id\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Id\n  nameWithType: EventMetadata.Id\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Id\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Keywords\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Keywords\n  nameWithType: EventMetadata.Keywords\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Keywords\n- uid: System.Collections.Generic.IEnumerable{System.Diagnostics.Eventing.Reader.EventKeyword}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<EventKeyword>\n  nameWithType: IEnumerable<EventKeyword>\n  fullName: System.Collections.Generic.IEnumerable<System.Diagnostics.Eventing.Reader.EventKeyword>\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Level\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Level\n  nameWithType: EventMetadata.Level\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Level\n- uid: System.Diagnostics.Eventing.Reader.EventLevel\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLevel\n  nameWithType: EventLevel\n  fullName: System.Diagnostics.Eventing.Reader.EventLevel\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.LogLink\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: LogLink\n  nameWithType: EventMetadata.LogLink\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.LogLink\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogLink\n  nameWithType: EventLogLink\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Opcode\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Opcode\n  nameWithType: EventMetadata.Opcode\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Opcode\n- uid: System.Diagnostics.Eventing.Reader.EventOpcode\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventOpcode\n  nameWithType: EventOpcode\n  fullName: System.Diagnostics.Eventing.Reader.EventOpcode\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Task\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Task\n  nameWithType: EventMetadata.Task\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Task\n- uid: System.Diagnostics.Eventing.Reader.EventTask\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventTask\n  nameWithType: EventTask\n  fullName: System.Diagnostics.Eventing.Reader.EventTask\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Template\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Template\n  nameWithType: EventMetadata.Template\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Template\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventMetadata.Version\n  parent: System.Diagnostics.Eventing.Reader.EventMetadata\n  isExternal: false\n  name: Version\n  nameWithType: EventMetadata.Version\n  fullName: System.Diagnostics.Eventing.Reader.EventMetadata.Version\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n"}