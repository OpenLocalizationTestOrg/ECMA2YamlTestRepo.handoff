{"nodes":[{"pos":[463,485],"content":"ManipulationVelocities","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationVelocities","pos":[0,22]}]},{"pos":[1318,1362],"content":"ManipulationVelocities(Vector,Double,Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationVelocities(Vector,Double,Vector)","pos":[0,44]}]},{"pos":[1889,1923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1995,2029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2111,2145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2366,2381],"content":"AngularVelocity","needQuote":true,"needEscape":true,"nodes":[{"content":"AngularVelocity","pos":[0,15]}]},{"pos":[2714,2748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2973,2990],"content":"ExpansionVelocity","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpansionVelocity","pos":[0,17]}]},{"pos":[3352,3386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3605,3619],"content":"LinearVelocity","needQuote":true,"needEscape":true,"nodes":[{"content":"LinearVelocity","pos":[0,14]}]},{"pos":[3972,4006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4117,4130],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[4329,4373],"content":"ManipulationVelocities(Vector,Double,Vector)","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationVelocities(Vector,Double,Vector)","pos":[0,44]}]},{"pos":[4640,4646],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[4770,4776],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[4907,4913],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[5120,5135],"content":"AngularVelocity","needQuote":true,"needEscape":true,"nodes":[{"content":"AngularVelocity","pos":[0,15]}]},{"pos":[5329,5335],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[5536,5553],"content":"ExpansionVelocity","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpansionVelocity","pos":[0,17]}]},{"pos":[5766,5772],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]},{"pos":[5978,5992],"content":"LinearVelocity","needQuote":true,"needEscape":true,"nodes":[{"content":"LinearVelocity","pos":[0,14]}]},{"pos":[6199,6205],"content":"Vector","needQuote":true,"needEscape":true,"nodes":[{"content":"Vector","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationVelocities\n  id: ManipulationVelocities\n  children:\n  - System.Windows.Input.ManipulationVelocities.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector)\n  - System.Windows.Input.ManipulationVelocities.AngularVelocity\n  - System.Windows.Input.ManipulationVelocities.ExpansionVelocity\n  - System.Windows.Input.ManipulationVelocities.LinearVelocity\n  langs:\n  - csharp\n  name: ManipulationVelocities\n  nameWithType: ManipulationVelocities\n  fullName: System.Windows.Input.ManipulationVelocities\n  type: Class\n  syntax:\n    content: public class ManipulationVelocities\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationVelocities.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector)\n  id: '#ctor(System.Windows.Vector,System.Double,System.Windows.Vector)'\n  parent: System.Windows.Input.ManipulationVelocities\n  langs:\n  - csharp\n  name: ManipulationVelocities(Vector,Double,Vector)\n  nameWithType: ManipulationVelocities.ManipulationVelocities(Vector,Double,Vector)\n  fullName: System.Windows.Input.ManipulationVelocities.ManipulationVelocities(Vector,Double,Vector)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public ManipulationVelocities (System.Windows.Vector linearVelocity, double angularVelocity, System.Windows.Vector expansionVelocity);\n    parameters:\n    - id: linearVelocity\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n    - id: angularVelocity\n      type: System.Double\n      description: Parameter description to be filled\n    - id: expansionVelocity\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationVelocities.AngularVelocity\n  id: AngularVelocity\n  parent: System.Windows.Input.ManipulationVelocities\n  langs:\n  - csharp\n  name: AngularVelocity\n  nameWithType: ManipulationVelocities.AngularVelocity\n  fullName: System.Windows.Input.ManipulationVelocities.AngularVelocity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public double AngularVelocity { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationVelocities.ExpansionVelocity\n  id: ExpansionVelocity\n  parent: System.Windows.Input.ManipulationVelocities\n  langs:\n  - csharp\n  name: ExpansionVelocity\n  nameWithType: ManipulationVelocities.ExpansionVelocity\n  fullName: System.Windows.Input.ManipulationVelocities.ExpansionVelocity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Vector ExpansionVelocity { get; }\n    return:\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationVelocities.LinearVelocity\n  id: LinearVelocity\n  parent: System.Windows.Input.ManipulationVelocities\n  langs:\n  - csharp\n  name: LinearVelocity\n  nameWithType: ManipulationVelocities.LinearVelocity\n  fullName: System.Windows.Input.ManipulationVelocities.LinearVelocity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Vector LinearVelocity { get; }\n    return:\n      type: System.Windows.Vector\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Input.ManipulationVelocities.#ctor(System.Windows.Vector,System.Double,System.Windows.Vector)\n  parent: System.Windows.Input.ManipulationVelocities\n  isExternal: false\n  name: ManipulationVelocities(Vector,Double,Vector)\n  nameWithType: ManipulationVelocities.ManipulationVelocities(Vector,Double,Vector)\n  fullName: System.Windows.Input.ManipulationVelocities.ManipulationVelocities(Vector,Double,Vector)\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Input.ManipulationVelocities.AngularVelocity\n  parent: System.Windows.Input.ManipulationVelocities\n  isExternal: false\n  name: AngularVelocity\n  nameWithType: ManipulationVelocities.AngularVelocity\n  fullName: System.Windows.Input.ManipulationVelocities.AngularVelocity\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Input.ManipulationVelocities.ExpansionVelocity\n  parent: System.Windows.Input.ManipulationVelocities\n  isExternal: false\n  name: ExpansionVelocity\n  nameWithType: ManipulationVelocities.ExpansionVelocity\n  fullName: System.Windows.Input.ManipulationVelocities.ExpansionVelocity\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n- uid: System.Windows.Input.ManipulationVelocities.LinearVelocity\n  parent: System.Windows.Input.ManipulationVelocities\n  isExternal: false\n  name: LinearVelocity\n  nameWithType: ManipulationVelocities.LinearVelocity\n  fullName: System.Windows.Input.ManipulationVelocities.LinearVelocity\n- uid: System.Windows.Vector\n  parent: System.Windows\n  isExternal: true\n  name: Vector\n  nameWithType: Vector\n  fullName: System.Windows.Vector\n"}