{"nodes":[{"pos":[916,944],"content":"ManifestSignatureInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestSignatureInformation","pos":[0,28]}]},{"pos":[1750,1771],"content":"AuthenticodeSignature","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticodeSignature","pos":[0,21]}]},{"pos":[2282,2316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2551,2559],"content":"Manifest","needQuote":true,"needEscape":true,"nodes":[{"content":"Manifest","pos":[0,8]}]},{"pos":[2933,2967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3224,3243],"content":"StrongNameSignature","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameSignature","pos":[0,19]}]},{"pos":[3710,3744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4045,4079],"content":"VerifySignature(ActivationContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(ActivationContext)","pos":[0,34]}]},{"pos":[4600,4634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4746,4780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5228,5276],"content":"VerifySignature(ActivationContext,ManifestKinds)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(ActivationContext,ManifestKinds)","pos":[0,48]}]},{"pos":[5866,5900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5982,6016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6128,6162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6870,6956],"content":"VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)","pos":[0,86]}]},{"pos":[7784,7818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7900,7934],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8056,8090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8212,8246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8358,8392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8590,8603],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[8787,8808],"content":"AuthenticodeSignature","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticodeSignature","pos":[0,21]}]},{"pos":[9138,9170],"content":"AuthenticodeSignatureInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"AuthenticodeSignatureInformation","pos":[0,32]}]},{"pos":[9481,9489],"content":"Manifest","needQuote":true,"needEscape":true,"nodes":[{"content":"Manifest","pos":[0,8]}]},{"pos":[9714,9727],"content":"ManifestKinds","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestKinds","pos":[0,13]}]},{"pos":[9981,10000],"content":"StrongNameSignature","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameSignature","pos":[0,19]}]},{"pos":[10290,10320],"content":"StrongNameSignatureInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameSignatureInformation","pos":[0,30]}]},{"pos":[10643,10677],"content":"VerifySignature(ActivationContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(ActivationContext)","pos":[0,34]}]},{"pos":[11005,11043],"content":"ManifestSignatureInformationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestSignatureInformationCollection","pos":[0,38]}]},{"pos":[11256,11273],"content":"ActivationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivationContext","pos":[0,17]}]},{"pos":[11578,11626],"content":"VerifySignature(ActivationContext,ManifestKinds)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(ActivationContext,ManifestKinds)","pos":[0,48]}]},{"pos":[11982,12020],"content":"ManifestSignatureInformationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestSignatureInformationCollection","pos":[0,38]}]},{"pos":[12233,12250],"content":"ActivationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivationContext","pos":[0,17]}]},{"pos":[12413,12426],"content":"ManifestKinds","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestKinds","pos":[0,13]}]},{"pos":[12862,12948],"content":"VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)","pos":[0,86]}]},{"pos":[13380,13418],"content":"ManifestSignatureInformationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestSignatureInformationCollection","pos":[0,38]}]},{"pos":[13631,13648],"content":"ActivationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivationContext","pos":[0,17]}]},{"pos":[13811,13824],"content":"ManifestKinds","needQuote":true,"needEscape":true,"nodes":[{"content":"ManifestKinds","pos":[0,13]}]},{"pos":[14052,14070],"content":"X509RevocationFlag","needQuote":true,"needEscape":true,"nodes":[{"content":"X509RevocationFlag","pos":[0,18]}]},{"pos":[14338,14356],"content":"X509RevocationMode","needQuote":true,"needEscape":true,"nodes":[{"content":"X509RevocationMode","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ManifestSignatureInformation\n  id: ManifestSignatureInformation\n  children:\n  - System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  - System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  - System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  langs:\n  - csharp\n  name: ManifestSignatureInformation\n  nameWithType: ManifestSignatureInformation\n  fullName: System.Security.Cryptography.ManifestSignatureInformation\n  type: Class\n  syntax:\n    content: public sealed class ManifestSignatureInformation\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  id: AuthenticodeSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: AuthenticodeSignature\n  nameWithType: ManifestSignatureInformation.AuthenticodeSignature\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  id: Manifest\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: Manifest\n  nameWithType: ManifestSignatureInformation.Manifest\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.ManifestKinds Manifest { get; }\n    return:\n      type: System.Security.ManifestKinds\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  id: StrongNameSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: StrongNameSignature\n  nameWithType: ManifestSignatureInformation.StrongNameSignature\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature { get; }\n    return:\n      type: System.Security.Cryptography.StrongNameSignatureInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  id: VerifySignature(System.ActivationContext)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: VerifySignature(ActivationContext)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext)\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(ActivationContext)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application);\n    parameters:\n    - id: application\n      type: System.ActivationContext\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ManifestSignatureInformationCollection\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  id: VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: VerifySignature(ActivationContext,ManifestKinds)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds)\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests);\n    parameters:\n    - id: application\n      type: System.ActivationContext\n      description: Parameter description to be filled\n    - id: manifests\n      type: System.Security.ManifestKinds\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ManifestSignatureInformationCollection\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  id: VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  langs:\n  - csharp\n  name: VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests, System.Security.Cryptography.X509Certificates.X509RevocationFlag revocationFlag, System.Security.Cryptography.X509Certificates.X509RevocationMode revocationMode);\n    parameters:\n    - id: application\n      type: System.ActivationContext\n      description: Parameter description to be filled\n    - id: manifests\n      type: System.Security.ManifestKinds\n      description: Parameter description to be filled\n    - id: revocationFlag\n      type: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n      description: Parameter description to be filled\n    - id: revocationMode\n      type: System.Security.Cryptography.X509Certificates.X509RevocationMode\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ManifestSignatureInformationCollection\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: AuthenticodeSignature\n  nameWithType: ManifestSignatureInformation.AuthenticodeSignature\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature\n- uid: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: AuthenticodeSignatureInformation\n  nameWithType: AuthenticodeSignatureInformation\n  fullName: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation\n- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: Manifest\n  nameWithType: ManifestSignatureInformation.Manifest\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.Manifest\n- uid: System.Security.ManifestKinds\n  parent: System.Security\n  isExternal: false\n  name: ManifestKinds\n  nameWithType: ManifestKinds\n  fullName: System.Security.ManifestKinds\n- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: StrongNameSignature\n  nameWithType: ManifestSignatureInformation.StrongNameSignature\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature\n- uid: System.Security.Cryptography.StrongNameSignatureInformation\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: StrongNameSignatureInformation\n  nameWithType: StrongNameSignatureInformation\n  fullName: System.Security.Cryptography.StrongNameSignatureInformation\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature(ActivationContext)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext)\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(ActivationContext)\n- uid: System.Security.Cryptography.ManifestSignatureInformationCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ManifestSignatureInformationCollection\n  nameWithType: ManifestSignatureInformationCollection\n  fullName: System.Security.Cryptography.ManifestSignatureInformationCollection\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature(ActivationContext,ManifestKinds)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds)\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds)\n- uid: System.Security.Cryptography.ManifestSignatureInformationCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ManifestSignatureInformationCollection\n  nameWithType: ManifestSignatureInformationCollection\n  fullName: System.Security.Cryptography.ManifestSignatureInformationCollection\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Security.ManifestKinds\n  parent: System.Security\n  isExternal: false\n  name: ManifestKinds\n  nameWithType: ManifestKinds\n  fullName: System.Security.ManifestKinds\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  name: VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)\n  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)\n  fullName: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(ActivationContext,ManifestKinds,X509RevocationFlag,X509RevocationMode)\n- uid: System.Security.Cryptography.ManifestSignatureInformationCollection\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ManifestSignatureInformationCollection\n  nameWithType: ManifestSignatureInformationCollection\n  fullName: System.Security.Cryptography.ManifestSignatureInformationCollection\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Security.ManifestKinds\n  parent: System.Security\n  isExternal: false\n  name: ManifestKinds\n  nameWithType: ManifestKinds\n  fullName: System.Security.ManifestKinds\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: true\n  name: X509RevocationFlag\n  nameWithType: X509RevocationFlag\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationFlag\n- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: true\n  name: X509RevocationMode\n  nameWithType: X509RevocationMode\n  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode\n- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*\n  parent: System.Security.Cryptography.ManifestSignatureInformation\n  isExternal: false\n  nameWithType: ManifestSignatureInformation.\n"}