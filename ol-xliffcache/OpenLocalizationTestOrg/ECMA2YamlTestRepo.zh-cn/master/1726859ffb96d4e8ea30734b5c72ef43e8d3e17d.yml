### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  id: DomainController
  children:
  - System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  - System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  - System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  - System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.DomainController.Domain
  - System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.Forest
  - System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  - System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  - System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  - System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  - System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  - System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  - System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  - System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  - System.DirectoryServices.ActiveDirectory.DomainController.Roles
  - System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  - System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  - System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  - System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  langs:
  - csharp
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
  type: Class
  syntax:
    content: 'public class DomainController : System.DirectoryServices.ActiveDirectory.DirectoryServer'
  inheritance:
  - System.Object
  - System.DirectoryServices.ActiveDirectory.DirectoryServer
  implements: []
  inheritedMembers:
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions
  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: DomainController()
  nameWithType: DomainController.DomainController()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.DomainController()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: protected DomainController ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  id: CheckReplicationConsistency
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: CheckReplicationConsistency()
  nameWithType: DomainController.CheckReplicationConsistency()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override void CheckReplicationConsistency ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  id: CurrentTime
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public DateTime CurrentTime { get; }
    return:
      type: System.DateTime
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DomainController.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  id: Domain
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Domain
  nameWithType: DomainController.Domain
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain Domain { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  id: EnableGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: EnableGlobalCatalog()
  nameWithType: DomainController.EnableGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public virtual System.DirectoryServices.ActiveDirectory.GlobalCatalog EnableGlobalCatalog ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  id: Finalize
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Finalize()
  nameWithType: DomainController.Finalize()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Finalize()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: ~DomainController ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindAll(DirectoryContext)
  nameWithType: DomainController.FindAll(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: Parameter description to be filled
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindAll(DirectoryContext,String)
  nameWithType: DomainController.FindAll(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    - id: siteName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
      description: Parameter description to be filled
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext)
  nameWithType: DomainController.FindOne(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: Parameter description to be filled
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: Parameter description to be filled
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext,String)
  nameWithType: DomainController.FindOne(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    - id: siteName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: Parameter description to be filled
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: FindOne(DirectoryContext,String,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    - id: siteName
      type: System.String
      description: Parameter description to be filled
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: Parameter description to be filled
  overload: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  id: Forest
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Forest
  nameWithType: DomainController.Forest
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  id: GetAllReplicationNeighbors
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetAllReplicationNeighbors()
  nameWithType: DomainController.GetAllReplicationNeighbors()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  id: GetDirectorySearcher
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetDirectorySearcher()
  nameWithType: DomainController.GetDirectorySearcher()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public virtual System.DirectoryServices.DirectorySearcher GetDirectorySearcher ();
    parameters: []
    return:
      type: System.DirectoryServices.DirectorySearcher
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetDomainController(DirectoryContext)
  nameWithType: DomainController.GetDomainController(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.DomainController GetDomainController (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  id: GetReplicationConnectionFailures
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationConnectionFailures()
  nameWithType: DomainController.GetReplicationConnectionFailures()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  id: GetReplicationCursors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationCursors(String)
  nameWithType: DomainController.GetReplicationCursors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  id: GetReplicationMetadata(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationMetadata(String)
  nameWithType: DomainController.GetReplicationMetadata(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);
    parameters:
    - id: objectPath
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  id: GetReplicationNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationNeighbors(String)
  nameWithType: DomainController.GetReplicationNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  id: GetReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: GetReplicationOperationInformation()
  nameWithType: DomainController.GetReplicationOperationInformation()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  id: HighestCommittedUsn
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public long HighestCommittedUsn { get; }
    return:
      type: System.Int64
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  id: InboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  id: IPAddress
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override string IPAddress { get; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  id: IsGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: IsGlobalCatalog()
  nameWithType: DomainController.IsGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public virtual bool IsGlobalCatalog ();
    parameters: []
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  id: OSVersion
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public string OSVersion { get; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  id: OutboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  id: Roles
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: Roles
  nameWithType: DomainController.Roles
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection Roles { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  id: SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SeizeRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  id: SiteName
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override string SiteName { get; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  id: SyncFromAllServersCallback
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }
    return:
      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  nameWithType: DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);
    parameters:
    - id: partition
      type: System.String
      description: Parameter description to be filled
    - id: options
      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  id: SyncReplicaFromServer(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: SyncReplicaFromServer(String,String)
  nameWithType: DomainController.SyncReplicaFromServer(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override void SyncReplicaFromServer (string partition, string sourceServer);
    parameters:
    - id: partition
      type: System.String
      description: Parameter description to be filled
    - id: sourceServer
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  id: TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: TransferRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole role);
    parameters:
    - id: role
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  id: TriggerSyncReplicaFromNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  langs:
  - csharp
  name: TriggerSyncReplicaFromNeighbors(String)
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  syntax:
    content: public override void TriggerSyncReplicaFromNeighbors (string partition);
    parameters:
    - id: partition
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer
  isExternal: false
  name: System.DirectoryServices.ActiveDirectory.DirectoryServer
- uid: System.DirectoryServices.ActiveDirectory.DomainController.#ctor
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: DomainController()
  nameWithType: DomainController.DomainController()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.DomainController()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CheckReplicationConsistency()
  nameWithType: DomainController.CheckReplicationConsistency()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CheckReplicationConsistency()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: CurrentTime
  nameWithType: DomainController.CurrentTime
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.CurrentTime
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DomainController.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Domain
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Domain
  nameWithType: DomainController.Domain
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Domain
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: EnableGlobalCatalog()
  nameWithType: DomainController.EnableGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.EnableGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalog
  nameWithType: GlobalCatalog
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Finalize
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Finalize()
  nameWithType: DomainController.Finalize()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Finalize()
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll(DirectoryContext)
  nameWithType: DomainController.FindAll(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindAll(DirectoryContext,String)
  nameWithType: DomainController.FindAll(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindAll(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainControllerCollection
  nameWithType: DomainControllerCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext)
  nameWithType: DomainController.FindOne(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext,String)
  nameWithType: DomainController.FindOne(DirectoryContext,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: FindOne(DirectoryContext,String,LocatorOptions)
  nameWithType: DomainController.FindOne(DirectoryContext,String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.FindOne(DirectoryContext,String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Forest
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Forest
  nameWithType: DomainController.Forest
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetAllReplicationNeighbors()
  nameWithType: DomainController.GetAllReplicationNeighbors()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetAllReplicationNeighbors()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationNeighborCollection
  nameWithType: ReplicationNeighborCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDirectorySearcher()
  nameWithType: DomainController.GetDirectorySearcher()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetDomainController(DirectoryContext)
  nameWithType: DomainController.GetDomainController(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetDomainController(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationConnectionFailures()
  nameWithType: DomainController.GetReplicationConnectionFailures()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationConnectionFailures()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationFailureCollection
  nameWithType: ReplicationFailureCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationCursors(String)
  nameWithType: DomainController.GetReplicationCursors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationCursors(String)
- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationCursorCollection
  nameWithType: ReplicationCursorCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationMetadata(String)
  nameWithType: DomainController.GetReplicationMetadata(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationMetadata(String)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryReplicationMetadata
  nameWithType: ActiveDirectoryReplicationMetadata
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationNeighbors(String)
  nameWithType: DomainController.GetReplicationNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationNeighbors(String)
- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationNeighborCollection
  nameWithType: ReplicationNeighborCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: GetReplicationOperationInformation()
  nameWithType: DomainController.GetReplicationOperationInformation()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.GetReplicationOperationInformation()
- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationOperationInformation
  nameWithType: ReplicationOperationInformation
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation
- uid: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: HighestCommittedUsn
  nameWithType: DomainController.HighestCommittedUsn
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.HighestCommittedUsn
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: InboundConnections
  nameWithType: DomainController.InboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.InboundConnections
- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationConnectionCollection
  nameWithType: ReplicationConnectionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IPAddress
  nameWithType: DomainController.IPAddress
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IPAddress
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: IsGlobalCatalog()
  nameWithType: DomainController.IsGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.IsGlobalCatalog()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OSVersion
  nameWithType: DomainController.OSVersion
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OSVersion
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: OutboundConnections
  nameWithType: DomainController.OutboundConnections
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.OutboundConnections
- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReplicationConnectionCollection
  nameWithType: ReplicationConnectionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.Roles
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: Roles
  nameWithType: DomainController.Roles
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.Roles
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRoleCollection
  nameWithType: ActiveDirectoryRoleCollection
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRoleCollection
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SeizeRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SeizeRoleOwnership(ActiveDirectoryRole)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SiteName
  nameWithType: DomainController.SiteName
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SiteName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncFromAllServersCallback
  nameWithType: DomainController.SyncFromAllServersCallback
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncFromAllServersCallback
- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncUpdateCallback
  nameWithType: SyncUpdateCallback
  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  nameWithType: DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: SyncFromAllServersOptions
  nameWithType: SyncFromAllServersOptions
  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions
- uid: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: SyncReplicaFromServer(String,String)
  nameWithType: DomainController.SyncReplicaFromServer(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.SyncReplicaFromServer(String,String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TransferRoleOwnership(ActiveDirectoryRole)
  nameWithType: DomainController.TransferRoleOwnership(ActiveDirectoryRole)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TransferRoleOwnership(ActiveDirectoryRole)
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryRole
  nameWithType: ActiveDirectoryRole
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryRole
- uid: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(System.String)
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  name: TriggerSyncReplicaFromNeighbors(String)
  nameWithType: DomainController.TriggerSyncReplicaFromNeighbors(String)
  fullName: System.DirectoryServices.ActiveDirectory.DomainController.TriggerSyncReplicaFromNeighbors(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindAll*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  nameWithType: DomainController.
- uid: System.DirectoryServices.ActiveDirectory.DomainController.FindOne*
  parent: System.DirectoryServices.ActiveDirectory.DomainController
  isExternal: false
  nameWithType: DomainController.
