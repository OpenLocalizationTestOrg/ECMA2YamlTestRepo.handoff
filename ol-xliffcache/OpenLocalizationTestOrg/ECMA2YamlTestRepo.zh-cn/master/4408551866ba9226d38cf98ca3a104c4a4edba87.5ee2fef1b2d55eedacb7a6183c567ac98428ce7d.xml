{"nodes":[{"pos":[4204,4235],"content":"ReadOnlyDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyDictionary&lt;TKey,TValue&gt;","pos":[0,31],"source":"ReadOnlyDictionary<TKey,TValue>"}]},{"pos":[5117,5151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5188,5222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6320,6364],"content":"ReadOnlyDictionary(IDictionary<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyDictionary(IDictionary&lt;TKey,TValue&gt;)","pos":[0,44],"source":"ReadOnlyDictionary(IDictionary<TKey,TValue>)"}]},{"pos":[6893,6927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7164,7181],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[7552,7586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7645,7679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7896,7901],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[8230,8264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8491,8501],"content":"Dictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary","pos":[0,10]}]},{"pos":[8924,8958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9191,9206],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[9744,9778],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10001,10011],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[10372,10406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10457,10491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10706,10710],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[11162,11196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11695,11760],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[12338,12372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12789,12829],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[13725,13790],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[14373,14407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14466,14500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15045,15116],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;,Int32)","pos":[0,71],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)"}]},{"pos":[15740,15774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15840,15874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16301,16339],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[16828,16862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17367,17432],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[18013,18047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18106,18140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18485,18536],"content":"System.Collections.Generic.IDictionary(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(TKey,TValue)","pos":[0,51]}]},{"pos":[18999,19033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19088,19122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19463,19507],"content":"System.Collections.Generic.IDictionary(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(TKey)","pos":[0,44]}]},{"pos":[19986,20020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20071,20105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20438,20476],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[20988,21022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21367,21411],"content":"System.Collections.Generic.IDictionary(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(TKey)","pos":[0,44]}]},{"pos":[21849,21883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21942,21976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22313,22351],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[22869,22903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23252,23298],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[23834,23868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24221,24267],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[24809,24843],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25192,25242],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[25703,25737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25798,25832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26143,26188],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[26633,26667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26966,27005],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[27433,27467],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27814,27863],"content":"System.Collections.IDictionary.Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Add(Object,Object)","pos":[0,49]}]},{"pos":[28320,28354],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28416,28450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28743,28781],"content":"System.Collections.IDictionary.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Clear()","pos":[0,38]}]},{"pos":[29466,29513],"content":"System.Collections.IDictionary.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Contains(Object)","pos":[0,47]}]},{"pos":[29957,29991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30050,30084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30393,30439],"content":"System.Collections.IDictionary.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.GetEnumerator()","pos":[0,46]}]},{"pos":[30940,30974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31279,31321],"content":"System.Collections.IDictionary.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsFixedSize","pos":[0,42]}]},{"pos":[31757,31791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32094,32135],"content":"System.Collections.IDictionary.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsReadOnly","pos":[0,41]}]},{"pos":[32568,32602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32923,32966],"content":"System.Collections.IDictionary.Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Item(Object)","pos":[0,43]}]},{"pos":[33433,33467],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33525,33559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33850,33885],"content":"System.Collections.IDictionary.Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Keys","pos":[0,35]}]},{"pos":[34342,34376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34701,34746],"content":"System.Collections.IDictionary.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Remove(Object)","pos":[0,45]}]},{"pos":[35184,35218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35513,35550],"content":"System.Collections.IDictionary.Values","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Values","pos":[0,37]}]},{"pos":[36013,36047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36356,36402],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[36883,36917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37162,37186],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[37589,37623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37678,37712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37771,37805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38024,38030],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[38492,38526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38637,38650],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[38848,38892],"content":"ReadOnlyDictionary(IDictionary<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyDictionary(IDictionary&lt;TKey,TValue&gt;)","pos":[0,44],"source":"ReadOnlyDictionary(IDictionary<TKey,TValue>)"}]},{"pos":[39219,39243],"content":"IDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;TKey,TValue&gt;","pos":[0,24],"source":"IDictionary<TKey,TValue>"}]},{"pos":[39514,39531],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[39758,39765],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39869,39873],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[40067,40072],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[40273,40278],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40486,40496],"content":"Dictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary","pos":[0,10]}]},{"pos":[40755,40779],"content":"IDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;TKey,TValue&gt;","pos":[0,24],"source":"IDictionary<TKey,TValue>"}]},{"pos":[41048,41063],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[41384,41422],"content":"IEnumerator<KeyValuePair<TKey,TValue>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;TKey,TValue&gt;&gt;","pos":[0,38],"source":"IEnumerator<KeyValuePair<TKey,TValue>>"}]},{"pos":[41741,41751],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[41951,41957],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[42052,42056],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[42249,42253],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[42529,42574],"content":"ReadOnlyDictionary<TKey,TValue>+KeyCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyDictionary&lt;TKey,TValue&gt;+KeyCollection","pos":[0,45],"source":"ReadOnlyDictionary<TKey,TValue>+KeyCollection"}]},{"pos":[43015,43080],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[43450,43475],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[43831,43871],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[44371,44436],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[44759,44766],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44932,44957],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[45377,45448],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;,Int32)","pos":[0,71],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)"}]},{"pos":[45841,45866],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[46041,46046],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46347,46385],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[46654,46661],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47005,47070],"content":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;TKey,TValue&gt;)","pos":[0,65],"source":"System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)"}]},{"pos":[47393,47400],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47566,47591],"content":"KeyValuePair<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;TKey,TValue&gt;","pos":[0,25],"source":"KeyValuePair<TKey,TValue>"}]},{"pos":[47911,47962],"content":"System.Collections.Generic.IDictionary(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(TKey,TValue)","pos":[0,51]}]},{"pos":[48242,48246],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[48339,48345],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[48598,48642],"content":"System.Collections.Generic.IDictionary(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(TKey)","pos":[0,44]}]},{"pos":[48910,48916],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[49011,49015],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[49260,49298],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[49617,49634],"content":"ICollection<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<TKey>"},{"pos":[49938,49982],"content":"System.Collections.Generic.IDictionary(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(TKey)","pos":[0,44]}]},{"pos":[50263,50270],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50374,50378],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[50625,50663],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[50984,51003],"content":"ICollection<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<TValue>"},{"pos":[51313,51359],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[51694,51711],"content":"IEnumerable<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TKey>"},{"pos":[52019,52065],"content":"System.Collections.Generic.IReadOnlyDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IReadOnlyDictionary","pos":[0,46]}]},{"pos":[52402,52421],"content":"IEnumerable<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TValue>"},{"pos":[52731,52781],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[53072,53077],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[53190,53195],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53438,53483],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[53766,53773],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54014,54053],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[54323,54329],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54592,54641],"content":"System.Collections.IDictionary.Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Add(Object,Object)","pos":[0,49]}]},{"pos":[54931,54937],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55053,55059],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55295,55333],"content":"System.Collections.IDictionary.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Clear()","pos":[0,38]}]},{"pos":[55739,55786],"content":"System.Collections.IDictionary.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Contains(Object)","pos":[0,47]}]},{"pos":[56073,56080],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56198,56204],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56448,56494],"content":"System.Collections.IDictionary.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.GetEnumerator()","pos":[0,46]}]},{"pos":[56817,56838],"content":"IDictionaryEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[57122,57164],"content":"System.Collections.IDictionary.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsFixedSize","pos":[0,42]}]},{"pos":[57441,57448],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57691,57732],"content":"System.Collections.IDictionary.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsReadOnly","pos":[0,41]}]},{"pos":[58007,58014],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58266,58309],"content":"System.Collections.IDictionary.Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Item(Object)","pos":[0,43]}]},{"pos":[58587,58593],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58709,58715],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[58950,58985],"content":"System.Collections.IDictionary.Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Keys","pos":[0,35]}]},{"pos":[59276,59287],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[59561,59606],"content":"System.Collections.IDictionary.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Remove(Object)","pos":[0,45]}]},{"pos":[59888,59894],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[60131,60168],"content":"System.Collections.IDictionary.Values","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Values","pos":[0,37]}]},{"pos":[60463,60474],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[60740,60786],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[61099,61110],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[61351,61375],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[61616,61623],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[61727,61731],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[61824,61830],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[62029,62035],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[62317,62364],"content":"ReadOnlyDictionary<TKey,TValue>+ValueCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyDictionary&lt;TKey,TValue&gt;+ValueCollection","pos":[0,47],"source":"ReadOnlyDictionary<TKey,TValue>+ValueCollection"}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  id: ReadOnlyDictionary`2\n  children:\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary`2)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Count\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  - System.Collections.ObjectModel.ReadOnlyDictionary`2.Values\n  langs:\n  - csharp\n  name: ReadOnlyDictionary<TKey,TValue>\n  nameWithType: ReadOnlyDictionary<TKey,TValue>\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryDebugView`2))]\n\n      public class ReadOnlyDictionary<TKey,TValue> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IDictionary<TKey,TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>, System.Collections.IDictionary\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IDictionary<TKey,TValue>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>\n  - System.Collections.IDictionary\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary`2)\n  id: '#ctor(System.Collections.Generic.IDictionary`2)'\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: ReadOnlyDictionary(IDictionary<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public ReadOnlyDictionary (System.Collections.Generic.IDictionary<TKey,TValue> dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: ContainsKey(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public bool ContainsKey (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count\n  id: Count\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Count\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary\n  id: Dictionary\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Dictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Dictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Dictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected System.Collections.Generic.IDictionary<TKey,TValue> Dictionary { get; }\n    return:\n      type: System.Collections.Generic.IDictionary`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Item(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Item(TKey)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public TValue this[TKey key] { get; }\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys\n  id: Keys\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.KeyCollection Keys { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<KeyValuePair<TKey,TValue>>.Add (System.Collections.Generic.KeyValuePair<TKey,TValue> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<KeyValuePair<TKey,TValue>>.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey,TValue>>.Contains (System.Collections.Generic.KeyValuePair<TKey,TValue> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair`2\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<KeyValuePair<TKey,TValue>>.CopyTo (System.Collections.Generic.KeyValuePair<TKey,TValue>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{TKey,TValue}\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<KeyValuePair<TKey,TValue>>.Remove (System.Collections.Generic.KeyValuePair<TKey,TValue> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair`2\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(TKey,TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IDictionary<TKey,TValue>.Add (TKey key, TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: TValue System.Collections.Generic.IDictionary<TKey,TValue>.Item[TKey key] { get; set; }\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.Generic.ICollection<TKey> System.Collections.Generic.IDictionary<TKey,TValue>.Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool IDictionary<TKey,TValue>.Remove (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.Generic.ICollection<TValue> System.Collections.Generic.IDictionary<TKey,TValue>.Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.Generic.IEnumerable<TKey> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Keys { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  id: System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.Generic.IEnumerable<TValue> System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.Values { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IDictionary.Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear\n  id: System#Collections#IDictionary#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Clear()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IDictionary.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool IDictionary.Contains (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator\n  id: System#Collections#IDictionary#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.IDictionaryEnumerator IDictionary.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.IDictionary.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.IDictionary.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.IDictionary.Item[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Keys\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IDictionary.Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values\n  id: System#Collections#IDictionary#Values\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Values\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: TryGetValue(TKey,TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public bool TryGetValue (TKey key, out TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values\n  id: Values\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  langs:\n  - csharp\n  name: Values\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ValueCollection Values { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.#ctor(System.Collections.Generic.IDictionary`2)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: ReadOnlyDictionary(IDictionary<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ReadOnlyDictionary(IDictionary<TKey,TValue>)\n- uid: System.Collections.Generic.IDictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ContainsKey(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: ContainsKey(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.ContainsKey(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Count\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Count\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Dictionary\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: Dictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Dictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Dictionary\n- uid: System.Collections.Generic.IDictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{TKey,TValue}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<TKey,TValue>>\n  nameWithType: IEnumerator<KeyValuePair<TKey,TValue>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Item(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: Item(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Item(TKey)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Keys\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: Keys\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Keys\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.KeyCollection\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyDictionary<TKey,TValue>+KeyCollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+KeyCollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+KeyCollection\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair`2)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n- uid: System.Collections.Generic.KeyValuePair`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Contains(System.Collections.Generic.KeyValuePair`2)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{TKey,TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair`2)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.ICollection(KeyValuePair<TKey,TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(TKey,TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey,TValue)\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n- uid: System.Collections.Generic.ICollection{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TKey>\n  nameWithType: ICollection<TKey>\n  fullName: System.Collections.Generic.ICollection<TKey>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(TKey)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IDictionary\n- uid: System.Collections.Generic.ICollection{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TValue>\n  nameWithType: ICollection<TValue>\n  fullName: System.Collections.Generic.ICollection<TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Keys\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n- uid: System.Collections.Generic.IEnumerable{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TKey>\n  nameWithType: IEnumerable<TKey>\n  fullName: System.Collections.Generic.IEnumerable<TKey>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#Generic#IReadOnlyDictionary{TKey,TValue}#Values\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.Generic.IReadOnlyDictionary\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.Generic.IReadOnlyDictionary\n- uid: System.Collections.Generic.IEnumerable{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TValue>\n  nameWithType: IEnumerable<TValue>\n  fullName: System.Collections.Generic.IEnumerable<TValue>\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Add(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Clear()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Clear()\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Contains(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsFixedSize\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Item(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Item(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Keys\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Remove(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IDictionary#Values\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IDictionary.Values\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IDictionary.Values\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.TryGetValue(`0,`1@)\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: TryGetValue(TKey,TValue)\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.Values\n  parent: System.Collections.ObjectModel.ReadOnlyDictionary`2\n  isExternal: false\n  name: Values\n  nameWithType: ReadOnlyDictionary<TKey,TValue>.Values\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>.Values\n- uid: System.Collections.ObjectModel.ReadOnlyDictionary`2.ValueCollection\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyDictionary<TKey,TValue>+ValueCollection\n  nameWithType: ReadOnlyDictionary<TKey,TValue>+ValueCollection\n  fullName: System.Collections.ObjectModel.ReadOnlyDictionary<TKey,TValue>+ValueCollection\n"}