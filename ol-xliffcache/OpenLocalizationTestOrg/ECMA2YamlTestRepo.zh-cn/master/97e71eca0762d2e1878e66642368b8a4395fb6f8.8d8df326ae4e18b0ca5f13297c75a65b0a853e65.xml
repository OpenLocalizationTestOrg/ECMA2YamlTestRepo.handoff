{"nodes":[{"pos":[766,781],"content":"Size3DConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"Size3DConverter","pos":[0,15]}]},{"pos":[1283,1300],"content":"Size3DConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"Size3DConverter()","pos":[0,17]}]},{"pos":[1928,1971],"content":"CanConvertFrom(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext,Type)","pos":[0,43]}]},{"pos":[2483,2517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2582,2616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2675,2709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3042,3083],"content":"CanConvertTo(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext,Type)","pos":[0,41]}]},{"pos":[3594,3628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3698,3732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3791,3825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4226,4280],"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","pos":[0,54]}]},{"pos":[4852,4886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4969,5003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5065,5099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5157,5191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5612,5669],"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","pos":[0,57]}]},{"pos":[6267,6301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6384,6418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6480,6514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6584,6618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6676,6710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6843,6878],"content":"System.ComponentModel.TypeConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ComponentModel.TypeConverter","pos":[0,35]}]},{"pos":[7020,7037],"content":"Size3DConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"Size3DConverter()","pos":[0,17]}]},{"pos":[7371,7414],"content":"CanConvertFrom(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext,Type)","pos":[0,43]}]},{"pos":[7659,7666],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7829,7851],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[8012,8016],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[8268,8309],"content":"CanConvertTo(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext,Type)","pos":[0,41]}]},{"pos":[8550,8557],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8720,8742],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[8903,8907],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[9193,9247],"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","pos":[0,54]}]},{"pos":[9513,9519],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9680,9702],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[9898,9909],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[10049,10055],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10355,10412],"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","pos":[0,57]}]},{"pos":[10684,10690],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10851,10873],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[11069,11080],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[11220,11226],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11340,11344],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Media3D.Size3DConverter\n  id: Size3DConverter\n  children:\n  - System.Windows.Media.Media3D.Size3DConverter.#ctor\n  - System.Windows.Media.Media3D.Size3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Media.Media3D.Size3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.Media.Media3D.Size3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.Media.Media3D.Size3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: Size3DConverter\n  nameWithType: Size3DConverter\n  fullName: System.Windows.Media.Media3D.Size3DConverter\n  type: Class\n  syntax:\n    content: 'public sealed class Size3DConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Size3DConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  langs:\n  - csharp\n  name: Size3DConverter()\n  nameWithType: Size3DConverter.Size3DConverter()\n  fullName: System.Windows.Media.Media3D.Size3DConverter.Size3DConverter()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public Size3DConverter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Size3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: Size3DConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: sourceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Size3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: Size3DConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: destinationType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Size3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: Size3DConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Media3D.Size3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: Size3DConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Media3D\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);\n    parameters:\n    - id: context\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: destinationType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Windows.Media.Media3D.Size3DConverter.#ctor\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  isExternal: false\n  name: Size3DConverter()\n  nameWithType: Size3DConverter.Size3DConverter()\n  fullName: System.Windows.Media.Media3D.Size3DConverter.Size3DConverter()\n- uid: System.Windows.Media.Media3D.Size3DConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: Size3DConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Media.Media3D.Size3DConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: Size3DConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.Media.Media3D.Size3DConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: Size3DConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Media3D.Size3DConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.Media.Media3D.Size3DConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: Size3DConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.Media.Media3D.Size3DConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}