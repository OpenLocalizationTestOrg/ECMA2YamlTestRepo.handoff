{"nodes":[{"pos":[598,606],"content":"TimeZone","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeZone","pos":[0,8]}]},{"pos":[1284,1294],"content":"TimeZone()","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeZone()","pos":[0,10]}]},{"pos":[1666,1681],"content":"CurrentTimeZone","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentTimeZone","pos":[0,15]}]},{"pos":[1961,1995],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2154,2166],"content":"DaylightName","needQuote":true,"needEscape":true,"nodes":[{"content":"DaylightName","pos":[0,12]}]},{"pos":[2435,2469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2668,2693],"content":"GetDaylightChanges(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDaylightChanges(Int32)","pos":[0,25]}]},{"pos":[3040,3074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3152,3186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3379,3401],"content":"GetUtcOffset(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetUtcOffset(DateTime)","pos":[0,22]}]},{"pos":[3719,3753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3813,3847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4056,4086],"content":"IsDaylightSavingTime(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDaylightSavingTime(DateTime)","pos":[0,30]}]},{"pos":[4423,4457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4516,4550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4877,4920],"content":"IsDaylightSavingTime(DateTime,DaylightTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDaylightSavingTime(DateTime,DaylightTime)","pos":[0,43]}]},{"pos":[5331,5365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5455,5489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5548,5582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5791,5803],"content":"StandardName","needQuote":true,"needEscape":true,"nodes":[{"content":"StandardName","pos":[0,12]}]},{"pos":[6072,6106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6297,6318],"content":"ToLocalTime(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToLocalTime(DateTime)","pos":[0,21]}]},{"pos":[6632,6666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6726,6760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6959,6984],"content":"ToUniversalTime(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUniversalTime(DateTime)","pos":[0,25]}]},{"pos":[7310,7344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7404,7438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7549,7562],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7646,7656],"content":"TimeZone()","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeZone()","pos":[0,10]}]},{"pos":[7825,7840],"content":"CurrentTimeZone","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentTimeZone","pos":[0,15]}]},{"pos":[7994,8002],"content":"TimeZone","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeZone","pos":[0,8]}]},{"pos":[8146,8158],"content":"DaylightName","needQuote":true,"needEscape":true,"nodes":[{"content":"DaylightName","pos":[0,12]}]},{"pos":[8304,8310],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8470,8495],"content":"GetDaylightChanges(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDaylightChanges(Int32)","pos":[0,25]}]},{"pos":[8701,8713],"content":"DaylightTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DaylightTime","pos":[0,12]}]},{"pos":[8854,8859],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9014,9036],"content":"GetUtcOffset(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetUtcOffset(DateTime)","pos":[0,22]}]},{"pos":[9204,9212],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[9334,9342],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[9511,9541],"content":"IsDaylightSavingTime(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDaylightSavingTime(DateTime)","pos":[0,30]}]},{"pos":[9724,9731],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9851,9859],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[10062,10105],"content":"IsDaylightSavingTime(DateTime,DaylightTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDaylightSavingTime(DateTime,DaylightTime)","pos":[0,43]}]},{"pos":[10314,10321],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10441,10449],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[10603,10615],"content":"DaylightTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DaylightTime","pos":[0,12]}]},{"pos":[10781,10793],"content":"StandardName","needQuote":true,"needEscape":true,"nodes":[{"content":"StandardName","pos":[0,12]}]},{"pos":[10939,10945],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11101,11122],"content":"ToLocalTime(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToLocalTime(DateTime)","pos":[0,21]}]},{"pos":[11288,11296],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[11418,11426],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[11590,11615],"content":"ToUniversalTime(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUniversalTime(DateTime)","pos":[0,25]}]},{"pos":[11789,11797],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[11919,11927],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.TimeZone\n  id: TimeZone\n  children:\n  - System.TimeZone.#ctor\n  - System.TimeZone.CurrentTimeZone\n  - System.TimeZone.DaylightName\n  - System.TimeZone.GetDaylightChanges(System.Int32)\n  - System.TimeZone.GetUtcOffset(System.DateTime)\n  - System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  - System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  - System.TimeZone.StandardName\n  - System.TimeZone.ToLocalTime(System.DateTime)\n  - System.TimeZone.ToUniversalTime(System.DateTime)\n  langs:\n  - csharp\n  name: TimeZone\n  nameWithType: TimeZone\n  fullName: System.TimeZone\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class TimeZone\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.#ctor\n  id: '#ctor'\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: TimeZone()\n  nameWithType: TimeZone.TimeZone()\n  fullName: System.TimeZone.TimeZone()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected TimeZone ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.CurrentTimeZone\n  id: CurrentTimeZone\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: CurrentTimeZone\n  nameWithType: TimeZone.CurrentTimeZone\n  fullName: System.TimeZone.CurrentTimeZone\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static TimeZone CurrentTimeZone { get; }\n    return:\n      type: System.TimeZone\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.DaylightName\n  id: DaylightName\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: DaylightName\n  nameWithType: TimeZone.DaylightName\n  fullName: System.TimeZone.DaylightName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract string DaylightName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.GetDaylightChanges(System.Int32)\n  id: GetDaylightChanges(System.Int32)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: GetDaylightChanges(Int32)\n  nameWithType: TimeZone.GetDaylightChanges(Int32)\n  fullName: System.TimeZone.GetDaylightChanges(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract System.Globalization.DaylightTime GetDaylightChanges (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Globalization.DaylightTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.GetUtcOffset(System.DateTime)\n  id: GetUtcOffset(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: GetUtcOffset(DateTime)\n  nameWithType: TimeZone.GetUtcOffset(DateTime)\n  fullName: System.TimeZone.GetUtcOffset(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract TimeSpan GetUtcOffset (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  id: IsDaylightSavingTime(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: IsDaylightSavingTime(DateTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)\n  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual bool IsDaylightSavingTime (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.TimeZone.IsDaylightSavingTime*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  id: IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: IsDaylightSavingTime(DateTime,DaylightTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)\n  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool IsDaylightSavingTime (DateTime time, System.Globalization.DaylightTime daylightTimes);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: daylightTimes\n      type: System.Globalization.DaylightTime\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.TimeZone.IsDaylightSavingTime*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.StandardName\n  id: StandardName\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: StandardName\n  nameWithType: TimeZone.StandardName\n  fullName: System.TimeZone.StandardName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract string StandardName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.ToLocalTime(System.DateTime)\n  id: ToLocalTime(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: ToLocalTime(DateTime)\n  nameWithType: TimeZone.ToLocalTime(DateTime)\n  fullName: System.TimeZone.ToLocalTime(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual DateTime ToLocalTime (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TimeZone.ToUniversalTime(System.DateTime)\n  id: ToUniversalTime(System.DateTime)\n  parent: System.TimeZone\n  langs:\n  - csharp\n  name: ToUniversalTime(DateTime)\n  nameWithType: TimeZone.ToUniversalTime(DateTime)\n  fullName: System.TimeZone.ToUniversalTime(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual DateTime ToUniversalTime (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.TimeZone.#ctor\n  parent: System.TimeZone\n  isExternal: false\n  name: TimeZone()\n  nameWithType: TimeZone.TimeZone()\n  fullName: System.TimeZone.TimeZone()\n- uid: System.TimeZone.CurrentTimeZone\n  parent: System.TimeZone\n  isExternal: false\n  name: CurrentTimeZone\n  nameWithType: TimeZone.CurrentTimeZone\n  fullName: System.TimeZone.CurrentTimeZone\n- uid: System.TimeZone\n  parent: System\n  isExternal: false\n  name: TimeZone\n  nameWithType: TimeZone\n  fullName: System.TimeZone\n- uid: System.TimeZone.DaylightName\n  parent: System.TimeZone\n  isExternal: false\n  name: DaylightName\n  nameWithType: TimeZone.DaylightName\n  fullName: System.TimeZone.DaylightName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.TimeZone.GetDaylightChanges(System.Int32)\n  parent: System.TimeZone\n  isExternal: false\n  name: GetDaylightChanges(Int32)\n  nameWithType: TimeZone.GetDaylightChanges(Int32)\n  fullName: System.TimeZone.GetDaylightChanges(Int32)\n- uid: System.Globalization.DaylightTime\n  parent: System.Globalization\n  isExternal: false\n  name: DaylightTime\n  nameWithType: DaylightTime\n  fullName: System.Globalization.DaylightTime\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TimeZone.GetUtcOffset(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: GetUtcOffset(DateTime)\n  nameWithType: TimeZone.GetUtcOffset(DateTime)\n  fullName: System.TimeZone.GetUtcOffset(DateTime)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: IsDaylightSavingTime(DateTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime)\n  fullName: System.TimeZone.IsDaylightSavingTime(DateTime)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeZone.IsDaylightSavingTime(System.DateTime,System.Globalization.DaylightTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: IsDaylightSavingTime(DateTime,DaylightTime)\n  nameWithType: TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)\n  fullName: System.TimeZone.IsDaylightSavingTime(DateTime,DaylightTime)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Globalization.DaylightTime\n  parent: System.Globalization\n  isExternal: false\n  name: DaylightTime\n  nameWithType: DaylightTime\n  fullName: System.Globalization.DaylightTime\n- uid: System.TimeZone.StandardName\n  parent: System.TimeZone\n  isExternal: false\n  name: StandardName\n  nameWithType: TimeZone.StandardName\n  fullName: System.TimeZone.StandardName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.TimeZone.ToLocalTime(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: ToLocalTime(DateTime)\n  nameWithType: TimeZone.ToLocalTime(DateTime)\n  fullName: System.TimeZone.ToLocalTime(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeZone.ToUniversalTime(System.DateTime)\n  parent: System.TimeZone\n  isExternal: false\n  name: ToUniversalTime(DateTime)\n  nameWithType: TimeZone.ToUniversalTime(DateTime)\n  fullName: System.TimeZone.ToUniversalTime(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeZone.IsDaylightSavingTime*\n  parent: System.TimeZone\n  isExternal: false\n  nameWithType: TimeZone.\n"}