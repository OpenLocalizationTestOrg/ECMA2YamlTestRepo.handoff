{"nodes":[{"pos":[4093,4103],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[6608,6620],"content":"MethodBase()","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase()","pos":[0,12]}]},{"pos":[7040,7050],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[7388,7422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7617,7634],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[7996,8030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8241,8266],"content":"ContainsGenericParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[8598,8632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8835,8849],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9161,9195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9254,9288],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9481,9499],"content":"GetCurrentMethod()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentMethod()","pos":[0,18]}]},{"pos":[9857,9891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10090,10111],"content":"GetGenericArguments()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[10442,10476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10659,10672],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10976,11010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11197,11212],"content":"GetMethodBody()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodBody()","pos":[0,15]}]},{"pos":[11562,11596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11851,11891],"content":"GetMethodFromHandle(RuntimeMethodHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle)","pos":[0,40]}]},{"pos":[12322,12356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12429,12463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12830,12888],"content":"GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)","pos":[0,58]}]},{"pos":[13388,13422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13503,13537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13610,13644],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13923,13953],"content":"GetMethodImplementationFlags()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[14369,14403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14590,14605],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[14966,15000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15235,15258],"content":"Invoke(Object,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Object,Object[])","pos":[0,23]}]},{"pos":[15602,15636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15705,15739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15797,15831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16293,16348],"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","pos":[0,55]}]},{"pos":[16883,16917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17001,17035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17109,17143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17212,17246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17329,17363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17421,17455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17685,17695],"content":"IsAbstract","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAbstract","pos":[0,10]}]},{"pos":[17974,18008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18189,18199],"content":"IsAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[18478,18512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18699,18712],"content":"IsConstructor","needQuote":true,"needEscape":true,"nodes":[{"content":"IsConstructor","pos":[0,13]}]},{"pos":[19000,19034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19211,19219],"content":"IsFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[19492,19526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19725,19744],"content":"IsFamilyAndAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[20050,20084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20281,20299],"content":"IsFamilyOrAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[20602,20636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20811,20818],"content":"IsFinal","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFinal","pos":[0,7]}]},{"pos":[21088,21122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21313,21328],"content":"IsGenericMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGenericMethod","pos":[0,15]}]},{"pos":[21630,21664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21875,21900],"content":"IsGenericMethodDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGenericMethodDefinition","pos":[0,25]}]},{"pos":[22232,22266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22449,22460],"content":"IsHideBySig","needQuote":true,"needEscape":true,"nodes":[{"content":"IsHideBySig","pos":[0,11]}]},{"pos":[22742,22776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22955,22964],"content":"IsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[23240,23274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23451,23459],"content":"IsPublic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[23732,23766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23963,23981],"content":"IsSecurityCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[24292,24326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24531,24553],"content":"IsSecuritySafeCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[24876,24910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25113,25134],"content":"IsSecurityTransparent","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[25454,25488],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25675,25688],"content":"IsSpecialName","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[25976,26010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26187,26195],"content":"IsStatic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[26468,26502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26681,26690],"content":"IsVirtual","needQuote":true,"needEscape":true,"nodes":[{"content":"IsVirtual","pos":[0,9]}]},{"pos":[26966,27000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27185,27197],"content":"MethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodHandle","pos":[0,12]}]},{"pos":[27518,27552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27763,27788],"content":"MethodImplementationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[28178,28212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28513,28547],"content":"op_Equality(MethodBase,MethodBase)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(MethodBase,MethodBase)","pos":[0,34]}]},{"pos":[28979,29013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29090,29124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29183,29217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29522,29558],"content":"op_Inequality(MethodBase,MethodBase)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(MethodBase,MethodBase)","pos":[0,36]}]},{"pos":[29996,30030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30107,30141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30200,30234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30661,30751],"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,90]}]},{"pos":[31279,31313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31379,31413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31476,31510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31571,31605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31670,31704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31979,32031],"content":"System.Runtime.InteropServices._MethodBase.GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetType()","pos":[0,52]}]},{"pos":[32405,32439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32808,32884],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,76]}]},{"pos":[33352,33386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33447,33481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33545,33579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33904,33971],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)","pos":[0,67]}]},{"pos":[34405,34439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34934,35037],"content":"System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,103]}]},{"pos":[35654,35688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35747,35781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35842,35876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35938,35972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36040,36074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36141,36175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36242,36276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36341,36375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36656,36709],"content":"System.Runtime.InteropServices._MethodBase.IsAbstract","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsAbstract","pos":[0,53]}]},{"pos":[37110,37144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37425,37478],"content":"System.Runtime.InteropServices._MethodBase.IsAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsAssembly","pos":[0,53]}]},{"pos":[37879,37913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38200,38256],"content":"System.Runtime.InteropServices._MethodBase.IsConstructor","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsConstructor","pos":[0,56]}]},{"pos":[38666,38700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38977,39028],"content":"System.Runtime.InteropServices._MethodBase.IsFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFamily","pos":[0,51]}]},{"pos":[39423,39457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39756,39818],"content":"System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly","pos":[0,62]}]},{"pos":[40246,40280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40577,40638],"content":"System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly","pos":[0,61]}]},{"pos":[41063,41097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41372,41422],"content":"System.Runtime.InteropServices._MethodBase.IsFinal","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFinal","pos":[0,50]}]},{"pos":[41814,41848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42131,42185],"content":"System.Runtime.InteropServices._MethodBase.IsHideBySig","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsHideBySig","pos":[0,54]}]},{"pos":[42589,42623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42902,42954],"content":"System.Runtime.InteropServices._MethodBase.IsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsPrivate","pos":[0,52]}]},{"pos":[43352,43386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43663,43714],"content":"System.Runtime.InteropServices._MethodBase.IsPublic","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsPublic","pos":[0,51]}]},{"pos":[44109,44143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44430,44486],"content":"System.Runtime.InteropServices._MethodBase.IsSpecialName","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsSpecialName","pos":[0,56]}]},{"pos":[44896,44930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45207,45258],"content":"System.Runtime.InteropServices._MethodBase.IsStatic","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsStatic","pos":[0,51]}]},{"pos":[45653,45687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45966,46018],"content":"System.Runtime.InteropServices._MethodBase.IsVirtual","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsVirtual","pos":[0,52]}]},{"pos":[46416,46450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46576,46604],"content":"System.Reflection.MemberInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Reflection.MemberInfo","pos":[0,28]}]},{"pos":[46714,46726],"content":"MethodBase()","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase()","pos":[0,12]}]},{"pos":[46935,46945],"content":"Attributes","needQuote":true,"needEscape":true,"nodes":[{"content":"Attributes","pos":[0,10]}]},{"pos":[47134,47150],"content":"MethodAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodAttributes","pos":[0,16]}]},{"pos":[47352,47369],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[47574,47592],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[47806,47831],"content":"ContainsGenericParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsGenericParameters","pos":[0,25]}]},{"pos":[48019,48026],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48203,48217],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[48383,48390],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48508,48514],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48684,48702],"content":"GetCurrentMethod()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentMethod()","pos":[0,18]}]},{"pos":[48901,48911],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[49103,49124],"content":"GetGenericArguments()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGenericArguments()","pos":[0,21]}]},{"pos":[49301,49305],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[49468,49481],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[49643,49648],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49813,49828],"content":"GetMethodBody()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodBody()","pos":[0,15]}]},{"pos":[50021,50031],"content":"MethodBody","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBody","pos":[0,10]}]},{"pos":[50251,50291],"content":"GetMethodFromHandle(RuntimeMethodHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle)","pos":[0,40]}]},{"pos":[50534,50544],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[50692,50711],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[50963,51021],"content":"GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)","pos":[0,58]}]},{"pos":[51300,51310],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[51458,51477],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[51630,51647],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[51851,51881],"content":"GetMethodImplementationFlags()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImplementationFlags()","pos":[0,30]}]},{"pos":[52114,52134],"content":"MethodImplAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodImplAttributes","pos":[0,20]}]},{"pos":[52340,52355],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[52551,52564],"content":"ParameterInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterInfo","pos":[0,13]}]},{"pos":[52782,52805],"content":"Invoke(Object,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Object,Object[])","pos":[0,23]}]},{"pos":[52988,52994],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53110,53116],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53232,53238],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53520,53575],"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)","pos":[0,55]}]},{"pos":[53822,53828],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53944,53950],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54094,54106],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[54267,54273],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[54400,54406],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54557,54568],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[54756,54766],"content":"IsAbstract","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAbstract","pos":[0,10]}]},{"pos":[54924,54931],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55097,55107],"content":"IsAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssembly","pos":[0,10]}]},{"pos":[55265,55272],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55441,55454],"content":"IsConstructor","needQuote":true,"needEscape":true,"nodes":[{"content":"IsConstructor","pos":[0,13]}]},{"pos":[55618,55625],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55789,55797],"content":"IsFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamily","pos":[0,8]}]},{"pos":[55951,55958],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56133,56152],"content":"IsFamilyAndAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyAndAssembly","pos":[0,19]}]},{"pos":[56328,56335],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56509,56527],"content":"IsFamilyOrAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFamilyOrAssembly","pos":[0,18]}]},{"pos":[56701,56708],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56871,56878],"content":"IsFinal","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFinal","pos":[0,7]}]},{"pos":[57030,57037],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57208,57223],"content":"IsGenericMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGenericMethod","pos":[0,15]}]},{"pos":[57391,57398],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57579,57604],"content":"IsGenericMethodDefinition","needQuote":true,"needEscape":true,"nodes":[{"content":"IsGenericMethodDefinition","pos":[0,25]}]},{"pos":[57792,57799],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57966,57977],"content":"IsHideBySig","needQuote":true,"needEscape":true,"nodes":[{"content":"IsHideBySig","pos":[0,11]}]},{"pos":[58137,58144],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58309,58318],"content":"IsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrivate","pos":[0,9]}]},{"pos":[58474,58481],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58645,58653],"content":"IsPublic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPublic","pos":[0,8]}]},{"pos":[58807,58814],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58988,59006],"content":"IsSecurityCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityCritical","pos":[0,18]}]},{"pos":[59180,59187],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59365,59387],"content":"IsSecuritySafeCritical","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecuritySafeCritical","pos":[0,22]}]},{"pos":[59569,59576],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59753,59774],"content":"IsSecurityTransparent","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSecurityTransparent","pos":[0,21]}]},{"pos":[59954,59961],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60130,60143],"content":"IsSpecialName","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSpecialName","pos":[0,13]}]},{"pos":[60307,60314],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60478,60486],"content":"IsStatic","needQuote":true,"needEscape":true,"nodes":[{"content":"IsStatic","pos":[0,8]}]},{"pos":[60640,60647],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60812,60821],"content":"IsVirtual","needQuote":true,"needEscape":true,"nodes":[{"content":"IsVirtual","pos":[0,9]}]},{"pos":[60977,60984],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[61152,61164],"content":"MethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodHandle","pos":[0,12]}]},{"pos":[61338,61357],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[61562,61587],"content":"MethodImplementationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodImplementationFlags","pos":[0,25]}]},{"pos":[61810,61830],"content":"MethodImplAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodImplAttributes","pos":[0,20]}]},{"pos":[62093,62127],"content":"op_Equality(MethodBase,MethodBase)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(MethodBase,MethodBase)","pos":[0,34]}]},{"pos":[62333,62340],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[62484,62494],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[62655,62665],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[62910,62946],"content":"op_Inequality(MethodBase,MethodBase)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(MethodBase,MethodBase)","pos":[0,36]}]},{"pos":[63156,63163],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63307,63317],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[63478,63488],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[63787,63877],"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,90]}]},{"pos":[64192,64196],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[64308,64314],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[64430,64436],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[64552,64558],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[64674,64680],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[64884,64936],"content":"System.Runtime.InteropServices._MethodBase.GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetType()","pos":[0,52]}]},{"pos":[65175,65179],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[65426,65502],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,76]}]},{"pos":[65791,65797],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[65913,65919],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[66035,66041],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[66270,66337],"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)","pos":[0,67]}]},{"pos":[66608,66614],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[66928,67031],"content":"System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,103]}]},{"pos":[67374,67380],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[67494,67498],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[67610,67616],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[67731,67736],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[67850,67856],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[67972,67978],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[68094,68100],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[68216,68222],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[68429,68482],"content":"System.Runtime.InteropServices._MethodBase.IsAbstract","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsAbstract","pos":[0,53]}]},{"pos":[68726,68733],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68942,68995],"content":"System.Runtime.InteropServices._MethodBase.IsAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsAssembly","pos":[0,53]}]},{"pos":[69239,69246],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[69458,69514],"content":"System.Runtime.InteropServices._MethodBase.IsConstructor","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsConstructor","pos":[0,56]}]},{"pos":[69764,69771],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[69978,70029],"content":"System.Runtime.InteropServices._MethodBase.IsFamily","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFamily","pos":[0,51]}]},{"pos":[70269,70276],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70494,70556],"content":"System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly","pos":[0,62]}]},{"pos":[70818,70825],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71042,71103],"content":"System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly","pos":[0,61]}]},{"pos":[71363,71370],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71576,71626],"content":"System.Runtime.InteropServices._MethodBase.IsFinal","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsFinal","pos":[0,50]}]},{"pos":[71864,71871],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72081,72135],"content":"System.Runtime.InteropServices._MethodBase.IsHideBySig","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsHideBySig","pos":[0,54]}]},{"pos":[72381,72388],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72596,72648],"content":"System.Runtime.InteropServices._MethodBase.IsPrivate","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsPrivate","pos":[0,52]}]},{"pos":[72890,72897],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73104,73155],"content":"System.Runtime.InteropServices._MethodBase.IsPublic","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsPublic","pos":[0,51]}]},{"pos":[73395,73402],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73614,73670],"content":"System.Runtime.InteropServices._MethodBase.IsSpecialName","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsSpecialName","pos":[0,56]}]},{"pos":[73920,73927],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74134,74185],"content":"System.Runtime.InteropServices._MethodBase.IsStatic","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsStatic","pos":[0,51]}]},{"pos":[74425,74432],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74640,74692],"content":"System.Runtime.InteropServices._MethodBase.IsVirtual","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._MethodBase.IsVirtual","pos":[0,52]}]},{"pos":[74934,74941],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.MethodBase\n  id: MethodBase\n  children:\n  - System.Reflection.MethodBase.#ctor\n  - System.Reflection.MethodBase.Attributes\n  - System.Reflection.MethodBase.CallingConvention\n  - System.Reflection.MethodBase.ContainsGenericParameters\n  - System.Reflection.MethodBase.Equals(System.Object)\n  - System.Reflection.MethodBase.GetCurrentMethod\n  - System.Reflection.MethodBase.GetGenericArguments\n  - System.Reflection.MethodBase.GetHashCode\n  - System.Reflection.MethodBase.GetMethodBody\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  - System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  - System.Reflection.MethodBase.GetMethodImplementationFlags\n  - System.Reflection.MethodBase.GetParameters\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  - System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  - System.Reflection.MethodBase.IsAbstract\n  - System.Reflection.MethodBase.IsAssembly\n  - System.Reflection.MethodBase.IsConstructor\n  - System.Reflection.MethodBase.IsFamily\n  - System.Reflection.MethodBase.IsFamilyAndAssembly\n  - System.Reflection.MethodBase.IsFamilyOrAssembly\n  - System.Reflection.MethodBase.IsFinal\n  - System.Reflection.MethodBase.IsGenericMethod\n  - System.Reflection.MethodBase.IsGenericMethodDefinition\n  - System.Reflection.MethodBase.IsHideBySig\n  - System.Reflection.MethodBase.IsPrivate\n  - System.Reflection.MethodBase.IsPublic\n  - System.Reflection.MethodBase.IsSecurityCritical\n  - System.Reflection.MethodBase.IsSecuritySafeCritical\n  - System.Reflection.MethodBase.IsSecurityTransparent\n  - System.Reflection.MethodBase.IsSpecialName\n  - System.Reflection.MethodBase.IsStatic\n  - System.Reflection.MethodBase.IsVirtual\n  - System.Reflection.MethodBase.MethodHandle\n  - System.Reflection.MethodBase.MethodImplementationFlags\n  - System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  - System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  langs:\n  - csharp\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MethodBase))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class MethodBase : System.Reflection.MemberInfo, System.Runtime.InteropServices._MethodBase\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  implements:\n  - System.Runtime.InteropServices._MethodBase\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.DeclaringType\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.MemberInfo.MemberType\n  - System.Reflection.MemberInfo.MetadataToken\n  - System.Reflection.MemberInfo.Module\n  - System.Reflection.MemberInfo.Name\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.ReflectedType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.#ctor\n  id: '#ctor'\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: MethodBase()\n  nameWithType: MethodBase.MethodBase()\n  fullName: System.Reflection.MethodBase.MethodBase()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected MethodBase ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.Attributes\n  id: Attributes\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: Attributes\n  nameWithType: MethodBase.Attributes\n  fullName: System.Reflection.MethodBase.Attributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.MethodAttributes Attributes { get; }\n    return:\n      type: System.Reflection.MethodAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.CallingConvention\n  id: CallingConvention\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: CallingConvention\n  nameWithType: MethodBase.CallingConvention\n  fullName: System.Reflection.MethodBase.CallingConvention\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.CallingConventions CallingConvention { get; }\n    return:\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  id: ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  fullName: System.Reflection.MethodBase.ContainsGenericParameters\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool ContainsGenericParameters { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MethodBase.Equals(Object)\n  fullName: System.Reflection.MethodBase.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetCurrentMethod\n  id: GetCurrentMethod\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetCurrentMethod()\n  nameWithType: MethodBase.GetCurrentMethod()\n  fullName: System.Reflection.MethodBase.GetCurrentMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.MethodBase GetCurrentMethod ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetGenericArguments\n  id: GetGenericArguments\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetGenericArguments()\n  nameWithType: MethodBase.GetGenericArguments()\n  fullName: System.Reflection.MethodBase.GetGenericArguments()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetGenericArguments ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MethodBase.GetHashCode()\n  fullName: System.Reflection.MethodBase.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetMethodBody\n  id: GetMethodBody\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetMethodBody()\n  nameWithType: MethodBase.GetMethodBody()\n  fullName: System.Reflection.MethodBase.GetMethodBody()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodBody GetMethodBody ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodBody\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  id: GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.MethodBase GetMethodFromHandle (RuntimeMethodHandle handle);\n    parameters:\n    - id: handle\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  overload: System.Reflection.MethodBase.GetMethodFromHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  id: GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.MethodBase GetMethodFromHandle (RuntimeMethodHandle handle, RuntimeTypeHandle declaringType);\n    parameters:\n    - id: handle\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n    - id: declaringType\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  overload: System.Reflection.MethodBase.GetMethodFromHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n  id: GetMethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetMethodImplementationFlags()\n  nameWithType: MethodBase.GetMethodImplementationFlags()\n  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.GetParameters\n  id: GetParameters\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: MethodBase.GetParameters()\n  fullName: System.Reflection.MethodBase.GetParameters()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.ParameterInfo[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Reflection.ParameterInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  id: Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: Invoke(Object,Object[])\n  nameWithType: MethodBase.Invoke(Object,Object[])\n  fullName: System.Reflection.MethodBase.Invoke(Object,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public object Invoke (object obj, object[] parameters);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Reflection.MethodBase.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Reflection.MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Reflection.MethodBase.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsAbstract\n  id: IsAbstract\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  fullName: System.Reflection.MethodBase.IsAbstract\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAbstract { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsAssembly\n  id: IsAssembly\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  fullName: System.Reflection.MethodBase.IsAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsConstructor\n  id: IsConstructor\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  fullName: System.Reflection.MethodBase.IsConstructor\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsConstructor { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsFamily\n  id: IsFamily\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsFamily\n  nameWithType: MethodBase.IsFamily\n  fullName: System.Reflection.MethodBase.IsFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFamily { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  id: IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFamilyAndAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  id: IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFamilyOrAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsFinal\n  id: IsFinal\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsFinal\n  nameWithType: MethodBase.IsFinal\n  fullName: System.Reflection.MethodBase.IsFinal\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsFinal { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  id: IsGenericMethod\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  fullName: System.Reflection.MethodBase.IsGenericMethod\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsGenericMethod { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  id: IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsGenericMethodDefinition { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsHideBySig\n  id: IsHideBySig\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  fullName: System.Reflection.MethodBase.IsHideBySig\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsHideBySig { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsPrivate\n  id: IsPrivate\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  fullName: System.Reflection.MethodBase.IsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsPublic\n  id: IsPublic\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsPublic\n  nameWithType: MethodBase.IsPublic\n  fullName: System.Reflection.MethodBase.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsSecurityCritical\n  id: IsSecurityCritical\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsSecurityCritical\n  nameWithType: MethodBase.IsSecurityCritical\n  fullName: System.Reflection.MethodBase.IsSecurityCritical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSecurityCritical { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsSecuritySafeCritical\n  id: IsSecuritySafeCritical\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsSecuritySafeCritical\n  nameWithType: MethodBase.IsSecuritySafeCritical\n  fullName: System.Reflection.MethodBase.IsSecuritySafeCritical\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSecuritySafeCritical { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsSecurityTransparent\n  id: IsSecurityTransparent\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsSecurityTransparent\n  nameWithType: MethodBase.IsSecurityTransparent\n  fullName: System.Reflection.MethodBase.IsSecurityTransparent\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsSecurityTransparent { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsSpecialName\n  id: IsSpecialName\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  fullName: System.Reflection.MethodBase.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsStatic\n  id: IsStatic\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsStatic\n  nameWithType: MethodBase.IsStatic\n  fullName: System.Reflection.MethodBase.IsStatic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsStatic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.IsVirtual\n  id: IsVirtual\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  fullName: System.Reflection.MethodBase.IsVirtual\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public bool IsVirtual { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.MethodHandle\n  id: MethodHandle\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: MethodHandle\n  nameWithType: MethodBase.MethodHandle\n  fullName: System.Reflection.MethodBase.MethodHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract RuntimeMethodHandle MethodHandle { get; }\n    return:\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.MethodImplementationFlags\n  id: MethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: MethodImplementationFlags\n  nameWithType: MethodBase.MethodImplementationFlags\n  fullName: System.Reflection.MethodBase.MethodImplementationFlags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  id: op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: op_Equality(MethodBase,MethodBase)\n  nameWithType: MethodBase.op_Equality(MethodBase,MethodBase)\n  fullName: System.Reflection.MethodBase.op_Equality(MethodBase,MethodBase)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Equality (System.Reflection.MethodBase left, System.Reflection.MethodBase right);\n    parameters:\n    - id: left\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  id: op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: op_Inequality(MethodBase,MethodBase)\n  nameWithType: MethodBase.op_Inequality(MethodBase,MethodBase)\n  fullName: System.Reflection.MethodBase.op_Inequality(MethodBase,MethodBase)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.MethodBase left, System.Reflection.MethodBase right);\n    parameters:\n    - id: left\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _MethodBase.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  id: System#Runtime#InteropServices#_MethodBase#GetType\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.GetType()\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: Type _MethodBase.GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _MethodBase.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _MethodBase.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _MethodBase.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  id: System#Runtime#InteropServices#_MethodBase#IsAbstract\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsAbstract\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsAbstract { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  id: System#Runtime#InteropServices#_MethodBase#IsAssembly\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsAssembly\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  id: System#Runtime#InteropServices#_MethodBase#IsConstructor\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsConstructor\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsConstructor { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  id: System#Runtime#InteropServices#_MethodBase#IsFamily\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsFamily\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsFamily { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  id: System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  id: System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  id: System#Runtime#InteropServices#_MethodBase#IsFinal\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsFinal\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsFinal { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  id: System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsHideBySig\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsHideBySig { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  id: System#Runtime#InteropServices#_MethodBase#IsPrivate\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsPrivate\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsPrivate { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  id: System#Runtime#InteropServices#_MethodBase#IsPublic\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsPublic\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsPublic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  id: System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsSpecialName\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsSpecialName { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  id: System#Runtime#InteropServices#_MethodBase#IsStatic\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsStatic\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsStatic { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  id: System#Runtime#InteropServices#_MethodBase#IsVirtual\n  isEii: true\n  parent: System.Reflection.MethodBase\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._MethodBase.IsVirtual\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: bool System.Runtime.InteropServices._MethodBase.IsVirtual { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Reflection.MemberInfo\n  isExternal: false\n  name: System.Reflection.MemberInfo\n- uid: System.Reflection.MethodBase.#ctor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodBase()\n  nameWithType: MethodBase.MethodBase()\n  fullName: System.Reflection.MethodBase.MethodBase()\n- uid: System.Reflection.MethodBase.Attributes\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Attributes\n  nameWithType: MethodBase.Attributes\n  fullName: System.Reflection.MethodBase.Attributes\n- uid: System.Reflection.MethodAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodAttributes\n  nameWithType: MethodAttributes\n  fullName: System.Reflection.MethodAttributes\n- uid: System.Reflection.MethodBase.CallingConvention\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: CallingConvention\n  nameWithType: MethodBase.CallingConvention\n  fullName: System.Reflection.MethodBase.CallingConvention\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Reflection.MethodBase.ContainsGenericParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: ContainsGenericParameters\n  nameWithType: MethodBase.ContainsGenericParameters\n  fullName: System.Reflection.MethodBase.ContainsGenericParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.Equals(System.Object)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MethodBase.Equals(Object)\n  fullName: System.Reflection.MethodBase.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.MethodBase.GetCurrentMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetCurrentMethod()\n  nameWithType: MethodBase.GetCurrentMethod()\n  fullName: System.Reflection.MethodBase.GetCurrentMethod()\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.MethodBase.GetGenericArguments\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetGenericArguments()\n  nameWithType: MethodBase.GetGenericArguments()\n  fullName: System.Reflection.MethodBase.GetGenericArguments()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.MethodBase.GetHashCode\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MethodBase.GetHashCode()\n  fullName: System.Reflection.MethodBase.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.MethodBase.GetMethodBody\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodBody()\n  nameWithType: MethodBase.GetMethodBody()\n  fullName: System.Reflection.MethodBase.GetMethodBody()\n- uid: System.Reflection.MethodBody\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBody\n  nameWithType: MethodBody\n  fullName: System.Reflection.MethodBody\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodFromHandle(RuntimeMethodHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(RuntimeMethodHandle)\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Reflection.MethodBase.GetMethodFromHandle(System.RuntimeMethodHandle,System.RuntimeTypeHandle)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)\n  nameWithType: MethodBase.GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)\n  fullName: System.Reflection.MethodBase.GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Reflection.MethodBase.GetMethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetMethodImplementationFlags()\n  nameWithType: MethodBase.GetMethodImplementationFlags()\n  fullName: System.Reflection.MethodBase.GetMethodImplementationFlags()\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Reflection.MethodBase.GetParameters\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: GetParameters()\n  nameWithType: MethodBase.GetParameters()\n  fullName: System.Reflection.MethodBase.GetParameters()\n- uid: System.Reflection.ParameterInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo[]\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Object[])\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Invoke(Object,Object[])\n  nameWithType: MethodBase.Invoke(Object,Object[])\n  fullName: System.Reflection.MethodBase.Invoke(Object,Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Reflection.MethodBase.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  nameWithType: MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n  fullName: System.Reflection.MethodBase.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.MethodBase.IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAbstract\n  nameWithType: MethodBase.IsAbstract\n  fullName: System.Reflection.MethodBase.IsAbstract\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsAssembly\n  nameWithType: MethodBase.IsAssembly\n  fullName: System.Reflection.MethodBase.IsAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsConstructor\n  nameWithType: MethodBase.IsConstructor\n  fullName: System.Reflection.MethodBase.IsConstructor\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamily\n  nameWithType: MethodBase.IsFamily\n  fullName: System.Reflection.MethodBase.IsFamily\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyAndAssembly\n  nameWithType: MethodBase.IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyAndAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFamilyOrAssembly\n  nameWithType: MethodBase.IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.IsFamilyOrAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsFinal\n  nameWithType: MethodBase.IsFinal\n  fullName: System.Reflection.MethodBase.IsFinal\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsGenericMethod\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethod\n  nameWithType: MethodBase.IsGenericMethod\n  fullName: System.Reflection.MethodBase.IsGenericMethod\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsGenericMethodDefinition\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsGenericMethodDefinition\n  nameWithType: MethodBase.IsGenericMethodDefinition\n  fullName: System.Reflection.MethodBase.IsGenericMethodDefinition\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsHideBySig\n  nameWithType: MethodBase.IsHideBySig\n  fullName: System.Reflection.MethodBase.IsHideBySig\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPrivate\n  nameWithType: MethodBase.IsPrivate\n  fullName: System.Reflection.MethodBase.IsPrivate\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsPublic\n  nameWithType: MethodBase.IsPublic\n  fullName: System.Reflection.MethodBase.IsPublic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsSecurityCritical\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecurityCritical\n  nameWithType: MethodBase.IsSecurityCritical\n  fullName: System.Reflection.MethodBase.IsSecurityCritical\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsSecuritySafeCritical\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecuritySafeCritical\n  nameWithType: MethodBase.IsSecuritySafeCritical\n  fullName: System.Reflection.MethodBase.IsSecuritySafeCritical\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsSecurityTransparent\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSecurityTransparent\n  nameWithType: MethodBase.IsSecurityTransparent\n  fullName: System.Reflection.MethodBase.IsSecurityTransparent\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsSpecialName\n  nameWithType: MethodBase.IsSpecialName\n  fullName: System.Reflection.MethodBase.IsSpecialName\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsStatic\n  nameWithType: MethodBase.IsStatic\n  fullName: System.Reflection.MethodBase.IsStatic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: IsVirtual\n  nameWithType: MethodBase.IsVirtual\n  fullName: System.Reflection.MethodBase.IsVirtual\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.MethodHandle\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodHandle\n  nameWithType: MethodBase.MethodHandle\n  fullName: System.Reflection.MethodBase.MethodHandle\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Reflection.MethodBase.MethodImplementationFlags\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: MethodImplementationFlags\n  nameWithType: MethodBase.MethodImplementationFlags\n  fullName: System.Reflection.MethodBase.MethodImplementationFlags\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Reflection.MethodBase.op_Equality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: op_Equality(MethodBase,MethodBase)\n  nameWithType: MethodBase.op_Equality(MethodBase,MethodBase)\n  fullName: System.Reflection.MethodBase.op_Equality(MethodBase,MethodBase)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.MethodBase.op_Inequality(System.Reflection.MethodBase,System.Reflection.MethodBase)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: op_Inequality(MethodBase,MethodBase)\n  nameWithType: MethodBase.op_Inequality(MethodBase,MethodBase)\n  fullName: System.Reflection.MethodBase.op_Inequality(MethodBase,MethodBase)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetType\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.GetType()\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAbstract\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsAbstract\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAbstract\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsAssembly\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsConstructor\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsConstructor\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsConstructor\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamily\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsFamily\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamily\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyAndAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyAndAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFamilyOrAssembly\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFamilyOrAssembly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsFinal\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsFinal\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsFinal\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsHideBySig\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsHideBySig\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsHideBySig\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPrivate\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsPrivate\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPrivate\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsPublic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsPublic\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsPublic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsSpecialName\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsSpecialName\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsSpecialName\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsStatic\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsStatic\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsStatic\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.System#Runtime#InteropServices#_MethodBase#IsVirtual\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  name: System.Runtime.InteropServices._MethodBase.IsVirtual\n  nameWithType: MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n  fullName: System.Reflection.MethodBase.System.Runtime.InteropServices._MethodBase.IsVirtual\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBase.GetMethodFromHandle*\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  nameWithType: MethodBase.\n- uid: System.Reflection.MethodBase.Invoke*\n  parent: System.Reflection.MethodBase\n  isExternal: false\n  nameWithType: MethodBase.\n"}