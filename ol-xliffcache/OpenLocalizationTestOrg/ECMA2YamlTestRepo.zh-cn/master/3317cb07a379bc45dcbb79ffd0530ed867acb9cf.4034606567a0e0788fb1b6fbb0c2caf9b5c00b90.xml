{"nodes":[{"pos":[462,473],"content":"XmlLanguage","needQuote":true,"needEscape":true,"nodes":[{"content":"XmlLanguage","pos":[0,11]}]},{"pos":[1213,1218],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[1555,1589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1800,1822],"content":"GetEquivalentCulture()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEquivalentCulture()","pos":[0,22]}]},{"pos":[2211,2245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2468,2487],"content":"GetLanguage(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLanguage(String)","pos":[0,19]}]},{"pos":[2883,2917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2995,3029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3236,3256],"content":"GetSpecificCulture()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSpecificCulture()","pos":[0,20]}]},{"pos":[3639,3673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3874,3889],"content":"IetfLanguageTag","needQuote":true,"needEscape":true,"nodes":[{"content":"IetfLanguageTag","pos":[0,15]}]},{"pos":[4202,4236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4423,4433],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[4750,4784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4895,4908],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5028,5033],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[5221,5232],"content":"XmlLanguage","needQuote":true,"needEscape":true,"nodes":[{"content":"XmlLanguage","pos":[0,11]}]},{"pos":[5441,5463],"content":"GetEquivalentCulture()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEquivalentCulture()","pos":[0,22]}]},{"pos":[5683,5694],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[5908,5927],"content":"GetLanguage(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLanguage(String)","pos":[0,19]}]},{"pos":[6143,6154],"content":"XmlLanguage","needQuote":true,"needEscape":true,"nodes":[{"content":"XmlLanguage","pos":[0,11]}]},{"pos":[6295,6301],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6483,6503],"content":"GetSpecificCulture()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSpecificCulture()","pos":[0,20]}]},{"pos":[6719,6730],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[6933,6948],"content":"IetfLanguageTag","needQuote":true,"needEscape":true,"nodes":[{"content":"IetfLanguageTag","pos":[0,15]}]},{"pos":[7121,7127],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7299,7309],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7472,7478],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Markup.XmlLanguage\n  id: XmlLanguage\n  children:\n  - System.Windows.Markup.XmlLanguage.Empty\n  - System.Windows.Markup.XmlLanguage.GetEquivalentCulture\n  - System.Windows.Markup.XmlLanguage.GetLanguage(System.String)\n  - System.Windows.Markup.XmlLanguage.GetSpecificCulture\n  - System.Windows.Markup.XmlLanguage.IetfLanguageTag\n  - System.Windows.Markup.XmlLanguage.ToString\n  langs:\n  - csharp\n  name: XmlLanguage\n  nameWithType: XmlLanguage\n  fullName: System.Windows.Markup.XmlLanguage\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.XmlLanguageConverter))]\n\n      public class XmlLanguage\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Markup.XmlLanguage.Empty\n  id: Empty\n  parent: System.Windows.Markup.XmlLanguage\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: XmlLanguage.Empty\n  fullName: System.Windows.Markup.XmlLanguage.Empty\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  syntax:\n    content: public static System.Windows.Markup.XmlLanguage Empty { get; }\n    return:\n      type: System.Windows.Markup.XmlLanguage\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture\n  id: GetEquivalentCulture\n  parent: System.Windows.Markup.XmlLanguage\n  langs:\n  - csharp\n  name: GetEquivalentCulture()\n  nameWithType: XmlLanguage.GetEquivalentCulture()\n  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  syntax:\n    content: public System.Globalization.CultureInfo GetEquivalentCulture ();\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)\n  id: GetLanguage(System.String)\n  parent: System.Windows.Markup.XmlLanguage\n  langs:\n  - csharp\n  name: GetLanguage(String)\n  nameWithType: XmlLanguage.GetLanguage(String)\n  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  syntax:\n    content: public static System.Windows.Markup.XmlLanguage GetLanguage (string ietfLanguageTag);\n    parameters:\n    - id: ietfLanguageTag\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Markup.XmlLanguage\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture\n  id: GetSpecificCulture\n  parent: System.Windows.Markup.XmlLanguage\n  langs:\n  - csharp\n  name: GetSpecificCulture()\n  nameWithType: XmlLanguage.GetSpecificCulture()\n  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  syntax:\n    content: public System.Globalization.CultureInfo GetSpecificCulture ();\n    parameters: []\n    return:\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag\n  id: IetfLanguageTag\n  parent: System.Windows.Markup.XmlLanguage\n  langs:\n  - csharp\n  name: IetfLanguageTag\n  nameWithType: XmlLanguage.IetfLanguageTag\n  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  syntax:\n    content: public string IetfLanguageTag { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Markup.XmlLanguage.ToString\n  id: ToString\n  parent: System.Windows.Markup.XmlLanguage\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: XmlLanguage.ToString()\n  fullName: System.Windows.Markup.XmlLanguage.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Markup\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Markup.XmlLanguage.Empty\n  parent: System.Windows.Markup.XmlLanguage\n  isExternal: false\n  name: Empty\n  nameWithType: XmlLanguage.Empty\n  fullName: System.Windows.Markup.XmlLanguage.Empty\n- uid: System.Windows.Markup.XmlLanguage\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XmlLanguage\n  nameWithType: XmlLanguage\n  fullName: System.Windows.Markup.XmlLanguage\n- uid: System.Windows.Markup.XmlLanguage.GetEquivalentCulture\n  parent: System.Windows.Markup.XmlLanguage\n  isExternal: false\n  name: GetEquivalentCulture()\n  nameWithType: XmlLanguage.GetEquivalentCulture()\n  fullName: System.Windows.Markup.XmlLanguage.GetEquivalentCulture()\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Markup.XmlLanguage.GetLanguage(System.String)\n  parent: System.Windows.Markup.XmlLanguage\n  isExternal: false\n  name: GetLanguage(String)\n  nameWithType: XmlLanguage.GetLanguage(String)\n  fullName: System.Windows.Markup.XmlLanguage.GetLanguage(String)\n- uid: System.Windows.Markup.XmlLanguage\n  parent: System.Windows.Markup\n  isExternal: false\n  name: XmlLanguage\n  nameWithType: XmlLanguage\n  fullName: System.Windows.Markup.XmlLanguage\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.XmlLanguage.GetSpecificCulture\n  parent: System.Windows.Markup.XmlLanguage\n  isExternal: false\n  name: GetSpecificCulture()\n  nameWithType: XmlLanguage.GetSpecificCulture()\n  fullName: System.Windows.Markup.XmlLanguage.GetSpecificCulture()\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.Markup.XmlLanguage.IetfLanguageTag\n  parent: System.Windows.Markup.XmlLanguage\n  isExternal: false\n  name: IetfLanguageTag\n  nameWithType: XmlLanguage.IetfLanguageTag\n  fullName: System.Windows.Markup.XmlLanguage.IetfLanguageTag\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Markup.XmlLanguage.ToString\n  parent: System.Windows.Markup.XmlLanguage\n  isExternal: false\n  name: ToString()\n  nameWithType: XmlLanguage.ToString()\n  fullName: System.Windows.Markup.XmlLanguage.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}