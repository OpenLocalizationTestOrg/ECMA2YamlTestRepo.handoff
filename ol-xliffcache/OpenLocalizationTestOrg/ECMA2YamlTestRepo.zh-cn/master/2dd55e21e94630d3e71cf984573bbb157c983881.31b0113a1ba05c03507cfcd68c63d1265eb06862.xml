{"nodes":[{"pos":[587,603],"content":"DirectoryEntries","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntries","pos":[0,16]}]},{"pos":[1419,1437],"content":"Add(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,String)","pos":[0,18]}]},{"pos":[1848,1882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1954,1988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2072,2106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2331,2343],"content":"Find(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Find(String)","pos":[0,12]}]},{"pos":[2719,2753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2837,2871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3184,3203],"content":"Find(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Find(String,String)","pos":[0,19]}]},{"pos":[3617,3651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3723,3757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3841,3875],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4148,4163],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[4551,4585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4866,4888],"content":"Remove(DirectoryEntry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(DirectoryEntry)","pos":[0,22]}]},{"pos":[5312,5346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5557,5569],"content":"SchemaFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaFilter","pos":[0,12]}]},{"pos":[5968,6002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6113,6126],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6289,6307],"content":"Add(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,String)","pos":[0,18]}]},{"pos":[6543,6557],"content":"DirectoryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntry","pos":[0,14]}]},{"pos":[6707,6713],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6829,6835],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7034,7046],"content":"Find(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Find(String)","pos":[0,12]}]},{"pos":[7270,7284],"content":"DirectoryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntry","pos":[0,14]}]},{"pos":[7434,7440],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7653,7672],"content":"Find(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Find(String,String)","pos":[0,19]}]},{"pos":[7910,7924],"content":"DirectoryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntry","pos":[0,14]}]},{"pos":[8074,8080],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8196,8202],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8395,8410],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[8625,8636],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[8885,8907],"content":"Remove(DirectoryEntry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(DirectoryEntry)","pos":[0,22]}]},{"pos":[9151,9165],"content":"DirectoryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntry","pos":[0,14]}]},{"pos":[9391,9403],"content":"SchemaFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaFilter","pos":[0,12]}]},{"pos":[9633,9653],"content":"SchemaNameCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"SchemaNameCollection","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryEntries\n  id: DirectoryEntries\n  children:\n  - System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)\n  - System.DirectoryServices.DirectoryEntries.Find(System.String)\n  - System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)\n  - System.DirectoryServices.DirectoryEntries.GetEnumerator\n  - System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)\n  - System.DirectoryServices.DirectoryEntries.SchemaFilter\n  langs:\n  - csharp\n  name: DirectoryEntries\n  nameWithType: DirectoryEntries\n  fullName: System.DirectoryServices.DirectoryEntries\n  type: Class\n  syntax:\n    content: 'public class DirectoryEntries : System.Collections.IEnumerable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IEnumerable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)\n  id: Add(System.String,System.String)\n  parent: System.DirectoryServices.DirectoryEntries\n  langs:\n  - csharp\n  name: Add(String,String)\n  nameWithType: DirectoryEntries.Add(String,String)\n  fullName: System.DirectoryServices.DirectoryEntries.Add(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry Add (string name, string schemaClassName);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: schemaClassName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryEntries.Find(System.String)\n  id: Find(System.String)\n  parent: System.DirectoryServices.DirectoryEntries\n  langs:\n  - csharp\n  name: Find(String)\n  nameWithType: DirectoryEntries.Find(String)\n  fullName: System.DirectoryServices.DirectoryEntries.Find(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry Find (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.DirectoryEntries.Find*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)\n  id: Find(System.String,System.String)\n  parent: System.DirectoryServices.DirectoryEntries\n  langs:\n  - csharp\n  name: Find(String,String)\n  nameWithType: DirectoryEntries.Find(String,String)\n  fullName: System.DirectoryServices.DirectoryEntries.Find(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.DirectoryServices.DirectoryEntry Find (string name, string schemaClassName);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: schemaClassName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.DirectoryEntries.Find*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryEntries.GetEnumerator\n  id: GetEnumerator\n  parent: System.DirectoryServices.DirectoryEntries\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DirectoryEntries.GetEnumerator()\n  fullName: System.DirectoryServices.DirectoryEntries.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)\n  id: Remove(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectoryEntries\n  langs:\n  - csharp\n  name: Remove(DirectoryEntry)\n  nameWithType: DirectoryEntries.Remove(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectoryEntries.Remove(DirectoryEntry)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void Remove (System.DirectoryServices.DirectoryEntry entry);\n    parameters:\n    - id: entry\n      type: System.DirectoryServices.DirectoryEntry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryEntries.SchemaFilter\n  id: SchemaFilter\n  parent: System.DirectoryServices.DirectoryEntries\n  langs:\n  - csharp\n  name: SchemaFilter\n  nameWithType: DirectoryEntries.SchemaFilter\n  fullName: System.DirectoryServices.DirectoryEntries.SchemaFilter\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.DirectoryServices.SchemaNameCollection SchemaFilter { get; }\n    return:\n      type: System.DirectoryServices.SchemaNameCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.DirectoryEntries.Add(System.String,System.String)\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  name: Add(String,String)\n  nameWithType: DirectoryEntries.Add(String,String)\n  fullName: System.DirectoryServices.DirectoryEntries.Add(String,String)\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryEntries.Find(System.String)\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  name: Find(String)\n  nameWithType: DirectoryEntries.Find(String)\n  fullName: System.DirectoryServices.DirectoryEntries.Find(String)\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryEntries.Find(System.String,System.String)\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  name: Find(String,String)\n  nameWithType: DirectoryEntries.Find(String,String)\n  fullName: System.DirectoryServices.DirectoryEntries.Find(String,String)\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryEntries.GetEnumerator\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DirectoryEntries.GetEnumerator()\n  fullName: System.DirectoryServices.DirectoryEntries.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.DirectoryServices.DirectoryEntries.Remove(System.DirectoryServices.DirectoryEntry)\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  name: Remove(DirectoryEntry)\n  nameWithType: DirectoryEntries.Remove(DirectoryEntry)\n  fullName: System.DirectoryServices.DirectoryEntries.Remove(DirectoryEntry)\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.DirectoryEntries.SchemaFilter\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  name: SchemaFilter\n  nameWithType: DirectoryEntries.SchemaFilter\n  fullName: System.DirectoryServices.DirectoryEntries.SchemaFilter\n- uid: System.DirectoryServices.SchemaNameCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: SchemaNameCollection\n  nameWithType: SchemaNameCollection\n  fullName: System.DirectoryServices.SchemaNameCollection\n- uid: System.DirectoryServices.DirectoryEntries.Find*\n  parent: System.DirectoryServices.DirectoryEntries\n  isExternal: false\n  nameWithType: DirectoryEntries.\n"}