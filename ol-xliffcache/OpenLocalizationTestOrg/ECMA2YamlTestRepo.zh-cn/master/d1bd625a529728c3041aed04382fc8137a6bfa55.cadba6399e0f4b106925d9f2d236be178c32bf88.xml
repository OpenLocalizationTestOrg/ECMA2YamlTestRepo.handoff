{"nodes":[{"pos":[300,325],"content":"QueryInterceptorAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"QueryInterceptorAttribute","pos":[0,25]}]},{"pos":[4579,4612],"content":"QueryInterceptorAttribute(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"QueryInterceptorAttribute(String)","pos":[0,33]}]},{"pos":[5040,5074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5297,5310],"content":"EntitySetName","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySetName","pos":[0,13]}]},{"pos":[5647,5681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5795,5811],"content":"System.Attribute","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Attribute","pos":[0,16]}]},{"pos":[5972,6005],"content":"QueryInterceptorAttribute(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"QueryInterceptorAttribute(String)","pos":[0,33]}]},{"pos":[6241,6247],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6450,6463],"content":"EntitySetName","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySetName","pos":[0,13]}]},{"pos":[6659,6665],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.QueryInterceptorAttribute\n  id: QueryInterceptorAttribute\n  children:\n  - System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  - System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  langs:\n  - csharp\n  name: QueryInterceptorAttribute\n  nameWithType: QueryInterceptorAttribute\n  fullName: System.Data.Services.QueryInterceptorAttribute\n  type: Class\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]\n\n      public sealed class QueryInterceptorAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.Services.QueryInterceptorAttribute\n  langs:\n  - csharp\n  name: QueryInterceptorAttribute(String)\n  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public QueryInterceptorAttribute (string entitySetName);\n    parameters:\n    - id: entitySetName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  id: EntitySetName\n  parent: System.Data.Services.QueryInterceptorAttribute\n  langs:\n  - csharp\n  name: EntitySetName\n  nameWithType: QueryInterceptorAttribute.EntitySetName\n  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public string EntitySetName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)\n  parent: System.Data.Services.QueryInterceptorAttribute\n  isExternal: false\n  name: QueryInterceptorAttribute(String)\n  nameWithType: QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n  fullName: System.Data.Services.QueryInterceptorAttribute.QueryInterceptorAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Services.QueryInterceptorAttribute.EntitySetName\n  parent: System.Data.Services.QueryInterceptorAttribute\n  isExternal: false\n  name: EntitySetName\n  nameWithType: QueryInterceptorAttribute.EntitySetName\n  fullName: System.Data.Services.QueryInterceptorAttribute.EntitySetName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}