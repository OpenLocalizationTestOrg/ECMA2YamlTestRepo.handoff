{"nodes":[{"pos":[570,586],"content":"DbLikeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLikeExpression","pos":[0,16]}]},{"pos":[4430,4457],"content":"Accept(DbExpressionVisitor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept(DbExpressionVisitor)","pos":[0,27]}]},{"pos":[4936,4970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5299,5339],"content":"Accept(DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Accept(DbExpressionVisitor<TResultType>)"},{"pos":[5879,5913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5969,6003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6220,6228],"content":"Argument","needQuote":true,"needEscape":true,"nodes":[{"content":"Argument","pos":[0,8]}]},{"pos":[6621,6655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6868,6874],"content":"Escape","needQuote":true,"needEscape":true,"nodes":[{"content":"Escape","pos":[0,6]}]},{"pos":[7261,7295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7510,7517],"content":"Pattern","needQuote":true,"needEscape":true,"nodes":[{"content":"Pattern","pos":[0,7]}]},{"pos":[7907,7941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8083,8127],"content":"System.Data.Common.CommandTrees.DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Data.Common.CommandTrees.DbExpression","pos":[0,44]}]},{"pos":[8331,8358],"content":"Accept(DbExpressionVisitor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept(DbExpressionVisitor)","pos":[0,27]}]},{"pos":[8638,8657],"content":"DbExpressionVisitor","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionVisitor","pos":[0,19]}]},{"pos":[8966,9006],"content":"Accept(DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Accept(DbExpressionVisitor<TResultType>)"},{"pos":[9242,9253],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[9437,9469],"content":"DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>","needQuote":true,"needEscape":true,"source":"DbExpressionVisitor<TResultType>"},{"pos":[9748,9756],"content":"Argument","needQuote":true,"needEscape":true,"nodes":[{"content":"Argument","pos":[0,8]}]},{"pos":[9991,10003],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[10240,10246],"content":"Escape","needQuote":true,"needEscape":true,"nodes":[{"content":"Escape","pos":[0,6]}]},{"pos":[10477,10489],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[10727,10734],"content":"Pattern","needQuote":true,"needEscape":true,"nodes":[{"content":"Pattern","pos":[0,7]}]},{"pos":[10967,10979],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  id: DbLikeExpression\n  children:\n  - System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbLikeExpression.Argument\n  - System.Data.Common.CommandTrees.DbLikeExpression.Escape\n  - System.Data.Common.CommandTrees.DbLikeExpression.Pattern\n  langs:\n  - csharp\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n  type: Class\n  syntax:\n    content: 'public sealed class DbLikeExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbLikeExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbLikeExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Argument\n  id: Argument\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  langs:\n  - csharp\n  name: Argument\n  nameWithType: DbLikeExpression.Argument\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Argument\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Argument { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Escape\n  id: Escape\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  langs:\n  - csharp\n  name: Escape\n  nameWithType: DbLikeExpression.Escape\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Escape\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Escape { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Pattern\n  id: Pattern\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  langs:\n  - csharp\n  name: Pattern\n  nameWithType: DbLikeExpression.Pattern\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Pattern\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbExpression Pattern { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbLikeExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbLikeExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Argument\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  isExternal: false\n  name: Argument\n  nameWithType: DbLikeExpression.Argument\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Argument\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Escape\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  isExternal: false\n  name: Escape\n  nameWithType: DbLikeExpression.Escape\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Escape\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbLikeExpression.Pattern\n  parent: System.Data.Common.CommandTrees.DbLikeExpression\n  isExternal: false\n  name: Pattern\n  nameWithType: DbLikeExpression.Pattern\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression.Pattern\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n"}