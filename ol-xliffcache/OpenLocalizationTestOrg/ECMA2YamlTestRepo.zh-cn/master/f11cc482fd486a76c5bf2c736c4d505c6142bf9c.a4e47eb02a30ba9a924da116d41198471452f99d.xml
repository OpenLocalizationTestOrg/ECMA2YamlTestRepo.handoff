{"nodes":[{"pos":[625,648],"content":"KoreanLunisolarCalendar","needQuote":true,"needEscape":true,"nodes":[{"content":"KoreanLunisolarCalendar","pos":[0,23]}]},{"pos":[5065,5090],"content":"KoreanLunisolarCalendar()","needQuote":true,"needEscape":true,"nodes":[{"content":"KoreanLunisolarCalendar()","pos":[0,25]}]},{"pos":[5654,5686],"content":"DaysInYearBeforeMinSupportedYear","needQuote":true,"needEscape":true,"nodes":[{"content":"DaysInYearBeforeMinSupportedYear","pos":[0,32]}]},{"pos":[6072,6106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6307,6311],"content":"Eras","needQuote":true,"needEscape":true,"nodes":[{"content":"Eras","pos":[0,4]}]},{"pos":[6614,6648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6887,6903],"content":"GetEra(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEra(DateTime)","pos":[0,16]}]},{"pos":[7256,7290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7347,7381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7598,7610],"content":"GregorianEra","needQuote":true,"needEscape":true,"nodes":[{"content":"GregorianEra","pos":[0,12]}]},{"pos":[7923,7957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8190,8210],"content":"MaxSupportedDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxSupportedDateTime","pos":[0,20]}]},{"pos":[8565,8599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8832,8852],"content":"MinSupportedDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"MinSupportedDateTime","pos":[0,20]}]},{"pos":[9207,9241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9386,9433],"content":"System.Globalization.EastAsianLunisolarCalendar","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Globalization.EastAsianLunisolarCalendar","pos":[0,47]}]},{"pos":[9575,9600],"content":"KoreanLunisolarCalendar()","needQuote":true,"needEscape":true,"nodes":[{"content":"KoreanLunisolarCalendar()","pos":[0,25]}]},{"pos":[9918,9950],"content":"DaysInYearBeforeMinSupportedYear","needQuote":true,"needEscape":true,"nodes":[{"content":"DaysInYearBeforeMinSupportedYear","pos":[0,32]}]},{"pos":[10179,10184],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10372,10376],"content":"Eras","needQuote":true,"needEscape":true,"nodes":[{"content":"Eras","pos":[0,4]}]},{"pos":[10549,10554],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10763,10779],"content":"GetEra(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEra(DateTime)","pos":[0,16]}]},{"pos":[10976,10981],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11097,11105],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[11307,11319],"content":"GregorianEra","needQuote":true,"needEscape":true,"nodes":[{"content":"GregorianEra","pos":[0,12]}]},{"pos":[11508,11513],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11717,11737],"content":"MaxSupportedDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxSupportedDateTime","pos":[0,20]}]},{"pos":[11945,11953],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[12163,12183],"content":"MinSupportedDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"MinSupportedDateTime","pos":[0,20]}]},{"pos":[12391,12399],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.KoreanLunisolarCalendar\n  id: KoreanLunisolarCalendar\n  children:\n  - System.Globalization.KoreanLunisolarCalendar.#ctor\n  - System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  - System.Globalization.KoreanLunisolarCalendar.Eras\n  - System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)\n  - System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  - System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  - System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  langs:\n  - csharp\n  name: KoreanLunisolarCalendar\n  nameWithType: KoreanLunisolarCalendar\n  fullName: System.Globalization.KoreanLunisolarCalendar\n  type: Class\n  syntax:\n    content: 'public class KoreanLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'\n  inheritance:\n  - System.Object\n  - System.Globalization.Calendar\n  - System.Globalization.EastAsianLunisolarCalendar\n  implements: []\n  inheritedMembers:\n  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.Clone\n  - System.Globalization.Calendar.CurrentEra\n  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  - System.Globalization.Calendar.GetHour(System.DateTime)\n  - System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  - System.Globalization.Calendar.GetMinute(System.DateTime)\n  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  - System.Globalization.Calendar.GetSecond(System.DateTime)\n  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapYear(System.Int32)\n  - System.Globalization.Calendar.IsReadOnly\n  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType\n  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)\n  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.#ctor\n  id: '#ctor'\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: KoreanLunisolarCalendar()\n  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public KoreanLunisolarCalendar ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  id: DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: protected override int DaysInYearBeforeMinSupportedYear { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.Eras\n  id: Eras\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: Eras\n  nameWithType: KoreanLunisolarCalendar.Eras\n  fullName: System.Globalization.KoreanLunisolarCalendar.Eras\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public override int[] Eras { get; }\n    return:\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)\n  id: GetEra(System.DateTime)\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: GetEra(DateTime)\n  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)\n  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public override int GetEra (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  id: GregorianEra\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: GregorianEra\n  nameWithType: KoreanLunisolarCalendar.GregorianEra\n  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public const int GregorianEra = 1;\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  id: MaxSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: MaxSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public override DateTime MaxSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  id: MinSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  langs:\n  - csharp\n  name: MinSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public override DateTime MinSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Globalization.EastAsianLunisolarCalendar\n  isExternal: false\n  name: System.Globalization.EastAsianLunisolarCalendar\n- uid: System.Globalization.KoreanLunisolarCalendar.#ctor\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: KoreanLunisolarCalendar()\n  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()\n- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.KoreanLunisolarCalendar.Eras\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: KoreanLunisolarCalendar.Eras\n  fullName: System.Globalization.KoreanLunisolarCalendar.Eras\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: GetEra(DateTime)\n  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)\n  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: GregorianEra\n  nameWithType: KoreanLunisolarCalendar.GregorianEra\n  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n  parent: System.Globalization.KoreanLunisolarCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime\n  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n"}