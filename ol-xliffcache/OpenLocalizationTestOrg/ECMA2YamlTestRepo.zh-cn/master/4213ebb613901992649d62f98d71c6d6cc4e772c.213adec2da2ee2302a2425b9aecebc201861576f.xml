{"nodes":[{"pos":[368,374],"content":"Change","needQuote":true,"needEscape":true,"nodes":[{"content":"Change","pos":[0,6]}]},{"pos":[1066,1074],"content":"Change()","needQuote":true,"needEscape":true,"nodes":[{"content":"Change()","pos":[0,8]}]},{"pos":[1554,1561],"content":"Apply()","needQuote":true,"needEscape":true,"nodes":[{"content":"Apply()","pos":[0,7]}]},{"pos":[1902,1936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2149,2160],"content":"Description","needQuote":true,"needEscape":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[2504,2538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2749,2761],"content":"GetInverse()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInverse()","pos":[0,12]}]},{"pos":[3185,3219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3330,3343],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[3483,3491],"content":"Change()","needQuote":true,"needEscape":true,"nodes":[{"content":"Change()","pos":[0,8]}]},{"pos":[3728,3735],"content":"Apply()","needQuote":true,"needEscape":true,"nodes":[{"content":"Apply()","pos":[0,7]}]},{"pos":[3898,3905],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[4102,4113],"content":"Description","needQuote":true,"needEscape":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[4283,4289],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[4483,4495],"content":"GetInverse()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInverse()","pos":[0,12]}]},{"pos":[4727,4733],"content":"Change","needQuote":true,"needEscape":true,"nodes":[{"content":"Change","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Model.Change\n  id: Change\n  children:\n  - System.Activities.Presentation.Model.Change.#ctor\n  - System.Activities.Presentation.Model.Change.Apply\n  - System.Activities.Presentation.Model.Change.Description\n  - System.Activities.Presentation.Model.Change.GetInverse\n  langs:\n  - csharp\n  name: Change\n  nameWithType: Change\n  fullName: System.Activities.Presentation.Model.Change\n  type: Class\n  syntax:\n    content: public abstract class Change\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.Change.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: Change()\n  nameWithType: Change.Change()\n  fullName: System.Activities.Presentation.Model.Change.Change()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: protected Change ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.Change.Apply\n  id: Apply\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: Apply()\n  nameWithType: Change.Apply()\n  fullName: System.Activities.Presentation.Model.Change.Apply()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public abstract bool Apply ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.Change.Description\n  id: Description\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: Description\n  nameWithType: Change.Description\n  fullName: System.Activities.Presentation.Model.Change.Description\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public abstract string Description { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Model.Change.GetInverse\n  id: GetInverse\n  parent: System.Activities.Presentation.Model.Change\n  langs:\n  - csharp\n  name: GetInverse()\n  nameWithType: Change.GetInverse()\n  fullName: System.Activities.Presentation.Model.Change.GetInverse()\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Model\n  syntax:\n    content: public abstract System.Activities.Presentation.Model.Change GetInverse ();\n    parameters: []\n    return:\n      type: System.Activities.Presentation.Model.Change\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Model.Change.#ctor\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Change()\n  nameWithType: Change.Change()\n  fullName: System.Activities.Presentation.Model.Change.Change()\n- uid: System.Activities.Presentation.Model.Change.Apply\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Apply()\n  nameWithType: Change.Apply()\n  fullName: System.Activities.Presentation.Model.Change.Apply()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Model.Change.Description\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: Description\n  nameWithType: Change.Description\n  fullName: System.Activities.Presentation.Model.Change.Description\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Presentation.Model.Change.GetInverse\n  parent: System.Activities.Presentation.Model.Change\n  isExternal: false\n  name: GetInverse()\n  nameWithType: Change.GetInverse()\n  fullName: System.Activities.Presentation.Model.Change.GetInverse()\n- uid: System.Activities.Presentation.Model.Change\n  parent: System.Activities.Presentation.Model\n  isExternal: false\n  name: Change\n  nameWithType: Change\n  fullName: System.Activities.Presentation.Model.Change\n"}