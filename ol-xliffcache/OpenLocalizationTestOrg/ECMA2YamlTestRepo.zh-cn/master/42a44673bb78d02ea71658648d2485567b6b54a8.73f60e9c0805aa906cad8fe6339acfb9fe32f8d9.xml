{"nodes":[{"pos":[4273,4290],"content":"ExpressionVisitor","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpressionVisitor","pos":[0,17]}]},{"pos":[4998,5017],"content":"ExpressionVisitor()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpressionVisitor()","pos":[0,19]}]},{"pos":[5677,5714],"content":"Visit(ReadOnlyCollection<ph id=\"ph1\">&lt;Expression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Visit(ReadOnlyCollection<Expression>)"},{"pos":[6327,6361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6491,6525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6855,6872],"content":"Visit(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(Expression)","pos":[0,17]}]},{"pos":[7298,7332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7411,7445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7857,7895],"content":"Visit(ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>,Func&lt;T,T&gt;)","needQuote":true,"needEscape":true,"source":"Visit(ReadOnlyCollection<T>,Func<T,T>)"},{"pos":[8446,8480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8554,8588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8684,8718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9075,9120],"content":"VisitAndConvert(ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>,String)","needQuote":true,"needEscape":true,"source":"VisitAndConvert(ReadOnlyCollection<T>,String)"},{"pos":[9728,9762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9829,9863],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9959,9993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10328,10353],"content":"VisitAndConvert(T,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitAndConvert(T,String)","pos":[0,25]}]},{"pos":[10767,10801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10868,10902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10948,10982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11349,11378],"content":"VisitBinary(BinaryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitBinary(BinaryExpression)","pos":[0,29]}]},{"pos":[11849,11883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11962,11996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12285,12312],"content":"VisitBlock(BlockExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitBlock(BlockExpression)","pos":[0,27]}]},{"pos":[12776,12810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12889,12923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13212,13239],"content":"VisitCatchBlock(CatchBlock)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitCatchBlock(CatchBlock)","pos":[0,27]}]},{"pos":[13698,13732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13811,13845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14158,14197],"content":"VisitConditional(ConditionalExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitConditional(ConditionalExpression)","pos":[0,39]}]},{"pos":[14703,14737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14816,14850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15151,15184],"content":"VisitConstant(ConstantExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitConstant(ConstantExpression)","pos":[0,33]}]},{"pos":[15669,15703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15782,15816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16121,16156],"content":"VisitDebugInfo(DebugInfoExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDebugInfo(DebugInfoExpression)","pos":[0,35]}]},{"pos":[16648,16682],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16761,16795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17092,17123],"content":"VisitDefault(DefaultExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDefault(DefaultExpression)","pos":[0,31]}]},{"pos":[17601,17635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17714,17748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18045,18076],"content":"VisitDynamic(DynamicExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDynamic(DynamicExpression)","pos":[0,31]}]},{"pos":[18554,18588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18667,18701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18994,19023],"content":"VisitElementInit(ElementInit)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitElementInit(ElementInit)","pos":[0,29]}]},{"pos":[19490,19524],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19604,19638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19925,19951],"content":"VisitExtension(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitExtension(Expression)","pos":[0,26]}]},{"pos":[20407,20441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20520,20554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20839,20864],"content":"VisitGoto(GotoExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitGoto(GotoExpression)","pos":[0,25]}]},{"pos":[21321,21355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21434,21468],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21757,21784],"content":"VisitIndex(IndexExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitIndex(IndexExpression)","pos":[0,27]}]},{"pos":[22248,22282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22361,22395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22704,22741],"content":"VisitInvocation(InvocationExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitInvocation(InvocationExpression)","pos":[0,37]}]},{"pos":[23240,23274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23353,23387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23676,23703],"content":"VisitLabel(LabelExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitLabel(LabelExpression)","pos":[0,27]}]},{"pos":[24167,24201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24280,24314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24607,24636],"content":"VisitLabelTarget(LabelTarget)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitLabelTarget(LabelTarget)","pos":[0,29]}]},{"pos":[25103,25137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25217,25251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25548,25574],"content":"VisitLambda(Expression<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"VisitLambda(Expression<T>)"},{"pos":[26036,26070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26149,26183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26484,26517],"content":"VisitListInit(ListInitExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitListInit(ListInitExpression)","pos":[0,33]}]},{"pos":[27002,27036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27115,27149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27434,27459],"content":"VisitLoop(LoopExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitLoop(LoopExpression)","pos":[0,25]}]},{"pos":[27916,27950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28029,28063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28356,28385],"content":"VisitMember(MemberExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMember(MemberExpression)","pos":[0,29]}]},{"pos":[28856,28890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28969,29003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29316,29355],"content":"VisitMemberAssignment(MemberAssignment)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberAssignment(MemberAssignment)","pos":[0,39]}]},{"pos":[29862,29896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29981,30015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30316,30349],"content":"VisitMemberBinding(MemberBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberBinding(MemberBinding)","pos":[0,33]}]},{"pos":[30832,30866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30948,30982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31291,31328],"content":"VisitMemberInit(MemberInitExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberInit(MemberInitExpression)","pos":[0,37]}]},{"pos":[31827,31861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31940,31974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32291,32332],"content":"VisitMemberListBinding(MemberListBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberListBinding(MemberListBinding)","pos":[0,41]}]},{"pos":[32847,32881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32967,33001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33326,33371],"content":"VisitMemberMemberBinding(MemberMemberBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberMemberBinding(MemberMemberBinding)","pos":[0,45]}]},{"pos":[33902,33936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34024,34058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34367,34404],"content":"VisitMethodCall(MethodCallExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMethodCall(MethodCallExpression)","pos":[0,37]}]},{"pos":[34903,34937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35016,35050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35331,35354],"content":"VisitNew(NewExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitNew(NewExpression)","pos":[0,23]}]},{"pos":[35804,35838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35917,35951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36252,36285],"content":"VisitNewArray(NewArrayExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitNewArray(NewArrayExpression)","pos":[0,33]}]},{"pos":[36770,36804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36883,36917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37222,37257],"content":"VisitParameter(ParameterExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitParameter(ParameterExpression)","pos":[0,35]}]},{"pos":[37749,37783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37862,37896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38229,38278],"content":"VisitRuntimeVariables(RuntimeVariablesExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitRuntimeVariables(RuntimeVariablesExpression)","pos":[0,49]}]},{"pos":[38819,38853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38932,38966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39259,39288],"content":"VisitSwitch(SwitchExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitSwitch(SwitchExpression)","pos":[0,29]}]},{"pos":[39759,39793],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39872,39906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40195,40222],"content":"VisitSwitchCase(SwitchCase)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitSwitchCase(SwitchCase)","pos":[0,27]}]},{"pos":[40681,40715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40794,40828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41109,41132],"content":"VisitTry(TryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitTry(TryExpression)","pos":[0,23]}]},{"pos":[41582,41616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41695,41729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42038,42075],"content":"VisitTypeBinary(TypeBinaryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitTypeBinary(TypeBinaryExpression)","pos":[0,37]}]},{"pos":[42574,42608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42687,42721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43010,43037],"content":"VisitUnary(UnaryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitUnary(UnaryExpression)","pos":[0,27]}]},{"pos":[43501,43535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43614,43648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43759,43772],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[43908,43927],"content":"ExpressionVisitor()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpressionVisitor()","pos":[0,19]}]},{"pos":[44278,44315],"content":"Visit(ReadOnlyCollection<ph id=\"ph1\">&lt;Expression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Visit(ReadOnlyCollection<Expression>)"},{"pos":[44642,44672],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;Expression&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<Expression>"},{"pos":[44980,45010],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;Expression&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<Expression>"},{"pos":[45327,45344],"content":"Visit(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Visit(Expression)","pos":[0,17]}]},{"pos":[45573,45583],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[45762,45772],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[46059,46097],"content":"Visit(ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>,Func&lt;T,T&gt;)","needQuote":true,"needEscape":true,"source":"Visit(ReadOnlyCollection<T>,Func<T,T>)"},{"pos":[46392,46413],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"},{"pos":[46645,46666],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"},{"pos":[46838,46847],"content":"Func<T,T>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;T,T&gt;","pos":[0,9],"source":"Func<T,T>"}]},{"pos":[47118,47163],"content":"VisitAndConvert(ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>,String)","needQuote":true,"needEscape":true,"source":"VisitAndConvert(ReadOnlyCollection<T>,String)"},{"pos":[47472,47493],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"},{"pos":[47725,47746],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"},{"pos":[47916,47922],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48139,48164],"content":"VisitAndConvert(T,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitAndConvert(T,String)","pos":[0,25]}]},{"pos":[48354,48355],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[48437,48438],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[48537,48543],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48776,48805],"content":"VisitBinary(BinaryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitBinary(BinaryExpression)","pos":[0,29]}]},{"pos":[49058,49068],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[49253,49269],"content":"BinaryExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryExpression","pos":[0,16]}]},{"pos":[49537,49564],"content":"VisitBlock(BlockExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitBlock(BlockExpression)","pos":[0,27]}]},{"pos":[49813,49823],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[50007,50022],"content":"BlockExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"BlockExpression","pos":[0,15]}]},{"pos":[50288,50315],"content":"VisitCatchBlock(CatchBlock)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitCatchBlock(CatchBlock)","pos":[0,27]}]},{"pos":[50564,50574],"content":"CatchBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[50753,50763],"content":"CatchBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"CatchBlock","pos":[0,10]}]},{"pos":[51031,51070],"content":"VisitConditional(ConditionalExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitConditional(ConditionalExpression)","pos":[0,39]}]},{"pos":[51343,51353],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[51543,51564],"content":"ConditionalExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"ConditionalExpression","pos":[0,21]}]},{"pos":[51848,51881],"content":"VisitConstant(ConstantExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitConstant(ConstantExpression)","pos":[0,33]}]},{"pos":[52142,52152],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[52339,52357],"content":"ConstantExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstantExpression","pos":[0,18]}]},{"pos":[52637,52672],"content":"VisitDebugInfo(DebugInfoExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDebugInfo(DebugInfoExpression)","pos":[0,35]}]},{"pos":[52937,52947],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[53135,53154],"content":"DebugInfoExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DebugInfoExpression","pos":[0,19]}]},{"pos":[53432,53463],"content":"VisitDefault(DefaultExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDefault(DefaultExpression)","pos":[0,31]}]},{"pos":[53720,53730],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[53916,53933],"content":"DefaultExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultExpression","pos":[0,17]}]},{"pos":[54207,54238],"content":"VisitDynamic(DynamicExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitDynamic(DynamicExpression)","pos":[0,31]}]},{"pos":[54495,54505],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[54691,54708],"content":"DynamicExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicExpression","pos":[0,17]}]},{"pos":[54980,55009],"content":"VisitElementInit(ElementInit)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitElementInit(ElementInit)","pos":[0,29]}]},{"pos":[55263,55274],"content":"ElementInit","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[55456,55467],"content":"ElementInit","needQuote":true,"needEscape":true,"nodes":[{"content":"ElementInit","pos":[0,11]}]},{"pos":[55724,55750],"content":"VisitExtension(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitExtension(Expression)","pos":[0,26]}]},{"pos":[55997,56007],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[56186,56196],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[56450,56475],"content":"VisitGoto(GotoExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitGoto(GotoExpression)","pos":[0,25]}]},{"pos":[56720,56730],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[56913,56927],"content":"GotoExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"GotoExpression","pos":[0,14]}]},{"pos":[57191,57218],"content":"VisitIndex(IndexExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitIndex(IndexExpression)","pos":[0,27]}]},{"pos":[57467,57477],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[57661,57676],"content":"IndexExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexExpression","pos":[0,15]}]},{"pos":[57952,57989],"content":"VisitInvocation(InvocationExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitInvocation(InvocationExpression)","pos":[0,37]}]},{"pos":[58258,58268],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[58457,58477],"content":"InvocationExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"InvocationExpression","pos":[0,20]}]},{"pos":[58753,58780],"content":"VisitLabel(LabelExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitLabel(LabelExpression)","pos":[0,27]}]},{"pos":[59029,59039],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[59223,59238],"content":"LabelExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"LabelExpression","pos":[0,15]}]},{"pos":[59506,59535],"content":"VisitLabelTarget(LabelTarget)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitLabelTarget(LabelTarget)","pos":[0,29]}]},{"pos":[59789,59800],"content":"LabelTarget","needQuote":true,"needEscape":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[59982,59993],"content":"LabelTarget","needQuote":true,"needEscape":true,"nodes":[{"content":"LabelTarget","pos":[0,11]}]},{"pos":[60255,60281],"content":"VisitLambda(Expression<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"VisitLambda(Expression<T>)"},{"pos":[60528,60538],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[60720,60733],"content":"Expression<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Expression<T>"},{"pos":[61001,61034],"content":"VisitListInit(ListInitExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitListInit(ListInitExpression)","pos":[0,33]}]},{"pos":[61295,61305],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[61492,61510],"content":"ListInitExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"ListInitExpression","pos":[0,18]}]},{"pos":[61780,61805],"content":"VisitLoop(LoopExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitLoop(LoopExpression)","pos":[0,25]}]},{"pos":[62050,62060],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[62243,62257],"content":"LoopExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"LoopExpression","pos":[0,14]}]},{"pos":[62523,62552],"content":"VisitMember(MemberExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMember(MemberExpression)","pos":[0,29]}]},{"pos":[62805,62815],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[63000,63016],"content":"MemberExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberExpression","pos":[0,16]}]},{"pos":[63296,63335],"content":"VisitMemberAssignment(MemberAssignment)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberAssignment(MemberAssignment)","pos":[0,39]}]},{"pos":[63614,63630],"content":"MemberAssignment","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberAssignment","pos":[0,16]}]},{"pos":[63827,63843],"content":"MemberAssignment","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberAssignment","pos":[0,16]}]},{"pos":[64117,64150],"content":"VisitMemberBinding(MemberBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberBinding(MemberBinding)","pos":[0,33]}]},{"pos":[64414,64427],"content":"MemberBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[64615,64628],"content":"MemberBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberBinding","pos":[0,13]}]},{"pos":[64900,64937],"content":"VisitMemberInit(MemberInitExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberInit(MemberInitExpression)","pos":[0,37]}]},{"pos":[65206,65216],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[65405,65425],"content":"MemberInitExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberInitExpression","pos":[0,20]}]},{"pos":[65715,65756],"content":"VisitMemberListBinding(MemberListBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberListBinding(MemberListBinding)","pos":[0,41]}]},{"pos":[66040,66057],"content":"MemberListBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberListBinding","pos":[0,17]}]},{"pos":[66257,66274],"content":"MemberListBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberListBinding","pos":[0,17]}]},{"pos":[66562,66607],"content":"VisitMemberMemberBinding(MemberMemberBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMemberMemberBinding(MemberMemberBinding)","pos":[0,45]}]},{"pos":[66901,66920],"content":"MemberMemberBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberMemberBinding","pos":[0,19]}]},{"pos":[67126,67145],"content":"MemberMemberBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberMemberBinding","pos":[0,19]}]},{"pos":[67429,67466],"content":"VisitMethodCall(MethodCallExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitMethodCall(MethodCallExpression)","pos":[0,37]}]},{"pos":[67735,67745],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[67934,67954],"content":"MethodCallExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodCallExpression","pos":[0,20]}]},{"pos":[68226,68249],"content":"VisitNew(NewExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitNew(NewExpression)","pos":[0,23]}]},{"pos":[68490,68500],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[68682,68695],"content":"NewExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"NewExpression","pos":[0,13]}]},{"pos":[68963,68996],"content":"VisitNewArray(NewArrayExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitNewArray(NewArrayExpression)","pos":[0,33]}]},{"pos":[69257,69267],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[69454,69472],"content":"NewArrayExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"NewArrayExpression","pos":[0,18]}]},{"pos":[69752,69787],"content":"VisitParameter(ParameterExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitParameter(ParameterExpression)","pos":[0,35]}]},{"pos":[70052,70062],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[70250,70269],"content":"ParameterExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterExpression","pos":[0,19]}]},{"pos":[70565,70614],"content":"VisitRuntimeVariables(RuntimeVariablesExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitRuntimeVariables(RuntimeVariablesExpression)","pos":[0,49]}]},{"pos":[70907,70917],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[71112,71138],"content":"RuntimeVariablesExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeVariablesExpression","pos":[0,26]}]},{"pos":[71428,71457],"content":"VisitSwitch(SwitchExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitSwitch(SwitchExpression)","pos":[0,29]}]},{"pos":[71710,71720],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[71905,71921],"content":"SwitchExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"SwitchExpression","pos":[0,16]}]},{"pos":[72189,72216],"content":"VisitSwitchCase(SwitchCase)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitSwitchCase(SwitchCase)","pos":[0,27]}]},{"pos":[72465,72475],"content":"SwitchCase","needQuote":true,"needEscape":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[72654,72664],"content":"SwitchCase","needQuote":true,"needEscape":true,"nodes":[{"content":"SwitchCase","pos":[0,10]}]},{"pos":[72916,72939],"content":"VisitTry(TryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitTry(TryExpression)","pos":[0,23]}]},{"pos":[73180,73190],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[73372,73385],"content":"TryExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"TryExpression","pos":[0,13]}]},{"pos":[73657,73694],"content":"VisitTypeBinary(TypeBinaryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitTypeBinary(TypeBinaryExpression)","pos":[0,37]}]},{"pos":[73963,73973],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[74162,74182],"content":"TypeBinaryExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeBinaryExpression","pos":[0,20]}]},{"pos":[74458,74485],"content":"VisitUnary(UnaryExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"VisitUnary(UnaryExpression)","pos":[0,27]}]},{"pos":[74734,74744],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[74928,74943],"content":"UnaryExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"UnaryExpression","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.ExpressionVisitor\n  id: ExpressionVisitor\n  children:\n  - System.Linq.Expressions.ExpressionVisitor.#ctor\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.Func{``0,``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  langs:\n  - csharp\n  name: ExpressionVisitor\n  nameWithType: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n  type: Class\n  syntax:\n    content: public abstract class ExpressionVisitor\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.#ctor\n  id: '#ctor'\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: ExpressionVisitor()\n  nameWithType: ExpressionVisitor.ExpressionVisitor()\n  fullName: System.Linq.Expressions.ExpressionVisitor.ExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected ExpressionVisitor ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  id: Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(ReadOnlyCollection<Expression>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> Visit (System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression> nodes);\n    parameters:\n    - id: nodes\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n      description: Parameter description to be filled\n  overload: System.Linq.Expressions.ExpressionVisitor.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  id: Visit(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(Expression)\n  nameWithType: ExpressionVisitor.Visit(Expression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public virtual System.Linq.Expressions.Expression Visit (System.Linq.Expressions.Expression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  overload: System.Linq.Expressions.ExpressionVisitor.Visit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.Func{``0,``0})\n  id: Visit``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.Func{``0,``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: Visit(ReadOnlyCollection<T>,Func<T,T>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<T>,Func<T,T>)\n  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection<T>,Func<T,T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<T> Visit<T> (System.Collections.ObjectModel.ReadOnlyCollection<T> nodes, Func<T,T> elementVisitor);\n    parameters:\n    - id: nodes\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: Parameter description to be filled\n    - id: elementVisitor\n      type: System.Func{T,T}\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.String)\n  id: VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitAndConvert(ReadOnlyCollection<T>,String)\n  nameWithType: ExpressionVisitor.VisitAndConvert(ReadOnlyCollection<T>,String)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(ReadOnlyCollection<T>,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: 'public System.Collections.ObjectModel.ReadOnlyCollection<T> VisitAndConvert<T> (System.Collections.ObjectModel.ReadOnlyCollection<T> nodes, string callerName) where T : System.Linq.Expressions.Expression;'\n    parameters:\n    - id: nodes\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: Parameter description to be filled\n    - id: callerName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: Parameter description to be filled\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  id: VisitAndConvert``1(``0,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitAndConvert(T,String)\n  nameWithType: ExpressionVisitor.VisitAndConvert(T,String)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(T,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: 'public T VisitAndConvert<T> (T node, string callerName) where T : System.Linq.Expressions.Expression;'\n    parameters:\n    - id: node\n      type: T\n      description: Parameter description to be filled\n    - id: callerName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  overload: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  id: VisitBinary(System.Linq.Expressions.BinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitBinary(BinaryExpression)\n  nameWithType: ExpressionVisitor.VisitBinary(BinaryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitBinary (System.Linq.Expressions.BinaryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.BinaryExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  id: VisitBlock(System.Linq.Expressions.BlockExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitBlock(BlockExpression)\n  nameWithType: ExpressionVisitor.VisitBlock(BlockExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock(BlockExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitBlock (System.Linq.Expressions.BlockExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.BlockExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  id: VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitCatchBlock(CatchBlock)\n  nameWithType: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.CatchBlock VisitCatchBlock (System.Linq.Expressions.CatchBlock node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.CatchBlock\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.CatchBlock\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitConditional(ConditionalExpression)\n  nameWithType: ExpressionVisitor.VisitConditional(ConditionalExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional(ConditionalExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitConditional (System.Linq.Expressions.ConditionalExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ConditionalExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  id: VisitConstant(System.Linq.Expressions.ConstantExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitConstant(ConstantExpression)\n  nameWithType: ExpressionVisitor.VisitConstant(ConstantExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant(ConstantExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitConstant (System.Linq.Expressions.ConstantExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ConstantExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  id: VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDebugInfo(DebugInfoExpression)\n  nameWithType: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitDebugInfo (System.Linq.Expressions.DebugInfoExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DebugInfoExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  id: VisitDefault(System.Linq.Expressions.DefaultExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDefault(DefaultExpression)\n  nameWithType: ExpressionVisitor.VisitDefault(DefaultExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault(DefaultExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitDefault (System.Linq.Expressions.DefaultExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DefaultExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  id: VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(DynamicExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitDynamic (System.Linq.Expressions.DynamicExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DynamicExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  id: VisitElementInit(System.Linq.Expressions.ElementInit)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitElementInit(ElementInit)\n  nameWithType: ExpressionVisitor.VisitElementInit(ElementInit)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(ElementInit)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.ElementInit VisitElementInit (System.Linq.Expressions.ElementInit node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ElementInit\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.ElementInit\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  id: VisitExtension(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitExtension(Expression)\n  nameWithType: ExpressionVisitor.VisitExtension(Expression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitExtension (System.Linq.Expressions.Expression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  id: VisitGoto(System.Linq.Expressions.GotoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitGoto(GotoExpression)\n  nameWithType: ExpressionVisitor.VisitGoto(GotoExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto(GotoExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitGoto (System.Linq.Expressions.GotoExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.GotoExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  id: VisitIndex(System.Linq.Expressions.IndexExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitIndex(IndexExpression)\n  nameWithType: ExpressionVisitor.VisitIndex(IndexExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex(IndexExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitIndex (System.Linq.Expressions.IndexExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.IndexExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  id: VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitInvocation(InvocationExpression)\n  nameWithType: ExpressionVisitor.VisitInvocation(InvocationExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(InvocationExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitInvocation (System.Linq.Expressions.InvocationExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.InvocationExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  id: VisitLabel(System.Linq.Expressions.LabelExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLabel(LabelExpression)\n  nameWithType: ExpressionVisitor.VisitLabel(LabelExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel(LabelExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitLabel (System.Linq.Expressions.LabelExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.LabelExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  id: VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLabelTarget(LabelTarget)\n  nameWithType: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.LabelTarget VisitLabelTarget (System.Linq.Expressions.LabelTarget node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.LabelTarget\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.LabelTarget\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  id: VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLambda(Expression<T>)\n  nameWithType: ExpressionVisitor.VisitLambda(Expression<T>)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Expression<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitLambda<T> (System.Linq.Expressions.Expression<T> node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.Expression{T}\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  id: VisitListInit(System.Linq.Expressions.ListInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitListInit(ListInitExpression)\n  nameWithType: ExpressionVisitor.VisitListInit(ListInitExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit(ListInitExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitListInit (System.Linq.Expressions.ListInitExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ListInitExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  id: VisitLoop(System.Linq.Expressions.LoopExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitLoop(LoopExpression)\n  nameWithType: ExpressionVisitor.VisitLoop(LoopExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop(LoopExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitLoop (System.Linq.Expressions.LoopExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.LoopExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  id: VisitMember(System.Linq.Expressions.MemberExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMember(MemberExpression)\n  nameWithType: ExpressionVisitor.VisitMember(MemberExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember(MemberExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitMember (System.Linq.Expressions.MemberExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  id: VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberAssignment(MemberAssignment)\n  nameWithType: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberAssignment VisitMemberAssignment (System.Linq.Expressions.MemberAssignment node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberAssignment\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.MemberAssignment\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  id: VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberBinding(MemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberBinding VisitMemberBinding (System.Linq.Expressions.MemberBinding node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberBinding\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.MemberBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  id: VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberInit(MemberInitExpression)\n  nameWithType: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitMemberInit (System.Linq.Expressions.MemberInitExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberInitExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  id: VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberListBinding(MemberListBinding)\n  nameWithType: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberListBinding VisitMemberListBinding (System.Linq.Expressions.MemberListBinding node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberListBinding\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.MemberListBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  id: VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMemberMemberBinding(MemberMemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.MemberMemberBinding VisitMemberMemberBinding (System.Linq.Expressions.MemberMemberBinding node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MemberMemberBinding\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.MemberMemberBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitMethodCall(MethodCallExpression)\n  nameWithType: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitMethodCall (System.Linq.Expressions.MethodCallExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.MethodCallExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  id: VisitNew(System.Linq.Expressions.NewExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitNew(NewExpression)\n  nameWithType: ExpressionVisitor.VisitNew(NewExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew(NewExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitNew (System.Linq.Expressions.NewExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.NewExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  id: VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitNewArray(NewArrayExpression)\n  nameWithType: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitNewArray (System.Linq.Expressions.NewArrayExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.NewArrayExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  id: VisitParameter(System.Linq.Expressions.ParameterExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitParameter(ParameterExpression)\n  nameWithType: ExpressionVisitor.VisitParameter(ParameterExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter(ParameterExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitParameter (System.Linq.Expressions.ParameterExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.ParameterExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  id: VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitRuntimeVariables(RuntimeVariablesExpression)\n  nameWithType: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitRuntimeVariables (System.Linq.Expressions.RuntimeVariablesExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.RuntimeVariablesExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  id: VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitSwitch(SwitchExpression)\n  nameWithType: ExpressionVisitor.VisitSwitch(SwitchExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(SwitchExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitSwitch (System.Linq.Expressions.SwitchExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.SwitchExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  id: VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitSwitchCase(SwitchCase)\n  nameWithType: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.SwitchCase VisitSwitchCase (System.Linq.Expressions.SwitchCase node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.SwitchCase\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.SwitchCase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  id: VisitTry(System.Linq.Expressions.TryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitTry(TryExpression)\n  nameWithType: ExpressionVisitor.VisitTry(TryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry(TryExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitTry (System.Linq.Expressions.TryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.TryExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  id: VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitTypeBinary(TypeBinaryExpression)\n  nameWithType: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitTypeBinary (System.Linq.Expressions.TypeBinaryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.TypeBinaryExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  id: VisitUnary(System.Linq.Expressions.UnaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  langs:\n  - csharp\n  name: VisitUnary(UnaryExpression)\n  nameWithType: ExpressionVisitor.VisitUnary(UnaryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Linq.Expressions\n  syntax:\n    content: protected virtual System.Linq.Expressions.Expression VisitUnary (System.Linq.Expressions.UnaryExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.UnaryExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Linq.Expressions.ExpressionVisitor.#ctor\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: ExpressionVisitor()\n  nameWithType: ExpressionVisitor.ExpressionVisitor()\n  fullName: System.Linq.Expressions.ExpressionVisitor.ExpressionVisitor()\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(ReadOnlyCollection<Expression>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Expression>\n  nameWithType: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Expression>\n  nameWithType: ReadOnlyCollection<Expression>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(Expression)\n  nameWithType: ExpressionVisitor.Visit(Expression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(Expression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.Func{``0,``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(ReadOnlyCollection<T>,Func<T,T>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<T>,Func<T,T>)\n  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection<T>,Func<T,T>)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Func{T,T}\n  parent: System\n  isExternal: true\n  name: Func<T,T>\n  nameWithType: Func<T,T>\n  fullName: System.Func<T,T>\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection`1,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert(ReadOnlyCollection<T>,String)\n  nameWithType: ExpressionVisitor.VisitAndConvert(ReadOnlyCollection<T>,String)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(ReadOnlyCollection<T>,String)\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert(T,String)\n  nameWithType: ExpressionVisitor.VisitAndConvert(T,String)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(T,String)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBinary(BinaryExpression)\n  nameWithType: ExpressionVisitor.VisitBinary(BinaryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.BinaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: BinaryExpression\n  nameWithType: BinaryExpression\n  fullName: System.Linq.Expressions.BinaryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBlock(BlockExpression)\n  nameWithType: ExpressionVisitor.VisitBlock(BlockExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock(BlockExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.BlockExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: BlockExpression\n  nameWithType: BlockExpression\n  fullName: System.Linq.Expressions.BlockExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitCatchBlock(CatchBlock)\n  nameWithType: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(CatchBlock)\n- uid: System.Linq.Expressions.CatchBlock\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: CatchBlock\n  nameWithType: CatchBlock\n  fullName: System.Linq.Expressions.CatchBlock\n- uid: System.Linq.Expressions.CatchBlock\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: CatchBlock\n  nameWithType: CatchBlock\n  fullName: System.Linq.Expressions.CatchBlock\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConditional(ConditionalExpression)\n  nameWithType: ExpressionVisitor.VisitConditional(ConditionalExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional(ConditionalExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.ConditionalExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ConditionalExpression\n  nameWithType: ConditionalExpression\n  fullName: System.Linq.Expressions.ConditionalExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConstant(ConstantExpression)\n  nameWithType: ExpressionVisitor.VisitConstant(ConstantExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant(ConstantExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.ConstantExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ConstantExpression\n  nameWithType: ConstantExpression\n  fullName: System.Linq.Expressions.ConstantExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDebugInfo(DebugInfoExpression)\n  nameWithType: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.DebugInfoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DebugInfoExpression\n  nameWithType: DebugInfoExpression\n  fullName: System.Linq.Expressions.DebugInfoExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDefault(DefaultExpression)\n  nameWithType: ExpressionVisitor.VisitDefault(DefaultExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault(DefaultExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.DefaultExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DefaultExpression\n  nameWithType: DefaultExpression\n  fullName: System.Linq.Expressions.DefaultExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: ExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDynamic(DynamicExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.DynamicExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DynamicExpression\n  nameWithType: DynamicExpression\n  fullName: System.Linq.Expressions.DynamicExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitElementInit(ElementInit)\n  nameWithType: ExpressionVisitor.VisitElementInit(ElementInit)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(ElementInit)\n- uid: System.Linq.Expressions.ElementInit\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ElementInit\n  nameWithType: ElementInit\n  fullName: System.Linq.Expressions.ElementInit\n- uid: System.Linq.Expressions.ElementInit\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ElementInit\n  nameWithType: ElementInit\n  fullName: System.Linq.Expressions.ElementInit\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitExtension(Expression)\n  nameWithType: ExpressionVisitor.VisitExtension(Expression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension(Expression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitGoto(GotoExpression)\n  nameWithType: ExpressionVisitor.VisitGoto(GotoExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto(GotoExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.GotoExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: GotoExpression\n  nameWithType: GotoExpression\n  fullName: System.Linq.Expressions.GotoExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitIndex(IndexExpression)\n  nameWithType: ExpressionVisitor.VisitIndex(IndexExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex(IndexExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.IndexExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: IndexExpression\n  nameWithType: IndexExpression\n  fullName: System.Linq.Expressions.IndexExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitInvocation(InvocationExpression)\n  nameWithType: ExpressionVisitor.VisitInvocation(InvocationExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(InvocationExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.InvocationExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: InvocationExpression\n  nameWithType: InvocationExpression\n  fullName: System.Linq.Expressions.InvocationExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabel(LabelExpression)\n  nameWithType: ExpressionVisitor.VisitLabel(LabelExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel(LabelExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.LabelExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelExpression\n  nameWithType: LabelExpression\n  fullName: System.Linq.Expressions.LabelExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabelTarget(LabelTarget)\n  nameWithType: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(LabelTarget)\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  nameWithType: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n- uid: System.Linq.Expressions.LabelTarget\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LabelTarget\n  nameWithType: LabelTarget\n  fullName: System.Linq.Expressions.LabelTarget\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLambda(Expression<T>)\n  nameWithType: ExpressionVisitor.VisitLambda(Expression<T>)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Expression<T>)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.Expression{T}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<T>\n  nameWithType: Expression<T>\n  fullName: System.Linq.Expressions.Expression<T>\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitListInit(ListInitExpression)\n  nameWithType: ExpressionVisitor.VisitListInit(ListInitExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit(ListInitExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.ListInitExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ListInitExpression\n  nameWithType: ListInitExpression\n  fullName: System.Linq.Expressions.ListInitExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLoop(LoopExpression)\n  nameWithType: ExpressionVisitor.VisitLoop(LoopExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop(LoopExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.LoopExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LoopExpression\n  nameWithType: LoopExpression\n  fullName: System.Linq.Expressions.LoopExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMember(MemberExpression)\n  nameWithType: ExpressionVisitor.VisitMember(MemberExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember(MemberExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.MemberExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberExpression\n  nameWithType: MemberExpression\n  fullName: System.Linq.Expressions.MemberExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberAssignment(MemberAssignment)\n  nameWithType: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n- uid: System.Linq.Expressions.MemberAssignment\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberAssignment\n  nameWithType: MemberAssignment\n  fullName: System.Linq.Expressions.MemberAssignment\n- uid: System.Linq.Expressions.MemberAssignment\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberAssignment\n  nameWithType: MemberAssignment\n  fullName: System.Linq.Expressions.MemberAssignment\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberBinding(MemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(MemberBinding)\n- uid: System.Linq.Expressions.MemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberBinding\n  nameWithType: MemberBinding\n  fullName: System.Linq.Expressions.MemberBinding\n- uid: System.Linq.Expressions.MemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberBinding\n  nameWithType: MemberBinding\n  fullName: System.Linq.Expressions.MemberBinding\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberInit(MemberInitExpression)\n  nameWithType: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.MemberInitExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberInitExpression\n  nameWithType: MemberInitExpression\n  fullName: System.Linq.Expressions.MemberInitExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberListBinding(MemberListBinding)\n  nameWithType: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n- uid: System.Linq.Expressions.MemberListBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberListBinding\n  nameWithType: MemberListBinding\n  fullName: System.Linq.Expressions.MemberListBinding\n- uid: System.Linq.Expressions.MemberListBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberListBinding\n  nameWithType: MemberListBinding\n  fullName: System.Linq.Expressions.MemberListBinding\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberMemberBinding(MemberMemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n- uid: System.Linq.Expressions.MemberMemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberMemberBinding\n  nameWithType: MemberMemberBinding\n  fullName: System.Linq.Expressions.MemberMemberBinding\n- uid: System.Linq.Expressions.MemberMemberBinding\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MemberMemberBinding\n  nameWithType: MemberMemberBinding\n  fullName: System.Linq.Expressions.MemberMemberBinding\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMethodCall(MethodCallExpression)\n  nameWithType: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.MethodCallExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: MethodCallExpression\n  nameWithType: MethodCallExpression\n  fullName: System.Linq.Expressions.MethodCallExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNew(NewExpression)\n  nameWithType: ExpressionVisitor.VisitNew(NewExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew(NewExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.NewExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewExpression\n  nameWithType: NewExpression\n  fullName: System.Linq.Expressions.NewExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNewArray(NewArrayExpression)\n  nameWithType: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(NewArrayExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.NewArrayExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: NewArrayExpression\n  nameWithType: NewArrayExpression\n  fullName: System.Linq.Expressions.NewArrayExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitParameter(ParameterExpression)\n  nameWithType: ExpressionVisitor.VisitParameter(ParameterExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter(ParameterExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.ParameterExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ParameterExpression\n  nameWithType: ParameterExpression\n  fullName: System.Linq.Expressions.ParameterExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitRuntimeVariables(RuntimeVariablesExpression)\n  nameWithType: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.RuntimeVariablesExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: RuntimeVariablesExpression\n  nameWithType: RuntimeVariablesExpression\n  fullName: System.Linq.Expressions.RuntimeVariablesExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitch(SwitchExpression)\n  nameWithType: ExpressionVisitor.VisitSwitch(SwitchExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(SwitchExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.SwitchExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchExpression\n  nameWithType: SwitchExpression\n  fullName: System.Linq.Expressions.SwitchExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitchCase(SwitchCase)\n  nameWithType: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(SwitchCase)\n- uid: System.Linq.Expressions.SwitchCase\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchCase\n  nameWithType: SwitchCase\n  fullName: System.Linq.Expressions.SwitchCase\n- uid: System.Linq.Expressions.SwitchCase\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: SwitchCase\n  nameWithType: SwitchCase\n  fullName: System.Linq.Expressions.SwitchCase\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTry(TryExpression)\n  nameWithType: ExpressionVisitor.VisitTry(TryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry(TryExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.TryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: TryExpression\n  nameWithType: TryExpression\n  fullName: System.Linq.Expressions.TryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTypeBinary(TypeBinaryExpression)\n  nameWithType: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.TypeBinaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: TypeBinaryExpression\n  nameWithType: TypeBinaryExpression\n  fullName: System.Linq.Expressions.TypeBinaryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitUnary(UnaryExpression)\n  nameWithType: ExpressionVisitor.VisitUnary(UnaryExpression)\n  fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary(UnaryExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.UnaryExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: UnaryExpression\n  nameWithType: UnaryExpression\n  fullName: System.Linq.Expressions.UnaryExpression\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  nameWithType: ExpressionVisitor.\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>*\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  nameWithType: ExpressionVisitor.\n"}