{"nodes":[{"pos":[437,458],"content":"SafeAccessTokenHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeAccessTokenHandle","pos":[0,21]}]},{"pos":[2058,2087],"content":"SafeAccessTokenHandle(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeAccessTokenHandle(IntPtr)","pos":[0,29]}]},{"pos":[2483,2517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2746,2759],"content":"InvalidHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"InvalidHandle","pos":[0,13]}]},{"pos":[3176,3210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3431,3440],"content":"IsInvalid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[3767,3801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4030,4045],"content":"ReleaseHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[4403,4437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4576,4617],"content":"System.Runtime.InteropServices.SafeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices.SafeHandle","pos":[0,41]}]},{"pos":[4784,4813],"content":"SafeAccessTokenHandle(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeAccessTokenHandle(IntPtr)","pos":[0,29]}]},{"pos":[5040,5046],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[5255,5268],"content":"InvalidHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"InvalidHandle","pos":[0,13]}]},{"pos":[5520,5541],"content":"SafeAccessTokenHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeAccessTokenHandle","pos":[0,21]}]},{"pos":[5797,5806],"content":"IsInvalid","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInvalid","pos":[0,9]}]},{"pos":[5994,6001],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6212,6227],"content":"ReleaseHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReleaseHandle()","pos":[0,15]}]},{"pos":[6427,6434],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  id: SafeAccessTokenHandle\n  children:\n  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)\n  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle\n  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid\n  - Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle\n  langs:\n  - csharp\n  name: SafeAccessTokenHandle\n  nameWithType: SafeAccessTokenHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  type: Class\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public sealed class SafeAccessTokenHandle : System.Runtime.InteropServices.SafeHandle\n  inheritance:\n  - System.Object\n  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject\n  - System.Runtime.InteropServices.SafeHandle\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Runtime.InteropServices.SafeHandle.Close\n  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)\n  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle\n  - System.Runtime.InteropServices.SafeHandle.DangerousRelease\n  - System.Runtime.InteropServices.SafeHandle.Dispose\n  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)\n  - System.Runtime.InteropServices.SafeHandle.handle\n  - System.Runtime.InteropServices.SafeHandle.IsClosed\n  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)\n  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  langs:\n  - csharp\n  name: SafeAccessTokenHandle(IntPtr)\n  nameWithType: SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: public SafeAccessTokenHandle (IntPtr handle);\n    parameters:\n    - id: handle\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle\n  id: InvalidHandle\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  langs:\n  - csharp\n  name: InvalidHandle\n  nameWithType: SafeAccessTokenHandle.InvalidHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: public static Microsoft.Win32.SafeHandles.SafeAccessTokenHandle InvalidHandle { get; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid\n  id: IsInvalid\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  langs:\n  - csharp\n  name: IsInvalid\n  nameWithType: SafeAccessTokenHandle.IsInvalid\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: public override bool IsInvalid { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle\n  id: ReleaseHandle\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  langs:\n  - csharp\n  name: ReleaseHandle()\n  nameWithType: SafeAccessTokenHandle.ReleaseHandle()\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: Microsoft.Win32.SafeHandles\n  syntax:\n    content: protected override bool ReleaseHandle ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Runtime.InteropServices.SafeHandle\n  isExternal: false\n  name: System.Runtime.InteropServices.SafeHandle\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.#ctor(System.IntPtr)\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  isExternal: false\n  name: SafeAccessTokenHandle(IntPtr)\n  nameWithType: SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.SafeAccessTokenHandle(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  isExternal: false\n  name: InvalidHandle\n  nameWithType: SafeAccessTokenHandle.InvalidHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.InvalidHandle\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeAccessTokenHandle\n  nameWithType: SafeAccessTokenHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  isExternal: false\n  name: IsInvalid\n  nameWithType: SafeAccessTokenHandle.IsInvalid\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.IsInvalid\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle\n  parent: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle\n  isExternal: false\n  name: ReleaseHandle()\n  nameWithType: SafeAccessTokenHandle.ReleaseHandle()\n  fullName: Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.ReleaseHandle()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}