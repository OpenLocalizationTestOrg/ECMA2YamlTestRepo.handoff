{"nodes":[{"pos":[354,367],"content":"ReadOnlyState","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyState","pos":[0,13]}]},{"pos":[1343,1358],"content":"ReadOnlyState()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyState()","pos":[0,15]}]},{"pos":[1902,1912],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[2266,2300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2525,2533],"content":"ItemType","needQuote":true,"needEscape":true,"nodes":[{"content":"ItemType","pos":[0,8]}]},{"pos":[2882,2916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3056,3098],"content":"System.Activities.Presentation.ContextItem","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Presentation.ContextItem","pos":[0,42]}]},{"pos":[3256,3271],"content":"ReadOnlyState()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadOnlyState()","pos":[0,15]}]},{"pos":[3561,3571],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[3756,3763],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[3975,3983],"content":"ItemType","needQuote":true,"needEscape":true,"nodes":[{"content":"ItemType","pos":[0,8]}]},{"pos":[4161,4165],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState\n  id: ReadOnlyState\n  children:\n  - System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  - System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  - System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  langs:\n  - csharp\n  name: ReadOnlyState\n  nameWithType: ReadOnlyState\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState\n  type: Class\n  syntax:\n    content: 'public sealed class ReadOnlyState : System.Activities.Presentation.ContextItem'\n  inheritance:\n  - System.Object\n  - System.Activities.Presentation.ContextItem\n  implements: []\n  inheritedMembers:\n  - System.Activities.Presentation.ContextItem.OnItemChanged(System.Activities.Presentation.EditingContext,System.Activities.Presentation.ContextItem)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: ReadOnlyState()\n  nameWithType: ReadOnlyState.ReadOnlyState()\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ReadOnlyState()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public ReadOnlyState ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public bool IsReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  id: ItemType\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  langs:\n  - csharp\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public override Type ItemType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.Presentation.ContextItem\n  isExternal: false\n  name: System.Activities.Presentation.ContextItem\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.#ctor\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ReadOnlyState()\n  nameWithType: ReadOnlyState.ReadOnlyState()\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ReadOnlyState()\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyState.IsReadOnly\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n  parent: System.Activities.Presentation.Hosting.ReadOnlyState\n  isExternal: false\n  name: ItemType\n  nameWithType: ReadOnlyState.ItemType\n  fullName: System.Activities.Presentation.Hosting.ReadOnlyState.ItemType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}