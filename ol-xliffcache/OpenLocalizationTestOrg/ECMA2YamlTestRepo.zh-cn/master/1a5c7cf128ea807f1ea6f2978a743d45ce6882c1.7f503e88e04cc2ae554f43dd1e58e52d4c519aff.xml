{"nodes":[{"pos":[1719,1733],"content":"SymbolResolver","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolResolver","pos":[0,14]}]},{"pos":[2975,2991],"content":"SymbolResolver()","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolResolver()","pos":[0,16]}]},{"pos":[3603,3635],"content":"Add(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(KeyValuePair&lt;String,Object&gt;)","pos":[0,32],"source":"Add(KeyValuePair<String,Object>)"}]},{"pos":[4109,4143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4450,4468],"content":"Add(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,Object)","pos":[0,18]}]},{"pos":[4823,4857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4919,4953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5256,5272],"content":"Add(String,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,Type)","pos":[0,16]}]},{"pos":[5620,5654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5713,5747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6078,6101],"content":"Add(String,Object,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,Object,Type)","pos":[0,23]}]},{"pos":[6477,6511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6573,6607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6666,6700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7003,7035],"content":"AsLocationReferenceEnvironment()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsLocationReferenceEnvironment()","pos":[0,32]}]},{"pos":[7497,7531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7726,7733],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8328,8365],"content":"Contains(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(KeyValuePair&lt;String,Object&gt;)","pos":[0,37],"source":"Contains(KeyValuePair<String,Object>)"}]},{"pos":[8854,8888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8947,8981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9218,9237],"content":"ContainsKey(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(String)","pos":[0,19]}]},{"pos":[9588,9622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9681,9715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10082,10123],"content":"CopyTo(KeyValuePair<String,Object>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(KeyValuePair&lt;String,Object&gt;,Int32)","pos":[0,41],"source":"CopyTo(KeyValuePair<String,Object>,Int32)"}]},{"pos":[10638,10672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10738,10772],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10967,10972],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[11266,11300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11511,11526],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[12047,12081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12286,12296],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[12608,12642],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12865,12877],"content":"Item(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(String)","pos":[0,12]}]},{"pos":[13223,13257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13315,13349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13542,13546],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[13921,13955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14292,14327],"content":"Remove(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(KeyValuePair&lt;String,Object&gt;)","pos":[0,35],"source":"Remove(KeyValuePair<String,Object>)"}]},{"pos":[14810,14844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14903,14937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15225,15239],"content":"Remove(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(String)","pos":[0,14]}]},{"pos":[15575,15609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15668,15702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16050,16096],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[16542,16576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16843,16869],"content":"TryGetValue(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(String,Object)","pos":[0,26]}]},{"pos":[17252,17286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17348,17382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17441,17475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17672,17678],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[18059,18093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18204,18217],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[18351,18367],"content":"SymbolResolver()","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolResolver()","pos":[0,16]}]},{"pos":[18687,18719],"content":"Add(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(KeyValuePair&lt;String,Object&gt;)","pos":[0,32],"source":"Add(KeyValuePair<String,Object>)"}]},{"pos":[19011,19038],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[19324,19342],"content":"Add(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,Object)","pos":[0,18]}]},{"pos":[19531,19537],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19653,19659],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19867,19883],"content":"Add(String,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,Type)","pos":[0,16]}]},{"pos":[20068,20074],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20188,20192],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[20410,20433],"content":"Add(String,Object,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(String,Object,Type)","pos":[0,23]}]},{"pos":[20632,20638],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20754,20760],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20874,20878],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[21082,21114],"content":"AsLocationReferenceEnvironment()","needQuote":true,"needEscape":true,"nodes":[{"content":"AsLocationReferenceEnvironment()","pos":[0,32]}]},{"pos":[21375,21403],"content":"LocationReferenceEnvironment","needQuote":true,"needEscape":true,"nodes":[{"content":"LocationReferenceEnvironment","pos":[0,28]}]},{"pos":[21641,21648],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[21955,21992],"content":"Contains(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(KeyValuePair&lt;String,Object&gt;)","pos":[0,37],"source":"Contains(KeyValuePair<String,Object>)"}]},{"pos":[22220,22227],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22420,22447],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[22727,22746],"content":"ContainsKey(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(String)","pos":[0,19]}]},{"pos":[22938,22945],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23063,23069],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23338,23379],"content":"CopyTo(KeyValuePair<String,Object>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(KeyValuePair&lt;String,Object&gt;,Int32)","pos":[0,41],"source":"CopyTo(KeyValuePair<String,Object>,Int32)"}]},{"pos":[23689,23716],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[23909,23914],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24095,24100],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[24262,24267],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24456,24471],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[24769,24809],"content":"IEnumerator<KeyValuePair<String,Object>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;String,Object&gt;&gt;","pos":[0,40],"source":"IEnumerator<KeyValuePair<String,Object>>"}]},{"pos":[25126,25136],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[25310,25317],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25516,25528],"content":"Item(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(String)","pos":[0,12]}]},{"pos":[25705,25711],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25827,25833],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26015,26019],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[26240,26259],"content":"ICollection<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<String>"},{"pos":[26566,26601],"content":"Remove(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(KeyValuePair&lt;String,Object&gt;)","pos":[0,35],"source":"Remove(KeyValuePair<String,Object>)"}]},{"pos":[26825,26832],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27025,27052],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[27327,27341],"content":"Remove(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(String)","pos":[0,14]}]},{"pos":[27523,27530],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27648,27654],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27876,27922],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[28196,28207],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[28448,28474],"content":"TryGetValue(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(String,Object)","pos":[0,26]}]},{"pos":[28680,28687],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28805,28811],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28927,28933],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29117,29123],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[29348,29367],"content":"ICollection<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<Object>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Hosting.SymbolResolver\n  id: SymbolResolver\n  children:\n  - System.Activities.Hosting.SymbolResolver.#ctor\n  - System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)\n  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)\n  - System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)\n  - System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment\n  - System.Activities.Hosting.SymbolResolver.Clear\n  - System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  - System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)\n  - System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  - System.Activities.Hosting.SymbolResolver.Count\n  - System.Activities.Hosting.SymbolResolver.GetEnumerator\n  - System.Activities.Hosting.SymbolResolver.IsReadOnly\n  - System.Activities.Hosting.SymbolResolver.Item(System.String)\n  - System.Activities.Hosting.SymbolResolver.Keys\n  - System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  - System.Activities.Hosting.SymbolResolver.Remove(System.String)\n  - System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator\n  - System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)\n  - System.Activities.Hosting.SymbolResolver.Values\n  langs:\n  - csharp\n  name: SymbolResolver\n  nameWithType: SymbolResolver\n  fullName: System.Activities.Hosting.SymbolResolver\n  type: Class\n  syntax:\n    content: 'public sealed class SymbolResolver : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,object>>, System.Collections.Generic.IDictionary<string,object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  - System.Collections.Generic.IDictionary<System.String,System.Object>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.#ctor\n  id: '#ctor'\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: SymbolResolver()\n  nameWithType: SymbolResolver.SymbolResolver()\n  fullName: System.Activities.Hosting.SymbolResolver.SymbolResolver()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public SymbolResolver ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  id: Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Add(KeyValuePair<String,Object>)\n  nameWithType: SymbolResolver.Add(KeyValuePair<String,Object>)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(KeyValuePair<String,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public void Add (System.Collections.Generic.KeyValuePair<string,object> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n  overload: System.Activities.Hosting.SymbolResolver.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)\n  id: Add(System.String,System.Object)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Add(String,Object)\n  nameWithType: SymbolResolver.Add(String,Object)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public void Add (string key, object value);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Activities.Hosting.SymbolResolver.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)\n  id: Add(System.String,System.Type)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Add(String,Type)\n  nameWithType: SymbolResolver.Add(String,Type)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public void Add (string key, Type type);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Activities.Hosting.SymbolResolver.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)\n  id: Add(System.String,System.Object,System.Type)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Add(String,Object,Type)\n  nameWithType: SymbolResolver.Add(String,Object,Type)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object,Type)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public void Add (string key, object value, Type type);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Activities.Hosting.SymbolResolver.Add*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment\n  id: AsLocationReferenceEnvironment\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: AsLocationReferenceEnvironment()\n  nameWithType: SymbolResolver.AsLocationReferenceEnvironment()\n  fullName: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public System.Activities.LocationReferenceEnvironment AsLocationReferenceEnvironment ();\n    parameters: []\n    return:\n      type: System.Activities.LocationReferenceEnvironment\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Clear\n  id: Clear\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: SymbolResolver.Clear()\n  fullName: System.Activities.Hosting.SymbolResolver.Clear()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  id: Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Contains(KeyValuePair<String,Object>)\n  nameWithType: SymbolResolver.Contains(KeyValuePair<String,Object>)\n  fullName: System.Activities.Hosting.SymbolResolver.Contains(KeyValuePair<String,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public bool Contains (System.Collections.Generic.KeyValuePair<string,object> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)\n  id: ContainsKey(System.String)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: ContainsKey(String)\n  nameWithType: SymbolResolver.ContainsKey(String)\n  fullName: System.Activities.Hosting.SymbolResolver.ContainsKey(String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public bool ContainsKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  id: CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: CopyTo(KeyValuePair<String,Object>,Int32)\n  nameWithType: SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)\n  fullName: System.Activities.Hosting.SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public void CopyTo (System.Collections.Generic.KeyValuePair<string,object>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Count\n  id: Count\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Count\n  nameWithType: SymbolResolver.Count\n  fullName: System.Activities.Hosting.SymbolResolver.Count\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator\n  id: GetEnumerator\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: SymbolResolver.GetEnumerator()\n  fullName: System.Activities.Hosting.SymbolResolver.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly\n  id: IsReadOnly\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: SymbolResolver.IsReadOnly\n  fullName: System.Activities.Hosting.SymbolResolver.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Item(System.String)\n  id: Item(System.String)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: SymbolResolver.Item(String)\n  fullName: System.Activities.Hosting.SymbolResolver.Item(String)\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public object this[string key] { get; set; }\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Keys\n  id: Keys\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: SymbolResolver.Keys\n  fullName: System.Activities.Hosting.SymbolResolver.Keys\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public System.Collections.Generic.ICollection<string> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  id: Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Remove(KeyValuePair<String,Object>)\n  nameWithType: SymbolResolver.Remove(KeyValuePair<String,Object>)\n  fullName: System.Activities.Hosting.SymbolResolver.Remove(KeyValuePair<String,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public bool Remove (System.Collections.Generic.KeyValuePair<string,object> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Activities.Hosting.SymbolResolver.Remove*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: SymbolResolver.Remove(String)\n  fullName: System.Activities.Hosting.SymbolResolver.Remove(String)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public bool Remove (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Activities.Hosting.SymbolResolver.Remove*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Hosting.SymbolResolver.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)\n  id: TryGetValue(System.String,System.Object@)\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: TryGetValue(String,Object)\n  nameWithType: SymbolResolver.TryGetValue(String,Object)\n  fullName: System.Activities.Hosting.SymbolResolver.TryGetValue(String,Object)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public bool TryGetValue (string key, out object value);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Hosting.SymbolResolver.Values\n  id: Values\n  parent: System.Activities.Hosting.SymbolResolver\n  langs:\n  - csharp\n  name: Values\n  nameWithType: SymbolResolver.Values\n  fullName: System.Activities.Hosting.SymbolResolver.Values\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Hosting\n  syntax:\n    content: public System.Collections.Generic.ICollection<object> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Hosting.SymbolResolver.#ctor\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: SymbolResolver()\n  nameWithType: SymbolResolver.SymbolResolver()\n  fullName: System.Activities.Hosting.SymbolResolver.SymbolResolver()\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Add(KeyValuePair<String,Object>)\n  nameWithType: SymbolResolver.Add(KeyValuePair<String,Object>)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(KeyValuePair<String,Object>)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Add(String,Object)\n  nameWithType: SymbolResolver.Add(String,Object)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Type)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Add(String,Type)\n  nameWithType: SymbolResolver.Add(String,Type)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Hosting.SymbolResolver.Add(System.String,System.Object,System.Type)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Add(String,Object,Type)\n  nameWithType: SymbolResolver.Add(String,Object,Type)\n  fullName: System.Activities.Hosting.SymbolResolver.Add(String,Object,Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: AsLocationReferenceEnvironment()\n  nameWithType: SymbolResolver.AsLocationReferenceEnvironment()\n  fullName: System.Activities.Hosting.SymbolResolver.AsLocationReferenceEnvironment()\n- uid: System.Activities.LocationReferenceEnvironment\n  parent: System.Activities\n  isExternal: false\n  name: LocationReferenceEnvironment\n  nameWithType: LocationReferenceEnvironment\n  fullName: System.Activities.LocationReferenceEnvironment\n- uid: System.Activities.Hosting.SymbolResolver.Clear\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Clear()\n  nameWithType: SymbolResolver.Clear()\n  fullName: System.Activities.Hosting.SymbolResolver.Clear()\n- uid: System.Activities.Hosting.SymbolResolver.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Contains(KeyValuePair<String,Object>)\n  nameWithType: SymbolResolver.Contains(KeyValuePair<String,Object>)\n  fullName: System.Activities.Hosting.SymbolResolver.Contains(KeyValuePair<String,Object>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>\n- uid: System.Activities.Hosting.SymbolResolver.ContainsKey(System.String)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: ContainsKey(String)\n  nameWithType: SymbolResolver.ContainsKey(String)\n  fullName: System.Activities.Hosting.SymbolResolver.ContainsKey(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Hosting.SymbolResolver.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: CopyTo(KeyValuePair<String,Object>,Int32)\n  nameWithType: SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)\n  fullName: System.Activities.Hosting.SymbolResolver.CopyTo(KeyValuePair<String,Object>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Hosting.SymbolResolver.Count\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Count\n  nameWithType: SymbolResolver.Count\n  fullName: System.Activities.Hosting.SymbolResolver.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Activities.Hosting.SymbolResolver.GetEnumerator\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: SymbolResolver.GetEnumerator()\n  fullName: System.Activities.Hosting.SymbolResolver.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<String,Object>>\n  nameWithType: IEnumerator<KeyValuePair<String,Object>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n- uid: System.Activities.Hosting.SymbolResolver.IsReadOnly\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: SymbolResolver.IsReadOnly\n  fullName: System.Activities.Hosting.SymbolResolver.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Hosting.SymbolResolver.Item(System.String)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Item(String)\n  nameWithType: SymbolResolver.Item(String)\n  fullName: System.Activities.Hosting.SymbolResolver.Item(String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Hosting.SymbolResolver.Keys\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Keys\n  nameWithType: SymbolResolver.Keys\n  fullName: System.Activities.Hosting.SymbolResolver.Keys\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n- uid: System.Activities.Hosting.SymbolResolver.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Remove(KeyValuePair<String,Object>)\n  nameWithType: SymbolResolver.Remove(KeyValuePair<String,Object>)\n  fullName: System.Activities.Hosting.SymbolResolver.Remove(KeyValuePair<String,Object>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>\n- uid: System.Activities.Hosting.SymbolResolver.Remove(System.String)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Remove(String)\n  nameWithType: SymbolResolver.Remove(String)\n  fullName: System.Activities.Hosting.SymbolResolver.Remove(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Activities.Hosting.SymbolResolver.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: SymbolResolver.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Activities.Hosting.SymbolResolver.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Activities.Hosting.SymbolResolver.TryGetValue(System.String,System.Object@)\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: TryGetValue(String,Object)\n  nameWithType: SymbolResolver.TryGetValue(String,Object)\n  fullName: System.Activities.Hosting.SymbolResolver.TryGetValue(String,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Hosting.SymbolResolver.Values\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  name: Values\n  nameWithType: SymbolResolver.Values\n  fullName: System.Activities.Hosting.SymbolResolver.Values\n- uid: System.Collections.Generic.ICollection{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<Object>\n  nameWithType: ICollection<Object>\n  fullName: System.Collections.Generic.ICollection<System.Object>\n- uid: System.Activities.Hosting.SymbolResolver.Add*\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  nameWithType: SymbolResolver.\n- uid: System.Activities.Hosting.SymbolResolver.Remove*\n  parent: System.Activities.Hosting.SymbolResolver\n  isExternal: false\n  nameWithType: SymbolResolver.\n"}