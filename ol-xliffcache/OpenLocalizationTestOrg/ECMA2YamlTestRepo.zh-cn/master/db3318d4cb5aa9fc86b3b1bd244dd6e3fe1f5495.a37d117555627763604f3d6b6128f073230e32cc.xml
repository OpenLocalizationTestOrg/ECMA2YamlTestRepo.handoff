{"nodes":[{"pos":[712,737],"content":"PermissionRequestEvidence","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionRequestEvidence","pos":[0,25]}]},{"pos":[1976,2044],"content":"PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)","pos":[0,68]}]},{"pos":[2639,2673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2754,2788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2867,2901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3112,3119],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[3500,3534],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3743,3749],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[4144,4178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4413,4430],"content":"DeniedPermissions","needQuote":true,"needEscape":true,"nodes":[{"content":"DeniedPermissions","pos":[0,17]}]},{"pos":[4810,4844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5083,5102],"content":"OptionalPermissions","needQuote":true,"needEscape":true,"nodes":[{"content":"OptionalPermissions","pos":[0,19]}]},{"pos":[5488,5522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5763,5783],"content":"RequestedPermissions","needQuote":true,"needEscape":true,"nodes":[{"content":"RequestedPermissions","pos":[0,20]}]},{"pos":[6172,6206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6423,6433],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6772,6806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6939,6974],"content":"System.Security.Policy.EvidenceBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Policy.EvidenceBase","pos":[0,35]}]},{"pos":[7215,7283],"content":"PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)","pos":[0,68]}]},{"pos":[7616,7629],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[7793,7806],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[7970,7983],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[8205,8212],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8436,8448],"content":"EvidenceBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EvidenceBase","pos":[0,12]}]},{"pos":[8674,8680],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[8915,8940],"content":"PermissionRequestEvidence","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionRequestEvidence","pos":[0,25]}]},{"pos":[9205,9222],"content":"DeniedPermissions","needQuote":true,"needEscape":true,"nodes":[{"content":"DeniedPermissions","pos":[0,17]}]},{"pos":[9453,9466],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[9702,9721],"content":"OptionalPermissions","needQuote":true,"needEscape":true,"nodes":[{"content":"OptionalPermissions","pos":[0,19]}]},{"pos":[9956,9969],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[10206,10226],"content":"RequestedPermissions","needQuote":true,"needEscape":true,"nodes":[{"content":"RequestedPermissions","pos":[0,20]}]},{"pos":[10463,10476],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[10701,10711],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10903,10909],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.PermissionRequestEvidence\n  id: PermissionRequestEvidence\n  children:\n  - System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System.Security.Policy.PermissionRequestEvidence.Clone\n  - System.Security.Policy.PermissionRequestEvidence.Copy\n  - System.Security.Policy.PermissionRequestEvidence.DeniedPermissions\n  - System.Security.Policy.PermissionRequestEvidence.OptionalPermissions\n  - System.Security.Policy.PermissionRequestEvidence.RequestedPermissions\n  - System.Security.Policy.PermissionRequestEvidence.ToString\n  langs:\n  - csharp\n  name: PermissionRequestEvidence\n  nameWithType: PermissionRequestEvidence\n  fullName: System.Security.Policy.PermissionRequestEvidence\n  type: Class\n  syntax:\n    content: >-\n      [System.Obsolete(\"Assembly level declarative security is obsolete and is no longer enforced by the CLR by default. See http://go.microsoft.com/fwlink/?LinkID=155570 for more information.\")]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class PermissionRequestEvidence : System.Security.Policy.EvidenceBase\n  inheritance:\n  - System.Object\n  - System.Security.Policy.EvidenceBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: '#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)'\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: PermissionRequestEvidence.PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.Security.Policy.PermissionRequestEvidence.PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public PermissionRequestEvidence (System.Security.PermissionSet request, System.Security.PermissionSet optional, System.Security.PermissionSet denied);\n    parameters:\n    - id: request\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optional\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: denied\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.Clone\n  id: Clone\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: PermissionRequestEvidence.Clone()\n  fullName: System.Security.Policy.PermissionRequestEvidence.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.EvidenceBase Clone ();\n    parameters: []\n    return:\n      type: System.Security.Policy.EvidenceBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.Copy\n  id: Copy\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PermissionRequestEvidence.Copy()\n  fullName: System.Security.Policy.PermissionRequestEvidence.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.Policy.PermissionRequestEvidence Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.PermissionRequestEvidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.DeniedPermissions\n  id: DeniedPermissions\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: DeniedPermissions\n  nameWithType: PermissionRequestEvidence.DeniedPermissions\n  fullName: System.Security.Policy.PermissionRequestEvidence.DeniedPermissions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.PermissionSet DeniedPermissions { get; }\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.OptionalPermissions\n  id: OptionalPermissions\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: OptionalPermissions\n  nameWithType: PermissionRequestEvidence.OptionalPermissions\n  fullName: System.Security.Policy.PermissionRequestEvidence.OptionalPermissions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.PermissionSet OptionalPermissions { get; }\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.RequestedPermissions\n  id: RequestedPermissions\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: RequestedPermissions\n  nameWithType: PermissionRequestEvidence.RequestedPermissions\n  fullName: System.Security.Policy.PermissionRequestEvidence.RequestedPermissions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Security.PermissionSet RequestedPermissions { get; }\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.PermissionRequestEvidence.ToString\n  id: ToString\n  parent: System.Security.Policy.PermissionRequestEvidence\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: PermissionRequestEvidence.ToString()\n  fullName: System.Security.Policy.PermissionRequestEvidence.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Policy.EvidenceBase\n  isExternal: false\n  name: System.Security.Policy.EvidenceBase\n- uid: System.Security.Policy.PermissionRequestEvidence.#ctor(System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: PermissionRequestEvidence.PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.Security.Policy.PermissionRequestEvidence.PermissionRequestEvidence(PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PermissionRequestEvidence.Clone\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: Clone()\n  nameWithType: PermissionRequestEvidence.Clone()\n  fullName: System.Security.Policy.PermissionRequestEvidence.Clone()\n- uid: System.Security.Policy.EvidenceBase\n  parent: System.Security.Policy\n  isExternal: false\n  name: EvidenceBase\n  nameWithType: EvidenceBase\n  fullName: System.Security.Policy.EvidenceBase\n- uid: System.Security.Policy.PermissionRequestEvidence.Copy\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: Copy()\n  nameWithType: PermissionRequestEvidence.Copy()\n  fullName: System.Security.Policy.PermissionRequestEvidence.Copy()\n- uid: System.Security.Policy.PermissionRequestEvidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: PermissionRequestEvidence\n  nameWithType: PermissionRequestEvidence\n  fullName: System.Security.Policy.PermissionRequestEvidence\n- uid: System.Security.Policy.PermissionRequestEvidence.DeniedPermissions\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: DeniedPermissions\n  nameWithType: PermissionRequestEvidence.DeniedPermissions\n  fullName: System.Security.Policy.PermissionRequestEvidence.DeniedPermissions\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PermissionRequestEvidence.OptionalPermissions\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: OptionalPermissions\n  nameWithType: PermissionRequestEvidence.OptionalPermissions\n  fullName: System.Security.Policy.PermissionRequestEvidence.OptionalPermissions\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PermissionRequestEvidence.RequestedPermissions\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: RequestedPermissions\n  nameWithType: PermissionRequestEvidence.RequestedPermissions\n  fullName: System.Security.Policy.PermissionRequestEvidence.RequestedPermissions\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.PermissionRequestEvidence.ToString\n  parent: System.Security.Policy.PermissionRequestEvidence\n  isExternal: false\n  name: ToString()\n  nameWithType: PermissionRequestEvidence.ToString()\n  fullName: System.Security.Policy.PermissionRequestEvidence.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}