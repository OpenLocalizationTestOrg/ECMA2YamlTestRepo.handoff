{"nodes":[{"pos":[2502,2513],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[3383,3405],"content":"CompareTo(TextPointer)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(TextPointer)","pos":[0,22]}]},{"pos":[3818,3852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3909,3943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4178,4200],"content":"DeleteTextInRun(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteTextInRun(Int32)","pos":[0,22]}]},{"pos":[4556,4590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4647,4681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4880,4891],"content":"DocumentEnd","needQuote":true,"needEscape":true,"nodes":[{"content":"DocumentEnd","pos":[0,11]}]},{"pos":[5256,5290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5493,5506],"content":"DocumentStart","needQuote":true,"needEscape":true,"nodes":[{"content":"DocumentStart","pos":[0,13]}]},{"pos":[5877,5911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6210,6246],"content":"GetAdjacentElement(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAdjacentElement(LogicalDirection)","pos":[0,36]}]},{"pos":[6736,6770],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6846,6880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7175,7209],"content":"GetCharacterRect(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharacterRect(LogicalDirection)","pos":[0,34]}]},{"pos":[7681,7715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7779,7813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8116,8154],"content":"GetInsertionPosition(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInsertionPosition(LogicalDirection)","pos":[0,38]}]},{"pos":[8655,8689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8770,8804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9049,9076],"content":"GetLineStartPosition(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLineStartPosition(Int32)","pos":[0,27]}]},{"pos":[9480,9514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9595,9629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9973,10006],"content":"GetLineStartPosition(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLineStartPosition(Int32,Int32)","pos":[0,33]}]},{"pos":[10443,10477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10544,10578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10659,10693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11071,11111],"content":"GetNextContextPosition(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNextContextPosition(LogicalDirection)","pos":[0,40]}]},{"pos":[11618,11652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11733,11767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12078,12120],"content":"GetNextInsertionPosition(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNextInsertionPosition(LogicalDirection)","pos":[0,42]}]},{"pos":[12633,12667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12748,12782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13073,13105],"content":"GetOffsetToPosition(TextPointer)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffsetToPosition(TextPointer)","pos":[0,32]}]},{"pos":[13548,13582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13639,13673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13970,14005],"content":"GetPointerContext(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPointerContext(LogicalDirection)","pos":[0,35]}]},{"pos":[14504,14538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14626,14660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14903,14929],"content":"GetPositionAtOffset(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPositionAtOffset(Int32)","pos":[0,26]}]},{"pos":[15332,15366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15447,15481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15878,15921],"content":"GetPositionAtOffset(Int32,LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPositionAtOffset(Int32,LogicalDirection)","pos":[0,43]}]},{"pos":[16411,16445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16539,16573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16654,16688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17045,17075],"content":"GetTextInRun(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTextInRun(LogicalDirection)","pos":[0,30]}]},{"pos":[17522,17556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17614,17648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18078,18127],"content":"GetTextInRun(LogicalDirection,Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTextInRun(LogicalDirection,Char[],Int32,Int32)","pos":[0,49]}]},{"pos":[18655,18689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18756,18790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18856,18890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18951,18985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19042,19076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19434,19468],"content":"GetTextRunLength(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTextRunLength(LogicalDirection)","pos":[0,34]}]},{"pos":[19924,19958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20015,20049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20254,20268],"content":"HasValidLayout","needQuote":true,"needEscape":true,"nodes":[{"content":"HasValidLayout","pos":[0,14]}]},{"pos":[20588,20622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20829,20846],"content":"InsertLineBreak()","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertLineBreak()","pos":[0,17]}]},{"pos":[21239,21273],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21490,21512],"content":"InsertParagraphBreak()","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertParagraphBreak()","pos":[0,22]}]},{"pos":[21920,21954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22191,22214],"content":"InsertTextInRun(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertTextInRun(String)","pos":[0,23]}]},{"pos":[22583,22617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22836,22857],"content":"IsAtInsertionPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAtInsertionPosition","pos":[0,21]}]},{"pos":[23198,23232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23451,23472],"content":"IsAtLineStartPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAtLineStartPosition","pos":[0,21]}]},{"pos":[23813,23847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24132,24161],"content":"IsInSameDocument(TextPointer)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInSameDocument(TextPointer)","pos":[0,29]}]},{"pos":[24604,24638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24697,24731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24940,24956],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[25346,25380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25575,25584],"content":"Paragraph","needQuote":true,"needEscape":true,"nodes":[{"content":"Paragraph","pos":[0,9]}]},{"pos":[25939,25973],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26162,26168],"content":"Parent","needQuote":true,"needEscape":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[26508,26542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26735,26745],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[27073,27107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27245,27285],"content":"System.Windows.Documents.ContentPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Documents.ContentPosition","pos":[0,40]}]},{"pos":[27453,27475],"content":"CompareTo(TextPointer)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(TextPointer)","pos":[0,22]}]},{"pos":[27664,27669],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27824,27835],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[28062,28084],"content":"DeleteTextInRun(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteTextInRun(Int32)","pos":[0,22]}]},{"pos":[28273,28278],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28391,28396],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28575,28586],"content":"DocumentEnd","needQuote":true,"needEscape":true,"nodes":[{"content":"DocumentEnd","pos":[0,11]}]},{"pos":[28795,28806],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[29017,29030],"content":"DocumentStart","needQuote":true,"needEscape":true,"nodes":[{"content":"DocumentStart","pos":[0,13]}]},{"pos":[29243,29254],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[29513,29549],"content":"GetAdjacentElement(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAdjacentElement(LogicalDirection)","pos":[0,36]}]},{"pos":[29792,29808],"content":"DependencyObject","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyObject","pos":[0,16]}]},{"pos":[29998,30014],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[30281,30315],"content":"GetCharacterRect(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharacterRect(LogicalDirection)","pos":[0,34]}]},{"pos":[30542,30546],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[30712,30728],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[30999,31037],"content":"GetInsertionPosition(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInsertionPosition(LogicalDirection)","pos":[0,38]}]},{"pos":[31300,31311],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[31501,31517],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[31759,31786],"content":"GetLineStartPosition(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLineStartPosition(Int32)","pos":[0,27]}]},{"pos":[32027,32038],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[32181,32186],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32402,32435],"content":"GetLineStartPosition(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLineStartPosition(Int32,Int32)","pos":[0,33]}]},{"pos":[32688,32699],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[32842,32847],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32960,32965],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33198,33238],"content":"GetNextContextPosition(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNextContextPosition(LogicalDirection)","pos":[0,40]}]},{"pos":[33505,33516],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[33706,33722],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[33997,34039],"content":"GetNextInsertionPosition(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNextInsertionPosition(LogicalDirection)","pos":[0,42]}]},{"pos":[34310,34321],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[34511,34527],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[34792,34824],"content":"GetOffsetToPosition(TextPointer)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffsetToPosition(TextPointer)","pos":[0,32]}]},{"pos":[35033,35038],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35193,35204],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[35462,35497],"content":"GetPointerContext(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPointerContext(LogicalDirection)","pos":[0,35]}]},{"pos":[35761,35779],"content":"TextPointerContext","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointerContext","pos":[0,18]}]},{"pos":[35983,35999],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[36240,36266],"content":"GetPositionAtOffset(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPositionAtOffset(Int32)","pos":[0,26]}]},{"pos":[36505,36516],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[36659,36664],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36907,36950],"content":"GetPositionAtOffset(Int32,LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPositionAtOffset(Int32,LogicalDirection)","pos":[0,43]}]},{"pos":[37223,37234],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[37377,37382],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37542,37558],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[37821,37851],"content":"GetTextInRun(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTextInRun(LogicalDirection)","pos":[0,30]}]},{"pos":[38057,38063],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38225,38241],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[38544,38593],"content":"GetTextInRun(LogicalDirection,Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTextInRun(LogicalDirection,Char[],Int32,Int32)","pos":[0,49]}]},{"pos":[38836,38841],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39001,39017],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[39169,39173],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[39286,39291],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39404,39409],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39636,39670],"content":"GetTextRunLength(LogicalDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTextRunLength(LogicalDirection)","pos":[0,34]}]},{"pos":[39883,39888],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40048,40064],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[40286,40300],"content":"HasValidLayout","needQuote":true,"needEscape":true,"nodes":[{"content":"HasValidLayout","pos":[0,14]}]},{"pos":[40475,40482],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40669,40686],"content":"InsertLineBreak()","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertLineBreak()","pos":[0,17]}]},{"pos":[40907,40918],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[41136,41158],"content":"InsertParagraphBreak()","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertParagraphBreak()","pos":[0,22]}]},{"pos":[41389,41400],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[41628,41651],"content":"InsertTextInRun(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertTextInRun(String)","pos":[0,23]}]},{"pos":[41843,41849],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42040,42061],"content":"IsAtInsertionPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAtInsertionPosition","pos":[0,21]}]},{"pos":[42250,42257],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42450,42471],"content":"IsAtLineStartPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAtLineStartPosition","pos":[0,21]}]},{"pos":[42660,42667],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42893,42922],"content":"IsInSameDocument(TextPointer)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInSameDocument(TextPointer)","pos":[0,29]}]},{"pos":[43127,43134],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43293,43304],"content":"TextPointer","needQuote":true,"needEscape":true,"nodes":[{"content":"TextPointer","pos":[0,11]}]},{"pos":[43518,43534],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[43758,43774],"content":"LogicalDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalDirection","pos":[0,16]}]},{"pos":[43991,44000],"content":"Paragraph","needQuote":true,"needEscape":true,"nodes":[{"content":"Paragraph","pos":[0,9]}]},{"pos":[44203,44212],"content":"Paragraph","needQuote":true,"needEscape":true,"nodes":[{"content":"Paragraph","pos":[0,9]}]},{"pos":[44412,44418],"content":"Parent","needQuote":true,"needEscape":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[44601,44617],"content":"DependencyObject","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyObject","pos":[0,16]}]},{"pos":[44823,44833],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[44999,45005],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Documents.TextPointer\n  id: TextPointer\n  children:\n  - System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)\n  - System.Windows.Documents.TextPointer.DocumentEnd\n  - System.Windows.Documents.TextPointer.DocumentStart\n  - System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)\n  - System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)\n  - System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)\n  - System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)\n  - System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)\n  - System.Windows.Documents.TextPointer.HasValidLayout\n  - System.Windows.Documents.TextPointer.InsertLineBreak\n  - System.Windows.Documents.TextPointer.InsertParagraphBreak\n  - System.Windows.Documents.TextPointer.InsertTextInRun(System.String)\n  - System.Windows.Documents.TextPointer.IsAtInsertionPosition\n  - System.Windows.Documents.TextPointer.IsAtLineStartPosition\n  - System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)\n  - System.Windows.Documents.TextPointer.LogicalDirection\n  - System.Windows.Documents.TextPointer.Paragraph\n  - System.Windows.Documents.TextPointer.Parent\n  - System.Windows.Documents.TextPointer.ToString\n  langs:\n  - csharp\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n  type: Class\n  syntax:\n    content: 'public class TextPointer : System.Windows.Documents.ContentPosition'\n  inheritance:\n  - System.Object\n  - System.Windows.Documents.ContentPosition\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.Documents.ContentPosition.Missing\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)\n  id: CompareTo(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: CompareTo(TextPointer)\n  nameWithType: TextPointer.CompareTo(TextPointer)\n  fullName: System.Windows.Documents.TextPointer.CompareTo(TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int CompareTo (System.Windows.Documents.TextPointer position);\n    parameters:\n    - id: position\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)\n  id: DeleteTextInRun(System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: DeleteTextInRun(Int32)\n  nameWithType: TextPointer.DeleteTextInRun(Int32)\n  fullName: System.Windows.Documents.TextPointer.DeleteTextInRun(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int DeleteTextInRun (int count);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.DocumentEnd\n  id: DocumentEnd\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: DocumentEnd\n  nameWithType: TextPointer.DocumentEnd\n  fullName: System.Windows.Documents.TextPointer.DocumentEnd\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer DocumentEnd { get; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.DocumentStart\n  id: DocumentStart\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: DocumentStart\n  nameWithType: TextPointer.DocumentStart\n  fullName: System.Windows.Documents.TextPointer.DocumentStart\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer DocumentStart { get; }\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)\n  id: GetAdjacentElement(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetAdjacentElement(LogicalDirection)\n  nameWithType: TextPointer.GetAdjacentElement(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetAdjacentElement(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.DependencyObject\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)\n  id: GetCharacterRect(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetCharacterRect(LogicalDirection)\n  nameWithType: TextPointer.GetCharacterRect(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetCharacterRect(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)\n  id: GetInsertionPosition(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetInsertionPosition(LogicalDirection)\n  nameWithType: TextPointer.GetInsertionPosition(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetInsertionPosition(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)\n  id: GetLineStartPosition(System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetLineStartPosition(Int32)\n  nameWithType: TextPointer.GetLineStartPosition(Int32)\n  fullName: System.Windows.Documents.TextPointer.GetLineStartPosition(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetLineStartPosition (int count);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  overload: System.Windows.Documents.TextPointer.GetLineStartPosition*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)\n  id: GetLineStartPosition(System.Int32,System.Int32@)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetLineStartPosition(Int32,Int32)\n  nameWithType: TextPointer.GetLineStartPosition(Int32,Int32)\n  fullName: System.Windows.Documents.TextPointer.GetLineStartPosition(Int32,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: actualCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  overload: System.Windows.Documents.TextPointer.GetLineStartPosition*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)\n  id: GetNextContextPosition(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetNextContextPosition(LogicalDirection)\n  nameWithType: TextPointer.GetNextContextPosition(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetNextContextPosition(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)\n  id: GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetNextInsertionPosition(LogicalDirection)\n  nameWithType: TextPointer.GetNextInsertionPosition(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetNextInsertionPosition(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)\n  id: GetOffsetToPosition(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetOffsetToPosition(TextPointer)\n  nameWithType: TextPointer.GetOffsetToPosition(TextPointer)\n  fullName: System.Windows.Documents.TextPointer.GetOffsetToPosition(TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);\n    parameters:\n    - id: position\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)\n  id: GetPointerContext(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetPointerContext(LogicalDirection)\n  nameWithType: TextPointer.GetPointerContext(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetPointerContext(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointerContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)\n  id: GetPositionAtOffset(System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetPositionAtOffset(Int32)\n  nameWithType: TextPointer.GetPositionAtOffset(Int32)\n  fullName: System.Windows.Documents.TextPointer.GetPositionAtOffset(Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  overload: System.Windows.Documents.TextPointer.GetPositionAtOffset*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)\n  id: GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetPositionAtOffset(Int32,LogicalDirection)\n  nameWithType: TextPointer.GetPositionAtOffset(Int32,LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetPositionAtOffset(Int32,LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  overload: System.Windows.Documents.TextPointer.GetPositionAtOffset*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)\n  id: GetTextInRun(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetTextInRun(LogicalDirection)\n  nameWithType: TextPointer.GetTextInRun(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetTextInRun(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Documents.TextPointer.GetTextInRun*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)\n  id: GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetTextInRun(LogicalDirection,Char[],Int32,Int32)\n  nameWithType: TextPointer.GetTextInRun(LogicalDirection,Char[],Int32,Int32)\n  fullName: System.Windows.Documents.TextPointer.GetTextInRun(LogicalDirection,Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    - id: textBuffer\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Windows.Documents.TextPointer.GetTextInRun*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)\n  id: GetTextRunLength(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: GetTextRunLength(LogicalDirection)\n  nameWithType: TextPointer.GetTextRunLength(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetTextRunLength(LogicalDirection)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);\n    parameters:\n    - id: direction\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.HasValidLayout\n  id: HasValidLayout\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: HasValidLayout\n  nameWithType: TextPointer.HasValidLayout\n  fullName: System.Windows.Documents.TextPointer.HasValidLayout\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool HasValidLayout { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.InsertLineBreak\n  id: InsertLineBreak\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: InsertLineBreak()\n  nameWithType: TextPointer.InsertLineBreak()\n  fullName: System.Windows.Documents.TextPointer.InsertLineBreak()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer InsertLineBreak ();\n    parameters: []\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.InsertParagraphBreak\n  id: InsertParagraphBreak\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: InsertParagraphBreak()\n  nameWithType: TextPointer.InsertParagraphBreak()\n  fullName: System.Windows.Documents.TextPointer.InsertParagraphBreak()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.TextPointer InsertParagraphBreak ();\n    parameters: []\n    return:\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.InsertTextInRun(System.String)\n  id: InsertTextInRun(System.String)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: InsertTextInRun(String)\n  nameWithType: TextPointer.InsertTextInRun(String)\n  fullName: System.Windows.Documents.TextPointer.InsertTextInRun(String)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public void InsertTextInRun (string textData);\n    parameters:\n    - id: textData\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.IsAtInsertionPosition\n  id: IsAtInsertionPosition\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: IsAtInsertionPosition\n  nameWithType: TextPointer.IsAtInsertionPosition\n  fullName: System.Windows.Documents.TextPointer.IsAtInsertionPosition\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool IsAtInsertionPosition { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.IsAtLineStartPosition\n  id: IsAtLineStartPosition\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: IsAtLineStartPosition\n  nameWithType: TextPointer.IsAtLineStartPosition\n  fullName: System.Windows.Documents.TextPointer.IsAtLineStartPosition\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool IsAtLineStartPosition { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)\n  id: IsInSameDocument(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: IsInSameDocument(TextPointer)\n  nameWithType: TextPointer.IsInSameDocument(TextPointer)\n  fullName: System.Windows.Documents.TextPointer.IsInSameDocument(TextPointer)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);\n    parameters:\n    - id: textPosition\n      type: System.Windows.Documents.TextPointer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.LogicalDirection\n  id: LogicalDirection\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: LogicalDirection\n  nameWithType: TextPointer.LogicalDirection\n  fullName: System.Windows.Documents.TextPointer.LogicalDirection\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.LogicalDirection LogicalDirection { get; }\n    return:\n      type: System.Windows.Documents.LogicalDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.Paragraph\n  id: Paragraph\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: Paragraph\n  nameWithType: TextPointer.Paragraph\n  fullName: System.Windows.Documents.TextPointer.Paragraph\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.Documents.Paragraph Paragraph { get; }\n    return:\n      type: System.Windows.Documents.Paragraph\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.Parent\n  id: Parent\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: TextPointer.Parent\n  fullName: System.Windows.Documents.TextPointer.Parent\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public System.Windows.DependencyObject Parent { get; }\n    return:\n      type: System.Windows.DependencyObject\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Documents.TextPointer.ToString\n  id: ToString\n  parent: System.Windows.Documents.TextPointer\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: TextPointer.ToString()\n  fullName: System.Windows.Documents.TextPointer.ToString()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Documents\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Documents.ContentPosition\n  isExternal: false\n  name: System.Windows.Documents.ContentPosition\n- uid: System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: CompareTo(TextPointer)\n  nameWithType: TextPointer.CompareTo(TextPointer)\n  fullName: System.Windows.Documents.TextPointer.CompareTo(TextPointer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: DeleteTextInRun(Int32)\n  nameWithType: TextPointer.DeleteTextInRun(Int32)\n  fullName: System.Windows.Documents.TextPointer.DeleteTextInRun(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer.DocumentEnd\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: DocumentEnd\n  nameWithType: TextPointer.DocumentEnd\n  fullName: System.Windows.Documents.TextPointer.DocumentEnd\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.DocumentStart\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: DocumentStart\n  nameWithType: TextPointer.DocumentStart\n  fullName: System.Windows.Documents.TextPointer.DocumentStart\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetAdjacentElement(LogicalDirection)\n  nameWithType: TextPointer.GetAdjacentElement(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetAdjacentElement(LogicalDirection)\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: true\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetCharacterRect(LogicalDirection)\n  nameWithType: TextPointer.GetCharacterRect(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetCharacterRect(LogicalDirection)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetInsertionPosition(LogicalDirection)\n  nameWithType: TextPointer.GetInsertionPosition(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetInsertionPosition(LogicalDirection)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetLineStartPosition(Int32)\n  nameWithType: TextPointer.GetLineStartPosition(Int32)\n  fullName: System.Windows.Documents.TextPointer.GetLineStartPosition(Int32)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetLineStartPosition(Int32,Int32)\n  nameWithType: TextPointer.GetLineStartPosition(Int32,Int32)\n  fullName: System.Windows.Documents.TextPointer.GetLineStartPosition(Int32,Int32)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetNextContextPosition(LogicalDirection)\n  nameWithType: TextPointer.GetNextContextPosition(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetNextContextPosition(LogicalDirection)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetNextInsertionPosition(LogicalDirection)\n  nameWithType: TextPointer.GetNextInsertionPosition(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetNextInsertionPosition(LogicalDirection)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetOffsetToPosition(TextPointer)\n  nameWithType: TextPointer.GetOffsetToPosition(TextPointer)\n  fullName: System.Windows.Documents.TextPointer.GetOffsetToPosition(TextPointer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetPointerContext(LogicalDirection)\n  nameWithType: TextPointer.GetPointerContext(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetPointerContext(LogicalDirection)\n- uid: System.Windows.Documents.TextPointerContext\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointerContext\n  nameWithType: TextPointerContext\n  fullName: System.Windows.Documents.TextPointerContext\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetPositionAtOffset(Int32)\n  nameWithType: TextPointer.GetPositionAtOffset(Int32)\n  fullName: System.Windows.Documents.TextPointer.GetPositionAtOffset(Int32)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetPositionAtOffset(Int32,LogicalDirection)\n  nameWithType: TextPointer.GetPositionAtOffset(Int32,LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetPositionAtOffset(Int32,LogicalDirection)\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetTextInRun(LogicalDirection)\n  nameWithType: TextPointer.GetTextInRun(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetTextInRun(LogicalDirection)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetTextInRun(LogicalDirection,Char[],Int32,Int32)\n  nameWithType: TextPointer.GetTextInRun(LogicalDirection,Char[],Int32,Int32)\n  fullName: System.Windows.Documents.TextPointer.GetTextInRun(LogicalDirection,Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: GetTextRunLength(LogicalDirection)\n  nameWithType: TextPointer.GetTextRunLength(LogicalDirection)\n  fullName: System.Windows.Documents.TextPointer.GetTextRunLength(LogicalDirection)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.HasValidLayout\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: HasValidLayout\n  nameWithType: TextPointer.HasValidLayout\n  fullName: System.Windows.Documents.TextPointer.HasValidLayout\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextPointer.InsertLineBreak\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: InsertLineBreak()\n  nameWithType: TextPointer.InsertLineBreak()\n  fullName: System.Windows.Documents.TextPointer.InsertLineBreak()\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.InsertParagraphBreak\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: InsertParagraphBreak()\n  nameWithType: TextPointer.InsertParagraphBreak()\n  fullName: System.Windows.Documents.TextPointer.InsertParagraphBreak()\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.InsertTextInRun(System.String)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: InsertTextInRun(String)\n  nameWithType: TextPointer.InsertTextInRun(String)\n  fullName: System.Windows.Documents.TextPointer.InsertTextInRun(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Documents.TextPointer.IsAtInsertionPosition\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: IsAtInsertionPosition\n  nameWithType: TextPointer.IsAtInsertionPosition\n  fullName: System.Windows.Documents.TextPointer.IsAtInsertionPosition\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextPointer.IsAtLineStartPosition\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: IsAtLineStartPosition\n  nameWithType: TextPointer.IsAtLineStartPosition\n  fullName: System.Windows.Documents.TextPointer.IsAtLineStartPosition\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: IsInSameDocument(TextPointer)\n  nameWithType: TextPointer.IsInSameDocument(TextPointer)\n  fullName: System.Windows.Documents.TextPointer.IsInSameDocument(TextPointer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Documents.TextPointer\n  parent: System.Windows.Documents\n  isExternal: false\n  name: TextPointer\n  nameWithType: TextPointer\n  fullName: System.Windows.Documents.TextPointer\n- uid: System.Windows.Documents.TextPointer.LogicalDirection\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: TextPointer.LogicalDirection\n  fullName: System.Windows.Documents.TextPointer.LogicalDirection\n- uid: System.Windows.Documents.LogicalDirection\n  parent: System.Windows.Documents\n  isExternal: false\n  name: LogicalDirection\n  nameWithType: LogicalDirection\n  fullName: System.Windows.Documents.LogicalDirection\n- uid: System.Windows.Documents.TextPointer.Paragraph\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: Paragraph\n  nameWithType: TextPointer.Paragraph\n  fullName: System.Windows.Documents.TextPointer.Paragraph\n- uid: System.Windows.Documents.Paragraph\n  parent: System.Windows.Documents\n  isExternal: false\n  name: Paragraph\n  nameWithType: Paragraph\n  fullName: System.Windows.Documents.Paragraph\n- uid: System.Windows.Documents.TextPointer.Parent\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: Parent\n  nameWithType: TextPointer.Parent\n  fullName: System.Windows.Documents.TextPointer.Parent\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: true\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Documents.TextPointer.ToString\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  name: ToString()\n  nameWithType: TextPointer.ToString()\n  fullName: System.Windows.Documents.TextPointer.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Documents.TextPointer.GetLineStartPosition*\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  nameWithType: TextPointer.\n- uid: System.Windows.Documents.TextPointer.GetPositionAtOffset*\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  nameWithType: TextPointer.\n- uid: System.Windows.Documents.TextPointer.GetTextInRun*\n  parent: System.Windows.Documents.TextPointer\n  isExternal: false\n  nameWithType: TextPointer.\n"}