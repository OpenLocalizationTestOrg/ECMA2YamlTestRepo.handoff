{"nodes":[{"pos":[1770,1784],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[2154,2188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3799,3832],"content":"ObjectQuery(String,ObjectContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectQuery(String,ObjectContext)","pos":[0,33]}]},{"pos":[4259,4293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4377,4411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4756,4801],"content":"ObjectQuery(String,ObjectContext,MergeOption)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectQuery(String,ObjectContext,MergeOption)","pos":[0,45]}]},{"pos":[5297,5331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5415,5449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5535,5569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5756,5766],"content":"Distinct()","needQuote":true,"needEscape":true,"nodes":[{"content":"Distinct()","pos":[0,10]}]},{"pos":[6126,6160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6413,6435],"content":"Except(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Except(ObjectQuery<T>)"},{"pos":[6858,6892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6970,7004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7255,7275],"content":"Execute(MergeOption)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(MergeOption)","pos":[0,20]}]},{"pos":[7703,7737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7816,7850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8169,8209],"content":"GroupBy(String,String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBy(String,String,ObjectParameter[])","pos":[0,40]}]},{"pos":[8718,8752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8819,8853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8944,8978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9087,9121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9336,9351],"content":"Include(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Include(String)","pos":[0,15]}]},{"pos":[9711,9745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9823,9857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10116,10141],"content":"Intersect(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Intersect(ObjectQuery<T>)"},{"pos":[10573,10607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10685,10719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10898,10902],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[11191,11225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11414,11422],"content":"OfType()","needQuote":true,"needEscape":true,"nodes":[{"content":"OfType()","pos":[0,8]}]},{"pos":[11810,11844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12135,12168],"content":"OrderBy(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderBy(String,ObjectParameter[])","pos":[0,33]}]},{"pos":[12614,12648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12739,12773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12851,12885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13174,13206],"content":"Select(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Select(String,ObjectParameter[])","pos":[0,32]}]},{"pos":[13691,13725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13816,13850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13959,13993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14298,14335],"content":"SelectValue(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectValue(String,ObjectParameter[])","pos":[0,37]}]},{"pos":[14828,14862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14953,14987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15076,15110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15423,15460],"content":"Skip(String,String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Skip(String,String,ObjectParameter[])","pos":[0,37]}]},{"pos":[15925,15959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16021,16055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16146,16180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16258,16292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16587,16627],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[17074,17108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17391,17420],"content":"Top(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Top(String,ObjectParameter[])","pos":[0,29]}]},{"pos":[17856,17890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17981,18015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18093,18127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18378,18399],"content":"Union(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Union(ObjectQuery<T>)"},{"pos":[18819,18853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18931,18965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19222,19246],"content":"UnionAll(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"UnionAll(ObjectQuery<T>)"},{"pos":[19675,19709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19787,19821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20108,20139],"content":"Where(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Where(String,ObjectParameter[])","pos":[0,31]}]},{"pos":[20589,20623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20714,20748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20826,20860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20989,21020],"content":"System.Data.Objects.ObjectQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Data.Objects.ObjectQuery","pos":[0,31]}]},{"pos":[21189,21222],"content":"ObjectQuery(String,ObjectContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectQuery(String,ObjectContext)","pos":[0,33]}]},{"pos":[21435,21441],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21590,21603],"content":"ObjectContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectContext","pos":[0,13]}]},{"pos":[21880,21925],"content":"ObjectQuery(String,ObjectContext,MergeOption)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectQuery(String,ObjectContext,MergeOption)","pos":[0,45]}]},{"pos":[22162,22168],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22317,22330],"content":"ObjectContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectContext","pos":[0,13]}]},{"pos":[22504,22515],"content":"MergeOption","needQuote":true,"needEscape":true,"nodes":[{"content":"MergeOption","pos":[0,11]}]},{"pos":[22710,22720],"content":"Distinct()","needQuote":true,"needEscape":true,"nodes":[{"content":"Distinct()","pos":[0,10]}]},{"pos":[22920,22934],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[23168,23190],"content":"Except(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Except(ObjectQuery<T>)"},{"pos":[23414,23428],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[23606,23620],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[23853,23873],"content":"Execute(MergeOption)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(MergeOption)","pos":[0,20]}]},{"pos":[24094,24109],"content":"ObjectResult<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectResult<T>"},{"pos":[24287,24298],"content":"MergeOption","needQuote":true,"needEscape":true,"nodes":[{"content":"MergeOption","pos":[0,11]}]},{"pos":[24559,24599],"content":"GroupBy(String,String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBy(String,String,ObjectParameter[])","pos":[0,40]}]},{"pos":[24890,24915],"content":"ObjectQuery<ph id=\"ph1\">&lt;DbDataRecord&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<DbDataRecord>"},{"pos":[25101,25107],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25223,25229],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25380,25395],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]},{"pos":[25614,25629],"content":"Include(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Include(String)","pos":[0,15]}]},{"pos":[25839,25853],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[25998,26004],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26212,26237],"content":"Intersect(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Intersect(ObjectQuery<T>)"},{"pos":[26467,26481],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[26659,26673],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[26870,26874],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[27029,27035],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27208,27216],"content":"OfType()","needQuote":true,"needEscape":true,"nodes":[{"content":"OfType()","pos":[0,8]}]},{"pos":[27423,27447],"content":"ObjectQuery<ph id=\"ph1\">&lt;TResultType&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<TResultType>"},{"pos":[27720,27753],"content":"OrderBy(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderBy(String,ObjectParameter[])","pos":[0,33]}]},{"pos":[27999,28013],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[28158,28164],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28315,28330],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]},{"pos":[28586,28618],"content":"Select(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Select(String,ObjectParameter[])","pos":[0,32]}]},{"pos":[28893,28918],"content":"ObjectQuery<ph id=\"ph1\">&lt;DbDataRecord&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<DbDataRecord>"},{"pos":[29104,29110],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29261,29276],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]},{"pos":[29540,29577],"content":"SelectValue(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectValue(String,ObjectParameter[])","pos":[0,37]}]},{"pos":[29842,29866],"content":"ObjectQuery<ph id=\"ph1\">&lt;TResultType&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<TResultType>"},{"pos":[30031,30037],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30188,30203],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]},{"pos":[30471,30508],"content":"Skip(String,String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Skip(String,String,ObjectParameter[])","pos":[0,37]}]},{"pos":[30762,30776],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[30921,30927],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31043,31049],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31200,31215],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]},{"pos":[31467,31507],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[31781,31795],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[32051,32080],"content":"Top(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Top(String,ObjectParameter[])","pos":[0,29]}]},{"pos":[32318,32332],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[32477,32483],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32634,32649],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]},{"pos":[32886,32907],"content":"Union(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Union(ObjectQuery<T>)"},{"pos":[33129,33143],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[33321,33335],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[33571,33595],"content":"UnionAll(ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"UnionAll(ObjectQuery<T>)"},{"pos":[33823,33837],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[34015,34029],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[34280,34311],"content":"Where(String,ObjectParameter[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Where(String,ObjectParameter[])","pos":[0,31]}]},{"pos":[34553,34567],"content":"ObjectQuery<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ObjectQuery<T>"},{"pos":[34712,34718],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34869,34884],"content":"ObjectParameter","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectParameter","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Objects.ObjectQuery`1\n  id: ObjectQuery`1\n  children:\n  - System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  - System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectQuery`1.Distinct\n  - System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  - System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Include(System.String)\n  - System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.Name\n  - System.Data.Objects.ObjectQuery`1.OfType``1\n  - System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  - System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery`1)\n  - System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  langs:\n  - csharp\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n  type: Class\n  syntax:\n    content: 'public class ObjectQuery<T> : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable<T>, System.ComponentModel.IListSource, System.Linq.IOrderedQueryable<T>, System.Linq.IQueryable<T>'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.Data.Objects.ObjectQuery\n  implements:\n  - System.Collections.Generic.IEnumerable<T>\n  - System.ComponentModel.IListSource\n  - System.Linq.IOrderedQueryable<T>\n  - System.Linq.IQueryable<T>\n  inheritedMembers:\n  - System.Data.Objects.ObjectQuery.CommandText\n  - System.Data.Objects.ObjectQuery.Context\n  - System.Data.Objects.ObjectQuery.EnablePlanCaching\n  - System.Data.Objects.ObjectQuery.GetResultType\n  - System.Data.Objects.ObjectQuery.MergeOption\n  - System.Data.Objects.ObjectQuery.Parameters\n  - System.Data.Objects.ObjectQuery.System#Collections#IEnumerable#GetEnumerator\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#ContainsListCollection\n  - System.Data.Objects.ObjectQuery.System#ComponentModel#IListSource#GetList\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#ElementType\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Expression\n  - System.Data.Objects.ObjectQuery.System#Linq#IQueryable#Provider\n  - System.Data.Objects.ObjectQuery.ToTraceString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  id: '#ctor(System.String,System.Data.Objects.ObjectContext)'\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: ObjectQuery(String,ObjectContext)\n  nameWithType: ObjectQuery<T>.ObjectQuery(String,ObjectContext)\n  fullName: System.Data.Objects.ObjectQuery<T>.ObjectQuery(String,ObjectContext)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: Parameter description to be filled\n    - id: context\n      type: System.Data.Objects.ObjectContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  id: '#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)'\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: ObjectQuery(String,ObjectContext,MergeOption)\n  nameWithType: ObjectQuery<T>.ObjectQuery(String,ObjectContext,MergeOption)\n  fullName: System.Data.Objects.ObjectQuery<T>.ObjectQuery(String,ObjectContext,MergeOption)\n  type: Constructor\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: commandText\n      type: System.String\n      description: Parameter description to be filled\n    - id: context\n      type: System.Data.Objects.ObjectContext\n      description: Parameter description to be filled\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Distinct\n  id: Distinct\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Distinct()\n  nameWithType: ObjectQuery<T>.Distinct()\n  fullName: System.Data.Objects.ObjectQuery<T>.Distinct()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Distinct ();\n    parameters: []\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery`1)\n  id: Except(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Except(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Except(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.Except(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Except (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  id: Execute(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Execute(MergeOption)\n  nameWithType: ObjectQuery<T>.Execute(MergeOption)\n  fullName: System.Data.Objects.ObjectQuery<T>.Execute(MergeOption)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectResult<T> Execute (System.Data.Objects.MergeOption mergeOption);\n    parameters:\n    - id: mergeOption\n      type: System.Data.Objects.MergeOption\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectResult`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  id: GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: GroupBy(String,String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.GroupBy(String,String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.GroupBy(String,String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord> GroupBy (string keys, string projection, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: keys\n      type: System.String\n      description: Parameter description to be filled\n    - id: projection\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)\n  id: Include(System.String)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Include(String)\n  nameWithType: ObjectQuery<T>.Include(String)\n  fullName: System.Data.Objects.ObjectQuery<T>.Include(String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Include (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery`1)\n  id: Intersect(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Intersect(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Intersect (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Name\n  id: Name\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ObjectQuery<T>.Name\n  fullName: System.Data.Objects.ObjectQuery<T>.Name\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.OfType``1\n  id: OfType``1\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: OfType()\n  nameWithType: ObjectQuery<T>.OfType()\n  fullName: System.Data.Objects.ObjectQuery<T>.OfType()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<TResultType> OfType<TResultType> ();\n    parameters: []\n    return:\n      type: System.Data.Objects.ObjectQuery{TResultType}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  id: OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: OrderBy(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.OrderBy(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.OrderBy(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> OrderBy (string keys, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: keys\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  id: Select(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Select(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Select(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Select(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord> Select (string projection, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: projection\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  id: SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: SelectValue(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.SelectValue(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.SelectValue(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<TResultType> SelectValue<TResultType> (string projection, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: projection\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery{TResultType}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  id: Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Skip(String,String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Skip(String,String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Skip(String,String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Skip (string keys, string count, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: keys\n      type: System.String\n      description: Parameter description to be filled\n    - id: count\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: ObjectQuery<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Data.Objects.ObjectQuery<T>.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  id: Top(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Top(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Top(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Top(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Top (string count, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: count\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery`1)\n  id: Union(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Union(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Union(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.Union(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Union (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery`1)\n  id: UnionAll(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: UnionAll(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> UnionAll (System.Data.Objects.ObjectQuery<T> query);\n    parameters:\n    - id: query\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  id: Where(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  langs:\n  - csharp\n  name: Where(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Where(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Where(String,ObjectParameter[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Objects\n  syntax:\n    content: public System.Data.Objects.ObjectQuery<T> Where (string predicate, System.Data.Objects.ObjectParameter[] parameters);\n    parameters:\n    - id: predicate\n      type: System.String\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Data.Objects.ObjectParameter[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Objects.ObjectQuery`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Data.Objects.ObjectQuery\n  isExternal: false\n  name: System.Data.Objects.ObjectQuery\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: ObjectQuery(String,ObjectContext)\n  nameWithType: ObjectQuery<T>.ObjectQuery(String,ObjectContext)\n  fullName: System.Data.Objects.ObjectQuery<T>.ObjectQuery(String,ObjectContext)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectContext\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectContext\n  nameWithType: ObjectContext\n  fullName: System.Data.Objects.ObjectContext\n- uid: System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: ObjectQuery(String,ObjectContext,MergeOption)\n  nameWithType: ObjectQuery<T>.ObjectQuery(String,ObjectContext,MergeOption)\n  fullName: System.Data.Objects.ObjectQuery<T>.ObjectQuery(String,ObjectContext,MergeOption)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectContext\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectContext\n  nameWithType: ObjectContext\n  fullName: System.Data.Objects.ObjectContext\n- uid: System.Data.Objects.MergeOption\n  parent: System.Data.Objects\n  isExternal: false\n  name: MergeOption\n  nameWithType: MergeOption\n  fullName: System.Data.Objects.MergeOption\n- uid: System.Data.Objects.ObjectQuery`1.Distinct\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Distinct()\n  nameWithType: ObjectQuery<T>.Distinct()\n  fullName: System.Data.Objects.ObjectQuery<T>.Distinct()\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Except(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Except(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.Except(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Execute(MergeOption)\n  nameWithType: ObjectQuery<T>.Execute(MergeOption)\n  fullName: System.Data.Objects.ObjectQuery<T>.Execute(MergeOption)\n- uid: System.Data.Objects.ObjectResult`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectResult<T>\n  nameWithType: ObjectResult<T>\n  fullName: System.Data.Objects.ObjectResult<T>\n- uid: System.Data.Objects.MergeOption\n  parent: System.Data.Objects\n  isExternal: false\n  name: MergeOption\n  nameWithType: MergeOption\n  fullName: System.Data.Objects.MergeOption\n- uid: System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: GroupBy(String,String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.GroupBy(String,String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.GroupBy(String,String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<DbDataRecord>\n  nameWithType: ObjectQuery<DbDataRecord>\n  fullName: System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n- uid: System.Data.Objects.ObjectQuery`1.Include(System.String)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Include(String)\n  nameWithType: ObjectQuery<T>.Include(String)\n  fullName: System.Data.Objects.ObjectQuery<T>.Include(String)\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Intersect(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Intersect(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.Intersect(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1.Name\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Name\n  nameWithType: ObjectQuery<T>.Name\n  fullName: System.Data.Objects.ObjectQuery<T>.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectQuery`1.OfType``1\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OfType()\n  nameWithType: ObjectQuery<T>.OfType()\n  fullName: System.Data.Objects.ObjectQuery<T>.OfType()\n- uid: System.Data.Objects.ObjectQuery{TResultType}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<TResultType>\n  nameWithType: ObjectQuery<TResultType>\n  fullName: System.Data.Objects.ObjectQuery<TResultType>\n- uid: System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: OrderBy(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.OrderBy(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.OrderBy(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n- uid: System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Select(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Select(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Select(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery{System.Data.Common.DbDataRecord}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<DbDataRecord>\n  nameWithType: ObjectQuery<DbDataRecord>\n  fullName: System.Data.Objects.ObjectQuery<System.Data.Common.DbDataRecord>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n- uid: System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: SelectValue(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.SelectValue(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.SelectValue(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery{TResultType}\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<TResultType>\n  nameWithType: ObjectQuery<TResultType>\n  fullName: System.Data.Objects.ObjectQuery<TResultType>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n- uid: System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Skip(String,String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Skip(String,String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Skip(String,String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n- uid: System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: ObjectQuery<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Data.Objects.ObjectQuery<T>.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Top(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Top(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Top(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n- uid: System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Union(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.Union(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.Union(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery`1)\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: UnionAll(ObjectQuery<T>)\n  nameWithType: ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n  fullName: System.Data.Objects.ObjectQuery<T>.UnionAll(ObjectQuery<T>)\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])\n  parent: System.Data.Objects.ObjectQuery`1\n  isExternal: false\n  name: Where(String,ObjectParameter[])\n  nameWithType: ObjectQuery<T>.Where(String,ObjectParameter[])\n  fullName: System.Data.Objects.ObjectQuery<T>.Where(String,ObjectParameter[])\n- uid: System.Data.Objects.ObjectQuery`1\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectQuery<T>\n  nameWithType: ObjectQuery<T>\n  fullName: System.Data.Objects.ObjectQuery<T>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Objects.ObjectParameter\n  parent: System.Data.Objects\n  isExternal: false\n  name: ObjectParameter\n  nameWithType: ObjectParameter\n  fullName: System.Data.Objects.ObjectParameter[]\n"}