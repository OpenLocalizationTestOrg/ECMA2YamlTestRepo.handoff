{"nodes":[{"pos":[374,396],"content":"IEnumeratorContract<ph id=\"ph1\">&lt;C&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumeratorContract<C>"},{"pos":[693,727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1012,1024],"content":"GetCurrent()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrent()","pos":[0,12]}]},{"pos":[1372,1406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1637,1647],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[2005,2039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2264,2271],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[2791,2803],"content":"GetCurrent()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrent()","pos":[0,12]}]},{"pos":[2987,2988],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[3187,3197],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[3395,3402],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[3617,3624],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  id: IEnumeratorContract`1\n  children:\n  - System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent\n  - System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext\n  - System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset\n  langs:\n  - csharp\n  name: IEnumeratorContract<C>\n  nameWithType: IEnumeratorContract<C>\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>\n  type: Interface\n  syntax:\n    content: 'public interface IEnumeratorContract<C> : System.AddIn.Contract.IContract where C : IContract'\n    typeParameters:\n    - id: C\n      description: Parameter description to be filled\n  implements:\n  - System.AddIn.Contract.IContract\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent\n  id: GetCurrent\n  parent: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  langs:\n  - csharp\n  name: GetCurrent()\n  nameWithType: IEnumeratorContract<C>.GetCurrent()\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>.GetCurrent()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public C GetCurrent ();\n    parameters: []\n    return:\n      type: C\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext\n  id: MoveNext\n  parent: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: IEnumeratorContract<C>.MoveNext()\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>.MoveNext()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset\n  id: Reset\n  parent: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: IEnumeratorContract<C>.Reset()\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>.Reset()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1.GetCurrent\n  parent: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  isExternal: false\n  name: GetCurrent()\n  nameWithType: IEnumeratorContract<C>.GetCurrent()\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>.GetCurrent()\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1.MoveNext\n  parent: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  isExternal: false\n  name: MoveNext()\n  nameWithType: IEnumeratorContract<C>.MoveNext()\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.Collections.IEnumeratorContract`1.Reset\n  parent: System.AddIn.Contract.Collections.IEnumeratorContract`1\n  isExternal: false\n  name: Reset()\n  nameWithType: IEnumeratorContract<C>.Reset()\n  fullName: System.AddIn.Contract.Collections.IEnumeratorContract<C>.Reset()\n"}