{"nodes":[{"pos":[3672,3685],"content":"TypeDelegator","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeDelegator","pos":[0,13]}]},{"pos":[13722,13737],"content":"TypeDelegator()","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeDelegator()","pos":[0,15]}]},{"pos":[14196,14215],"content":"TypeDelegator(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeDelegator(Type)","pos":[0,19]}]},{"pos":[14559,14593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14776,14784],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[15106,15140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15349,15370],"content":"AssemblyQualifiedName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyQualifiedName","pos":[0,21]}]},{"pos":[15698,15732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15915,15923],"content":"BaseType","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseType","pos":[0,8]}]},{"pos":[16208,16242],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16425,16433],"content":"FullName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[16722,16756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16965,16988],"content":"GetAttributeFlagsImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAttributeFlagsImpl()","pos":[0,23]}]},{"pos":[17380,17414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17909,17994],"content":"GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,85]}]},{"pos":[18704,18738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18812,18846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18940,18974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19036,19070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19160,19194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19272,19306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19567,19596],"content":"GetConstructors(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetConstructors(BindingFlags)","pos":[0,29]}]},{"pos":[20041,20075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20155,20189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20426,20454],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[20824,20858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20918,20952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21278,21311],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[21714,21748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21813,21847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21907,21941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22201,22217],"content":"GetElementType()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetElementType()","pos":[0,16]}]},{"pos":[22536,22570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22845,22874],"content":"GetEvent(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEvent(String,BindingFlags)","pos":[0,29]}]},{"pos":[23293,23327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23412,23446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23518,23552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23737,23748],"content":"GetEvents()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEvents()","pos":[0,11]}]},{"pos":[24095,24129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24433,24456],"content":"GetEvents(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEvents(BindingFlags)","pos":[0,23]}]},{"pos":[24877,24911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24985,25019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25349,25378],"content":"GetField(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetField(String,BindingFlags)","pos":[0,29]}]},{"pos":[25797,25831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25916,25950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26022,26056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26305,26328],"content":"GetFields(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[26749,26783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26857,26891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27142,27170],"content":"GetInterface(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInterface(String,Boolean)","pos":[0,28]}]},{"pos":[27541,27575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27643,27677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27733,27767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27990,28011],"content":"GetInterfaceMap(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInterfaceMap(Type)","pos":[0,21]}]},{"pos":[28398,28432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28511,28545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28738,28753],"content":"GetInterfaces()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInterfaces()","pos":[0,15]}]},{"pos":[29073,29107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29444,29486],"content":"GetMember(String,MemberTypes,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMember(String,MemberTypes,BindingFlags)","pos":[0,42]}]},{"pos":[29971,30005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30082,30116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30201,30235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30310,30344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30595,30619],"content":"GetMembers(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMembers(BindingFlags)","pos":[0,24]}]},{"pos":[31044,31078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31153,31187],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31700,31787],"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,87]}]},{"pos":[32480,32514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32599,32633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32707,32741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32835,32869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32931,32965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33055,33089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33162,33196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33447,33471],"content":"GetMethods(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[33896,33930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34005,34039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34324,34358],"content":"GetNestedType(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNestedType(String,BindingFlags)","pos":[0,34]}]},{"pos":[34769,34803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34888,34922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34978,35012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35271,35299],"content":"GetNestedTypes(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNestedTypes(BindingFlags)","pos":[0,28]}]},{"pos":[35712,35746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35804,35838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36095,36122],"content":"GetProperties(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetProperties(BindingFlags)","pos":[0,27]}]},{"pos":[36558,36592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36669,36703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37170,37245],"content":"GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])","pos":[0,75]}]},{"pos":[37882,37916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38001,38035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38109,38143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38208,38242],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38304,38338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38428,38462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38537,38571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38746,38750],"content":"GUID","needQuote":true,"needEscape":true,"nodes":[{"content":"GUID","pos":[0,4]}]},{"pos":[39023,39057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39260,39280],"content":"HasElementTypeImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"HasElementTypeImpl()","pos":[0,20]}]},{"pos":[39617,39651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40218,40315],"content":"InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])","pos":[0,97]}]},{"pos":[41032,41066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41150,41184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41258,41292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41355,41389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41452,41486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41576,41610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41693,41727],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41801,41835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41893,41927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42116,42129],"content":"IsArrayImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsArrayImpl()","pos":[0,13]}]},{"pos":[42445,42479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42734,42760],"content":"IsAssignableFrom(TypeInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssignableFrom(TypeInfo)","pos":[0,26]}]},{"pos":[43155,43189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43248,43282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43471,43484],"content":"IsByRefImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsByRefImpl()","pos":[0,13]}]},{"pos":[43800,43834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44031,44048],"content":"IsCOMObjectImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCOMObjectImpl()","pos":[0,17]}]},{"pos":[44376,44410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44625,44649],"content":"IsConstructedGenericType","needQuote":true,"needEscape":true,"nodes":[{"content":"IsConstructedGenericType","pos":[0,24]}]},{"pos":[44985,45019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45260,45283],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[45652,45686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45751,45785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45844,45878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46071,46086],"content":"IsPointerImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPointerImpl()","pos":[0,15]}]},{"pos":[46408,46442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46639,46656],"content":"IsPrimitiveImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrimitiveImpl()","pos":[0,17]}]},{"pos":[46984,47018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47215,47232],"content":"IsValueTypeImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValueTypeImpl()","pos":[0,17]}]},{"pos":[47560,47594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47787,47800],"content":"MetadataToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[48100,48134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48313,48319],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[48631,48665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48840,48844],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[49121,49155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49340,49349],"content":"Namespace","needQuote":true,"needEscape":true,"nodes":[{"content":"Namespace","pos":[0,9]}]},{"pos":[49641,49675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49862,49872],"content":"TypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeHandle","pos":[0,10]}]},{"pos":[50189,50223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50406,50414],"content":"typeImpl","needQuote":true,"needEscape":true,"nodes":[{"content":"typeImpl","pos":[0,8]}]},{"pos":[50682,50716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50923,50943],"content":"UnderlyingSystemType","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlyingSystemType","pos":[0,20]}]},{"pos":[51264,51298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51422,51448],"content":"System.Reflection.TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Reflection.TypeInfo","pos":[0,26]}]},{"pos":[51564,51579],"content":"TypeDelegator()","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeDelegator()","pos":[0,15]}]},{"pos":[51814,51833],"content":"TypeDelegator(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeDelegator(Type)","pos":[0,19]}]},{"pos":[52012,52016],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[52180,52188],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[52371,52379],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[52575,52596],"content":"AssemblyQualifiedName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyQualifiedName","pos":[0,21]}]},{"pos":[52781,52787],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52955,52963],"content":"BaseType","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseType","pos":[0,8]}]},{"pos":[53120,53124],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[53288,53296],"content":"FullName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[53455,53461],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53642,53665],"content":"GetAttributeFlagsImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAttributeFlagsImpl()","pos":[0,23]}]},{"pos":[53884,53898],"content":"TypeAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeAttributes","pos":[0,14]}]},{"pos":[54249,54334],"content":"GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,85]}]},{"pos":[54678,54693],"content":"ConstructorInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[54866,54878],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[55039,55045],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[55206,55224],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[55373,55377],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[55524,55541],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[55783,55812],"content":"GetConstructors(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetConstructors(BindingFlags)","pos":[0,29]}]},{"pos":[56044,56059],"content":"ConstructorInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[56234,56246],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[56464,56492],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[56691,56697],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56816,56823],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57032,57065],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[57274,57280],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[57396,57400],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[57513,57520],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57696,57712],"content":"GetElementType()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetElementType()","pos":[0,16]}]},{"pos":[57885,57889],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[58099,58128],"content":"GetEvent(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEvent(String,BindingFlags)","pos":[0,29]}]},{"pos":[58354,58363],"content":"EventInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"EventInfo","pos":[0,9]}]},{"pos":[58496,58502],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[58646,58658],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[58850,58861],"content":"GetEvents()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEvents()","pos":[0,11]}]},{"pos":[59051,59060],"content":"EventInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"EventInfo","pos":[0,9]}]},{"pos":[59280,59303],"content":"GetEvents(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEvents(BindingFlags)","pos":[0,23]}]},{"pos":[59517,59526],"content":"EventInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"EventInfo","pos":[0,9]}]},{"pos":[59689,59701],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[59938,59967],"content":"GetField(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetField(String,BindingFlags)","pos":[0,29]}]},{"pos":[60193,60202],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[60335,60341],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[60485,60497],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[60721,60744],"content":"GetFields(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[60958,60967],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[61130,61142],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[61367,61395],"content":"GetInterface(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInterface(String,Boolean)","pos":[0,28]}]},{"pos":[61592,61596],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[61708,61714],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61831,61838],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[62028,62049],"content":"GetInterfaceMap(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInterfaceMap(Type)","pos":[0,21]}]},{"pos":[62266,62282],"content":"InterfaceMapping","needQuote":true,"needEscape":true,"nodes":[{"content":"InterfaceMapping","pos":[0,16]}]},{"pos":[62427,62431],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[62600,62615],"content":"GetInterfaces()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInterfaces()","pos":[0,15]}]},{"pos":[62786,62790],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[63033,63075],"content":"GetMember(String,MemberTypes,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMember(String,MemberTypes,BindingFlags)","pos":[0,42]}]},{"pos":[63328,63338],"content":"MemberInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[63475,63481],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63624,63635],"content":"MemberTypes","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberTypes","pos":[0,11]}]},{"pos":[63800,63812],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[64037,64061],"content":"GetMembers(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMembers(BindingFlags)","pos":[0,24]}]},{"pos":[64278,64288],"content":"MemberInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[64453,64465],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[64821,64908],"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,87]}]},{"pos":[65251,65261],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[65396,65402],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65546,65558],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[65719,65725],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[65886,65904],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[66053,66057],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[66204,66221],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[66458,66482],"content":"GetMethods(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[66699,66709],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[66874,66886],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[67128,67162],"content":"GetNestedType(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNestedType(String,BindingFlags)","pos":[0,34]}]},{"pos":[67371,67375],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[67487,67493],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67637,67649],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[67878,67906],"content":"GetNestedTypes(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNestedTypes(BindingFlags)","pos":[0,28]}]},{"pos":[68103,68107],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[68249,68261],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[68489,68516],"content":"GetProperties(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetProperties(BindingFlags)","pos":[0,27]}]},{"pos":[68741,68753],"content":"PropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[68922,68934],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[69267,69342],"content":"GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])","pos":[0,75]}]},{"pos":[69663,69675],"content":"PropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[69814,69820],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[69964,69976],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[70137,70143],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[70268,70272],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[70382,70386],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[70533,70550],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[70749,70753],"content":"GUID","needQuote":true,"needEscape":true,"nodes":[{"content":"GUID","pos":[0,4]}]},{"pos":[70902,70906],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[71080,71100],"content":"HasElementTypeImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"HasElementTypeImpl()","pos":[0,20]}]},{"pos":[71284,71291],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71653,71750],"content":"InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])","pos":[0,97]}]},{"pos":[72087,72093],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72209,72215],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[72359,72371],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[72532,72538],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[72665,72671],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72787,72793],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[72944,72961],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[73145,73156],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[73296,73302],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73475,73488],"content":"IsArrayImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsArrayImpl()","pos":[0,13]}]},{"pos":[73658,73665],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73871,73897],"content":"IsAssignableFrom(TypeInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAssignableFrom(TypeInfo)","pos":[0,26]}]},{"pos":[74093,74100],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74242,74250],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[74436,74449],"content":"IsByRefImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsByRefImpl()","pos":[0,13]}]},{"pos":[74619,74626],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74803,74820],"content":"IsCOMObjectImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCOMObjectImpl()","pos":[0,17]}]},{"pos":[74998,75005],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75191,75215],"content":"IsConstructedGenericType","needQuote":true,"needEscape":true,"nodes":[{"content":"IsConstructedGenericType","pos":[0,24]}]},{"pos":[75407,75414],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75613,75636],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[75826,75833],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75949,75953],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[76066,76073],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[76248,76263],"content":"IsPointerImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPointerImpl()","pos":[0,15]}]},{"pos":[76437,76444],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[76621,76638],"content":"IsPrimitiveImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrimitiveImpl()","pos":[0,17]}]},{"pos":[76816,76823],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77000,77017],"content":"IsValueTypeImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValueTypeImpl()","pos":[0,17]}]},{"pos":[77195,77202],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77377,77390],"content":"MetadataToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[77558,77563],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77727,77733],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[77910,77916],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[78091,78095],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[78246,78252],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78421,78430],"content":"Namespace","needQuote":true,"needEscape":true,"nodes":[{"content":"Namespace","pos":[0,9]}]},{"pos":[78591,78597],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78767,78777],"content":"TypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeHandle","pos":[0,10]}]},{"pos":[78951,78968],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[79158,79166],"content":"typeImpl","needQuote":true,"needEscape":true,"nodes":[{"content":"typeImpl","pos":[0,8]}]},{"pos":[79323,79327],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[79503,79523],"content":"UnderlyingSystemType","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlyingSystemType","pos":[0,20]}]},{"pos":[79704,79708],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.TypeDelegator\n  id: TypeDelegator\n  children:\n  - System.Reflection.TypeDelegator.#ctor\n  - System.Reflection.TypeDelegator.#ctor(System.Type)\n  - System.Reflection.TypeDelegator.Assembly\n  - System.Reflection.TypeDelegator.AssemblyQualifiedName\n  - System.Reflection.TypeDelegator.BaseType\n  - System.Reflection.TypeDelegator.FullName\n  - System.Reflection.TypeDelegator.GetAttributeFlagsImpl\n  - System.Reflection.TypeDelegator.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.TypeDelegator.GetConstructors(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetCustomAttributes(System.Boolean)\n  - System.Reflection.TypeDelegator.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.TypeDelegator.GetElementType\n  - System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetEvents\n  - System.Reflection.TypeDelegator.GetEvents(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetFields(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)\n  - System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)\n  - System.Reflection.TypeDelegator.GetInterfaces\n  - System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetMembers(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.TypeDelegator.GetMethods(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetNestedTypes(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetProperties(System.Reflection.BindingFlags)\n  - System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.TypeDelegator.GUID\n  - System.Reflection.TypeDelegator.HasElementTypeImpl\n  - System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  - System.Reflection.TypeDelegator.IsArrayImpl\n  - System.Reflection.TypeDelegator.IsAssignableFrom(System.Reflection.TypeInfo)\n  - System.Reflection.TypeDelegator.IsByRefImpl\n  - System.Reflection.TypeDelegator.IsCOMObjectImpl\n  - System.Reflection.TypeDelegator.IsConstructedGenericType\n  - System.Reflection.TypeDelegator.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.TypeDelegator.IsPointerImpl\n  - System.Reflection.TypeDelegator.IsPrimitiveImpl\n  - System.Reflection.TypeDelegator.IsValueTypeImpl\n  - System.Reflection.TypeDelegator.MetadataToken\n  - System.Reflection.TypeDelegator.Module\n  - System.Reflection.TypeDelegator.Name\n  - System.Reflection.TypeDelegator.Namespace\n  - System.Reflection.TypeDelegator.TypeHandle\n  - System.Reflection.TypeDelegator.typeImpl\n  - System.Reflection.TypeDelegator.UnderlyingSystemType\n  langs:\n  - csharp\n  name: TypeDelegator\n  nameWithType: TypeDelegator\n  fullName: System.Reflection.TypeDelegator\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class TypeDelegator : System.Reflection.TypeInfo\n  inheritance:\n  - System.Object\n  - System.Reflection.MemberInfo\n  - System.Type\n  - System.Reflection.TypeInfo\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Reflection.MemberInfo.CustomAttributes\n  - System.Reflection.MemberInfo.GetCustomAttributesData\n  - System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.TypeInfo.AsType\n  - System.Reflection.TypeInfo.DeclaredConstructors\n  - System.Reflection.TypeInfo.DeclaredEvents\n  - System.Reflection.TypeInfo.DeclaredFields\n  - System.Reflection.TypeInfo.DeclaredMembers\n  - System.Reflection.TypeInfo.DeclaredMethods\n  - System.Reflection.TypeInfo.DeclaredNestedTypes\n  - System.Reflection.TypeInfo.DeclaredProperties\n  - System.Reflection.TypeInfo.GenericTypeParameters\n  - System.Reflection.TypeInfo.GetDeclaredEvent(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredField(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethod(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredMethods(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredNestedType(System.String)\n  - System.Reflection.TypeInfo.GetDeclaredProperty(System.String)\n  - System.Reflection.TypeInfo.ImplementedInterfaces\n  - System.Reflection.TypeInfo.System#Reflection#IReflectableType#GetTypeInfo\n  - System.Type.Attributes\n  - System.Type.ContainsGenericParameters\n  - System.Type.DeclaringMethod\n  - System.Type.DeclaringType\n  - System.Type.DefaultBinder\n  - System.Type.Delimiter\n  - System.Type.EmptyTypes\n  - System.Type.Equals(System.Object)\n  - System.Type.Equals(System.Type)\n  - System.Type.FilterAttribute\n  - System.Type.FilterName\n  - System.Type.FilterNameIgnoreCase\n  - System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)\n  - System.Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)\n  - System.Type.GenericParameterAttributes\n  - System.Type.GenericParameterPosition\n  - System.Type.GenericTypeArguments\n  - System.Type.GetArrayRank\n  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetConstructor(System.Type[])\n  - System.Type.GetConstructors\n  - System.Type.GetDefaultMembers\n  - System.Type.GetEnumName(System.Object)\n  - System.Type.GetEnumNames\n  - System.Type.GetEnumUnderlyingType\n  - System.Type.GetEnumValues\n  - System.Type.GetEvent(System.String)\n  - System.Type.GetField(System.String)\n  - System.Type.GetFields\n  - System.Type.GetGenericArguments\n  - System.Type.GetGenericParameterConstraints\n  - System.Type.GetGenericTypeDefinition\n  - System.Type.GetHashCode\n  - System.Type.GetInterface(System.String)\n  - System.Type.GetMember(System.String)\n  - System.Type.GetMember(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMembers\n  - System.Type.GetMethod(System.String)\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethod(System.String,System.Type[])\n  - System.Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetMethods\n  - System.Type.GetNestedType(System.String)\n  - System.Type.GetNestedTypes\n  - System.Type.GetProperties\n  - System.Type.GetProperty(System.String)\n  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags)\n  - System.Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperty(System.String,System.Type)\n  - System.Type.GetProperty(System.String,System.Type,System.Type[])\n  - System.Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Type.GetProperty(System.String,System.Type[])\n  - System.Type.GetType\n  - System.Type.GetType(System.String)\n  - System.Type.GetType(System.String,System.Boolean)\n  - System.Type.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type})\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean)\n  - System.Type.GetType(System.String,System.Func{System.Reflection.AssemblyName,System.Reflection.Assembly},System.Func{System.Reflection.Assembly,System.String,System.Boolean,System.Type},System.Boolean,System.Boolean)\n  - System.Type.GetTypeArray(System.Object[])\n  - System.Type.GetTypeCode(System.Type)\n  - System.Type.GetTypeCodeImpl\n  - System.Type.GetTypeFromCLSID(System.Guid)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.Boolean)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.String)\n  - System.Type.GetTypeFromCLSID(System.Guid,System.String,System.Boolean)\n  - System.Type.GetTypeFromHandle(System.RuntimeTypeHandle)\n  - System.Type.GetTypeFromProgID(System.String)\n  - System.Type.GetTypeFromProgID(System.String,System.Boolean)\n  - System.Type.GetTypeFromProgID(System.String,System.String)\n  - System.Type.GetTypeFromProgID(System.String,System.String,System.Boolean)\n  - System.Type.GetTypeHandle(System.Object)\n  - System.Type.HasElementType\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])\n  - System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)\n  - System.Type.IsAbstract\n  - System.Type.IsAnsiClass\n  - System.Type.IsArray\n  - System.Type.IsAssignableFrom(System.Type)\n  - System.Type.IsAutoClass\n  - System.Type.IsAutoLayout\n  - System.Type.IsByRef\n  - System.Type.IsClass\n  - System.Type.IsCOMObject\n  - System.Type.IsContextful\n  - System.Type.IsContextfulImpl\n  - System.Type.IsEnum\n  - System.Type.IsEnumDefined(System.Object)\n  - System.Type.IsEquivalentTo(System.Type)\n  - System.Type.IsExplicitLayout\n  - System.Type.IsGenericParameter\n  - System.Type.IsGenericType\n  - System.Type.IsGenericTypeDefinition\n  - System.Type.IsImport\n  - System.Type.IsInstanceOfType(System.Object)\n  - System.Type.IsInterface\n  - System.Type.IsLayoutSequential\n  - System.Type.IsMarshalByRef\n  - System.Type.IsMarshalByRefImpl\n  - System.Type.IsNested\n  - System.Type.IsNestedAssembly\n  - System.Type.IsNestedFamANDAssem\n  - System.Type.IsNestedFamily\n  - System.Type.IsNestedFamORAssem\n  - System.Type.IsNestedPrivate\n  - System.Type.IsNestedPublic\n  - System.Type.IsNotPublic\n  - System.Type.IsPointer\n  - System.Type.IsPrimitive\n  - System.Type.IsPublic\n  - System.Type.IsSealed\n  - System.Type.IsSecurityCritical\n  - System.Type.IsSecuritySafeCritical\n  - System.Type.IsSecurityTransparent\n  - System.Type.IsSerializable\n  - System.Type.IsSpecialName\n  - System.Type.IsSubclassOf(System.Type)\n  - System.Type.IsUnicodeClass\n  - System.Type.IsValueType\n  - System.Type.IsVisible\n  - System.Type.MakeArrayType\n  - System.Type.MakeArrayType(System.Int32)\n  - System.Type.MakeByRefType\n  - System.Type.MakeGenericType(System.Type[])\n  - System.Type.MakePointerType\n  - System.Type.MemberType\n  - System.Type.Missing\n  - System.Type.op_Equality(System.Type,System.Type)\n  - System.Type.op_Inequality(System.Type,System.Type)\n  - System.Type.ReflectedType\n  - System.Type.ReflectionOnlyGetType(System.String,System.Boolean,System.Boolean)\n  - System.Type.StructLayoutAttribute\n  - System.Type.System#Runtime#InteropServices#_Type#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Type.System#Runtime#InteropServices#_Type#GetTypeInfoCount(System.UInt32@)\n  - System.Type.System#Runtime#InteropServices#_Type#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Type.ToString\n  - System.Type.TypeInitializer\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.#ctor\n  id: '#ctor'\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: TypeDelegator()\n  nameWithType: TypeDelegator.TypeDelegator()\n  fullName: System.Reflection.TypeDelegator.TypeDelegator()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected TypeDelegator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: TypeDelegator(Type)\n  nameWithType: TypeDelegator.TypeDelegator(Type)\n  fullName: System.Reflection.TypeDelegator.TypeDelegator(Type)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public TypeDelegator (Type delegatingType);\n    parameters:\n    - id: delegatingType\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.Assembly\n  id: Assembly\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: TypeDelegator.Assembly\n  fullName: System.Reflection.TypeDelegator.Assembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.AssemblyQualifiedName\n  id: AssemblyQualifiedName\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: AssemblyQualifiedName\n  nameWithType: TypeDelegator.AssemblyQualifiedName\n  fullName: System.Reflection.TypeDelegator.AssemblyQualifiedName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string AssemblyQualifiedName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.BaseType\n  id: BaseType\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: BaseType\n  nameWithType: TypeDelegator.BaseType\n  fullName: System.Reflection.TypeDelegator.BaseType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type BaseType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.FullName\n  id: FullName\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: TypeDelegator.FullName\n  fullName: System.Reflection.TypeDelegator.FullName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string FullName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetAttributeFlagsImpl\n  id: GetAttributeFlagsImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetAttributeFlagsImpl()\n  nameWithType: TypeDelegator.GetAttributeFlagsImpl()\n  fullName: System.Reflection.TypeDelegator.GetAttributeFlagsImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override System.Reflection.TypeAttributes GetAttributeFlagsImpl ();\n    parameters: []\n    return:\n      type: System.Reflection.TypeAttributes\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: TypeDelegator.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.TypeDelegator.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override System.Reflection.ConstructorInfo GetConstructorImpl (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.ConstructorInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetConstructors(System.Reflection.BindingFlags)\n  id: GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetConstructors(BindingFlags)\n  nameWithType: TypeDelegator.GetConstructors(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetConstructors(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.ConstructorInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: TypeDelegator.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.TypeDelegator.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.TypeDelegator.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: TypeDelegator.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.TypeDelegator.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.TypeDelegator.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetElementType\n  id: GetElementType\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetElementType()\n  nameWithType: TypeDelegator.GetElementType()\n  fullName: System.Reflection.TypeDelegator.GetElementType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type GetElementType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)\n  id: GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetEvent(String,BindingFlags)\n  nameWithType: TypeDelegator.GetEvent(String,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetEvent(String,BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.EventInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetEvents\n  id: GetEvents\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetEvents()\n  nameWithType: TypeDelegator.GetEvents()\n  fullName: System.Reflection.TypeDelegator.GetEvents()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.EventInfo[] GetEvents ();\n    parameters: []\n    return:\n      type: System.Reflection.EventInfo[]\n      description: Parameter description to be filled\n  overload: System.Reflection.TypeDelegator.GetEvents*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetEvents(System.Reflection.BindingFlags)\n  id: GetEvents(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetEvents(BindingFlags)\n  nameWithType: TypeDelegator.GetEvents(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetEvents(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.EventInfo[]\n      description: Parameter description to be filled\n  overload: System.Reflection.TypeDelegator.GetEvents*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)\n  id: GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetField(String,BindingFlags)\n  nameWithType: TypeDelegator.GetField(String,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetField(String,BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetFields(System.Reflection.BindingFlags)\n  id: GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetFields(BindingFlags)\n  nameWithType: TypeDelegator.GetFields(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)\n  id: GetInterface(System.String,System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetInterface(String,Boolean)\n  nameWithType: TypeDelegator.GetInterface(String,Boolean)\n  fullName: System.Reflection.TypeDelegator.GetInterface(String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type GetInterface (string name, bool ignoreCase);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)\n  id: GetInterfaceMap(System.Type)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetInterfaceMap(Type)\n  nameWithType: TypeDelegator.GetInterfaceMap(Type)\n  fullName: System.Reflection.TypeDelegator.GetInterfaceMap(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);\n    parameters:\n    - id: interfaceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.InterfaceMapping\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetInterfaces\n  id: GetInterfaces\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetInterfaces()\n  nameWithType: TypeDelegator.GetInterfaces()\n  fullName: System.Reflection.TypeDelegator.GetInterfaces()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type[] GetInterfaces ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetMember(String,MemberTypes,BindingFlags)\n  nameWithType: TypeDelegator.GetMember(String,MemberTypes,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetMember(String,MemberTypes,BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: type\n      type: System.Reflection.MemberTypes\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetMembers(System.Reflection.BindingFlags)\n  id: GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetMembers(BindingFlags)\n  nameWithType: TypeDelegator.GetMembers(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetMembers(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MemberInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: TypeDelegator.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.TypeDelegator.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetMethods(System.Reflection.BindingFlags)\n  id: GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetMethods(BindingFlags)\n  nameWithType: TypeDelegator.GetMethods(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)\n  id: GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetNestedType(String,BindingFlags)\n  nameWithType: TypeDelegator.GetNestedType(String,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetNestedType(String,BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetNestedTypes(System.Reflection.BindingFlags)\n  id: GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetNestedTypes(BindingFlags)\n  nameWithType: TypeDelegator.GetNestedTypes(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetNestedTypes(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetProperties(System.Reflection.BindingFlags)\n  id: GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetProperties(BindingFlags)\n  nameWithType: TypeDelegator.GetProperties(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetProperties(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.PropertyInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  nameWithType: TypeDelegator.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  fullName: System.Reflection.TypeDelegator.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override System.Reflection.PropertyInfo GetPropertyImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.PropertyInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.GUID\n  id: GUID\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: GUID\n  nameWithType: TypeDelegator.GUID\n  fullName: System.Reflection.TypeDelegator.GUID\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Guid GUID { get; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.HasElementTypeImpl\n  id: HasElementTypeImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: HasElementTypeImpl()\n  nameWithType: TypeDelegator.HasElementTypeImpl()\n  fullName: System.Reflection.TypeDelegator.HasElementTypeImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool HasElementTypeImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  nameWithType: TypeDelegator.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  fullName: System.Reflection.TypeDelegator.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: invokeAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: namedParameters\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsArrayImpl\n  id: IsArrayImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsArrayImpl()\n  nameWithType: TypeDelegator.IsArrayImpl()\n  fullName: System.Reflection.TypeDelegator.IsArrayImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool IsArrayImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsAssignableFrom(System.Reflection.TypeInfo)\n  id: IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsAssignableFrom(TypeInfo)\n  nameWithType: TypeDelegator.IsAssignableFrom(TypeInfo)\n  fullName: System.Reflection.TypeDelegator.IsAssignableFrom(TypeInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool IsAssignableFrom (System.Reflection.TypeInfo typeInfo);\n    parameters:\n    - id: typeInfo\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsByRefImpl\n  id: IsByRefImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsByRefImpl()\n  nameWithType: TypeDelegator.IsByRefImpl()\n  fullName: System.Reflection.TypeDelegator.IsByRefImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool IsByRefImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsCOMObjectImpl\n  id: IsCOMObjectImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsCOMObjectImpl()\n  nameWithType: TypeDelegator.IsCOMObjectImpl()\n  fullName: System.Reflection.TypeDelegator.IsCOMObjectImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool IsCOMObjectImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsConstructedGenericType\n  id: IsConstructedGenericType\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsConstructedGenericType\n  nameWithType: TypeDelegator.IsConstructedGenericType\n  fullName: System.Reflection.TypeDelegator.IsConstructedGenericType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool IsConstructedGenericType { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: TypeDelegator.IsDefined(Type,Boolean)\n  fullName: System.Reflection.TypeDelegator.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsPointerImpl\n  id: IsPointerImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsPointerImpl()\n  nameWithType: TypeDelegator.IsPointerImpl()\n  fullName: System.Reflection.TypeDelegator.IsPointerImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool IsPointerImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsPrimitiveImpl\n  id: IsPrimitiveImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsPrimitiveImpl()\n  nameWithType: TypeDelegator.IsPrimitiveImpl()\n  fullName: System.Reflection.TypeDelegator.IsPrimitiveImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool IsPrimitiveImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.IsValueTypeImpl\n  id: IsValueTypeImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: IsValueTypeImpl()\n  nameWithType: TypeDelegator.IsValueTypeImpl()\n  fullName: System.Reflection.TypeDelegator.IsValueTypeImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected override bool IsValueTypeImpl ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.MetadataToken\n  id: MetadataToken\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: MetadataToken\n  nameWithType: TypeDelegator.MetadataToken\n  fullName: System.Reflection.TypeDelegator.MetadataToken\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override int MetadataToken { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.Module\n  id: Module\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: Module\n  nameWithType: TypeDelegator.Module\n  fullName: System.Reflection.TypeDelegator.Module\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override System.Reflection.Module Module { get; }\n    return:\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.Name\n  id: Name\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: Name\n  nameWithType: TypeDelegator.Name\n  fullName: System.Reflection.TypeDelegator.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.Namespace\n  id: Namespace\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: Namespace\n  nameWithType: TypeDelegator.Namespace\n  fullName: System.Reflection.TypeDelegator.Namespace\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string Namespace { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.TypeHandle\n  id: TypeHandle\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: TypeHandle\n  nameWithType: TypeDelegator.TypeHandle\n  fullName: System.Reflection.TypeDelegator.TypeHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override RuntimeTypeHandle TypeHandle { get; }\n    return:\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.typeImpl\n  id: typeImpl\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: typeImpl\n  nameWithType: TypeDelegator.typeImpl\n  fullName: System.Reflection.TypeDelegator.typeImpl\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected Type typeImpl;\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.TypeDelegator.UnderlyingSystemType\n  id: UnderlyingSystemType\n  parent: System.Reflection.TypeDelegator\n  langs:\n  - csharp\n  name: UnderlyingSystemType\n  nameWithType: TypeDelegator.UnderlyingSystemType\n  fullName: System.Reflection.TypeDelegator.UnderlyingSystemType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override Type UnderlyingSystemType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Reflection.TypeInfo\n  isExternal: false\n  name: System.Reflection.TypeInfo\n- uid: System.Reflection.TypeDelegator.#ctor\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: TypeDelegator()\n  nameWithType: TypeDelegator.TypeDelegator()\n  fullName: System.Reflection.TypeDelegator.TypeDelegator()\n- uid: System.Reflection.TypeDelegator.#ctor(System.Type)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: TypeDelegator(Type)\n  nameWithType: TypeDelegator.TypeDelegator(Type)\n  fullName: System.Reflection.TypeDelegator.TypeDelegator(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeDelegator.Assembly\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: Assembly\n  nameWithType: TypeDelegator.Assembly\n  fullName: System.Reflection.TypeDelegator.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.TypeDelegator.AssemblyQualifiedName\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: AssemblyQualifiedName\n  nameWithType: TypeDelegator.AssemblyQualifiedName\n  fullName: System.Reflection.TypeDelegator.AssemblyQualifiedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeDelegator.BaseType\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: BaseType\n  nameWithType: TypeDelegator.BaseType\n  fullName: System.Reflection.TypeDelegator.BaseType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeDelegator.FullName\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: FullName\n  nameWithType: TypeDelegator.FullName\n  fullName: System.Reflection.TypeDelegator.FullName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeDelegator.GetAttributeFlagsImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetAttributeFlagsImpl()\n  nameWithType: TypeDelegator.GetAttributeFlagsImpl()\n  fullName: System.Reflection.TypeDelegator.GetAttributeFlagsImpl()\n- uid: System.Reflection.TypeAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: TypeAttributes\n  nameWithType: TypeAttributes\n  fullName: System.Reflection.TypeAttributes\n- uid: System.Reflection.TypeDelegator.GetConstructorImpl(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: TypeDelegator.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.TypeDelegator.GetConstructorImpl(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Reflection.TypeDelegator.GetConstructors(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetConstructors(BindingFlags)\n  nameWithType: TypeDelegator.GetConstructors(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetConstructors(BindingFlags)\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: TypeDelegator.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.TypeDelegator.GetCustomAttributes(Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: TypeDelegator.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.TypeDelegator.GetCustomAttributes(Type,Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.GetElementType\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetElementType()\n  nameWithType: TypeDelegator.GetElementType()\n  fullName: System.Reflection.TypeDelegator.GetElementType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeDelegator.GetEvent(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetEvent(String,BindingFlags)\n  nameWithType: TypeDelegator.GetEvent(String,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetEvent(String,BindingFlags)\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetEvents\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetEvents()\n  nameWithType: TypeDelegator.GetEvents()\n  fullName: System.Reflection.TypeDelegator.GetEvents()\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo[]\n- uid: System.Reflection.TypeDelegator.GetEvents(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetEvents(BindingFlags)\n  nameWithType: TypeDelegator.GetEvents(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetEvents(BindingFlags)\n- uid: System.Reflection.EventInfo\n  parent: System.Reflection\n  isExternal: false\n  name: EventInfo\n  nameWithType: EventInfo\n  fullName: System.Reflection.EventInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetField(String,BindingFlags)\n  nameWithType: TypeDelegator.GetField(String,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetField(String,BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetFields(BindingFlags)\n  nameWithType: TypeDelegator.GetFields(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetFields(BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetInterface(System.String,System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetInterface(String,Boolean)\n  nameWithType: TypeDelegator.GetInterface(String,Boolean)\n  fullName: System.Reflection.TypeDelegator.GetInterface(String,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.GetInterfaceMap(System.Type)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetInterfaceMap(Type)\n  nameWithType: TypeDelegator.GetInterfaceMap(Type)\n  fullName: System.Reflection.TypeDelegator.GetInterfaceMap(Type)\n- uid: System.Reflection.InterfaceMapping\n  parent: System.Reflection\n  isExternal: false\n  name: InterfaceMapping\n  nameWithType: InterfaceMapping\n  fullName: System.Reflection.InterfaceMapping\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeDelegator.GetInterfaces\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetInterfaces()\n  nameWithType: TypeDelegator.GetInterfaces()\n  fullName: System.Reflection.TypeDelegator.GetInterfaces()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.TypeDelegator.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetMember(String,MemberTypes,BindingFlags)\n  nameWithType: TypeDelegator.GetMember(String,MemberTypes,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetMember(String,MemberTypes,BindingFlags)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.MemberTypes\n  parent: System.Reflection\n  isExternal: false\n  name: MemberTypes\n  nameWithType: MemberTypes\n  fullName: System.Reflection.MemberTypes\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetMembers(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetMembers(BindingFlags)\n  nameWithType: TypeDelegator.GetMembers(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetMembers(BindingFlags)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: TypeDelegator.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.TypeDelegator.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Reflection.TypeDelegator.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetMethods(BindingFlags)\n  nameWithType: TypeDelegator.GetMethods(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetMethods(BindingFlags)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetNestedType(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetNestedType(String,BindingFlags)\n  nameWithType: TypeDelegator.GetNestedType(String,BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetNestedType(String,BindingFlags)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetNestedTypes(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetNestedTypes(BindingFlags)\n  nameWithType: TypeDelegator.GetNestedTypes(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetNestedTypes(BindingFlags)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetProperties(System.Reflection.BindingFlags)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetProperties(BindingFlags)\n  nameWithType: TypeDelegator.GetProperties(BindingFlags)\n  fullName: System.Reflection.TypeDelegator.GetProperties(BindingFlags)\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.TypeDelegator.GetPropertyImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  nameWithType: TypeDelegator.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n  fullName: System.Reflection.TypeDelegator.GetPropertyImpl(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Reflection.TypeDelegator.GUID\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: GUID\n  nameWithType: TypeDelegator.GUID\n  fullName: System.Reflection.TypeDelegator.GUID\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Reflection.TypeDelegator.HasElementTypeImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: HasElementTypeImpl()\n  nameWithType: TypeDelegator.HasElementTypeImpl()\n  fullName: System.Reflection.TypeDelegator.HasElementTypeImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  nameWithType: TypeDelegator.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n  fullName: System.Reflection.TypeDelegator.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Reflection.TypeDelegator.IsArrayImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsArrayImpl()\n  nameWithType: TypeDelegator.IsArrayImpl()\n  fullName: System.Reflection.TypeDelegator.IsArrayImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsAssignableFrom(System.Reflection.TypeInfo)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsAssignableFrom(TypeInfo)\n  nameWithType: TypeDelegator.IsAssignableFrom(TypeInfo)\n  fullName: System.Reflection.TypeDelegator.IsAssignableFrom(TypeInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Reflection.TypeDelegator.IsByRefImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsByRefImpl()\n  nameWithType: TypeDelegator.IsByRefImpl()\n  fullName: System.Reflection.TypeDelegator.IsByRefImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsCOMObjectImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsCOMObjectImpl()\n  nameWithType: TypeDelegator.IsCOMObjectImpl()\n  fullName: System.Reflection.TypeDelegator.IsCOMObjectImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsConstructedGenericType\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsConstructedGenericType\n  nameWithType: TypeDelegator.IsConstructedGenericType\n  fullName: System.Reflection.TypeDelegator.IsConstructedGenericType\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: TypeDelegator.IsDefined(Type,Boolean)\n  fullName: System.Reflection.TypeDelegator.IsDefined(Type,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsPointerImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsPointerImpl()\n  nameWithType: TypeDelegator.IsPointerImpl()\n  fullName: System.Reflection.TypeDelegator.IsPointerImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsPrimitiveImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsPrimitiveImpl()\n  nameWithType: TypeDelegator.IsPrimitiveImpl()\n  fullName: System.Reflection.TypeDelegator.IsPrimitiveImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.IsValueTypeImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: IsValueTypeImpl()\n  nameWithType: TypeDelegator.IsValueTypeImpl()\n  fullName: System.Reflection.TypeDelegator.IsValueTypeImpl()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.TypeDelegator.MetadataToken\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: MetadataToken\n  nameWithType: TypeDelegator.MetadataToken\n  fullName: System.Reflection.TypeDelegator.MetadataToken\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.TypeDelegator.Module\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: Module\n  nameWithType: TypeDelegator.Module\n  fullName: System.Reflection.TypeDelegator.Module\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.TypeDelegator.Name\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: Name\n  nameWithType: TypeDelegator.Name\n  fullName: System.Reflection.TypeDelegator.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeDelegator.Namespace\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: Namespace\n  nameWithType: TypeDelegator.Namespace\n  fullName: System.Reflection.TypeDelegator.Namespace\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.TypeDelegator.TypeHandle\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: TypeHandle\n  nameWithType: TypeDelegator.TypeHandle\n  fullName: System.Reflection.TypeDelegator.TypeHandle\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Reflection.TypeDelegator.typeImpl\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: typeImpl\n  nameWithType: TypeDelegator.typeImpl\n  fullName: System.Reflection.TypeDelegator.typeImpl\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeDelegator.UnderlyingSystemType\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  name: UnderlyingSystemType\n  nameWithType: TypeDelegator.UnderlyingSystemType\n  fullName: System.Reflection.TypeDelegator.UnderlyingSystemType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.TypeDelegator.GetCustomAttributes*\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  nameWithType: TypeDelegator.\n- uid: System.Reflection.TypeDelegator.GetEvents*\n  parent: System.Reflection.TypeDelegator\n  isExternal: false\n  nameWithType: TypeDelegator.\n"}