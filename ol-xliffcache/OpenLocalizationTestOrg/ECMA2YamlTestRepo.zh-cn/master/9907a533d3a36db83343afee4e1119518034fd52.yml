### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.PropertyCollection
  id: PropertyCollection
  children:
  - System.DirectoryServices.PropertyCollection.Contains(System.String)
  - System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)
  - System.DirectoryServices.PropertyCollection.Count
  - System.DirectoryServices.PropertyCollection.GetEnumerator
  - System.DirectoryServices.PropertyCollection.Item(System.String)
  - System.DirectoryServices.PropertyCollection.PropertyNames
  - System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized
  - System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys
  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)
  - System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator
  - System.DirectoryServices.PropertyCollection.Values
  langs:
  - csharp
  name: PropertyCollection
  nameWithType: PropertyCollection
  fullName: System.DirectoryServices.PropertyCollection
  type: Class
  syntax:
    content: 'public class PropertyCollection : System.Collections.IDictionary'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: PropertyCollection.Contains(String)
  fullName: System.DirectoryServices.PropertyCollection.Contains(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public bool Contains (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)
  id: CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: CopyTo(PropertyValueCollection[],Int32)
  nameWithType: PropertyCollection.CopyTo(PropertyValueCollection[],Int32)
  fullName: System.DirectoryServices.PropertyCollection.CopyTo(PropertyValueCollection[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public void CopyTo (System.DirectoryServices.PropertyValueCollection[] array, int index);
    parameters:
    - id: array
      type: System.DirectoryServices.PropertyValueCollection[]
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.Count
  id: Count
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: Count
  nameWithType: PropertyCollection.Count
  fullName: System.DirectoryServices.PropertyCollection.Count
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.GetEnumerator
  id: GetEnumerator
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PropertyCollection.GetEnumerator()
  fullName: System.DirectoryServices.PropertyCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.Item(System.String)
  id: Item(System.String)
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: PropertyCollection.Item(String)
  fullName: System.DirectoryServices.PropertyCollection.Item(String)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public System.DirectoryServices.PropertyValueCollection this[string propertyName] { get; }
    parameters:
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.DirectoryServices.PropertyValueCollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.PropertyNames
  id: PropertyNames
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: PropertyNames
  nameWithType: PropertyCollection.PropertyNames
  fullName: System.DirectoryServices.PropertyCollection.PropertyNames
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public System.Collections.ICollection PropertyNames { get; }
    return:
      type: System.Collections.ICollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: Parameter description to be filled
    - id: index
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyCollection.System.Collections.ICollection.SyncRoot
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void IDictionary.Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyCollection.System.Collections.IDictionary.Clear()
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Clear()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void IDictionary.Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool IDictionary.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsFixedSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool System.Collections.IDictionary.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsReadOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: bool System.Collections.IDictionary.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Item(Object)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: object System.Collections.IDictionary.Item[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyCollection.System.Collections.IDictionary.Keys
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Keys
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }
    return:
      type: System.Collections.ICollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: void IDictionary.Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.DirectoryServices.PropertyCollection.Values
  id: Values
  parent: System.DirectoryServices.PropertyCollection
  langs:
  - csharp
  name: Values
  nameWithType: PropertyCollection.Values
  fullName: System.DirectoryServices.PropertyCollection.Values
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.PropertyCollection.Contains(System.String)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: Contains(String)
  nameWithType: PropertyCollection.Contains(String)
  fullName: System.DirectoryServices.PropertyCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: CopyTo(PropertyValueCollection[],Int32)
  nameWithType: PropertyCollection.CopyTo(PropertyValueCollection[],Int32)
  fullName: System.DirectoryServices.PropertyCollection.CopyTo(PropertyValueCollection[],Int32)
- uid: System.DirectoryServices.PropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.PropertyCollection.Count
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: Count
  nameWithType: PropertyCollection.Count
  fullName: System.DirectoryServices.PropertyCollection.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.PropertyCollection.GetEnumerator
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PropertyCollection.GetEnumerator()
  fullName: System.DirectoryServices.PropertyCollection.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: false
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.DirectoryServices.PropertyCollection.Item(System.String)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: Item(String)
  nameWithType: PropertyCollection.Item(String)
  fullName: System.DirectoryServices.PropertyCollection.Item(String)
- uid: System.DirectoryServices.PropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.PropertyCollection.PropertyNames
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: PropertyNames
  nameWithType: PropertyCollection.PropertyNames
  fullName: System.DirectoryServices.PropertyCollection.PropertyNames
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: false
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PropertyCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PropertyCollection.System.Collections.ICollection.SyncRoot
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.Add(Object,Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Add(Object,Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Add(Object,Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.Clear()
  nameWithType: PropertyCollection.System.Collections.IDictionary.Clear()
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Clear()
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.Contains(Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Contains(Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.IsFixedSize
  nameWithType: PropertyCollection.System.Collections.IDictionary.IsFixedSize
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsFixedSize
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.IsReadOnly
  nameWithType: PropertyCollection.System.Collections.IDictionary.IsReadOnly
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.Item(Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Item(Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Item(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.Keys
  nameWithType: PropertyCollection.System.Collections.IDictionary.Keys
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IDictionary.Remove(Object)
  nameWithType: PropertyCollection.System.Collections.IDictionary.Remove(Object)
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Remove(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PropertyCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.DirectoryServices.PropertyCollection.Values
  parent: System.DirectoryServices.PropertyCollection
  isExternal: false
  name: Values
  nameWithType: PropertyCollection.Values
  fullName: System.DirectoryServices.PropertyCollection.Values
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: false
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
