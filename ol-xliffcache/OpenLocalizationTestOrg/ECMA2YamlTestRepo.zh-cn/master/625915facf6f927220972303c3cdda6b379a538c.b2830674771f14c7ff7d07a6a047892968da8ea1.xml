{"nodes":[{"pos":[1649,1688],"content":"Dictionary<TKey,TValue>+ValueCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;+ValueCollection","pos":[0,39],"source":"Dictionary<TKey,TValue>+ValueCollection"}]},{"pos":[2360,2394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2431,2465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3311,3346],"content":"Dictionary(Dictionary<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(Dictionary&lt;TKey,TValue&gt;)","pos":[0,35],"source":"Dictionary(Dictionary<TKey,TValue>)"}]},{"pos":[3860,3894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4159,4181],"content":"CopyTo(TValue[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TValue[],Int32)","pos":[0,22]}]},{"pos":[4588,4622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4683,4717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4942,4947],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[5284,5318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5559,5574],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[6079,6113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6450,6496],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[6944,6978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7311,7351],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[8074,8120],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[8573,8607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8666,8700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9043,9081],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[9532,9566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9909,9955],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[10406,10440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10499,10533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10882,10922],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[11439,11473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11830,11880],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[12349,12383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12444,12478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12797,12842],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[13295,13329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13636,13675],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[14111,14145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14462,14508],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[14997,15031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15142,15155],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[15360,15395],"content":"Dictionary(Dictionary<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary(Dictionary&lt;TKey,TValue&gt;)","pos":[0,35],"source":"Dictionary(Dictionary<TKey,TValue>)"}]},{"pos":[15715,15738],"content":"Dictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;","pos":[0,23],"source":"Dictionary<TKey,TValue>"}]},{"pos":[16025,16047],"content":"CopyTo(TValue[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TValue[],Int32)","pos":[0,22]}]},{"pos":[16283,16289],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[16399,16404],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16615,16620],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[16833,16838],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17057,17072],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[17379,17429],"content":"Dictionary<TKey,TValue>+ValueCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"Dictionary&lt;TKey,TValue&gt;+ValueCollection+Enumerator","pos":[0,50],"source":"Dictionary<TKey,TValue>+ValueCollection+Enumerator"}]},{"pos":[17799,17845],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[18129,18135],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[18388,18428],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[18863,18909],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[19206,19213],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19319,19325],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[19583,19621],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[19902,19909],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20176,20222],"content":"System.Collections.Generic.ICollection(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(TValue)","pos":[0,46]}]},{"pos":[20519,20526],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20632,20638],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[20899,20939],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[21276,21295],"content":"IEnumerator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<TValue>"},{"pos":[21613,21663],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[21966,21971],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[22084,22089],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22340,22385],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[22680,22687],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22936,22975],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[23257,23263],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23515,23561],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[23886,23897],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection\n  id: Dictionary`2+ValueCollection\n  children:\n  - System.Collections.Generic.Dictionary`2+ValueCollection.#ctor(System.Collections.Generic.Dictionary`2)\n  - System.Collections.Generic.Dictionary`2+ValueCollection.CopyTo(`1[],System.Int32)\n  - System.Collections.Generic.Dictionary`2+ValueCollection.Count\n  - System.Collections.Generic.Dictionary`2+ValueCollection.GetEnumerator\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: Dictionary<TKey,TValue>+ValueCollection\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_DictionaryValueCollectionDebugView`2))]\n\n      public sealed class Dictionary<TKey,TValue>.ValueCollection : System.Collections.Generic.ICollection<TValue>, System.Collections.Generic.IEnumerable<TValue>, System.Collections.Generic.IReadOnlyCollection<TValue>, System.Collections.ICollection\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<TValue>\n  - System.Collections.Generic.IEnumerable<TValue>\n  - System.Collections.Generic.IReadOnlyCollection<TValue>\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.#ctor(System.Collections.Generic.Dictionary`2)\n  id: '#ctor(System.Collections.Generic.Dictionary`2)'\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: Dictionary(Dictionary<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.Dictionary(Dictionary<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.Dictionary(Dictionary<TKey,TValue>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public ValueCollection (System.Collections.Generic.Dictionary<TKey,TValue> dictionary);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.Dictionary`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.CopyTo(`1[],System.Int32)\n  id: CopyTo(`1[],System.Int32)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: CopyTo(TValue[],Int32)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void CopyTo (TValue[] array, int index);\n    parameters:\n    - id: array\n      type: TValue[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.Count\n  id: Count\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.Count\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.Dictionary<TKey,TValue>.ValueCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Add(`1)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<TValue>.Add (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  id: System#Collections#Generic#ICollection{TValue}#Clear\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<TValue>.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<TValue>.Contains (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  id: System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.Generic.ICollection<TValue>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  id: System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool ICollection<TValue>.Remove (TValue item);\n    parameters:\n    - id: item\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.IEnumerator<TValue> IEnumerable<TValue>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.#ctor(System.Collections.Generic.Dictionary`2)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: Dictionary(Dictionary<TKey,TValue>)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.Dictionary(Dictionary<TKey,TValue>)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.Dictionary(Dictionary<TKey,TValue>)\n- uid: System.Collections.Generic.Dictionary`2\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.CopyTo(`1[],System.Int32)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: CopyTo(TValue[],Int32)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.CopyTo(TValue[],Int32)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.Count\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: Count\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.Count\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.GetEnumerator()\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection+Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<TKey,TValue>+ValueCollection+Enumerator\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection+Enumerator\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection+Enumerator\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Add(`1)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Clear\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection()\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Contains(`1)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#IsReadOnly\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#ICollection{TValue}#Remove(`1)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(TValue)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.ICollection(TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#Generic#IEnumerable{TValue}#GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<TValue>\n  nameWithType: IEnumerator<TValue>\n  fullName: System.Collections.Generic.IEnumerator<TValue>\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.Dictionary`2+ValueCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Generic.Dictionary`2+ValueCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Dictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>+ValueCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n"}