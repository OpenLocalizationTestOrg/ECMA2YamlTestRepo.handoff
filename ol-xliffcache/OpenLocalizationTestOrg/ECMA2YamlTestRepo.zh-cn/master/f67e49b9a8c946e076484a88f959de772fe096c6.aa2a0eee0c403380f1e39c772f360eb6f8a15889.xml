{"nodes":[{"pos":[878,892],"content":"IMethodMessage","needQuote":true,"needEscape":true,"nodes":[{"content":"IMethodMessage","pos":[0,14]}]},{"pos":[1446,1454],"content":"ArgCount","needQuote":true,"needEscape":true,"nodes":[{"content":"ArgCount","pos":[0,8]}]},{"pos":[1764,1798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2007,2011],"content":"Args","needQuote":true,"needEscape":true,"nodes":[{"content":"Args","pos":[0,4]}]},{"pos":[2317,2351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2592,2605],"content":"GetArg(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArg(Int32)","pos":[0,13]}]},{"pos":[2950,2984],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3042,3076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3325,3342],"content":"GetArgName(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArgName(Int32)","pos":[0,17]}]},{"pos":[3697,3731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3789,3823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4044,4054],"content":"HasVarArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"HasVarArgs","pos":[0,10]}]},{"pos":[4373,4407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4644,4662],"content":"LogicalCallContext","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalCallContext","pos":[0,18]}]},{"pos":[5091,5125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5346,5356],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[5713,5747],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5968,5978],"content":"MethodName","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodName","pos":[0,10]}]},{"pos":[6298,6332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6563,6578],"content":"MethodSignature","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodSignature","pos":[0,15]}]},{"pos":[6913,6947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7164,7172],"content":"TypeName","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeName","pos":[0,8]}]},{"pos":[7486,7520],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7727,7730],"content":"Uri","needQuote":true,"needEscape":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[8029,8063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8277,8285],"content":"ArgCount","needQuote":true,"needEscape":true,"nodes":[{"content":"ArgCount","pos":[0,8]}]},{"pos":[8461,8466],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8662,8666],"content":"Args","needQuote":true,"needEscape":true,"nodes":[{"content":"Args","pos":[0,4]}]},{"pos":[8835,8841],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9057,9070],"content":"GetArg(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArg(Int32)","pos":[0,13]}]},{"pos":[9257,9263],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9378,9383],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9599,9616],"content":"GetArgName(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArgName(Int32)","pos":[0,17]}]},{"pos":[9811,9817],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9932,9937],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10139,10149],"content":"HasVarArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"HasVarArgs","pos":[0,10]}]},{"pos":[10331,10338],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10552,10570],"content":"LogicalCallContext","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalCallContext","pos":[0,18]}]},{"pos":[10833,10851],"content":"LogicalCallContext","needQuote":true,"needEscape":true,"nodes":[{"content":"LogicalCallContext","pos":[0,18]}]},{"pos":[11106,11116],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[11323,11333],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[11556,11566],"content":"MethodName","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodName","pos":[0,10]}]},{"pos":[11747,11753],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11962,11977],"content":"MethodSignature","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodSignature","pos":[0,15]}]},{"pos":[12168,12174],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12376,12384],"content":"TypeName","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeName","pos":[0,8]}]},{"pos":[12561,12567],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12764,12767],"content":"Uri","needQuote":true,"needEscape":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[12934,12940],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage\n  id: IMethodMessage\n  children:\n  - System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  - System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  - System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  - System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  - System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  - System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  - System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  - System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  - System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  - System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  - System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  langs:\n  - csharp\n  name: IMethodMessage\n  nameWithType: IMethodMessage\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IMethodMessage : System.Runtime.Remoting.Messaging.IMessage\n  implements:\n  - System.Runtime.Remoting.Messaging.IMessage\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  id: ArgCount\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: ArgCount\n  nameWithType: IMethodMessage.ArgCount\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public int ArgCount { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  id: Args\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: Args\n  nameWithType: IMethodMessage.Args\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public object[] Args { get; }\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  id: GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: GetArg(Int32)\n  nameWithType: IMethodMessage.GetArg(Int32)\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public object GetArg (int argNum);\n    parameters:\n    - id: argNum\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  id: GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: GetArgName(Int32)\n  nameWithType: IMethodMessage.GetArgName(Int32)\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public string GetArgName (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  id: HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: HasVarArgs\n  nameWithType: IMethodMessage.HasVarArgs\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public bool HasVarArgs { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  id: LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: LogicalCallContext\n  nameWithType: IMethodMessage.LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public System.Runtime.Remoting.Messaging.LogicalCallContext LogicalCallContext { get; }\n    return:\n      type: System.Runtime.Remoting.Messaging.LogicalCallContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  id: MethodBase\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: MethodBase\n  nameWithType: IMethodMessage.MethodBase\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public System.Reflection.MethodBase MethodBase { get; }\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  id: MethodName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: MethodName\n  nameWithType: IMethodMessage.MethodName\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public string MethodName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  id: MethodSignature\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: MethodSignature\n  nameWithType: IMethodMessage.MethodSignature\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public object MethodSignature { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  id: TypeName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: TypeName\n  nameWithType: IMethodMessage.TypeName\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public string TypeName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  id: Uri\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: IMethodMessage.Uri\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting.Messaging\n  syntax:\n    content: public string Uri { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: ArgCount\n  nameWithType: IMethodMessage.ArgCount\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.ArgCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Args\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: Args\n  nameWithType: IMethodMessage.Args\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.Args\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: GetArg(Int32)\n  nameWithType: IMethodMessage.GetArg(Int32)\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.GetArg(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(System.Int32)\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: GetArgName(Int32)\n  nameWithType: IMethodMessage.GetArgName(Int32)\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.GetArgName(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: HasVarArgs\n  nameWithType: IMethodMessage.HasVarArgs\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.HasVarArgs\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: IMethodMessage.LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.LogicalCallContext\n  parent: System.Runtime.Remoting.Messaging\n  isExternal: false\n  name: LogicalCallContext\n  nameWithType: LogicalCallContext\n  fullName: System.Runtime.Remoting.Messaging.LogicalCallContext\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodBase\n  nameWithType: IMethodMessage.MethodBase\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.MethodBase\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodName\n  nameWithType: IMethodMessage.MethodName\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.MethodName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: MethodSignature\n  nameWithType: IMethodMessage.MethodSignature\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.MethodSignature\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: TypeName\n  nameWithType: IMethodMessage.TypeName\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.TypeName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n  parent: System.Runtime.Remoting.Messaging.IMethodMessage\n  isExternal: false\n  name: Uri\n  nameWithType: IMethodMessage.Uri\n  fullName: System.Runtime.Remoting.Messaging.IMethodMessage.Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}