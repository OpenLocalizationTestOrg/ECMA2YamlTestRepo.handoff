{"nodes":[{"pos":[2198,2206],"content":"ECDsaCng","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng","pos":[0,8]}]},{"pos":[4563,4573],"content":"ECDsaCng()","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng()","pos":[0,10]}]},{"pos":[5043,5058],"content":"ECDsaCng(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng(Int32)","pos":[0,15]}]},{"pos":[5390,5424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5689,5705],"content":"ECDsaCng(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng(CngKey)","pos":[0,16]}]},{"pos":[6086,6120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6387,6404],"content":"ECDsaCng(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng(ECCurve)","pos":[0,17]}]},{"pos":[6793,6827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7052,7068],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[7420,7454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7713,7746],"content":"ExportExplicitParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportExplicitParameters(Boolean)","pos":[0,33]}]},{"pos":[8213,8247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8333,8367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8610,8635],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[9078,9112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9198,9232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9467,9488],"content":"FromXmlString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String)","pos":[0,21]}]},{"pos":[9854,9888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10276,10312],"content":"FromXmlString(String,ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String,ECKeyXmlFormat)","pos":[0,36]}]},{"pos":[10739,10773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10866,10900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11242,11262],"content":"GenerateKey(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey(ECCurve)","pos":[0,20]}]},{"pos":[11669,11703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11908,11921],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[12299,12333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12658,12692],"content":"HashData(Stream,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Stream,HashAlgorithmName)","pos":[0,34]}]},{"pos":[13149,13183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13286,13320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13378,13412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13843,13889],"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","pos":[0,46]}]},{"pos":[14380,14414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14476,14510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14571,14605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14708,14742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14800,14834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15191,15221],"content":"ImportParameters(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(ECParameters)","pos":[0,30]}]},{"pos":[15673,15707],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15892,15895],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[16226,16260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16485,16501],"content":"SignData(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[])","pos":[0,16]}]},{"pos":[16835,16869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16927,16961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17252,17268],"content":"SignData(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Stream)","pos":[0,16]}]},{"pos":[17615,17649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17707,17741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18078,18106],"content":"SignData(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[18487,18521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18583,18617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18678,18712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18770,18804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19089,19105],"content":"SignHash(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SignHash(Byte[])","pos":[0,16]}]},{"pos":[19448,19482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19540,19574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19807,19827],"content":"ToXmlString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(Boolean)","pos":[0,20]}]},{"pos":[20220,20254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20312,20346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20700,20727],"content":"ToXmlString(ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(ECKeyXmlFormat)","pos":[0,27]}]},{"pos":[21157,21191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21249,21283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21603,21628],"content":"VerifyData(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Byte[],Byte[])","pos":[0,25]}]},{"pos":[21998,22032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22098,22132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22191,22225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22550,22575],"content":"VerifyData(Stream,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Stream,Byte[])","pos":[0,25]}]},{"pos":[22958,22992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23058,23092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23151,23185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23556,23593],"content":"VerifyData(Byte[],Int32,Int32,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Byte[],Int32,Int32,Byte[])","pos":[0,37]}]},{"pos":[24010,24044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24106,24140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24201,24235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24301,24335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24394,24428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24747,24772],"content":"VerifyHash(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyHash(Byte[],Byte[])","pos":[0,25]}]},{"pos":[25151,25185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25251,25285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25344,25378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25510,25544],"content":"System.Security.Cryptography.ECDsa","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.ECDsa","pos":[0,34]}]},{"pos":[25672,25682],"content":"ECDsaCng()","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng()","pos":[0,10]}]},{"pos":[25921,25936],"content":"ECDsaCng(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng(Int32)","pos":[0,15]}]},{"pos":[26109,26114],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26326,26342],"content":"ECDsaCng(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng(CngKey)","pos":[0,16]}]},{"pos":[26562,26568],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[26805,26822],"content":"ECDsaCng(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsaCng(ECCurve)","pos":[0,17]}]},{"pos":[27045,27052],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[27271,27287],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[27464,27471],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27685,27718],"content":"ExportExplicitParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportExplicitParameters(Boolean)","pos":[0,33]}]},{"pos":[27978,27990],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[28141,28148],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28354,28379],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[28623,28635],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[28786,28793],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28995,29016],"content":"FromXmlString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String)","pos":[0,21]}]},{"pos":[29202,29208],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29452,29488],"content":"FromXmlString(String,ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String,ECKeyXmlFormat)","pos":[0,36]}]},{"pos":[29704,29710],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29878,29892],"content":"ECKeyXmlFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"ECKeyXmlFormat","pos":[0,14]}]},{"pos":[30151,30171],"content":"GenerateKey(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey(ECCurve)","pos":[0,20]}]},{"pos":[30400,30407],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[30616,30629],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[30849,30861],"content":"CngAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithm","pos":[0,12]}]},{"pos":[31140,31174],"content":"HashData(Stream,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Stream,HashAlgorithmName)","pos":[0,34]}]},{"pos":[31384,31388],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31508,31514],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[31688,31705],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[32017,32063],"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","pos":[0,46]}]},{"pos":[32297,32301],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32413,32417],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32530,32535],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32648,32653],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32822,32839],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[33114,33144],"content":"ImportParameters(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(ECParameters)","pos":[0,30]}]},{"pos":[33398,33410],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[33619,33622],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[33816,33822],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[34039,34055],"content":"SignData(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[])","pos":[0,16]}]},{"pos":[34229,34233],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34345,34349],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34545,34561],"content":"SignData(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Stream)","pos":[0,16]}]},{"pos":[34735,34739],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34859,34865],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[35089,35117],"content":"SignData(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[35315,35319],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[35431,35435],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[35548,35553],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35666,35671],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35864,35880],"content":"SignHash(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SignHash(Byte[])","pos":[0,16]}]},{"pos":[36054,36058],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36170,36174],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36371,36391],"content":"ToXmlString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(Boolean)","pos":[0,20]}]},{"pos":[36575,36581],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36698,36705],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36935,36962],"content":"ToXmlString(ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(ECKeyXmlFormat)","pos":[0,27]}]},{"pos":[37160,37166],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37334,37348],"content":"ECKeyXmlFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"ECKeyXmlFormat","pos":[0,14]}]},{"pos":[37597,37622],"content":"VerifyData(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Byte[],Byte[])","pos":[0,25]}]},{"pos":[37817,37824],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37940,37944],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[38056,38060],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[38272,38297],"content":"VerifyData(Stream,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Stream,Byte[])","pos":[0,25]}]},{"pos":[38492,38499],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38623,38629],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[38746,38750],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[38985,39022],"content":"VerifyData(Byte[],Int32,Int32,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Byte[],Int32,Int32,Byte[])","pos":[0,37]}]},{"pos":[39241,39248],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39364,39368],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[39481,39486],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39599,39604],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39716,39720],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[39929,39954],"content":"VerifyHash(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyHash(Byte[],Byte[])","pos":[0,25]}]},{"pos":[40149,40156],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40272,40276],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[40388,40392],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECDsaCng\n  id: ECDsaCng\n  children:\n  - System.Security.Cryptography.ECDsaCng.#ctor\n  - System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)\n  - System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)\n  - System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)\n  - System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)\n  - System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  - System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDsaCng.HashAlgorithm\n  - System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)\n  - System.Security.Cryptography.ECDsaCng.Key\n  - System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])\n  - System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)\n  - System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])\n  - System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  - System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])\n  - System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])\n  - System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])\n  langs:\n  - csharp\n  name: ECDsaCng\n  nameWithType: ECDsaCng\n  fullName: System.Security.Cryptography.ECDsaCng\n  type: Class\n  syntax:\n    content: 'public sealed class ECDsaCng : System.Security.Cryptography.ECDsa'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  - System.Security.Cryptography.ECDsa\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.ECDsa.Create\n  - System.Security.Cryptography.ECDsa.Create(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDsa.Create(System.Security.Cryptography.ECParameters)\n  - System.Security.Cryptography.ECDsa.Create(System.String)\n  - System.Security.Cryptography.ECDsa.KeyExchangeAlgorithm\n  - System.Security.Cryptography.ECDsa.SignatureAlgorithm\n  - System.Security.Cryptography.ECDsa.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsa.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsa.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsa.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsa.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDsa.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ECDsaCng()\n  nameWithType: ECDsaCng.ECDsaCng()\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDsaCng ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ECDsaCng(Int32)\n  nameWithType: ECDsaCng.ECDsaCng(Int32)\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(Int32)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDsaCng (int keySize);\n    parameters:\n    - id: keySize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)\n  id: '#ctor(System.Security.Cryptography.CngKey)'\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ECDsaCng(CngKey)\n  nameWithType: ECDsaCng.ECDsaCng(CngKey)\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(CngKey)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDsaCng (System.Security.Cryptography.CngKey key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)\n  id: '#ctor(System.Security.Cryptography.ECCurve)'\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ECDsaCng(ECCurve)\n  nameWithType: ECDsaCng.ECDsaCng(ECCurve)\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(ECCurve)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDsaCng (System.Security.Cryptography.ECCurve curve);\n    parameters:\n    - id: curve\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ECDsaCng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)\n  id: ExportExplicitParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ExportExplicitParameters(Boolean)\n  nameWithType: ECDsaCng.ExportExplicitParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: ECDsaCng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)\n  id: FromXmlString(System.String)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: FromXmlString(String)\n  nameWithType: ECDsaCng.FromXmlString(String)\n  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void FromXmlString (string xmlString);\n    parameters:\n    - id: xmlString\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.FromXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  id: FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: FromXmlString(String,ECKeyXmlFormat)\n  nameWithType: ECDsaCng.FromXmlString(String,ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String,ECKeyXmlFormat)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);\n    parameters:\n    - id: xml\n      type: System.String\n      description: Parameter description to be filled\n    - id: format\n      type: System.Security.Cryptography.ECKeyXmlFormat\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.FromXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)\n  id: GenerateKey(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: GenerateKey(ECCurve)\n  nameWithType: ECDsaCng.GenerateKey(ECCurve)\n  fullName: System.Security.Cryptography.ECDsaCng.GenerateKey(ECCurve)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GenerateKey (System.Security.Cryptography.ECCurve curve);\n    parameters:\n    - id: curve\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: ECDsaCng.HashAlgorithm\n  fullName: System.Security.Cryptography.ECDsaCng.HashAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: ECDsaCng.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.ECDsaCng.HashData(Stream,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.HashData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.HashData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)\n  id: ImportParameters(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ImportParameters(ECParameters)\n  nameWithType: ECDsaCng.ImportParameters(ECParameters)\n  fullName: System.Security.Cryptography.ECDsaCng.ImportParameters(ECParameters)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.Key\n  id: Key\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: ECDsaCng.Key\n  fullName: System.Security.Cryptography.ECDsaCng.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CngKey Key { get; }\n    return:\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])\n  id: SignData(System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: SignData(Byte[])\n  nameWithType: ECDsaCng.SignData(Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignData (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.SignData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)\n  id: SignData(System.IO.Stream)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: SignData(Stream)\n  nameWithType: ECDsaCng.SignData(Stream)\n  fullName: System.Security.Cryptography.ECDsaCng.SignData(Stream)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignData (System.IO.Stream data);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.SignData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)\n  id: SignData(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: SignData(Byte[],Int32,Int32)\n  nameWithType: ECDsaCng.SignData(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignData (byte[] data, int offset, int count);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.SignData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])\n  id: SignHash(System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: SignHash(Byte[])\n  nameWithType: ECDsaCng.SignHash(Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.SignHash(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] SignHash (byte[] hash);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)\n  id: ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ToXmlString(Boolean)\n  nameWithType: ECDsaCng.ToXmlString(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string ToXmlString (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.ToXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  id: ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: ToXmlString(ECKeyXmlFormat)\n  nameWithType: ECDsaCng.ToXmlString(ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(ECKeyXmlFormat)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);\n    parameters:\n    - id: format\n      type: System.Security.Cryptography.ECKeyXmlFormat\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.ToXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])\n  id: VerifyData(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: VerifyData(Byte[],Byte[])\n  nameWithType: ECDsaCng.VerifyData(Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool VerifyData (byte[] data, byte[] signature);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.VerifyData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])\n  id: VerifyData(System.IO.Stream,System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: VerifyData(Stream,Byte[])\n  nameWithType: ECDsaCng.VerifyData(Stream,Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Stream,Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool VerifyData (System.IO.Stream data, byte[] signature);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.VerifyData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])\n  id: VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: VerifyData(Byte[],Int32,Int32,Byte[])\n  nameWithType: ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool VerifyData (byte[] data, int offset, int count, byte[] signature);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDsaCng.VerifyData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])\n  id: VerifyHash(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  langs:\n  - csharp\n  name: VerifyHash(Byte[],Byte[])\n  nameWithType: ECDsaCng.VerifyHash(Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyHash(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool VerifyHash (byte[] hash, byte[] signature);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.ECDsa\n  isExternal: false\n  name: System.Security.Cryptography.ECDsa\n- uid: System.Security.Cryptography.ECDsaCng.#ctor\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ECDsaCng()\n  nameWithType: ECDsaCng.ECDsaCng()\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng()\n- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Int32)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ECDsaCng(Int32)\n  nameWithType: ECDsaCng.ECDsaCng(Int32)\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ECDsaCng(CngKey)\n  nameWithType: ECDsaCng.ECDsaCng(CngKey)\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(CngKey)\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.ECDsaCng.#ctor(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ECDsaCng(ECCurve)\n  nameWithType: ECDsaCng.ECDsaCng(ECCurve)\n  fullName: System.Security.Cryptography.ECDsaCng.ECDsaCng(ECCurve)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.ECDsaCng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ECDsaCng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ExportExplicitParameters(Boolean)\n  nameWithType: ECDsaCng.ExportExplicitParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.ExportExplicitParameters(Boolean)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDsaCng.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: ECDsaCng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: FromXmlString(String)\n  nameWithType: ECDsaCng.FromXmlString(String)\n  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECDsaCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: FromXmlString(String,ECKeyXmlFormat)\n  nameWithType: ECDsaCng.FromXmlString(String,ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDsaCng.FromXmlString(String,ECKeyXmlFormat)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECKeyXmlFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECKeyXmlFormat\n  nameWithType: ECKeyXmlFormat\n  fullName: System.Security.Cryptography.ECKeyXmlFormat\n- uid: System.Security.Cryptography.ECDsaCng.GenerateKey(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: GenerateKey(ECCurve)\n  nameWithType: ECDsaCng.GenerateKey(ECCurve)\n  fullName: System.Security.Cryptography.ECDsaCng.GenerateKey(ECCurve)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.ECDsaCng.HashAlgorithm\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: ECDsaCng.HashAlgorithm\n  fullName: System.Security.Cryptography.ECDsaCng.HashAlgorithm\n- uid: System.Security.Cryptography.CngAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithm\n  nameWithType: CngAlgorithm\n  fullName: System.Security.Cryptography.CngAlgorithm\n- uid: System.Security.Cryptography.ECDsaCng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: ECDsaCng.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.ECDsaCng.HashData(Stream,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.ECDsaCng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.ECDsaCng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.ECDsaCng.ImportParameters(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ImportParameters(ECParameters)\n  nameWithType: ECDsaCng.ImportParameters(ECParameters)\n  fullName: System.Security.Cryptography.ECDsaCng.ImportParameters(ECParameters)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Security.Cryptography.ECDsaCng.Key\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: Key\n  nameWithType: ECDsaCng.Key\n  fullName: System.Security.Cryptography.ECDsaCng.Key\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: SignData(Byte[])\n  nameWithType: ECDsaCng.SignData(Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDsaCng.SignData(System.IO.Stream)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: SignData(Stream)\n  nameWithType: ECDsaCng.SignData(Stream)\n  fullName: System.Security.Cryptography.ECDsaCng.SignData(Stream)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.ECDsaCng.SignData(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: SignData(Byte[],Int32,Int32)\n  nameWithType: ECDsaCng.SignData(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.ECDsaCng.SignData(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ECDsaCng.SignHash(System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: SignHash(Byte[])\n  nameWithType: ECDsaCng.SignHash(Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.SignHash(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ToXmlString(Boolean)\n  nameWithType: ECDsaCng.ToXmlString(Boolean)\n  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDsaCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: ToXmlString(ECKeyXmlFormat)\n  nameWithType: ECDsaCng.ToXmlString(ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDsaCng.ToXmlString(ECKeyXmlFormat)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECKeyXmlFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECKeyXmlFormat\n  nameWithType: ECKeyXmlFormat\n  fullName: System.Security.Cryptography.ECKeyXmlFormat\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: VerifyData(Byte[],Byte[])\n  nameWithType: ECDsaCng.VerifyData(Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.IO.Stream,System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: VerifyData(Stream,Byte[])\n  nameWithType: ECDsaCng.VerifyData(Stream,Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Stream,Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: VerifyData(Byte[],Int32,Int32,Byte[])\n  nameWithType: ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyData(Byte[],Int32,Int32,Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDsaCng.VerifyHash(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  name: VerifyHash(Byte[],Byte[])\n  nameWithType: ECDsaCng.VerifyHash(Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDsaCng.VerifyHash(Byte[],Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDsaCng.FromXmlString*\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  nameWithType: ECDsaCng.\n- uid: System.Security.Cryptography.ECDsaCng.HashData*\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  nameWithType: ECDsaCng.\n- uid: System.Security.Cryptography.ECDsaCng.SignData*\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  nameWithType: ECDsaCng.\n- uid: System.Security.Cryptography.ECDsaCng.ToXmlString*\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  nameWithType: ECDsaCng.\n- uid: System.Security.Cryptography.ECDsaCng.VerifyData*\n  parent: System.Security.Cryptography.ECDsaCng\n  isExternal: false\n  nameWithType: ECDsaCng.\n"}