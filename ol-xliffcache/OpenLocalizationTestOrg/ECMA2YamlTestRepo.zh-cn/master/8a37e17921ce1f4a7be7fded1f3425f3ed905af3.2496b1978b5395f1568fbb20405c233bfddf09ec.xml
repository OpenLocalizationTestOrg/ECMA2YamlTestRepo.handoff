{"nodes":[{"pos":[653,663],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[1117,1122],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[1449,1483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1696,1710],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2032,2066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2125,2159],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2466,2484],"content":"Equals(FieldToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FieldToken)","pos":[0,18]}]},{"pos":[2852,2886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2945,2979],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3226,3239],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3553,3587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3918,3952],"content":"op_Equality(FieldToken,FieldToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FieldToken,FieldToken)","pos":[0,34]}]},{"pos":[4399,4433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4511,4545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4604,4638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4973,5009],"content":"op_Inequality(FieldToken,FieldToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FieldToken,FieldToken)","pos":[0,36]}]},{"pos":[5462,5496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5574,5608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5667,5701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5882,5887],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[6158,6192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6306,6322],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6442,6447],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6635,6645],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[6854,6868],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7039,7046],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7164,7170],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7375,7393],"content":"Equals(FieldToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FieldToken)","pos":[0,18]}]},{"pos":[7572,7579],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7733,7743],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[7942,7955],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8122,8127],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8369,8403],"content":"op_Equality(FieldToken,FieldToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FieldToken,FieldToken)","pos":[0,34]}]},{"pos":[8614,8621],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8775,8785],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[8961,8971],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[9241,9277],"content":"op_Inequality(FieldToken,FieldToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FieldToken,FieldToken)","pos":[0,36]}]},{"pos":[9492,9499],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9653,9663],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[9839,9849],"content":"FieldToken","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldToken","pos":[0,10]}]},{"pos":[10042,10047],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[10198,10203],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.FieldToken\n  id: FieldToken\n  children:\n  - System.Reflection.Emit.FieldToken.Empty\n  - System.Reflection.Emit.FieldToken.Equals(System.Object)\n  - System.Reflection.Emit.FieldToken.Equals(System.Reflection.Emit.FieldToken)\n  - System.Reflection.Emit.FieldToken.GetHashCode\n  - System.Reflection.Emit.FieldToken.op_Equality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  - System.Reflection.Emit.FieldToken.op_Inequality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  - System.Reflection.Emit.FieldToken.Token\n  langs:\n  - csharp\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct FieldToken\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.Empty\n  id: Empty\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: FieldToken.Empty\n  fullName: System.Reflection.Emit.FieldToken.Empty\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static readonly System.Reflection.Emit.FieldToken Empty;\n    return:\n      type: System.Reflection.Emit.FieldToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FieldToken.Equals(Object)\n  fullName: System.Reflection.Emit.FieldToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.FieldToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.Equals(System.Reflection.Emit.FieldToken)\n  id: Equals(System.Reflection.Emit.FieldToken)\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: Equals(FieldToken)\n  nameWithType: FieldToken.Equals(FieldToken)\n  fullName: System.Reflection.Emit.FieldToken.Equals(FieldToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.FieldToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.FieldToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.FieldToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FieldToken.GetHashCode()\n  fullName: System.Reflection.Emit.FieldToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.op_Equality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  id: op_Equality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: op_Equality(FieldToken,FieldToken)\n  nameWithType: FieldToken.op_Equality(FieldToken,FieldToken)\n  fullName: System.Reflection.Emit.FieldToken.op_Equality(FieldToken,FieldToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.FieldToken a, System.Reflection.Emit.FieldToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.FieldToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.FieldToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.op_Inequality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  id: op_Inequality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: op_Inequality(FieldToken,FieldToken)\n  nameWithType: FieldToken.op_Inequality(FieldToken,FieldToken)\n  fullName: System.Reflection.Emit.FieldToken.op_Inequality(FieldToken,FieldToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.FieldToken a, System.Reflection.Emit.FieldToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.FieldToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.FieldToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.FieldToken.Token\n  id: Token\n  parent: System.Reflection.Emit.FieldToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: FieldToken.Token\n  fullName: System.Reflection.Emit.FieldToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.FieldToken.Empty\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: Empty\n  nameWithType: FieldToken.Empty\n  fullName: System.Reflection.Emit.FieldToken.Empty\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.FieldToken.Equals(System.Object)\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FieldToken.Equals(Object)\n  fullName: System.Reflection.Emit.FieldToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.FieldToken.Equals(System.Reflection.Emit.FieldToken)\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: Equals(FieldToken)\n  nameWithType: FieldToken.Equals(FieldToken)\n  fullName: System.Reflection.Emit.FieldToken.Equals(FieldToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.FieldToken.GetHashCode\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FieldToken.GetHashCode()\n  fullName: System.Reflection.Emit.FieldToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.FieldToken.op_Equality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: op_Equality(FieldToken,FieldToken)\n  nameWithType: FieldToken.op_Equality(FieldToken,FieldToken)\n  fullName: System.Reflection.Emit.FieldToken.op_Equality(FieldToken,FieldToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.FieldToken.op_Inequality(System.Reflection.Emit.FieldToken,System.Reflection.Emit.FieldToken)\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: op_Inequality(FieldToken,FieldToken)\n  nameWithType: FieldToken.op_Inequality(FieldToken,FieldToken)\n  fullName: System.Reflection.Emit.FieldToken.op_Inequality(FieldToken,FieldToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.FieldToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: FieldToken\n  nameWithType: FieldToken\n  fullName: System.Reflection.Emit.FieldToken\n- uid: System.Reflection.Emit.FieldToken.Token\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  name: Token\n  nameWithType: FieldToken.Token\n  fullName: System.Reflection.Emit.FieldToken.Token\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.FieldToken.Equals*\n  parent: System.Reflection.Emit.FieldToken\n  isExternal: false\n  nameWithType: FieldToken.\n"}