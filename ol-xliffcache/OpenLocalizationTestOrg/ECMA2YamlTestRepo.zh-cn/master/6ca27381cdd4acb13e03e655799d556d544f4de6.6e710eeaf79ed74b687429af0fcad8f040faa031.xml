{"nodes":[{"pos":[756,761],"content":"Ports","needQuote":true,"needEscape":true,"nodes":[{"content":"Ports","pos":[0,5]}]},{"pos":[1418,1425],"content":"Ports()","needQuote":true,"needEscape":true,"nodes":[{"content":"Ports()","pos":[0,7]}]},{"pos":[1906,1928],"content":"OpenSerialPort(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String)","pos":[0,22]}]},{"pos":[2314,2348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2419,2453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2776,2804],"content":"OpenSerialPort(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32)","pos":[0,28]}]},{"pos":[3216,3250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3314,3348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3419,3453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3822,3857],"content":"OpenSerialPort(String,Int32,Parity)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32,Parity)","pos":[0,35]}]},{"pos":[4314,4348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4412,4446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4518,4552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4623,4657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5052,5093],"content":"OpenSerialPort(String,Int32,Parity,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32,Parity,Int32)","pos":[0,41]}]},{"pos":[5576,5610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5674,5708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5780,5814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5878,5912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5983,6017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6462,6512],"content":"OpenSerialPort(String,Int32,Parity,Int32,StopBits)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32,Parity,Int32,StopBits)","pos":[0,50]}]},{"pos":[7048,7082],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7146,7180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7252,7286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7350,7384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7460,7494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7565,7599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7868,7883],"content":"SerialPortNames","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPortNames","pos":[0,15]}]},{"pos":[8307,8341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8452,8465],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[8589,8596],"content":"Ports()","needQuote":true,"needEscape":true,"nodes":[{"content":"Ports()","pos":[0,7]}]},{"pos":[8830,8852],"content":"OpenSerialPort(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String)","pos":[0,22]}]},{"pos":[9056,9066],"content":"SerialPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPort","pos":[0,10]}]},{"pos":[9199,9205],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9415,9443],"content":"OpenSerialPort(String,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32)","pos":[0,28]}]},{"pos":[9659,9669],"content":"SerialPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPort","pos":[0,10]}]},{"pos":[9802,9808],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9923,9928],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10159,10194],"content":"OpenSerialPort(String,Int32,Parity)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32,Parity)","pos":[0,35]}]},{"pos":[10424,10434],"content":"SerialPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPort","pos":[0,10]}]},{"pos":[10567,10573],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10688,10693],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10824,10830],"content":"Parity","needQuote":true,"needEscape":true,"nodes":[{"content":"Parity","pos":[0,6]}]},{"pos":[11085,11126],"content":"OpenSerialPort(String,Int32,Parity,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32,Parity,Int32)","pos":[0,41]}]},{"pos":[11368,11378],"content":"SerialPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPort","pos":[0,10]}]},{"pos":[11511,11517],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11632,11637],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11768,11774],"content":"Parity","needQuote":true,"needEscape":true,"nodes":[{"content":"Parity","pos":[0,6]}]},{"pos":[11898,11903],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12172,12222],"content":"OpenSerialPort(String,Int32,Parity,Int32,StopBits)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenSerialPort(String,Int32,Parity,Int32,StopBits)","pos":[0,50]}]},{"pos":[12482,12492],"content":"SerialPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPort","pos":[0,10]}]},{"pos":[12625,12631],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12746,12751],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12882,12888],"content":"Parity","needQuote":true,"needEscape":true,"nodes":[{"content":"Parity","pos":[0,6]}]},{"pos":[13012,13017],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13150,13158],"content":"StopBits","needQuote":true,"needEscape":true,"nodes":[{"content":"StopBits","pos":[0,8]}]},{"pos":[13354,13369],"content":"SerialPortNames","needQuote":true,"needEscape":true,"nodes":[{"content":"SerialPortNames","pos":[0,15]}]},{"pos":[13613,13639],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<String>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Devices.Ports\n  id: Ports\n  children:\n  - Microsoft.VisualBasic.Devices.Ports.#ctor\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  - Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  - Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  langs:\n  - csharp\n  name: Ports\n  nameWithType: Ports\n  fullName: Microsoft.VisualBasic.Devices.Ports\n  type: Class\n  syntax:\n    content: public class Ports\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: Ports()\n  nameWithType: Ports.Ports()\n  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public Ports ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  id: OpenSerialPort(System.String)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String)\n  nameWithType: Ports.OpenSerialPort(String)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName);\n    parameters:\n    - id: portName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Ports.SerialPort\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  id: OpenSerialPort(System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate);\n    parameters:\n    - id: portName\n      type: System.String\n      description: Parameter description to be filled\n    - id: baudRate\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Ports.SerialPort\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32,Parity)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity);\n    parameters:\n    - id: portName\n      type: System.String\n      description: Parameter description to be filled\n    - id: baudRate\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Ports.SerialPort\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32,Parity,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: Parameter description to be filled\n    - id: baudRate\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: Parameter description to be filled\n    - id: dataBits\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Ports.SerialPort\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  id: OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public System.IO.Ports.SerialPort OpenSerialPort (string portName, int baudRate, System.IO.Ports.Parity parity, int dataBits, System.IO.Ports.StopBits stopBits);\n    parameters:\n    - id: portName\n      type: System.String\n      description: Parameter description to be filled\n    - id: baudRate\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parity\n      type: System.IO.Ports.Parity\n      description: Parameter description to be filled\n    - id: dataBits\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: stopBits\n      type: System.IO.Ports.StopBits\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Ports.SerialPort\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  id: SerialPortNames\n  parent: Microsoft.VisualBasic.Devices.Ports\n  langs:\n  - csharp\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Devices\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> SerialPortNames { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualBasic.Devices.Ports.#ctor\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: Ports()\n  nameWithType: Ports.Ports()\n  fullName: Microsoft.VisualBasic.Devices.Ports.Ports()\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String)\n  nameWithType: Ports.OpenSerialPort(String)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: true\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: true\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32,Parity)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: true\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Ports.Parity\n  parent: System.IO.Ports\n  isExternal: true\n  name: Parity\n  nameWithType: Parity\n  fullName: System.IO.Ports.Parity\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32,Parity,Int32)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: true\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Ports.Parity\n  parent: System.IO.Ports\n  isExternal: true\n  name: Parity\n  nameWithType: Parity\n  fullName: System.IO.Ports.Parity\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(System.String,System.Int32,System.IO.Ports.Parity,System.Int32,System.IO.Ports.StopBits)\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  nameWithType: Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n  fullName: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort(String,Int32,Parity,Int32,StopBits)\n- uid: System.IO.Ports.SerialPort\n  parent: System.IO.Ports\n  isExternal: true\n  name: SerialPort\n  nameWithType: SerialPort\n  fullName: System.IO.Ports.SerialPort\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Ports.Parity\n  parent: System.IO.Ports\n  isExternal: true\n  name: Parity\n  nameWithType: Parity\n  fullName: System.IO.Ports.Parity\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Ports.StopBits\n  parent: System.IO.Ports\n  isExternal: true\n  name: StopBits\n  nameWithType: StopBits\n  fullName: System.IO.Ports.StopBits\n- uid: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  name: SerialPortNames\n  nameWithType: Ports.SerialPortNames\n  fullName: Microsoft.VisualBasic.Devices.Ports.SerialPortNames\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<String>\n  nameWithType: ReadOnlyCollection<String>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>\n- uid: Microsoft.VisualBasic.Devices.Ports.OpenSerialPort*\n  parent: Microsoft.VisualBasic.Devices.Ports\n  isExternal: false\n  nameWithType: Ports.\n"}