{"nodes":[{"pos":[3183,3202],"content":"TransformCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection","pos":[0,19]}]},{"pos":[5182,5203],"content":"TransformCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection()","pos":[0,21]}]},{"pos":[5839,5882],"content":"TransformCollection(IEnumerable<ph id=\"ph1\">&lt;Transform&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TransformCollection(IEnumerable<Transform>)"},{"pos":[6423,6457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6682,6708],"content":"TransformCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection(Int32)","pos":[0,26]}]},{"pos":[7086,7120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7375,7389],"content":"Add(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Transform)","pos":[0,14]}]},{"pos":[7766,7800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7995,8002],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8450,8457],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8831,8865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9120,9140],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[9537,9571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9790,9809],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[10219,10253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10532,10564],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[10997,11031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11296,11315],"content":"Contains(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Transform)","pos":[0,19]}]},{"pos":[11707,11741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11800,11834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12125,12150],"content":"CopyTo(Transform[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Transform[],Int32)","pos":[0,25]}]},{"pos":[12567,12601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12662,12696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12891,12896],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[13189,13223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13444,13464],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[13857,13891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14128,14147],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[14521,14555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14614,14648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14915,14941],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[15356,15390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15681,15719],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[16170,16204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16415,16430],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[16850,16884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17147,17165],"content":"IndexOf(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Transform)","pos":[0,18]}]},{"pos":[17553,17587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17644,17678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17965,17988],"content":"Insert(Int32,Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Transform)","pos":[0,23]}]},{"pos":[18379,18413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18492,18526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18747,18758],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[19125,19159],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19234,19268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19529,19546],"content":"Remove(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Transform)","pos":[0,17]}]},{"pos":[19932,19966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20025,20059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20288,20303],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[20642,20676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21037,21075],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[21506,21540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21907,21947],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[22471,22505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22832,22882],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[23307,23341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23402,23436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23725,23770],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[24179,24213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24490,24529],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[24921,24955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25242,25288],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[25733,25767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26052,26088],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[26466,26500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26557,26591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26886,26927],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[27321,27355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27414,27448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27741,27781],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[28171,28205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28262,28296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28613,28658],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[29068,29102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29164,29198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29469,29505],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[29887,29921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30190,30225],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[30604,30638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30923,30959],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[31370,31404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31462,31496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31787,31826],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[32214,32248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32387,32428],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[32562,32583],"content":"TransformCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection()","pos":[0,21]}]},{"pos":[32922,32965],"content":"TransformCollection(IEnumerable<ph id=\"ph1\">&lt;Transform&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TransformCollection(IEnumerable<Transform>)"},{"pos":[33286,33308],"content":"IEnumerable<ph id=\"ph1\">&lt;Transform&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Transform>"},{"pos":[33578,33604],"content":"TransformCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection(Int32)","pos":[0,26]}]},{"pos":[33813,33818],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34029,34043],"content":"Add(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Transform)","pos":[0,14]}]},{"pos":[34260,34269],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[34472,34479],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[34718,34725],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[34938,34957],"content":"TransformCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection","pos":[0,19]}]},{"pos":[35210,35230],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[35446,35455],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[35664,35683],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[35920,35939],"content":"TransformCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection","pos":[0,19]}]},{"pos":[36204,36236],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[36476,36485],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36717,36736],"content":"Contains(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Transform)","pos":[0,19]}]},{"pos":[36933,36940],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37089,37098],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[37349,37374],"content":"CopyTo(Transform[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Transform[],Int32)","pos":[0,25]}]},{"pos":[37613,37622],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[37759,37764],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37945,37950],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[38117,38122],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38316,38336],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[38552,38561],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[38779,38798],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[38995,39002],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39121,39128],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39349,39375],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[39603,39612],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39857,39895],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[40147,40156],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[40361,40376],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[40616,40646],"content":"TransformCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformCollection+Enumerator","pos":[0,30]}]},{"pos":[40925,40943],"content":"IndexOf(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Transform)","pos":[0,18]}]},{"pos":[41136,41141],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41286,41295],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[41544,41567],"content":"Insert(Int32,Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Transform)","pos":[0,23]}]},{"pos":[41770,41775],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41920,41929],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[42145,42156],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[42367,42376],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[42511,42516],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42730,42747],"content":"Remove(Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Transform)","pos":[0,17]}]},{"pos":[42940,42947],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43096,43105],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[43325,43340],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[43527,43532],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43789,43827],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[44062,44069],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44333,44373],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[44688,44710],"content":"IEnumerator<ph id=\"ph1\">&lt;Transform&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<Transform>"},{"pos":[45025,45075],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[45332,45337],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[45450,45455],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45676,45721],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[45970,45977],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46196,46235],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[46471,46477],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46699,46745],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[47024,47035],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[47278,47314],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[47543,47548],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47662,47668],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47894,47935],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[48176,48183],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48301,48307],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48532,48572],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[48809,48814],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48928,48934],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49171,49216],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[49463,49468],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49582,49588],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49802,49838],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[50069,50076],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50291,50326],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[50555,50562],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50785,50821],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[51051,51057],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51172,51177],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[51399,51438],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[51674,51680],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TransformCollection\n  id: TransformCollection\n  children:\n  - System.Windows.Media.TransformCollection.#ctor\n  - System.Windows.Media.TransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Transform})\n  - System.Windows.Media.TransformCollection.#ctor(System.Int32)\n  - System.Windows.Media.TransformCollection.Add(System.Windows.Media.Transform)\n  - System.Windows.Media.TransformCollection.Clear\n  - System.Windows.Media.TransformCollection.Clone\n  - System.Windows.Media.TransformCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.TransformCollection.CloneCurrentValue\n  - System.Windows.Media.TransformCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.TransformCollection.Contains(System.Windows.Media.Transform)\n  - System.Windows.Media.TransformCollection.CopyTo(System.Windows.Media.Transform[],System.Int32)\n  - System.Windows.Media.TransformCollection.Count\n  - System.Windows.Media.TransformCollection.CreateInstanceCore\n  - System.Windows.Media.TransformCollection.FreezeCore(System.Boolean)\n  - System.Windows.Media.TransformCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.TransformCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.TransformCollection.GetEnumerator\n  - System.Windows.Media.TransformCollection.IndexOf(System.Windows.Media.Transform)\n  - System.Windows.Media.TransformCollection.Insert(System.Int32,System.Windows.Media.Transform)\n  - System.Windows.Media.TransformCollection.Item(System.Int32)\n  - System.Windows.Media.TransformCollection.Remove(System.Windows.Media.Transform)\n  - System.Windows.Media.TransformCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.TransformCollection.System#Collections#Generic#ICollection{System#Windows#Media#Transform}#IsReadOnly\n  - System.Windows.Media.TransformCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Transform}#GetEnumerator\n  - System.Windows.Media.TransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.TransformCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.TransformCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.TransformCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.TransformCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.TransformCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.TransformCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.TransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.TransformCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.TransformCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.TransformCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.TransformCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: TransformCollection\n  nameWithType: TransformCollection\n  fullName: System.Windows.Media.TransformCollection\n  type: Class\n  syntax:\n    content: 'public sealed class TransformCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.Media.Transform>, System.Collections.Generic.IEnumerable<System.Windows.Media.Transform>, System.Collections.Generic.IList<System.Windows.Media.Transform>, System.Collections.IList'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.Transform>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.Transform>\n  - System.Collections.Generic.IList<System.Windows.Media.Transform>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: TransformCollection()\n  nameWithType: TransformCollection.TransformCollection()\n  fullName: System.Windows.Media.TransformCollection.TransformCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public TransformCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Transform})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Transform})'\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: TransformCollection(IEnumerable<Transform>)\n  nameWithType: TransformCollection.TransformCollection(IEnumerable<Transform>)\n  fullName: System.Windows.Media.TransformCollection.TransformCollection(IEnumerable<Transform>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public TransformCollection (System.Collections.Generic.IEnumerable<System.Windows.Media.Transform> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.Transform}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: TransformCollection(Int32)\n  nameWithType: TransformCollection.TransformCollection(Int32)\n  fullName: System.Windows.Media.TransformCollection.TransformCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public TransformCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Add(System.Windows.Media.Transform)\n  id: Add(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Add(Transform)\n  nameWithType: TransformCollection.Add(Transform)\n  fullName: System.Windows.Media.TransformCollection.Add(Transform)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Media.Transform value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TransformCollection.Clear()\n  fullName: System.Windows.Media.TransformCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: TransformCollection.Clone()\n  fullName: System.Windows.Media.TransformCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TransformCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TransformCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: TransformCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: TransformCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.TransformCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TransformCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TransformCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: TransformCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Contains(System.Windows.Media.Transform)\n  id: Contains(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Contains(Transform)\n  nameWithType: TransformCollection.Contains(Transform)\n  fullName: System.Windows.Media.TransformCollection.Contains(Transform)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Media.Transform value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.CopyTo(System.Windows.Media.Transform[],System.Int32)\n  id: CopyTo(System.Windows.Media.Transform[],System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: CopyTo(Transform[],Int32)\n  nameWithType: TransformCollection.CopyTo(Transform[],Int32)\n  fullName: System.Windows.Media.TransformCollection.CopyTo(Transform[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Media.Transform[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.Transform[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Count\n  id: Count\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TransformCollection.Count\n  fullName: System.Windows.Media.TransformCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: TransformCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.TransformCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: TransformCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.TransformCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: TransformCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: TransformCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TransformCollection.GetEnumerator()\n  fullName: System.Windows.Media.TransformCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.TransformCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.TransformCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.IndexOf(System.Windows.Media.Transform)\n  id: IndexOf(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: IndexOf(Transform)\n  nameWithType: TransformCollection.IndexOf(Transform)\n  fullName: System.Windows.Media.TransformCollection.IndexOf(Transform)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Media.Transform value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Insert(System.Int32,System.Windows.Media.Transform)\n  id: Insert(System.Int32,System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Insert(Int32,Transform)\n  nameWithType: TransformCollection.Insert(Int32,Transform)\n  fullName: System.Windows.Media.TransformCollection.Insert(Int32,Transform)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.Transform value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TransformCollection.Item(Int32)\n  fullName: System.Windows.Media.TransformCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Transform this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.Remove(System.Windows.Media.Transform)\n  id: Remove(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: Remove(Transform)\n  nameWithType: TransformCollection.Remove(Transform)\n  fullName: System.Windows.Media.TransformCollection.Remove(Transform)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Media.Transform value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: TransformCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.TransformCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#Generic#ICollection{System#Windows#Media#Transform}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#Media#Transform}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: TransformCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.TransformCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.Media.Transform>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Transform}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#Media#Transform}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: TransformCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.TransformCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.Media.Transform> IEnumerable<Transform>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.Transform}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TransformCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TransformCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.TransformCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TransformCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.TransformCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TransformCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TransformCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TransformCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TransformCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TransformCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TransformCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TransformCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TransformCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.TransformCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TransformCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.TransformCollection.#ctor\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: TransformCollection()\n  nameWithType: TransformCollection.TransformCollection()\n  fullName: System.Windows.Media.TransformCollection.TransformCollection()\n- uid: System.Windows.Media.TransformCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Transform})\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: TransformCollection(IEnumerable<Transform>)\n  nameWithType: TransformCollection.TransformCollection(IEnumerable<Transform>)\n  fullName: System.Windows.Media.TransformCollection.TransformCollection(IEnumerable<Transform>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.Transform}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Transform>\n  nameWithType: IEnumerable<Transform>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.Transform>\n- uid: System.Windows.Media.TransformCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: TransformCollection(Int32)\n  nameWithType: TransformCollection.TransformCollection(Int32)\n  fullName: System.Windows.Media.TransformCollection.TransformCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.Add(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Add(Transform)\n  nameWithType: TransformCollection.Add(Transform)\n  fullName: System.Windows.Media.TransformCollection.Add(Transform)\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.TransformCollection.Clear\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TransformCollection.Clear()\n  fullName: System.Windows.Media.TransformCollection.Clear()\n- uid: System.Windows.Media.TransformCollection.Clone\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: TransformCollection.Clone()\n  fullName: System.Windows.Media.TransformCollection.Clone()\n- uid: System.Windows.Media.TransformCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: TransformCollection\n  nameWithType: TransformCollection\n  fullName: System.Windows.Media.TransformCollection\n- uid: System.Windows.Media.TransformCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: TransformCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TransformCollection.CloneCurrentValue\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: TransformCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.TransformCollection.CloneCurrentValue()\n- uid: System.Windows.Media.TransformCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: TransformCollection\n  nameWithType: TransformCollection\n  fullName: System.Windows.Media.TransformCollection\n- uid: System.Windows.Media.TransformCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: TransformCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TransformCollection.Contains(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Contains(Transform)\n  nameWithType: TransformCollection.Contains(Transform)\n  fullName: System.Windows.Media.TransformCollection.Contains(Transform)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.TransformCollection.CopyTo(System.Windows.Media.Transform[],System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: CopyTo(Transform[],Int32)\n  nameWithType: TransformCollection.CopyTo(Transform[],Int32)\n  fullName: System.Windows.Media.TransformCollection.CopyTo(Transform[],Int32)\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.Count\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Count\n  nameWithType: TransformCollection.Count\n  fullName: System.Windows.Media.TransformCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.CreateInstanceCore\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: TransformCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.TransformCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TransformCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: TransformCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.TransformCollection.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TransformCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: TransformCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TransformCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: TransformCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.TransformCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.TransformCollection.GetEnumerator\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TransformCollection.GetEnumerator()\n  fullName: System.Windows.Media.TransformCollection.GetEnumerator()\n- uid: System.Windows.Media.TransformCollection.Enumerator\n  parent: System.Windows.Media\n  isExternal: false\n  name: TransformCollection+Enumerator\n  nameWithType: TransformCollection+Enumerator\n  fullName: System.Windows.Media.TransformCollection+Enumerator\n- uid: System.Windows.Media.TransformCollection.IndexOf(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: IndexOf(Transform)\n  nameWithType: TransformCollection.IndexOf(Transform)\n  fullName: System.Windows.Media.TransformCollection.IndexOf(Transform)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.TransformCollection.Insert(System.Int32,System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Insert(Int32,Transform)\n  nameWithType: TransformCollection.Insert(Int32,Transform)\n  fullName: System.Windows.Media.TransformCollection.Insert(Int32,Transform)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.TransformCollection.Item(System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TransformCollection.Item(Int32)\n  fullName: System.Windows.Media.TransformCollection.Item(Int32)\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.Remove(System.Windows.Media.Transform)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: Remove(Transform)\n  nameWithType: TransformCollection.Remove(Transform)\n  fullName: System.Windows.Media.TransformCollection.Remove(Transform)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.TransformCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: TransformCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.TransformCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.System#Collections#Generic#ICollection{System#Windows#Media#Transform}#IsReadOnly\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: TransformCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.TransformCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TransformCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Transform}#GetEnumerator\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: TransformCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.TransformCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.Transform}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<Transform>\n  nameWithType: IEnumerator<Transform>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.Transform>\n- uid: System.Windows.Media.TransformCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: TransformCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TransformCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.TransformCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TransformCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TransformCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.TransformCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TransformCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: TransformCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: TransformCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: TransformCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: TransformCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: TransformCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TransformCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TransformCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: TransformCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TransformCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.TransformCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: TransformCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.TransformCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}