{"nodes":[{"pos":[645,659],"content":"ConsoleKeyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]},{"pos":[1173,1228],"content":"ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)","pos":[0,55]}]},{"pos":[1663,1697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1761,1795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1858,1892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1953,1987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2052,2086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2291,2313],"content":"Equals(ConsoleKeyInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ConsoleKeyInfo)","pos":[0,22]}]},{"pos":[2634,2668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2727,2761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2992,3006],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3308,3342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3401,3435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3646,3659],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3949,3983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4136,4139],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[4392,4426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4587,4594],"content":"KeyChar","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyChar","pos":[0,7]}]},{"pos":[4847,4881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5046,5055],"content":"Modifiers","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifiers","pos":[0,9]}]},{"pos":[5338,5372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5631,5673],"content":"op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)","pos":[0,42]}]},{"pos":[6062,6096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6162,6196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6255,6289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6552,6596],"content":"op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)","pos":[0,44]}]},{"pos":[6991,7025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7091,7125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7184,7218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7332,7348],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[7520,7575],"content":"ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)","pos":[0,55]}]},{"pos":[7817,7821],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[7937,7947],"content":"ConsoleKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKey","pos":[0,10]}]},{"pos":[8072,8079],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8198,8205],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8324,8331],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8502,8524],"content":"Equals(ConsoleKeyInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ConsoleKeyInfo)","pos":[0,22]}]},{"pos":[8703,8710],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8836,8850],"content":"ConsoleKeyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]},{"pos":[9027,9041],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[9204,9211],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9329,9335],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9486,9499],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9658,9663],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9804,9807],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[9951,9961],"content":"ConsoleKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKey","pos":[0,10]}]},{"pos":[10116,10123],"content":"KeyChar","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyChar","pos":[0,7]}]},{"pos":[10269,10273],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[10418,10427],"content":"Modifiers","needQuote":true,"needEscape":true,"nodes":[{"content":"Modifiers","pos":[0,9]}]},{"pos":[10589,10605],"content":"ConsoleModifiers","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleModifiers","pos":[0,16]}]},{"pos":[10821,10863],"content":"op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)","pos":[0,42]}]},{"pos":[11082,11089],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11215,11229],"content":"ConsoleKeyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]},{"pos":[11369,11383],"content":"ConsoleKeyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]},{"pos":[11597,11641],"content":"op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)","pos":[0,44]}]},{"pos":[11864,11871],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11997,12011],"content":"ConsoleKeyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]},{"pos":[12151,12165],"content":"ConsoleKeyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConsoleKeyInfo","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ConsoleKeyInfo\n  id: ConsoleKeyInfo\n  children:\n  - System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)\n  - System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)\n  - System.ConsoleKeyInfo.Equals(System.Object)\n  - System.ConsoleKeyInfo.GetHashCode\n  - System.ConsoleKeyInfo.Key\n  - System.ConsoleKeyInfo.KeyChar\n  - System.ConsoleKeyInfo.Modifiers\n  - System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  - System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  langs:\n  - csharp\n  name: ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n  type: Struct\n  syntax:\n    content: public struct ConsoleKeyInfo\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)\n  id: '#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)'\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)\n  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)\n  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ConsoleKeyInfo (char keyChar, ConsoleKey key, bool shift, bool alt, bool control);\n    parameters:\n    - id: keyChar\n      type: System.Char\n      description: Parameter description to be filled\n    - id: key\n      type: System.ConsoleKey\n      description: Parameter description to be filled\n    - id: shift\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: alt\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: control\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)\n  id: Equals(System.ConsoleKeyInfo)\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: Equals(ConsoleKeyInfo)\n  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)\n  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ConsoleKeyInfo obj);\n    parameters:\n    - id: obj\n      type: System.ConsoleKeyInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ConsoleKeyInfo.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ConsoleKeyInfo.Equals(Object)\n  fullName: System.ConsoleKeyInfo.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ConsoleKeyInfo.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.GetHashCode\n  id: GetHashCode\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ConsoleKeyInfo.GetHashCode()\n  fullName: System.ConsoleKeyInfo.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.Key\n  id: Key\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: Key\n  nameWithType: ConsoleKeyInfo.Key\n  fullName: System.ConsoleKeyInfo.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ConsoleKey Key { get; }\n    return:\n      type: System.ConsoleKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.KeyChar\n  id: KeyChar\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: KeyChar\n  nameWithType: ConsoleKeyInfo.KeyChar\n  fullName: System.ConsoleKeyInfo.KeyChar\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public char KeyChar { get; }\n    return:\n      type: System.Char\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.Modifiers\n  id: Modifiers\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: Modifiers\n  nameWithType: ConsoleKeyInfo.Modifiers\n  fullName: System.ConsoleKeyInfo.Modifiers\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ConsoleModifiers Modifiers { get; }\n    return:\n      type: System.ConsoleModifiers\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  id: op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)\n  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)\n  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Equality (ConsoleKeyInfo a, ConsoleKeyInfo b);\n    parameters:\n    - id: a\n      type: System.ConsoleKeyInfo\n      description: Parameter description to be filled\n    - id: b\n      type: System.ConsoleKeyInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  id: op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  parent: System.ConsoleKeyInfo\n  langs:\n  - csharp\n  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)\n  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)\n  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Inequality (ConsoleKeyInfo a, ConsoleKeyInfo b);\n    parameters:\n    - id: a\n      type: System.ConsoleKeyInfo\n      description: Parameter description to be filled\n    - id: b\n      type: System.ConsoleKeyInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ConsoleKeyInfo.#ctor(System.Char,System.ConsoleKey,System.Boolean,System.Boolean,System.Boolean)\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)\n  nameWithType: ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)\n  fullName: System.ConsoleKeyInfo.ConsoleKeyInfo(Char,ConsoleKey,Boolean,Boolean,Boolean)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.ConsoleKey\n  parent: System\n  isExternal: false\n  name: ConsoleKey\n  nameWithType: ConsoleKey\n  fullName: System.ConsoleKey\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ConsoleKeyInfo.Equals(System.ConsoleKeyInfo)\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: Equals(ConsoleKeyInfo)\n  nameWithType: ConsoleKeyInfo.Equals(ConsoleKeyInfo)\n  fullName: System.ConsoleKeyInfo.Equals(ConsoleKeyInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ConsoleKeyInfo\n  parent: System\n  isExternal: false\n  name: ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n- uid: System.ConsoleKeyInfo.Equals(System.Object)\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConsoleKeyInfo.Equals(Object)\n  fullName: System.ConsoleKeyInfo.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ConsoleKeyInfo.GetHashCode\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConsoleKeyInfo.GetHashCode()\n  fullName: System.ConsoleKeyInfo.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ConsoleKeyInfo.Key\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: Key\n  nameWithType: ConsoleKeyInfo.Key\n  fullName: System.ConsoleKeyInfo.Key\n- uid: System.ConsoleKey\n  parent: System\n  isExternal: false\n  name: ConsoleKey\n  nameWithType: ConsoleKey\n  fullName: System.ConsoleKey\n- uid: System.ConsoleKeyInfo.KeyChar\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: KeyChar\n  nameWithType: ConsoleKeyInfo.KeyChar\n  fullName: System.ConsoleKeyInfo.KeyChar\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.ConsoleKeyInfo.Modifiers\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: Modifiers\n  nameWithType: ConsoleKeyInfo.Modifiers\n  fullName: System.ConsoleKeyInfo.Modifiers\n- uid: System.ConsoleModifiers\n  parent: System\n  isExternal: false\n  name: ConsoleModifiers\n  nameWithType: ConsoleModifiers\n  fullName: System.ConsoleModifiers\n- uid: System.ConsoleKeyInfo.op_Equality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)\n  nameWithType: ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)\n  fullName: System.ConsoleKeyInfo.op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ConsoleKeyInfo\n  parent: System\n  isExternal: false\n  name: ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n- uid: System.ConsoleKeyInfo\n  parent: System\n  isExternal: false\n  name: ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n- uid: System.ConsoleKeyInfo.op_Inequality(System.ConsoleKeyInfo,System.ConsoleKeyInfo)\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  name: op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)\n  nameWithType: ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)\n  fullName: System.ConsoleKeyInfo.op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ConsoleKeyInfo\n  parent: System\n  isExternal: false\n  name: ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n- uid: System.ConsoleKeyInfo\n  parent: System\n  isExternal: false\n  name: ConsoleKeyInfo\n  nameWithType: ConsoleKeyInfo\n  fullName: System.ConsoleKeyInfo\n- uid: System.ConsoleKeyInfo.Equals*\n  parent: System.ConsoleKeyInfo\n  isExternal: false\n  nameWithType: ConsoleKeyInfo.\n"}