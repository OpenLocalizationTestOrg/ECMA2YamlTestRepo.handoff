{"nodes":[{"pos":[1147,1154],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[1537,1538],"content":"A","needQuote":true,"needEscape":true,"nodes":[{"content":"A","pos":[0,1]}]},{"pos":[1799,1833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2012,2013],"content":"B","needQuote":true,"needEscape":true,"nodes":[{"content":"B","pos":[0,1]}]},{"pos":[2274,2308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2501,2509],"content":"Cofactor","needQuote":true,"needEscape":true,"nodes":[{"content":"Cofactor","pos":[0,8]}]},{"pos":[2791,2825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3076,3106],"content":"CreateFromFriendlyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromFriendlyName(String)","pos":[0,30]}]},{"pos":[3539,3573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3654,3688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3959,3977],"content":"CreateFromOid(Oid)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromOid(Oid)","pos":[0,18]}]},{"pos":[4408,4442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4523,4557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4794,4817],"content":"CreateFromValue(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromValue(String)","pos":[0,23]}]},{"pos":[5215,5249],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5330,5364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5559,5568],"content":"CurveType","needQuote":true,"needEscape":true,"nodes":[{"content":"CurveType","pos":[0,9]}]},{"pos":[5930,5964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6143,6144],"content":"G","needQuote":true,"needEscape":true,"nodes":[{"content":"G","pos":[0,1]}]},{"pos":[6458,6492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6677,6681],"content":"Hash","needQuote":true,"needEscape":true,"nodes":[{"content":"Hash","pos":[0,4]}]},{"pos":[7051,7085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7296,7313],"content":"IsCharacteristic2","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCharacteristic2","pos":[0,17]}]},{"pos":[7632,7666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7863,7873],"content":"IsExplicit","needQuote":true,"needEscape":true,"nodes":[{"content":"IsExplicit","pos":[0,10]}]},{"pos":[8171,8205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8396,8403],"content":"IsNamed","needQuote":true,"needEscape":true,"nodes":[{"content":"IsNamed","pos":[0,7]}]},{"pos":[8692,8726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8917,8924],"content":"IsPrime","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrime","pos":[0,7]}]},{"pos":[9213,9247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9430,9433],"content":"Oid","needQuote":true,"needEscape":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[9756,9790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9977,9982],"content":"Order","needQuote":true,"needEscape":true,"nodes":[{"content":"Order","pos":[0,5]}]},{"pos":[10255,10289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10486,10496],"content":"Polynomial","needQuote":true,"needEscape":true,"nodes":[{"content":"Polynomial","pos":[0,10]}]},{"pos":[10784,10818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11005,11010],"content":"Prime","needQuote":true,"needEscape":true,"nodes":[{"content":"Prime","pos":[0,5]}]},{"pos":[11283,11317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11502,11506],"content":"Seed","needQuote":true,"needEscape":true,"nodes":[{"content":"Seed","pos":[0,4]}]},{"pos":[11776,11810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12003,12013],"content":"Validate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Validate()","pos":[0,10]}]},{"pos":[12376,12392],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[12514,12515],"content":"A","needQuote":true,"needEscape":true,"nodes":[{"content":"A","pos":[0,1]}]},{"pos":[12657,12661],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[12830,12831],"content":"B","needQuote":true,"needEscape":true,"nodes":[{"content":"B","pos":[0,1]}]},{"pos":[12973,12977],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[13153,13161],"content":"Cofactor","needQuote":true,"needEscape":true,"nodes":[{"content":"Cofactor","pos":[0,8]}]},{"pos":[13317,13321],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[13526,13556],"content":"CreateFromFriendlyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromFriendlyName(String)","pos":[0,30]}]},{"pos":[13803,13810],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[13950,13956],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14173,14191],"content":"CreateFromOid(Oid)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromOid(Oid)","pos":[0,18]}]},{"pos":[14414,14421],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[14601,14604],"content":"Oid","needQuote":true,"needEscape":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[14820,14843],"content":"CreateFromValue(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromValue(String)","pos":[0,23]}]},{"pos":[15076,15083],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[15223,15229],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15408,15417],"content":"CurveType","needQuote":true,"needEscape":true,"nodes":[{"content":"CurveType","pos":[0,9]}]},{"pos":[15634,15653],"content":"ECCurve+ECCurveType","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve+ECCurveType","pos":[0,19]}]},{"pos":[15872,15873],"content":"G","needQuote":true,"needEscape":true,"nodes":[{"content":"G","pos":[0,1]}]},{"pos":[16062,16069],"content":"ECPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"ECPoint","pos":[0,7]}]},{"pos":[16267,16271],"content":"Hash","needQuote":true,"needEscape":true,"nodes":[{"content":"Hash","pos":[0,4]}]},{"pos":[16471,16498],"content":"Nullable<ph id=\"ph1\">&lt;HashAlgorithmName&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<HashAlgorithmName>"},{"pos":[16756,16773],"content":"IsCharacteristic2","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCharacteristic2","pos":[0,17]}]},{"pos":[16950,16957],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17139,17149],"content":"IsExplicit","needQuote":true,"needEscape":true,"nodes":[{"content":"IsExplicit","pos":[0,10]}]},{"pos":[17312,17319],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17498,17505],"content":"IsNamed","needQuote":true,"needEscape":true,"nodes":[{"content":"IsNamed","pos":[0,7]}]},{"pos":[17662,17669],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17848,17855],"content":"IsPrime","needQuote":true,"needEscape":true,"nodes":[{"content":"IsPrime","pos":[0,7]}]},{"pos":[18012,18019],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18194,18197],"content":"Oid","needQuote":true,"needEscape":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[18385,18388],"content":"Oid","needQuote":true,"needEscape":true,"nodes":[{"content":"Oid","pos":[0,3]}]},{"pos":[18579,18584],"content":"Order","needQuote":true,"needEscape":true,"nodes":[{"content":"Order","pos":[0,5]}]},{"pos":[18734,18738],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18916,18926],"content":"Polynomial","needQuote":true,"needEscape":true,"nodes":[{"content":"Polynomial","pos":[0,10]}]},{"pos":[19086,19090],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[19263,19268],"content":"Prime","needQuote":true,"needEscape":true,"nodes":[{"content":"Prime","pos":[0,5]}]},{"pos":[19418,19422],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[19594,19598],"content":"Seed","needQuote":true,"needEscape":true,"nodes":[{"content":"Seed","pos":[0,4]}]},{"pos":[19746,19750],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[19926,19936],"content":"Validate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Validate()","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECCurve\n  id: ECCurve\n  children:\n  - System.Security.Cryptography.ECCurve.A\n  - System.Security.Cryptography.ECCurve.B\n  - System.Security.Cryptography.ECCurve.Cofactor\n  - System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  - System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  - System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  - System.Security.Cryptography.ECCurve.CurveType\n  - System.Security.Cryptography.ECCurve.G\n  - System.Security.Cryptography.ECCurve.Hash\n  - System.Security.Cryptography.ECCurve.IsCharacteristic2\n  - System.Security.Cryptography.ECCurve.IsExplicit\n  - System.Security.Cryptography.ECCurve.IsNamed\n  - System.Security.Cryptography.ECCurve.IsPrime\n  - System.Security.Cryptography.ECCurve.Oid\n  - System.Security.Cryptography.ECCurve.Order\n  - System.Security.Cryptography.ECCurve.Polynomial\n  - System.Security.Cryptography.ECCurve.Prime\n  - System.Security.Cryptography.ECCurve.Seed\n  - System.Security.Cryptography.ECCurve.Validate\n  langs:\n  - csharp\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n  type: Struct\n  syntax:\n    content: public struct ECCurve\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.A\n  id: A\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: A\n  nameWithType: ECCurve.A\n  fullName: System.Security.Cryptography.ECCurve.A\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] A;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.B\n  id: B\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: B\n  nameWithType: ECCurve.B\n  fullName: System.Security.Cryptography.ECCurve.B\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] B;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Cofactor\n  id: Cofactor\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Cofactor\n  nameWithType: ECCurve.Cofactor\n  fullName: System.Security.Cryptography.ECCurve.Cofactor\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Cofactor;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  id: CreateFromFriendlyName(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CreateFromFriendlyName(String)\n  nameWithType: ECCurve.CreateFromFriendlyName(String)\n  fullName: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECCurve CreateFromFriendlyName (string oidFriendlyName);\n    parameters:\n    - id: oidFriendlyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  id: CreateFromOid(System.Security.Cryptography.Oid)\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CreateFromOid(Oid)\n  nameWithType: ECCurve.CreateFromOid(Oid)\n  fullName: System.Security.Cryptography.ECCurve.CreateFromOid(Oid)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECCurve CreateFromOid (System.Security.Cryptography.Oid curveOid);\n    parameters:\n    - id: curveOid\n      type: System.Security.Cryptography.Oid\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  id: CreateFromValue(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CreateFromValue(String)\n  nameWithType: ECCurve.CreateFromValue(String)\n  fullName: System.Security.Cryptography.ECCurve.CreateFromValue(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.ECCurve CreateFromValue (string oidValue);\n    parameters:\n    - id: oidValue\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.CurveType\n  id: CurveType\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: CurveType\n  nameWithType: ECCurve.CurveType\n  fullName: System.Security.Cryptography.ECCurve.CurveType\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.ECCurve.ECCurveType CurveType;\n    return:\n      type: System.Security.Cryptography.ECCurve.ECCurveType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.G\n  id: G\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: G\n  nameWithType: ECCurve.G\n  fullName: System.Security.Cryptography.ECCurve.G\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.ECPoint G;\n    return:\n      type: System.Security.Cryptography.ECPoint\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Hash\n  id: Hash\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Hash\n  nameWithType: ECCurve.Hash\n  fullName: System.Security.Cryptography.ECCurve.Hash\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public Nullable<System.Security.Cryptography.HashAlgorithmName> Hash;\n    return:\n      type: System.Nullable{System.Security.Cryptography.HashAlgorithmName}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.IsCharacteristic2\n  id: IsCharacteristic2\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsCharacteristic2\n  nameWithType: ECCurve.IsCharacteristic2\n  fullName: System.Security.Cryptography.ECCurve.IsCharacteristic2\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool IsCharacteristic2 { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.IsExplicit\n  id: IsExplicit\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsExplicit\n  nameWithType: ECCurve.IsExplicit\n  fullName: System.Security.Cryptography.ECCurve.IsExplicit\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool IsExplicit { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.IsNamed\n  id: IsNamed\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsNamed\n  nameWithType: ECCurve.IsNamed\n  fullName: System.Security.Cryptography.ECCurve.IsNamed\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool IsNamed { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.IsPrime\n  id: IsPrime\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: IsPrime\n  nameWithType: ECCurve.IsPrime\n  fullName: System.Security.Cryptography.ECCurve.IsPrime\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool IsPrime { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Oid\n  id: Oid\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Oid\n  nameWithType: ECCurve.Oid\n  fullName: System.Security.Cryptography.ECCurve.Oid\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.Oid Oid { get; }\n    return:\n      type: System.Security.Cryptography.Oid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Order\n  id: Order\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Order\n  nameWithType: ECCurve.Order\n  fullName: System.Security.Cryptography.ECCurve.Order\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Order;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Polynomial\n  id: Polynomial\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Polynomial\n  nameWithType: ECCurve.Polynomial\n  fullName: System.Security.Cryptography.ECCurve.Polynomial\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Polynomial;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Prime\n  id: Prime\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Prime\n  nameWithType: ECCurve.Prime\n  fullName: System.Security.Cryptography.ECCurve.Prime\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Prime;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Seed\n  id: Seed\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Seed\n  nameWithType: ECCurve.Seed\n  fullName: System.Security.Cryptography.ECCurve.Seed\n  type: Field\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Seed;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECCurve.Validate\n  id: Validate\n  parent: System.Security.Cryptography.ECCurve\n  langs:\n  - csharp\n  name: Validate()\n  nameWithType: ECCurve.Validate()\n  fullName: System.Security.Cryptography.ECCurve.Validate()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Validate ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Security.Cryptography.ECCurve.A\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: A\n  nameWithType: ECCurve.A\n  fullName: System.Security.Cryptography.ECCurve.A\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.B\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: B\n  nameWithType: ECCurve.B\n  fullName: System.Security.Cryptography.ECCurve.B\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.Cofactor\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Cofactor\n  nameWithType: ECCurve.Cofactor\n  fullName: System.Security.Cryptography.ECCurve.Cofactor\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromFriendlyName(String)\n  nameWithType: ECCurve.CreateFromFriendlyName(String)\n  fullName: System.Security.Cryptography.ECCurve.CreateFromFriendlyName(String)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromOid(Oid)\n  nameWithType: ECCurve.CreateFromOid(Oid)\n  fullName: System.Security.Cryptography.ECCurve.CreateFromOid(Oid)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: true\n  name: Oid\n  nameWithType: Oid\n  fullName: System.Security.Cryptography.Oid\n- uid: System.Security.Cryptography.ECCurve.CreateFromValue(System.String)\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CreateFromValue(String)\n  nameWithType: ECCurve.CreateFromValue(String)\n  fullName: System.Security.Cryptography.ECCurve.CreateFromValue(String)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECCurve.CurveType\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: CurveType\n  nameWithType: ECCurve.CurveType\n  fullName: System.Security.Cryptography.ECCurve.CurveType\n- uid: System.Security.Cryptography.ECCurve.ECCurveType\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve+ECCurveType\n  nameWithType: ECCurve+ECCurveType\n  fullName: System.Security.Cryptography.ECCurve+ECCurveType\n- uid: System.Security.Cryptography.ECCurve.G\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: G\n  nameWithType: ECCurve.G\n  fullName: System.Security.Cryptography.ECCurve.G\n- uid: System.Security.Cryptography.ECPoint\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECPoint\n  nameWithType: ECPoint\n  fullName: System.Security.Cryptography.ECPoint\n- uid: System.Security.Cryptography.ECCurve.Hash\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Hash\n  nameWithType: ECCurve.Hash\n  fullName: System.Security.Cryptography.ECCurve.Hash\n- uid: System.Nullable{System.Security.Cryptography.HashAlgorithmName}\n  parent: System\n  isExternal: false\n  name: Nullable<HashAlgorithmName>\n  nameWithType: Nullable<HashAlgorithmName>\n  fullName: System.Nullable<System.Security.Cryptography.HashAlgorithmName>\n- uid: System.Security.Cryptography.ECCurve.IsCharacteristic2\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsCharacteristic2\n  nameWithType: ECCurve.IsCharacteristic2\n  fullName: System.Security.Cryptography.ECCurve.IsCharacteristic2\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECCurve.IsExplicit\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsExplicit\n  nameWithType: ECCurve.IsExplicit\n  fullName: System.Security.Cryptography.ECCurve.IsExplicit\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECCurve.IsNamed\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsNamed\n  nameWithType: ECCurve.IsNamed\n  fullName: System.Security.Cryptography.ECCurve.IsNamed\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECCurve.IsPrime\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: IsPrime\n  nameWithType: ECCurve.IsPrime\n  fullName: System.Security.Cryptography.ECCurve.IsPrime\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECCurve.Oid\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Oid\n  nameWithType: ECCurve.Oid\n  fullName: System.Security.Cryptography.ECCurve.Oid\n- uid: System.Security.Cryptography.Oid\n  parent: System.Security.Cryptography\n  isExternal: true\n  name: Oid\n  nameWithType: Oid\n  fullName: System.Security.Cryptography.Oid\n- uid: System.Security.Cryptography.ECCurve.Order\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Order\n  nameWithType: ECCurve.Order\n  fullName: System.Security.Cryptography.ECCurve.Order\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.Polynomial\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Polynomial\n  nameWithType: ECCurve.Polynomial\n  fullName: System.Security.Cryptography.ECCurve.Polynomial\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.Prime\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Prime\n  nameWithType: ECCurve.Prime\n  fullName: System.Security.Cryptography.ECCurve.Prime\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.Seed\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Seed\n  nameWithType: ECCurve.Seed\n  fullName: System.Security.Cryptography.ECCurve.Seed\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECCurve.Validate\n  parent: System.Security.Cryptography.ECCurve\n  isExternal: false\n  name: Validate()\n  nameWithType: ECCurve.Validate()\n  fullName: System.Security.Cryptography.ECCurve.Validate()\n"}