{"nodes":[{"pos":[925,947],"content":"ZoneIdentityPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"ZoneIdentityPermission","pos":[0,22]}]},{"pos":[2404,2443],"content":"ZoneIdentityPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"ZoneIdentityPermission(PermissionState)","pos":[0,39]}]},{"pos":[2927,2961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3238,3274],"content":"ZoneIdentityPermission(SecurityZone)","needQuote":true,"needEscape":true,"nodes":[{"content":"ZoneIdentityPermission(SecurityZone)","pos":[0,36]}]},{"pos":[3720,3754],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3967,3973],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[4339,4373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4658,4682],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[5102,5136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5417,5439],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[5878,5912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5984,6018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6301,6324],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[6743,6777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6836,6870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7099,7111],"content":"SecurityZone","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityZone","pos":[0,12]}]},{"pos":[7483,7517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7732,7739],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[8116,8150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8423,8441],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[8868,8902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8974,9008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9142,9178],"content":"System.Security.CodeAccessPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.CodeAccessPermission","pos":[0,36]}]},{"pos":[9377,9416],"content":"ZoneIdentityPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"ZoneIdentityPermission(PermissionState)","pos":[0,39]}]},{"pos":[9716,9731],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[10003,10039],"content":"ZoneIdentityPermission(SecurityZone)","needQuote":true,"needEscape":true,"nodes":[{"content":"ZoneIdentityPermission(SecurityZone)","pos":[0,36]}]},{"pos":[10306,10318],"content":"SecurityZone","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityZone","pos":[0,12]}]},{"pos":[10541,10547],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[10753,10764],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[11021,11045],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[11291,11306],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[11569,11591],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[11829,11840],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[11998,12009],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[12265,12288],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[12506,12513],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12654,12665],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[12894,12906],"content":"SecurityZone","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityZone","pos":[0,12]}]},{"pos":[13125,13137],"content":"SecurityZone","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityZone","pos":[0,12]}]},{"pos":[13361,13368],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[13580,13595],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[13854,13872],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[14102,14113],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[14271,14282],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.ZoneIdentityPermission\n  id: ZoneIdentityPermission\n  children:\n  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)\n  - System.Security.Permissions.ZoneIdentityPermission.Copy\n  - System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  - System.Security.Permissions.ZoneIdentityPermission.ToXml\n  - System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: ZoneIdentityPermission\n  nameWithType: ZoneIdentityPermission\n  fullName: System.Security.Permissions.ZoneIdentityPermission\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ZoneIdentityPermission : System.Security.CodeAccessPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: ZoneIdentityPermission(PermissionState)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public ZoneIdentityPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)\n  id: '#ctor(System.Security.SecurityZone)'\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: ZoneIdentityPermission(SecurityZone)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public ZoneIdentityPermission (System.Security.SecurityZone zone);\n    parameters:\n    - id: zone\n      type: System.Security.SecurityZone\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ZoneIdentityPermission.Copy()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: ZoneIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  id: SecurityZone\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: SecurityZone\n  nameWithType: ZoneIdentityPermission.SecurityZone\n  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.SecurityZone SecurityZone { get; set; }\n    return:\n      type: System.Security.SecurityZone\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ZoneIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: ZoneIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ZoneIdentityPermission(PermissionState)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.ZoneIdentityPermission.#ctor(System.Security.SecurityZone)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ZoneIdentityPermission(SecurityZone)\n  nameWithType: ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ZoneIdentityPermission(SecurityZone)\n- uid: System.Security.SecurityZone\n  parent: System.Security\n  isExternal: false\n  name: SecurityZone\n  nameWithType: SecurityZone\n  fullName: System.Security.SecurityZone\n- uid: System.Security.Permissions.ZoneIdentityPermission.Copy\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: ZoneIdentityPermission.Copy()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.ZoneIdentityPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ZoneIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.ZoneIdentityPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ZoneIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Intersect(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ZoneIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: SecurityZone\n  nameWithType: ZoneIdentityPermission.SecurityZone\n  fullName: System.Security.Permissions.ZoneIdentityPermission.SecurityZone\n- uid: System.Security.SecurityZone\n  parent: System.Security\n  isExternal: false\n  name: SecurityZone\n  nameWithType: SecurityZone\n  fullName: System.Security.SecurityZone\n- uid: System.Security.Permissions.ZoneIdentityPermission.ToXml\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: ZoneIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.ZoneIdentityPermission.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.ZoneIdentityPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.ZoneIdentityPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ZoneIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.ZoneIdentityPermission.Union(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n"}