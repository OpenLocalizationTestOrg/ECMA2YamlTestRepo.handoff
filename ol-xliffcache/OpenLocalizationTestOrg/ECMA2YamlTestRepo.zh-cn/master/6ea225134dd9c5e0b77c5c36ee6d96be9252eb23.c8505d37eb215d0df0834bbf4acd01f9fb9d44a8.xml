{"nodes":[{"pos":[436,442],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[889,897],"content":"Object()","needQuote":true,"needEscape":true,"nodes":[{"content":"Object()","pos":[0,8]}]},{"pos":[1264,1278],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1559,1593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1652,1686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1921,1942],"content":"Equals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object,Object)","pos":[0,21]}]},{"pos":[2251,2285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2346,2380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2439,2473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2654,2664],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[3004,3017],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3290,3324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3469,3478],"content":"GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[3731,3765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3926,3943],"content":"MemberwiseClone()","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[4227,4261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4480,4510],"content":"ReferenceEquals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReferenceEquals(Object,Object)","pos":[0,30]}]},{"pos":[4846,4880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4941,4975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5034,5068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5215,5225],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5493,5527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5668,5676],"content":"Object()","needQuote":true,"needEscape":true,"nodes":[{"content":"Object()","pos":[0,8]}]},{"pos":[5839,5853],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6000,6007],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6125,6131],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6290,6311],"content":"Equals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object,Object)","pos":[0,21]}]},{"pos":[6472,6479],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6597,6603],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6719,6725],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6857,6867],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[7024,7037],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7180,7185],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7314,7323],"content":"GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[7457,7461],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7596,7613],"content":"MemberwiseClone()","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberwiseClone()","pos":[0,17]}]},{"pos":[7765,7771],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7939,7969],"content":"ReferenceEquals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReferenceEquals(Object,Object)","pos":[0,30]}]},{"pos":[8148,8155],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8273,8279],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8395,8401],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8533,8543],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[8681,8687],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Object\n  id: Object\n  children:\n  - System.Object.#ctor\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.Finalize\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  langs:\n  - csharp\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class Object\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.#ctor\n  id: '#ctor'\n  parent: System.Object\n  langs:\n  - csharp\n  name: Object()\n  nameWithType: Object.Object()\n  fullName: System.Object.Object()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public Object ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Object\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Object.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.Equals(System.Object,System.Object)\n  id: Equals(System.Object,System.Object)\n  parent: System.Object\n  langs:\n  - csharp\n  name: Equals(Object,Object)\n  nameWithType: Object.Equals(Object,Object)\n  fullName: System.Object.Equals(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool Equals (object objA, object objB);\n    parameters:\n    - id: objA\n      type: System.Object\n      description: Parameter description to be filled\n    - id: objB\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Object.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.Finalize\n  id: Finalize\n  parent: System.Object\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: Object.Finalize()\n  fullName: System.Object.Finalize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: ~Object ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.GetHashCode\n  id: GetHashCode\n  parent: System.Object\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.GetType\n  id: GetType\n  parent: System.Object\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.MemberwiseClone\n  id: MemberwiseClone\n  parent: System.Object\n  langs:\n  - csharp\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected object MemberwiseClone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  id: ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  langs:\n  - csharp\n  name: ReferenceEquals(Object,Object)\n  nameWithType: Object.ReferenceEquals(Object,Object)\n  fullName: System.Object.ReferenceEquals(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool ReferenceEquals (object objA, object objB);\n    parameters:\n    - id: objA\n      type: System.Object\n      description: Parameter description to be filled\n    - id: objB\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Object.ToString\n  id: ToString\n  parent: System.Object\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object.#ctor\n  parent: System.Object\n  isExternal: false\n  name: Object()\n  nameWithType: Object.Object()\n  fullName: System.Object.Object()\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: System.Object.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object,Object)\n  nameWithType: Object.Equals(Object,Object)\n  fullName: System.Object.Equals(Object,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.Finalize\n  parent: System.Object\n  isExternal: false\n  name: Finalize()\n  nameWithType: Object.Finalize()\n  fullName: System.Object.Finalize()\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: System.Object.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: System.Object.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: System.Object.MemberwiseClone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object,Object)\n  nameWithType: Object.ReferenceEquals(Object,Object)\n  fullName: System.Object.ReferenceEquals(Object,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: System.Object.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object.Equals*\n  parent: System.Object\n  isExternal: false\n  nameWithType: Object.\n"}