### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.AttachedProperty
  id: AttachedProperty
  children:
  - System.Activities.Presentation.Model.AttachedProperty.#ctor
  - System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  - System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  - System.Activities.Presentation.Model.AttachedProperty.Name
  - System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.OwnerType
  - System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  - System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  - System.Activities.Presentation.Model.AttachedProperty.Type
  langs:
  - csharp
  name: AttachedProperty
  nameWithType: AttachedProperty
  fullName: System.Activities.Presentation.Model.AttachedProperty
  type: Class
  syntax:
    content: public abstract class AttachedProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: protected AttachedProperty ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  id: GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public abstract object GetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: Parameter description to be filled
    return:
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  id: IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public bool IsBrowsable { get; set; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  id: Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  id: NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public void NotifyPropertyChanged (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  id: OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public Type OwnerType { get; set; }
    return:
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  id: ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public abstract void ResetValue (System.Activities.Presentation.Model.ModelItem modelItem);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  id: SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public abstract void SetValue (System.Activities.Presentation.Model.ModelItem modelItem, object value);
    parameters:
    - id: modelItem
      type: System.Activities.Presentation.Model.ModelItem
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  id: Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  langs:
  - csharp
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.AttachedProperty.#ctor
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: AttachedProperty()
  nameWithType: AttachedProperty.AttachedProperty()
  fullName: System.Activities.Presentation.Model.AttachedProperty.AttachedProperty()
- uid: System.Activities.Presentation.Model.AttachedProperty.GetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: GetValue(ModelItem)
  nameWithType: AttachedProperty.GetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.GetValue(ModelItem)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: AttachedProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsBrowsable
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: AttachedProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.AttachedProperty.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.AttachedProperty.Name
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Name
  nameWithType: AttachedProperty.Name
  fullName: System.Activities.Presentation.Model.AttachedProperty.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: NotifyPropertyChanged(ModelItem)
  nameWithType: AttachedProperty.NotifyPropertyChanged(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.NotifyPropertyChanged(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.AttachedProperty.OwnerType
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: OwnerType
  nameWithType: AttachedProperty.OwnerType
  fullName: System.Activities.Presentation.Model.AttachedProperty.OwnerType
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.AttachedProperty.ResetValue(System.Activities.Presentation.Model.ModelItem)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: ResetValue(ModelItem)
  nameWithType: AttachedProperty.ResetValue(ModelItem)
  fullName: System.Activities.Presentation.Model.AttachedProperty.ResetValue(ModelItem)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.AttachedProperty.SetValue(System.Activities.Presentation.Model.ModelItem,System.Object)
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: SetValue(ModelItem,Object)
  nameWithType: AttachedProperty.SetValue(ModelItem,Object)
  fullName: System.Activities.Presentation.Model.AttachedProperty.SetValue(ModelItem,Object)
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Activities.Presentation.Model.AttachedProperty.Type
  parent: System.Activities.Presentation.Model.AttachedProperty
  isExternal: false
  name: Type
  nameWithType: AttachedProperty.Type
  fullName: System.Activities.Presentation.Model.AttachedProperty.Type
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
