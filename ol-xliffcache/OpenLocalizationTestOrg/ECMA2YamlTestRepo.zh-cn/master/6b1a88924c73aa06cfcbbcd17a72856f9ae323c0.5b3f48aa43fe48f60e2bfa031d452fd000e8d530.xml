{"nodes":[{"pos":[573,582],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[2797,2804],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[3138,3172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3371,3390],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[3760,3794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3975,3983],"content":"Identity","needQuote":true,"needEscape":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[4317,4351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4530,4537],"content":"Inverse","needQuote":true,"needEscape":true,"nodes":[{"content":"Inverse","pos":[0,7]}]},{"pos":[4884,4918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5123,5136],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[5487,5521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5596,5630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5867,5888],"content":"TransformBounds(Rect)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformBounds(Rect)","pos":[0,21]}]},{"pos":[6271,6305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6369,6403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6680,6705],"content":"TryTransform(Point,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryTransform(Point,Point)","pos":[0,25]}]},{"pos":[7119,7153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7223,7257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7316,7350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7525,7530],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[7851,7885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8020,8057],"content":"System.Windows.Media.GeneralTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.GeneralTransform","pos":[0,37]}]},{"pos":[8171,8178],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8361,8370],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[8565,8584],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[8791,8800],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[8986,8994],"content":"Identity","needQuote":true,"needEscape":true,"nodes":[{"content":"Identity","pos":[0,8]}]},{"pos":[9179,9188],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[9373,9380],"content":"Inverse","needQuote":true,"needEscape":true,"nodes":[{"content":"Inverse","pos":[0,7]}]},{"pos":[9570,9586],"content":"GeneralTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"GeneralTransform","pos":[0,16]}]},{"pos":[9798,9811],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[10006,10015],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[10151,10157],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10351,10372],"content":"TransformBounds(Rect)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformBounds(Rect)","pos":[0,21]}]},{"pos":[10565,10569],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[10702,10706],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[10924,10949],"content":"TryTransform(Point,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryTransform(Point,Point)","pos":[0,25]}]},{"pos":[11138,11145],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11277,11282],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[11418,11423],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[11592,11597],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[11772,11778],"content":"Matrix","needQuote":true,"needEscape":true,"nodes":[{"content":"Matrix","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Transform\n  id: Transform\n  children:\n  - System.Windows.Media.Transform.Clone\n  - System.Windows.Media.Transform.CloneCurrentValue\n  - System.Windows.Media.Transform.Identity\n  - System.Windows.Media.Transform.Inverse\n  - System.Windows.Media.Transform.Parse(System.String)\n  - System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  - System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  - System.Windows.Media.Transform.Value\n  langs:\n  - csharp\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.TransformConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.TransformValueSerializer))]\n\n      public abstract class Transform : System.Windows.Media.GeneralTransform\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.GeneralTransform\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.GeneralTransform.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.GeneralTransform.ToString\n  - System.Windows.Media.GeneralTransform.ToString(System.IFormatProvider)\n  - System.Windows.Media.GeneralTransform.Transform(System.Windows.Point)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.Clone\n  id: Clone\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Transform.Clone()\n  fullName: System.Windows.Media.Transform.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Transform Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: Transform.CloneCurrentValue()\n  fullName: System.Windows.Media.Transform.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Transform CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.Identity\n  id: Identity\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Identity\n  nameWithType: Transform.Identity\n  fullName: System.Windows.Media.Transform.Identity\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Transform Identity { get; }\n    return:\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.Inverse\n  id: Inverse\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Inverse\n  nameWithType: Transform.Inverse\n  fullName: System.Windows.Media.Transform.Inverse\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override System.Windows.Media.GeneralTransform Inverse { get; }\n    return:\n      type: System.Windows.Media.GeneralTransform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Transform.Parse(String)\n  fullName: System.Windows.Media.Transform.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Transform Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  id: TransformBounds(System.Windows.Rect)\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: TransformBounds(Rect)\n  nameWithType: Transform.TransformBounds(Rect)\n  fullName: System.Windows.Media.Transform.TransformBounds(Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override System.Windows.Rect TransformBounds (System.Windows.Rect rect);\n    parameters:\n    - id: rect\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  id: TryTransform(System.Windows.Point,System.Windows.Point@)\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: TryTransform(Point,Point)\n  nameWithType: Transform.TryTransform(Point,Point)\n  fullName: System.Windows.Media.Transform.TryTransform(Point,Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool TryTransform (System.Windows.Point inPoint, out System.Windows.Point result);\n    parameters:\n    - id: inPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: result\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Transform.Value\n  id: Value\n  parent: System.Windows.Media.Transform\n  langs:\n  - csharp\n  name: Value\n  nameWithType: Transform.Value\n  fullName: System.Windows.Media.Transform.Value\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public abstract System.Windows.Media.Matrix Value { get; }\n    return:\n      type: System.Windows.Media.Matrix\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.GeneralTransform\n  isExternal: false\n  name: System.Windows.Media.GeneralTransform\n- uid: System.Windows.Media.Transform.Clone\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Clone()\n  nameWithType: Transform.Clone()\n  fullName: System.Windows.Media.Transform.Clone()\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.Transform.CloneCurrentValue\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Transform.CloneCurrentValue()\n  fullName: System.Windows.Media.Transform.CloneCurrentValue()\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.Transform.Identity\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Identity\n  nameWithType: Transform.Identity\n  fullName: System.Windows.Media.Transform.Identity\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.Transform.Inverse\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Inverse\n  nameWithType: Transform.Inverse\n  fullName: System.Windows.Media.Transform.Inverse\n- uid: System.Windows.Media.GeneralTransform\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeneralTransform\n  nameWithType: GeneralTransform\n  fullName: System.Windows.Media.GeneralTransform\n- uid: System.Windows.Media.Transform.Parse(System.String)\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Transform.Parse(String)\n  fullName: System.Windows.Media.Transform.Parse(String)\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Transform.TransformBounds(System.Windows.Rect)\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: TransformBounds(Rect)\n  nameWithType: Transform.TransformBounds(Rect)\n  fullName: System.Windows.Media.Transform.TransformBounds(Rect)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Transform.TryTransform(System.Windows.Point,System.Windows.Point@)\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: TryTransform(Point,Point)\n  nameWithType: Transform.TryTransform(Point,Point)\n  fullName: System.Windows.Media.Transform.TryTransform(Point,Point)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.Transform.Value\n  parent: System.Windows.Media.Transform\n  isExternal: false\n  name: Value\n  nameWithType: Transform.Value\n  fullName: System.Windows.Media.Transform.Value\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: true\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n"}