{"nodes":[{"pos":[261,278],"content":"AssemblyNameProxy","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyNameProxy","pos":[0,17]}]},{"pos":[1299,1318],"content":"AssemblyNameProxy()","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyNameProxy()","pos":[0,19]}]},{"pos":[1824,1847],"content":"GetAssemblyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyName(String)","pos":[0,23]}]},{"pos":[2235,2269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2344,2378],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2501,2526],"content":"System.MarshalByRefObject","needQuote":true,"needEscape":true,"nodes":[{"content":"System.MarshalByRefObject","pos":[0,25]}]},{"pos":[2650,2669],"content":"AssemblyNameProxy()","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyNameProxy()","pos":[0,19]}]},{"pos":[2940,2963],"content":"GetAssemblyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyName(String)","pos":[0,23]}]},{"pos":[3188,3200],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[3339,3345],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.AssemblyNameProxy\n  id: AssemblyNameProxy\n  children:\n  - System.Reflection.AssemblyNameProxy.#ctor\n  - System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)\n  langs:\n  - csharp\n  name: AssemblyNameProxy\n  nameWithType: AssemblyNameProxy\n  fullName: System.Reflection.AssemblyNameProxy\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class AssemblyNameProxy : MarshalByRefObject\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements: []\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyNameProxy.#ctor\n  id: '#ctor'\n  parent: System.Reflection.AssemblyNameProxy\n  langs:\n  - csharp\n  name: AssemblyNameProxy()\n  nameWithType: AssemblyNameProxy.AssemblyNameProxy()\n  fullName: System.Reflection.AssemblyNameProxy.AssemblyNameProxy()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public AssemblyNameProxy ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)\n  id: GetAssemblyName(System.String)\n  parent: System.Reflection.AssemblyNameProxy\n  langs:\n  - csharp\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyNameProxy.GetAssemblyName(String)\n  fullName: System.Reflection.AssemblyNameProxy.GetAssemblyName(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.Reflection.AssemblyNameProxy.#ctor\n  parent: System.Reflection.AssemblyNameProxy\n  isExternal: false\n  name: AssemblyNameProxy()\n  nameWithType: AssemblyNameProxy.AssemblyNameProxy()\n  fullName: System.Reflection.AssemblyNameProxy.AssemblyNameProxy()\n- uid: System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)\n  parent: System.Reflection.AssemblyNameProxy\n  isExternal: false\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyNameProxy.GetAssemblyName(String)\n  fullName: System.Reflection.AssemblyNameProxy.GetAssemblyName(String)\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}