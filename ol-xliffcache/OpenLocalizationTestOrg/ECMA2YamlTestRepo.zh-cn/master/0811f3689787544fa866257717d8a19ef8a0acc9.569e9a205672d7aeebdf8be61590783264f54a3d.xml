{"nodes":[{"pos":[452,466],"content":"InputScopeName","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeName","pos":[0,14]}]},{"pos":[1468,1484],"content":"InputScopeName()","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeName()","pos":[0,16]}]},{"pos":[2025,2060],"content":"InputScopeName(InputScopeNameValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeName(InputScopeNameValue)","pos":[0,35]}]},{"pos":[2508,2542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2763,2779],"content":"AddChild(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddChild(Object)","pos":[0,16]}]},{"pos":[3114,3148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3367,3382],"content":"AddText(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddText(String)","pos":[0,15]}]},{"pos":[3712,3746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3939,3948],"content":"NameValue","needQuote":true,"needEscape":true,"nodes":[{"content":"NameValue","pos":[0,9]}]},{"pos":[4313,4347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4458,4471],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[4595,4611],"content":"InputScopeName()","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeName()","pos":[0,16]}]},{"pos":[4890,4925],"content":"InputScopeName(InputScopeNameValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeName(InputScopeNameValue)","pos":[0,35]}]},{"pos":[5184,5203],"content":"InputScopeNameValue","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeNameValue","pos":[0,19]}]},{"pos":[5434,5450],"content":"AddChild(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddChild(Object)","pos":[0,16]}]},{"pos":[5630,5636],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5826,5841],"content":"AddText(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddText(String)","pos":[0,15]}]},{"pos":[6019,6025],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6202,6211],"content":"NameValue","needQuote":true,"needEscape":true,"nodes":[{"content":"NameValue","pos":[0,9]}]},{"pos":[6418,6437],"content":"InputScopeNameValue","needQuote":true,"needEscape":true,"nodes":[{"content":"InputScopeNameValue","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.InputScopeName\n  id: InputScopeName\n  children:\n  - System.Windows.Input.InputScopeName.#ctor\n  - System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)\n  - System.Windows.Input.InputScopeName.AddChild(System.Object)\n  - System.Windows.Input.InputScopeName.AddText(System.String)\n  - System.Windows.Input.InputScopeName.NameValue\n  langs:\n  - csharp\n  name: InputScopeName\n  nameWithType: InputScopeName\n  fullName: System.Windows.Input.InputScopeName\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(\"System.Windows.Input.InputScopeNameConverter, PresentationCore, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null\")]\n\n      [System.Windows.Markup.ContentProperty(\"NameValue\")]\n\n      public class InputScopeName : System.Windows.Markup.IAddChild\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Markup.IAddChild\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.InputScopeName.#ctor\n  id: '#ctor'\n  parent: System.Windows.Input.InputScopeName\n  langs:\n  - csharp\n  name: InputScopeName()\n  nameWithType: InputScopeName.InputScopeName()\n  fullName: System.Windows.Input.InputScopeName.InputScopeName()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public InputScopeName ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)\n  id: '#ctor(System.Windows.Input.InputScopeNameValue)'\n  parent: System.Windows.Input.InputScopeName\n  langs:\n  - csharp\n  name: InputScopeName(InputScopeNameValue)\n  nameWithType: InputScopeName.InputScopeName(InputScopeNameValue)\n  fullName: System.Windows.Input.InputScopeName.InputScopeName(InputScopeNameValue)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public InputScopeName (System.Windows.Input.InputScopeNameValue nameValue);\n    parameters:\n    - id: nameValue\n      type: System.Windows.Input.InputScopeNameValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.InputScopeName.AddChild(System.Object)\n  id: AddChild(System.Object)\n  parent: System.Windows.Input.InputScopeName\n  langs:\n  - csharp\n  name: AddChild(Object)\n  nameWithType: InputScopeName.AddChild(Object)\n  fullName: System.Windows.Input.InputScopeName.AddChild(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public void AddChild (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.InputScopeName.AddText(System.String)\n  id: AddText(System.String)\n  parent: System.Windows.Input.InputScopeName\n  langs:\n  - csharp\n  name: AddText(String)\n  nameWithType: InputScopeName.AddText(String)\n  fullName: System.Windows.Input.InputScopeName.AddText(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public void AddText (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.InputScopeName.NameValue\n  id: NameValue\n  parent: System.Windows.Input.InputScopeName\n  langs:\n  - csharp\n  name: NameValue\n  nameWithType: InputScopeName.NameValue\n  fullName: System.Windows.Input.InputScopeName.NameValue\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.InputScopeNameValue NameValue { get; set; }\n    return:\n      type: System.Windows.Input.InputScopeNameValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Input.InputScopeName.#ctor\n  parent: System.Windows.Input.InputScopeName\n  isExternal: false\n  name: InputScopeName()\n  nameWithType: InputScopeName.InputScopeName()\n  fullName: System.Windows.Input.InputScopeName.InputScopeName()\n- uid: System.Windows.Input.InputScopeName.#ctor(System.Windows.Input.InputScopeNameValue)\n  parent: System.Windows.Input.InputScopeName\n  isExternal: false\n  name: InputScopeName(InputScopeNameValue)\n  nameWithType: InputScopeName.InputScopeName(InputScopeNameValue)\n  fullName: System.Windows.Input.InputScopeName.InputScopeName(InputScopeNameValue)\n- uid: System.Windows.Input.InputScopeNameValue\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputScopeNameValue\n  nameWithType: InputScopeNameValue\n  fullName: System.Windows.Input.InputScopeNameValue\n- uid: System.Windows.Input.InputScopeName.AddChild(System.Object)\n  parent: System.Windows.Input.InputScopeName\n  isExternal: false\n  name: AddChild(Object)\n  nameWithType: InputScopeName.AddChild(Object)\n  fullName: System.Windows.Input.InputScopeName.AddChild(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.InputScopeName.AddText(System.String)\n  parent: System.Windows.Input.InputScopeName\n  isExternal: false\n  name: AddText(String)\n  nameWithType: InputScopeName.AddText(String)\n  fullName: System.Windows.Input.InputScopeName.AddText(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Input.InputScopeName.NameValue\n  parent: System.Windows.Input.InputScopeName\n  isExternal: false\n  name: NameValue\n  nameWithType: InputScopeName.NameValue\n  fullName: System.Windows.Input.InputScopeName.NameValue\n- uid: System.Windows.Input.InputScopeNameValue\n  parent: System.Windows.Input\n  isExternal: false\n  name: InputScopeNameValue\n  nameWithType: InputScopeNameValue\n  fullName: System.Windows.Input.InputScopeNameValue\n"}