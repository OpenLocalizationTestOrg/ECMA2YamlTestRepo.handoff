{"nodes":[{"pos":[1285,1293],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[2140,2159],"content":"BitArray(Boolean[])","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Boolean[])","pos":[0,19]}]},{"pos":[2481,2515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2716,2732],"content":"BitArray(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Byte[])","pos":[0,16]}]},{"pos":[3043,3077],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3306,3324],"content":"BitArray(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(BitArray)","pos":[0,18]}]},{"pos":[3672,3706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3905,3920],"content":"BitArray(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Int32)","pos":[0,15]}]},{"pos":[4227,4261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4464,4481],"content":"BitArray(Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Int32[])","pos":[0,17]}]},{"pos":[4796,4830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5059,5082],"content":"BitArray(Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Int32,Boolean)","pos":[0,23]}]},{"pos":[5424,5458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5528,5562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5785,5798],"content":"And(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"And(BitArray)","pos":[0,13]}]},{"pos":[6156,6190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6262,6296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6465,6472],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[6751,6785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7010,7029],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[7353,7387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7448,7482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7651,7656],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7915,7949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8142,8152],"content":"Get(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Get(Int32)","pos":[0,10]}]},{"pos":[8442,8476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8535,8569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8754,8769],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[9113,9147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9326,9336],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[9613,9647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9834,9848],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[10137,10171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10366,10377],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[10684,10718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10777,10811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10982,10988],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[11255,11289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11454,11459],"content":"Not()","needQuote":true,"needEscape":true,"nodes":[{"content":"Not()","pos":[0,5]}]},{"pos":[11767,11801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12022,12034],"content":"Or(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"Or(BitArray)","pos":[0,12]}]},{"pos":[12389,12423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12495,12529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12752,12770],"content":"Set(Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Set(Int32,Boolean)","pos":[0,18]}]},{"pos":[13088,13122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13185,13219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13422,13437],"content":"SetAll(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAll(Boolean)","pos":[0,15]}]},{"pos":[13743,13777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13952,13960],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[14232,14266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14489,14502],"content":"Xor(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"Xor(BitArray)","pos":[0,13]}]},{"pos":[14860,14894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14966,15000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15111,15124],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[15250,15269],"content":"BitArray(Boolean[])","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Boolean[])","pos":[0,19]}]},{"pos":[15442,15449],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15625,15641],"content":"BitArray(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Byte[])","pos":[0,16]}]},{"pos":[15805,15809],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[15993,16011],"content":"BitArray(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(BitArray)","pos":[0,18]}]},{"pos":[16207,16215],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[16402,16417],"content":"BitArray(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Int32)","pos":[0,15]}]},{"pos":[16580,16585],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16756,16773],"content":"BitArray(Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Int32[])","pos":[0,17]}]},{"pos":[16940,16945],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17131,17154],"content":"BitArray(Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray(Int32,Boolean)","pos":[0,23]}]},{"pos":[17333,17338],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17453,17460],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17646,17659],"content":"And(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"And(BitArray)","pos":[0,13]}]},{"pos":[17845,17853],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[18011,18019],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[18192,18199],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[18347,18353],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18538,18557],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[18728,18733],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[18846,18851],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19006,19011],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[19154,19159],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19326,19336],"content":"Get(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Get(Int32)","pos":[0,10]}]},{"pos":[19491,19498],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19615,19620],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19783,19798],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[19991,20002],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[20186,20196],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[20351,20358],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20526,20540],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[20703,20710],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20882,20893],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[21050,21057],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21174,21179],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21335,21341],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[21486,21491],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21644,21649],"content":"Not()","needQuote":true,"needEscape":true,"nodes":[{"content":"Not()","pos":[0,5]}]},{"pos":[21819,21827],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[22026,22038],"content":"Or(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"Or(BitArray)","pos":[0,12]}]},{"pos":[22222,22230],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[22388,22396],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[22596,22614],"content":"Set(Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Set(Int32,Boolean)","pos":[0,18]}]},{"pos":[22783,22788],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22903,22910],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23086,23101],"content":"SetAll(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAll(Boolean)","pos":[0,15]}]},{"pos":[23266,23273],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23435,23443],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[23593,23599],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23783,23796],"content":"Xor(BitArray)","needQuote":true,"needEscape":true,"nodes":[{"content":"Xor(BitArray)","pos":[0,13]}]},{"pos":[23982,23990],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]},{"pos":[24148,24156],"content":"BitArray","needQuote":true,"needEscape":true,"nodes":[{"content":"BitArray","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.BitArray\n  id: BitArray\n  children:\n  - System.Collections.BitArray.#ctor(System.Boolean[])\n  - System.Collections.BitArray.#ctor(System.Byte[])\n  - System.Collections.BitArray.#ctor(System.Collections.BitArray)\n  - System.Collections.BitArray.#ctor(System.Int32)\n  - System.Collections.BitArray.#ctor(System.Int32[])\n  - System.Collections.BitArray.#ctor(System.Int32,System.Boolean)\n  - System.Collections.BitArray.And(System.Collections.BitArray)\n  - System.Collections.BitArray.Clone\n  - System.Collections.BitArray.CopyTo(System.Array,System.Int32)\n  - System.Collections.BitArray.Count\n  - System.Collections.BitArray.Get(System.Int32)\n  - System.Collections.BitArray.GetEnumerator\n  - System.Collections.BitArray.IsReadOnly\n  - System.Collections.BitArray.IsSynchronized\n  - System.Collections.BitArray.Item(System.Int32)\n  - System.Collections.BitArray.Length\n  - System.Collections.BitArray.Not\n  - System.Collections.BitArray.Or(System.Collections.BitArray)\n  - System.Collections.BitArray.Set(System.Int32,System.Boolean)\n  - System.Collections.BitArray.SetAll(System.Boolean)\n  - System.Collections.BitArray.SyncRoot\n  - System.Collections.BitArray.Xor(System.Collections.BitArray)\n  langs:\n  - csharp\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class BitArray : ICloneable, System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.#ctor(System.Boolean[])\n  id: '#ctor(System.Boolean[])'\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: BitArray(Boolean[])\n  nameWithType: BitArray.BitArray(Boolean[])\n  fullName: System.Collections.BitArray.BitArray(Boolean[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public BitArray (bool[] values);\n    parameters:\n    - id: values\n      type: System.Boolean[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: BitArray(Byte[])\n  nameWithType: BitArray.BitArray(Byte[])\n  fullName: System.Collections.BitArray.BitArray(Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public BitArray (byte[] bytes);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.#ctor(System.Collections.BitArray)\n  id: '#ctor(System.Collections.BitArray)'\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: BitArray(BitArray)\n  nameWithType: BitArray.BitArray(BitArray)\n  fullName: System.Collections.BitArray.BitArray(BitArray)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public BitArray (System.Collections.BitArray bits);\n    parameters:\n    - id: bits\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: BitArray(Int32)\n  nameWithType: BitArray.BitArray(Int32)\n  fullName: System.Collections.BitArray.BitArray(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public BitArray (int length);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.#ctor(System.Int32[])\n  id: '#ctor(System.Int32[])'\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: BitArray(Int32[])\n  nameWithType: BitArray.BitArray(Int32[])\n  fullName: System.Collections.BitArray.BitArray(Int32[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public BitArray (int[] values);\n    parameters:\n    - id: values\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.#ctor(System.Int32,System.Boolean)\n  id: '#ctor(System.Int32,System.Boolean)'\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: BitArray(Int32,Boolean)\n  nameWithType: BitArray.BitArray(Int32,Boolean)\n  fullName: System.Collections.BitArray.BitArray(Int32,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public BitArray (int length, bool defaultValue);\n    parameters:\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: defaultValue\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.And(System.Collections.BitArray)\n  id: And(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: And(BitArray)\n  nameWithType: BitArray.And(BitArray)\n  fullName: System.Collections.BitArray.And(BitArray)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.BitArray And (System.Collections.BitArray value);\n    parameters:\n    - id: value\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Clone\n  id: Clone\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: BitArray.Clone()\n  fullName: System.Collections.BitArray.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: BitArray.CopyTo(Array,Int32)\n  fullName: System.Collections.BitArray.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Count\n  id: Count\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Count\n  nameWithType: BitArray.Count\n  fullName: System.Collections.BitArray.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Get(System.Int32)\n  id: Get(System.Int32)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Get(Int32)\n  nameWithType: BitArray.Get(Int32)\n  fullName: System.Collections.BitArray.Get(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool Get (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: BitArray.GetEnumerator()\n  fullName: System.Collections.BitArray.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: BitArray.IsReadOnly\n  fullName: System.Collections.BitArray.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.IsSynchronized\n  id: IsSynchronized\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: BitArray.IsSynchronized\n  fullName: System.Collections.BitArray.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: BitArray.Item(Int32)\n  fullName: System.Collections.BitArray.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Length\n  id: Length\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Length\n  nameWithType: BitArray.Length\n  fullName: System.Collections.BitArray.Length\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public int Length { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Not\n  id: Not\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Not()\n  nameWithType: BitArray.Not()\n  fullName: System.Collections.BitArray.Not()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.BitArray Not ();\n    parameters: []\n    return:\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Or(System.Collections.BitArray)\n  id: Or(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Or(BitArray)\n  nameWithType: BitArray.Or(BitArray)\n  fullName: System.Collections.BitArray.Or(BitArray)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.BitArray Or (System.Collections.BitArray value);\n    parameters:\n    - id: value\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Set(System.Int32,System.Boolean)\n  id: Set(System.Int32,System.Boolean)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Set(Int32,Boolean)\n  nameWithType: BitArray.Set(Int32,Boolean)\n  fullName: System.Collections.BitArray.Set(Int32,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Set (int index, bool value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.SetAll(System.Boolean)\n  id: SetAll(System.Boolean)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: SetAll(Boolean)\n  nameWithType: BitArray.SetAll(Boolean)\n  fullName: System.Collections.BitArray.SetAll(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void SetAll (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.SyncRoot\n  id: SyncRoot\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: BitArray.SyncRoot\n  fullName: System.Collections.BitArray.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.BitArray.Xor(System.Collections.BitArray)\n  id: Xor(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  langs:\n  - csharp\n  name: Xor(BitArray)\n  nameWithType: BitArray.Xor(BitArray)\n  fullName: System.Collections.BitArray.Xor(BitArray)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.BitArray Xor (System.Collections.BitArray value);\n    parameters:\n    - id: value\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.BitArray\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.BitArray.#ctor(System.Boolean[])\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: BitArray(Boolean[])\n  nameWithType: BitArray.BitArray(Boolean[])\n  fullName: System.Collections.BitArray.BitArray(Boolean[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean[]\n- uid: System.Collections.BitArray.#ctor(System.Byte[])\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: BitArray(Byte[])\n  nameWithType: BitArray.BitArray(Byte[])\n  fullName: System.Collections.BitArray.BitArray(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Collections.BitArray.#ctor(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: BitArray(BitArray)\n  nameWithType: BitArray.BitArray(BitArray)\n  fullName: System.Collections.BitArray.BitArray(BitArray)\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray.#ctor(System.Int32)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: BitArray(Int32)\n  nameWithType: BitArray.BitArray(Int32)\n  fullName: System.Collections.BitArray.BitArray(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.BitArray.#ctor(System.Int32[])\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: BitArray(Int32[])\n  nameWithType: BitArray.BitArray(Int32[])\n  fullName: System.Collections.BitArray.BitArray(Int32[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Collections.BitArray.#ctor(System.Int32,System.Boolean)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: BitArray(Int32,Boolean)\n  nameWithType: BitArray.BitArray(Int32,Boolean)\n  fullName: System.Collections.BitArray.BitArray(Int32,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.BitArray.And(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: And(BitArray)\n  nameWithType: BitArray.And(BitArray)\n  fullName: System.Collections.BitArray.And(BitArray)\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray.Clone\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Clone()\n  nameWithType: BitArray.Clone()\n  fullName: System.Collections.BitArray.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.BitArray.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: BitArray.CopyTo(Array,Int32)\n  fullName: System.Collections.BitArray.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.BitArray.Count\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Count\n  nameWithType: BitArray.Count\n  fullName: System.Collections.BitArray.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.BitArray.Get(System.Int32)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Get(Int32)\n  nameWithType: BitArray.Get(Int32)\n  fullName: System.Collections.BitArray.Get(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.BitArray.GetEnumerator\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: BitArray.GetEnumerator()\n  fullName: System.Collections.BitArray.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.BitArray.IsReadOnly\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: BitArray.IsReadOnly\n  fullName: System.Collections.BitArray.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.BitArray.IsSynchronized\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: BitArray.IsSynchronized\n  fullName: System.Collections.BitArray.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.BitArray.Item(System.Int32)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: BitArray.Item(Int32)\n  fullName: System.Collections.BitArray.Item(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.BitArray.Length\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Length\n  nameWithType: BitArray.Length\n  fullName: System.Collections.BitArray.Length\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.BitArray.Not\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Not()\n  nameWithType: BitArray.Not()\n  fullName: System.Collections.BitArray.Not()\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray.Or(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Or(BitArray)\n  nameWithType: BitArray.Or(BitArray)\n  fullName: System.Collections.BitArray.Or(BitArray)\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray.Set(System.Int32,System.Boolean)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Set(Int32,Boolean)\n  nameWithType: BitArray.Set(Int32,Boolean)\n  fullName: System.Collections.BitArray.Set(Int32,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.BitArray.SetAll(System.Boolean)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: SetAll(Boolean)\n  nameWithType: BitArray.SetAll(Boolean)\n  fullName: System.Collections.BitArray.SetAll(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.BitArray.SyncRoot\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: SyncRoot\n  nameWithType: BitArray.SyncRoot\n  fullName: System.Collections.BitArray.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.BitArray.Xor(System.Collections.BitArray)\n  parent: System.Collections.BitArray\n  isExternal: false\n  name: Xor(BitArray)\n  nameWithType: BitArray.Xor(BitArray)\n  fullName: System.Collections.BitArray.Xor(BitArray)\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n- uid: System.Collections.BitArray\n  parent: System.Collections\n  isExternal: false\n  name: BitArray\n  nameWithType: BitArray\n  fullName: System.Collections.BitArray\n"}