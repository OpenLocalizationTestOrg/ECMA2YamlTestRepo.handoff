{"nodes":[{"pos":[928,939],"content":"CngProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty","pos":[0,11]}]},{"pos":[1624,1669],"content":"CngProperty(String,Byte[],CngPropertyOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty(String,Byte[],CngPropertyOptions)","pos":[0,45]}]},{"pos":[2139,2173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2235,2269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2367,2401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2628,2642],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2981,3015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3074,3108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3450,3469],"content":"Equals(CngProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngProperty)","pos":[0,19]}]},{"pos":[3874,3908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3967,4001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4269,4282],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4613,4647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4848,4858],"content":"GetValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue()","pos":[0,10]}]},{"pos":[5175,5209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5402,5406],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[5695,5729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6102,6138],"content":"op_Equality(CngProperty,CngProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngProperty,CngProperty)","pos":[0,36]}]},{"pos":[6637,6671],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6760,6794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6853,6887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7264,7302],"content":"op_Inequality(CngProperty,CngProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngProperty,CngProperty)","pos":[0,38]}]},{"pos":[7807,7841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7930,7964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8023,8057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8256,8263],"content":"Options","needQuote":true,"needEscape":true,"nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[8636,8670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8784,8800],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[9011,9056],"content":"CngProperty(String,Byte[],CngPropertyOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty(String,Byte[],CngPropertyOptions)","pos":[0,45]}]},{"pos":[9296,9302],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9416,9420],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9590,9608],"content":"CngPropertyOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CngPropertyOptions","pos":[0,18]}]},{"pos":[9853,9867],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10046,10053],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10171,10177],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10403,10422],"content":"Equals(CngProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngProperty)","pos":[0,19]}]},{"pos":[10611,10618],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10785,10796],"content":"CngProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty","pos":[0,11]}]},{"pos":[11017,11030],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11205,11210],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11394,11404],"content":"GetValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue()","pos":[0,10]}]},{"pos":[11572,11576],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11756,11760],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[11918,11924],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12196,12232],"content":"op_Equality(CngProperty,CngProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngProperty,CngProperty)","pos":[0,36]}]},{"pos":[12455,12462],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12629,12640],"content":"CngProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty","pos":[0,11]}]},{"pos":[12837,12848],"content":"CngProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty","pos":[0,11]}]},{"pos":[13154,13192],"content":"op_Inequality(CngProperty,CngProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngProperty,CngProperty)","pos":[0,38]}]},{"pos":[13419,13426],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13593,13604],"content":"CngProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty","pos":[0,11]}]},{"pos":[13801,13812],"content":"CngProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"CngProperty","pos":[0,11]}]},{"pos":[14029,14036],"content":"Options","needQuote":true,"needEscape":true,"nodes":[{"content":"Options","pos":[0,7]}]},{"pos":[14256,14274],"content":"CngPropertyOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CngPropertyOptions","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngProperty\n  id: CngProperty\n  children:\n  - System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)\n  - System.Security.Cryptography.CngProperty.Equals(System.Object)\n  - System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)\n  - System.Security.Cryptography.CngProperty.GetHashCode\n  - System.Security.Cryptography.CngProperty.GetValue\n  - System.Security.Cryptography.CngProperty.Name\n  - System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  - System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  - System.Security.Cryptography.CngProperty.Options\n  langs:\n  - csharp\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n  type: Struct\n  syntax:\n    content: 'public struct CngProperty : IEquatable<System.Security.Cryptography.CngProperty>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Security.Cryptography.CngProperty>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)\n  id: '#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)'\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: CngProperty(String,Byte[],CngPropertyOptions)\n  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: options\n      type: System.Security.Cryptography.CngPropertyOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngProperty.Equals(Object)\n  fullName: System.Security.Cryptography.CngProperty.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngProperty.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)\n  id: Equals(System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Equals(CngProperty)\n  nameWithType: CngProperty.Equals(CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngProperty other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngProperty\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngProperty.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngProperty.GetHashCode()\n  fullName: System.Security.Cryptography.CngProperty.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.GetValue\n  id: GetValue\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: GetValue()\n  nameWithType: CngProperty.GetValue()\n  fullName: System.Security.Cryptography.CngProperty.GetValue()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] GetValue ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.Name\n  id: Name\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Name\n  nameWithType: CngProperty.Name\n  fullName: System.Security.Cryptography.CngProperty.Name\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  id: op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: op_Equality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngProperty\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngProperty\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  id: op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: op_Inequality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngProperty\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngProperty\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngProperty.Options\n  id: Options\n  parent: System.Security.Cryptography.CngProperty\n  langs:\n  - csharp\n  name: Options\n  nameWithType: CngProperty.Options\n  fullName: System.Security.Cryptography.CngProperty.Options\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CngPropertyOptions Options { get; }\n    return:\n      type: System.Security.Cryptography.CngPropertyOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: CngProperty(String,Byte[],CngPropertyOptions)\n  nameWithType: CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n  fullName: System.Security.Cryptography.CngProperty.CngProperty(String,Byte[],CngPropertyOptions)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.CngPropertyOptions\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngPropertyOptions\n  nameWithType: CngPropertyOptions\n  fullName: System.Security.Cryptography.CngPropertyOptions\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Object)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngProperty.Equals(Object)\n  fullName: System.Security.Cryptography.CngProperty.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Equals(CngProperty)\n  nameWithType: CngProperty.Equals(CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.Equals(CngProperty)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngProperty\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n- uid: System.Security.Cryptography.CngProperty.GetHashCode\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngProperty.GetHashCode()\n  fullName: System.Security.Cryptography.CngProperty.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngProperty.GetValue\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: GetValue()\n  nameWithType: CngProperty.GetValue()\n  fullName: System.Security.Cryptography.CngProperty.GetValue()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.CngProperty.Name\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Name\n  nameWithType: CngProperty.Name\n  fullName: System.Security.Cryptography.CngProperty.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: op_Equality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Equality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Equality(CngProperty,CngProperty)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngProperty\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n- uid: System.Security.Cryptography.CngProperty\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n- uid: System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: op_Inequality(CngProperty,CngProperty)\n  nameWithType: CngProperty.op_Inequality(CngProperty,CngProperty)\n  fullName: System.Security.Cryptography.CngProperty.op_Inequality(CngProperty,CngProperty)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngProperty\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n- uid: System.Security.Cryptography.CngProperty\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngProperty\n  nameWithType: CngProperty\n  fullName: System.Security.Cryptography.CngProperty\n- uid: System.Security.Cryptography.CngProperty.Options\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  name: Options\n  nameWithType: CngProperty.Options\n  fullName: System.Security.Cryptography.CngProperty.Options\n- uid: System.Security.Cryptography.CngPropertyOptions\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngPropertyOptions\n  nameWithType: CngPropertyOptions\n  fullName: System.Security.Cryptography.CngPropertyOptions\n- uid: System.Security.Cryptography.CngProperty.Equals*\n  parent: System.Security.Cryptography.CngProperty\n  isExternal: false\n  nameWithType: CngProperty.\n"}