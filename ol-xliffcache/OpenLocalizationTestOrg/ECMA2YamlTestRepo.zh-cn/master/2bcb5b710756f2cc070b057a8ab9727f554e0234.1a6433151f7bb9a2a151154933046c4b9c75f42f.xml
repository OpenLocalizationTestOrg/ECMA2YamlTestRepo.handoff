{"nodes":[{"pos":[867,876],"content":"NTAccount","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount","pos":[0,9]}]},{"pos":[1942,1959],"content":"NTAccount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount(String)","pos":[0,17]}]},{"pos":[2287,2321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2566,2590],"content":"NTAccount(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount(String,String)","pos":[0,24]}]},{"pos":[2964,2998],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3066,3100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3317,3331],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3653,3687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3746,3780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3977,3990],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4308,4342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4577,4600],"content":"IsValidTargetType(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValidTargetType(Type)","pos":[0,23]}]},{"pos":[4965,4999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5058,5092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5435,5467],"content":"op_Equality(NTAccount,NTAccount)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(NTAccount,NTAccount)","pos":[0,32]}]},{"pos":[5930,5964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6048,6082],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6141,6175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6522,6556],"content":"op_Inequality(NTAccount,NTAccount)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(NTAccount,NTAccount)","pos":[0,34]}]},{"pos":[7025,7059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7143,7177],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7236,7270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7461,7471],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[7784,7818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8037,8052],"content":"Translate(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Translate(Type)","pos":[0,15]}]},{"pos":[8432,8466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8554,8588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8773,8778],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[9066,9100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9241,9284],"content":"System.Security.Principal.IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Principal.IdentityReference","pos":[0,43]}]},{"pos":[9423,9440],"content":"NTAccount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount(String)","pos":[0,17]}]},{"pos":[9617,9623],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9825,9849],"content":"NTAccount(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount(String,String)","pos":[0,24]}]},{"pos":[10040,10046],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10162,10168],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10357,10371],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[10543,10550],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10668,10674],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10853,10866],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[11034,11039],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11235,11258],"content":"IsValidTargetType(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsValidTargetType(Type)","pos":[0,23]}]},{"pos":[11448,11455],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11571,11575],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[11823,11855],"content":"op_Equality(NTAccount,NTAccount)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(NTAccount,NTAccount)","pos":[0,32]}]},{"pos":[12063,12070],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12229,12238],"content":"NTAccount","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount","pos":[0,9]}]},{"pos":[12420,12429],"content":"NTAccount","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount","pos":[0,9]}]},{"pos":[12708,12742],"content":"op_Inequality(NTAccount,NTAccount)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(NTAccount,NTAccount)","pos":[0,34]}]},{"pos":[12954,12961],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13120,13129],"content":"NTAccount","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount","pos":[0,9]}]},{"pos":[13311,13320],"content":"NTAccount","needQuote":true,"needEscape":true,"nodes":[{"content":"NTAccount","pos":[0,9]}]},{"pos":[13521,13531],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13694,13700],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13890,13905],"content":"Translate(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Translate(Type)","pos":[0,15]}]},{"pos":[14127,14144],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[14299,14303],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[14472,14477],"content":"Value","needQuote":true,"needEscape":true,"nodes":[{"content":"Value","pos":[0,5]}]},{"pos":[14630,14636],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Principal.NTAccount\n  id: NTAccount\n  children:\n  - System.Security.Principal.NTAccount.#ctor(System.String)\n  - System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  - System.Security.Principal.NTAccount.Equals(System.Object)\n  - System.Security.Principal.NTAccount.GetHashCode\n  - System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  - System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  - System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  - System.Security.Principal.NTAccount.ToString\n  - System.Security.Principal.NTAccount.Translate(System.Type)\n  - System.Security.Principal.NTAccount.Value\n  langs:\n  - csharp\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public sealed class NTAccount : System.Security.Principal.IdentityReference\n  inheritance:\n  - System.Object\n  - System.Security.Principal.IdentityReference\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: NTAccount(String)\n  nameWithType: NTAccount.NTAccount(String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public NTAccount (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: NTAccount(String,String)\n  nameWithType: NTAccount.NTAccount(String,String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public NTAccount (string domainName, string accountName);\n    parameters:\n    - id: domainName\n      type: System.String\n      description: Parameter description to be filled\n    - id: accountName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NTAccount.Equals(Object)\n  fullName: System.Security.Principal.NTAccount.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NTAccount.GetHashCode()\n  fullName: System.Security.Principal.NTAccount.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  id: IsValidTargetType(System.Type)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: IsValidTargetType(Type)\n  nameWithType: NTAccount.IsValidTargetType(Type)\n  fullName: System.Security.Principal.NTAccount.IsValidTargetType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override bool IsValidTargetType (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  id: op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: op_Equality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Equality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Equality(NTAccount,NTAccount)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public static bool op_Equality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.NTAccount\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Principal.NTAccount\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  id: op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: op_Inequality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Inequality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Inequality(NTAccount,NTAccount)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public static bool op_Inequality (System.Security.Principal.NTAccount left, System.Security.Principal.NTAccount right);\n    parameters:\n    - id: left\n      type: System.Security.Principal.NTAccount\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Principal.NTAccount\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.ToString\n  id: ToString\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: NTAccount.ToString()\n  fullName: System.Security.Principal.NTAccount.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.Translate(System.Type)\n  id: Translate(System.Type)\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Translate(Type)\n  nameWithType: NTAccount.Translate(Type)\n  fullName: System.Security.Principal.NTAccount.Translate(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override System.Security.Principal.IdentityReference Translate (Type targetType);\n    parameters:\n    - id: targetType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Principal.NTAccount.Value\n  id: Value\n  parent: System.Security.Principal.NTAccount\n  langs:\n  - csharp\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: System.Security.Principal.NTAccount.Value\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Principal\n  syntax:\n    content: public override string Value { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Principal.IdentityReference\n  isExternal: false\n  name: System.Security.Principal.IdentityReference\n- uid: System.Security.Principal.NTAccount.#ctor(System.String)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount(String)\n  nameWithType: NTAccount.NTAccount(String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.NTAccount.#ctor(System.String,System.String)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: NTAccount(String,String)\n  nameWithType: NTAccount.NTAccount(String,String)\n  fullName: System.Security.Principal.NTAccount.NTAccount(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.NTAccount.Equals(System.Object)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NTAccount.Equals(Object)\n  fullName: System.Security.Principal.NTAccount.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Principal.NTAccount.GetHashCode\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NTAccount.GetHashCode()\n  fullName: System.Security.Principal.NTAccount.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.NTAccount.IsValidTargetType(System.Type)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: IsValidTargetType(Type)\n  nameWithType: NTAccount.IsValidTargetType(Type)\n  fullName: System.Security.Principal.NTAccount.IsValidTargetType(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Principal.NTAccount.op_Equality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Equality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Equality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Equality(NTAccount,NTAccount)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.NTAccount\n  parent: System.Security.Principal\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n- uid: System.Security.Principal.NTAccount\n  parent: System.Security.Principal\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n- uid: System.Security.Principal.NTAccount.op_Inequality(System.Security.Principal.NTAccount,System.Security.Principal.NTAccount)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: op_Inequality(NTAccount,NTAccount)\n  nameWithType: NTAccount.op_Inequality(NTAccount,NTAccount)\n  fullName: System.Security.Principal.NTAccount.op_Inequality(NTAccount,NTAccount)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Principal.NTAccount\n  parent: System.Security.Principal\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n- uid: System.Security.Principal.NTAccount\n  parent: System.Security.Principal\n  isExternal: false\n  name: NTAccount\n  nameWithType: NTAccount\n  fullName: System.Security.Principal.NTAccount\n- uid: System.Security.Principal.NTAccount.ToString\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: ToString()\n  nameWithType: NTAccount.ToString()\n  fullName: System.Security.Principal.NTAccount.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Principal.NTAccount.Translate(System.Type)\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Translate(Type)\n  nameWithType: NTAccount.Translate(Type)\n  fullName: System.Security.Principal.NTAccount.Translate(Type)\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Principal.NTAccount.Value\n  parent: System.Security.Principal.NTAccount\n  isExternal: false\n  name: Value\n  nameWithType: NTAccount.Value\n  fullName: System.Security.Principal.NTAccount.Value\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}