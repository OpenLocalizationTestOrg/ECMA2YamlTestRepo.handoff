{"nodes":[{"pos":[1185,1191],"content":"DSACng","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng","pos":[0,6]}]},{"pos":[3291,3299],"content":"DSACng()","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng()","pos":[0,8]}]},{"pos":[3755,3768],"content":"DSACng(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng(Int32)","pos":[0,13]}]},{"pos":[4090,4124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4385,4399],"content":"DSACng(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng(CngKey)","pos":[0,14]}]},{"pos":[4770,4804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5039,5062],"content":"CreateSignature(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSignature(Byte[])","pos":[0,23]}]},{"pos":[5428,5462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5520,5554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5775,5791],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6139,6173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6412,6437],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[6877,6911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6998,7032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7353,7387],"content":"HashData(Stream,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Stream,HashAlgorithmName)","pos":[0,34]}]},{"pos":[7840,7874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7977,8011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8069,8103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8528,8574],"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","pos":[0,46]}]},{"pos":[9061,9095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9157,9191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9252,9286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9389,9423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9481,9515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9868,9899],"content":"ImportParameters(DSAParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(DSAParameters)","pos":[0,31]}]},{"pos":[10351,10385],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10566,10569],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[10896,10930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11145,11165],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[11501,11535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11736,11749],"content":"LegalKeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"LegalKeySizes","pos":[0,13]}]},{"pos":[12123,12157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12368,12386],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[12716,12750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13013,13043],"content":"VerifySignature(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(Byte[],Byte[])","pos":[0,30]}]},{"pos":[13442,13476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13545,13579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13638,13672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13802,13834],"content":"System.Security.Cryptography.DSA","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.DSA","pos":[0,32]}]},{"pos":[13958,13966],"content":"DSACng()","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng()","pos":[0,8]}]},{"pos":[14193,14206],"content":"DSACng(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng(Int32)","pos":[0,13]}]},{"pos":[14371,14376],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14584,14598],"content":"DSACng(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DSACng(CngKey)","pos":[0,14]}]},{"pos":[14810,14816],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[15036,15059],"content":"CreateSignature(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSignature(Byte[])","pos":[0,23]}]},{"pos":[15243,15247],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[15359,15363],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[15552,15568],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[15741,15748],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15950,15975],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[16216,16229],"content":"DSAParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"DSAParameters","pos":[0,13]}]},{"pos":[16382,16389],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16632,16666],"content":"HashData(Stream,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Stream,HashAlgorithmName)","pos":[0,34]}]},{"pos":[16872,16876],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[16996,17002],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[17176,17193],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[17501,17547],"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","pos":[0,46]}]},{"pos":[17777,17781],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[17893,17897],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[18010,18015],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18128,18133],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18302,18319],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[18591,18622],"content":"ImportParameters(DSAParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(DSAParameters)","pos":[0,31]}]},{"pos":[18875,18888],"content":"DSAParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"DSAParameters","pos":[0,13]}]},{"pos":[19095,19098],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[19288,19294],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[19504,19524],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[19704,19710],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19891,19904],"content":"LegalKeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"LegalKeySizes","pos":[0,13]}]},{"pos":[20116,20124],"content":"KeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizes","pos":[0,8]}]},{"pos":[20338,20356],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[20532,20538],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20750,20780],"content":"VerifySignature(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifySignature(Byte[],Byte[])","pos":[0,30]}]},{"pos":[20981,20988],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21104,21108],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[21220,21224],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DSACng\n  id: DSACng\n  children:\n  - System.Security.Cryptography.DSACng.#ctor\n  - System.Security.Cryptography.DSACng.#ctor(System.Int32)\n  - System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])\n  - System.Security.Cryptography.DSACng.Dispose(System.Boolean)\n  - System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)\n  - System.Security.Cryptography.DSACng.Key\n  - System.Security.Cryptography.DSACng.KeyExchangeAlgorithm\n  - System.Security.Cryptography.DSACng.LegalKeySizes\n  - System.Security.Cryptography.DSACng.SignatureAlgorithm\n  - System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])\n  langs:\n  - csharp\n  name: DSACng\n  nameWithType: DSACng\n  fullName: System.Security.Cryptography.DSACng\n  type: Class\n  syntax:\n    content: 'public sealed class DSACng : System.Security.Cryptography.DSA'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  - System.Security.Cryptography.DSA\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.DSA.Create\n  - System.Security.Cryptography.DSA.Create(System.String)\n  - System.Security.Cryptography.DSA.FromXmlString(System.String)\n  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSA.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.DSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: DSACng()\n  nameWithType: DSACng.DSACng()\n  fullName: System.Security.Cryptography.DSACng.DSACng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public DSACng ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: DSACng(Int32)\n  nameWithType: DSACng.DSACng(Int32)\n  fullName: System.Security.Cryptography.DSACng.DSACng(Int32)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public DSACng (int keySize);\n    parameters:\n    - id: keySize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)\n  id: '#ctor(System.Security.Cryptography.CngKey)'\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: DSACng(CngKey)\n  nameWithType: DSACng.DSACng(CngKey)\n  fullName: System.Security.Cryptography.DSACng.DSACng(CngKey)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public DSACng (System.Security.Cryptography.CngKey key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])\n  id: CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: CreateSignature(Byte[])\n  nameWithType: DSACng.CreateSignature(Byte[])\n  fullName: System.Security.Cryptography.DSACng.CreateSignature(Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] CreateSignature (byte[] rgbHash);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: DSACng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.DSACng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: DSACng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.DSACng.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.DSAParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: DSACng.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.DSACng.HashData(Stream,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.DSACng.HashData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.DSACng.HashData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)\n  id: ImportParameters(System.Security.Cryptography.DSAParameters)\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: ImportParameters(DSAParameters)\n  nameWithType: DSACng.ImportParameters(DSAParameters)\n  fullName: System.Security.Cryptography.DSACng.ImportParameters(DSAParameters)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.DSAParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.Key\n  id: Key\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: DSACng.Key\n  fullName: System.Security.Cryptography.DSACng.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CngKey Key { get; }\n    return:\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: DSACng.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: DSACng.LegalKeySizes\n  fullName: System.Security.Cryptography.DSACng.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: DSACng.SignatureAlgorithm\n  fullName: System.Security.Cryptography.DSACng.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])\n  id: VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSACng\n  langs:\n  - csharp\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: DSACng.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DSACng.VerifySignature(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbSignature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.DSA\n  isExternal: false\n  name: System.Security.Cryptography.DSA\n- uid: System.Security.Cryptography.DSACng.#ctor\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: DSACng()\n  nameWithType: DSACng.DSACng()\n  fullName: System.Security.Cryptography.DSACng.DSACng()\n- uid: System.Security.Cryptography.DSACng.#ctor(System.Int32)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: DSACng(Int32)\n  nameWithType: DSACng.DSACng(Int32)\n  fullName: System.Security.Cryptography.DSACng.DSACng(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.DSACng.#ctor(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: DSACng(CngKey)\n  nameWithType: DSACng.DSACng(CngKey)\n  fullName: System.Security.Cryptography.DSACng.DSACng(CngKey)\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.DSACng.CreateSignature(System.Byte[])\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: CreateSignature(Byte[])\n  nameWithType: DSACng.CreateSignature(Byte[])\n  fullName: System.Security.Cryptography.DSACng.CreateSignature(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.DSACng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: DSACng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.DSACng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.DSACng.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: DSACng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.DSACng.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.DSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: DSAParameters\n  nameWithType: DSAParameters\n  fullName: System.Security.Cryptography.DSAParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.DSACng.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: DSACng.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.DSACng.HashData(Stream,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.DSACng.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.DSACng.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.DSACng.ImportParameters(System.Security.Cryptography.DSAParameters)\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: ImportParameters(DSAParameters)\n  nameWithType: DSACng.ImportParameters(DSAParameters)\n  fullName: System.Security.Cryptography.DSACng.ImportParameters(DSAParameters)\n- uid: System.Security.Cryptography.DSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: DSAParameters\n  nameWithType: DSAParameters\n  fullName: System.Security.Cryptography.DSAParameters\n- uid: System.Security.Cryptography.DSACng.Key\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: Key\n  nameWithType: DSACng.Key\n  fullName: System.Security.Cryptography.DSACng.Key\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: DSACng.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.DSACng.KeyExchangeAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSACng.LegalKeySizes\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: DSACng.LegalKeySizes\n  fullName: System.Security.Cryptography.DSACng.LegalKeySizes\n- uid: System.Security.Cryptography.KeySizes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes[]\n- uid: System.Security.Cryptography.DSACng.SignatureAlgorithm\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: DSACng.SignatureAlgorithm\n  fullName: System.Security.Cryptography.DSACng.SignatureAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.DSACng.VerifySignature(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  name: VerifySignature(Byte[],Byte[])\n  nameWithType: DSACng.VerifySignature(Byte[],Byte[])\n  fullName: System.Security.Cryptography.DSACng.VerifySignature(Byte[],Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.DSACng.HashData*\n  parent: System.Security.Cryptography.DSACng\n  isExternal: false\n  nameWithType: DSACng.\n"}