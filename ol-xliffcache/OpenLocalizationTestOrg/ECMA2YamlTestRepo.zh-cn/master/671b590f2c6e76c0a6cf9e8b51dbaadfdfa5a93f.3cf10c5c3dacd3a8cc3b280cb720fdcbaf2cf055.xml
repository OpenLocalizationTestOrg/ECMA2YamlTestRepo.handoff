{"nodes":[{"pos":[563,572],"content":"SymBinder","needQuote":true,"needEscape":true,"nodes":[{"content":"SymBinder","pos":[0,9]}]},{"pos":[1695,1706],"content":"SymBinder()","needQuote":true,"needEscape":true,"nodes":[{"content":"SymBinder()","pos":[0,11]}]},{"pos":[2165,2174],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[2737,2753],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[3098,3132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3395,3405],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[3939,3969],"content":"GetReader(Int32,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReader(Int32,String,String)","pos":[0,30]}]},{"pos":[4424,4458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4523,4557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4624,4658],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4747,4781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5134,5165],"content":"GetReader(IntPtr,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReader(IntPtr,String,String)","pos":[0,31]}]},{"pos":[5626,5660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5725,5759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5826,5860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5949,5983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6189,6233],"content":"System.Diagnostics.SymbolStore.SymBinderBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Diagnostics.SymbolStore.SymBinderBase","pos":[0,44]}]},{"pos":[6367,6378],"content":"SymBinder()","needQuote":true,"needEscape":true,"nodes":[{"content":"SymBinder()","pos":[0,11]}]},{"pos":[6617,6626],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6877,6893],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[7074,7081],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7269,7279],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[7560,7590],"content":"GetReader(Int32,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReader(Int32,String,String)","pos":[0,30]}]},{"pos":[7853,7866],"content":"ISymbolReader","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolReader","pos":[0,13]}]},{"pos":[8019,8024],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8138,8144],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8260,8266],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8496,8527],"content":"GetReader(IntPtr,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReader(IntPtr,String,String)","pos":[0,31]}]},{"pos":[8792,8805],"content":"ISymbolReader","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolReader","pos":[0,13]}]},{"pos":[8959,8965],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[9081,9087],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9203,9209],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymBinder\n  id: SymBinder\n  children:\n  - System.Diagnostics.SymbolStore.SymBinder.#ctor\n  - System.Diagnostics.SymbolStore.SymBinder.Dispose\n  - System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymBinder.Finalize\n  - System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)\n  - System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)\n  langs:\n  - csharp\n  name: SymBinder\n  nameWithType: SymBinder\n  fullName: System.Diagnostics.SymbolStore.SymBinder\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymBinder : System.Diagnostics.SymbolStore.SymBinderBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolBinder, System.Diagnostics.SymbolStore.ISymbolBinder1\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymBinderBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolBinder\n  - System.Diagnostics.SymbolStore.ISymbolBinder1\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymBinderBase.{dtor}\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymBinder.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  langs:\n  - csharp\n  name: SymBinder()\n  nameWithType: SymBinder.SymBinder()\n  fullName: System.Diagnostics.SymbolStore.SymBinder.SymBinder()\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymBinder ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymBinder.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymBinder.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymBinder.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymBinder.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymBinder.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymBinder.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymBinder.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: ~SymBinder ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)\n  id: GetReader(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  langs:\n  - csharp\n  name: GetReader(Int32,String,String)\n  nameWithType: SymBinder.GetReader(Int32,String,String)\n  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(Int32,String,String)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (int importer, string filename, string searchPath);\n    parameters:\n    - id: importer\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: filename\n      type: System.String\n      description: Parameter description to be filled\n    - id: searchPath\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolReader\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymBinder.GetReader*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)\n  id: GetReader(System.IntPtr,System.String,System.String)\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  langs:\n  - csharp\n  name: GetReader(IntPtr,String,String)\n  nameWithType: SymBinder.GetReader(IntPtr,String,String)\n  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(IntPtr,String,String)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolReader GetReader (IntPtr importer, string filename, string searchPath);\n    parameters:\n    - id: importer\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: filename\n      type: System.String\n      description: Parameter description to be filled\n    - id: searchPath\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolReader\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymBinder.GetReader*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymBinderBase\n  isExternal: false\n  name: System.Diagnostics.SymbolStore.SymBinderBase\n- uid: System.Diagnostics.SymbolStore.SymBinder.#ctor\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  name: SymBinder()\n  nameWithType: SymBinder.SymBinder()\n  fullName: System.Diagnostics.SymbolStore.SymBinder.SymBinder()\n- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymBinder.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymBinder.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymBinder.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymBinder.Finalize\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymBinder.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymBinder.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.Int32,System.String,System.String)\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  name: GetReader(Int32,String,String)\n  nameWithType: SymBinder.GetReader(Int32,String,String)\n  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(Int32,String,String)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolReader\n  nameWithType: ISymbolReader\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader(System.IntPtr,System.String,System.String)\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  name: GetReader(IntPtr,String,String)\n  nameWithType: SymBinder.GetReader(IntPtr,String,String)\n  fullName: System.Diagnostics.SymbolStore.SymBinder.GetReader(IntPtr,String,String)\n- uid: System.Diagnostics.SymbolStore.ISymbolReader\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolReader\n  nameWithType: ISymbolReader\n  fullName: System.Diagnostics.SymbolStore.ISymbolReader\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.SymBinder.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  nameWithType: SymBinder.\n- uid: System.Diagnostics.SymbolStore.SymBinder.GetReader*\n  parent: System.Diagnostics.SymbolStore.SymBinder\n  isExternal: false\n  nameWithType: SymBinder.\n"}