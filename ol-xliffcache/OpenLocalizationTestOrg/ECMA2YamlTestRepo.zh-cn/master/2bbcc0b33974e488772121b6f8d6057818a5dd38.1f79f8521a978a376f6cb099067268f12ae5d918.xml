{"nodes":[{"pos":[520,541],"content":"HashSet<ph id=\"ph1\">&lt;T&gt;</ph>+Enumerator","needQuote":true,"needEscape":true,"source":"HashSet<T>+Enumerator"},{"pos":[812,846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1173,1180],"content":"Current","needQuote":true,"needEscape":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[1477,1511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1724,1733],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[2218,2228],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[2560,2594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2883,2921],"content":"System.Collections.IEnumerator.Current","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerator.Current","pos":[0,38]}]},{"pos":[3321,3355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3640,3678],"content":"System.Collections.IEnumerator.Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerator.Reset()","pos":[0,38]}]},{"pos":[4123,4139],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[4289,4296],"content":"Current","needQuote":true,"needEscape":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[4461,4462],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[4644,4653],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4923,4933],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[5122,5129],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5361,5399],"content":"System.Collections.IEnumerator.Current","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerator.Current","pos":[0,38]}]},{"pos":[5643,5649],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5877,5915],"content":"System.Collections.IEnumerator.Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerator.Reset()","pos":[0,38]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.HashSet`1.Enumerator\n  id: HashSet`1.Enumerator\n  children:\n  - System.Collections.Generic.HashSet`1.Enumerator.Current\n  - System.Collections.Generic.HashSet`1.Enumerator.Dispose\n  - System.Collections.Generic.HashSet`1.Enumerator.MoveNext\n  - System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current\n  - System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset\n  langs:\n  - csharp\n  name: HashSet<T>+Enumerator\n  nameWithType: HashSet<T>+Enumerator\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator\n  type: Struct\n  syntax:\n    content: 'public struct HashSet<T>.Enumerator : System.Collections.Generic.IEnumerator<T>'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.Generic.IEnumerator<T>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Enumerator.Current\n  id: Current\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: HashSet<T>+Enumerator.Current\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.Current\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public T Current { get; }\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Enumerator.Dispose\n  id: Dispose\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: HashSet<T>+Enumerator.Dispose()\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: HashSet<T>+Enumerator.MoveNext()\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.MoveNext()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Current\n  nameWithType: HashSet<T>+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.System.Collections.IEnumerator.Current\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset\n  id: System#Collections#IEnumerator#Reset\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Reset()\n  nameWithType: HashSet<T>+Enumerator.System.Collections.IEnumerator.Reset()\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.System.Collections.IEnumerator.Reset()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: void IEnumerator.Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Collections.Generic.HashSet`1.Enumerator.Current\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: HashSet<T>+Enumerator.Current\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.Current\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.HashSet`1.Enumerator.Dispose\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  isExternal: false\n  name: Dispose()\n  nameWithType: HashSet<T>+Enumerator.Dispose()\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.Dispose()\n- uid: System.Collections.Generic.HashSet`1.Enumerator.MoveNext\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: HashSet<T>+Enumerator.MoveNext()\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Current\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: HashSet<T>+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.HashSet`1.Enumerator.System#Collections#IEnumerator#Reset\n  parent: System.Collections.Generic.HashSet`1.Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Reset()\n  nameWithType: HashSet<T>+Enumerator.System.Collections.IEnumerator.Reset()\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator.System.Collections.IEnumerator.Reset()\n"}