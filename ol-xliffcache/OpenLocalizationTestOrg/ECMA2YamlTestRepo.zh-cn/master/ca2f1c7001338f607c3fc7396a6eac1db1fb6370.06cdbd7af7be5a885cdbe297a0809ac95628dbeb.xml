{"nodes":[{"pos":[1180,1190],"content":"ValueTuple","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple","pos":[0,10]}]},{"pos":[1916,1937],"content":"CompareTo(ValueTuple)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple)","pos":[0,21]}]},{"pos":[2246,2280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2337,2371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2522,2530],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[2807,2841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3008,3018],"content":"Create(T1)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1)","pos":[0,10]}]},{"pos":[3301,3335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3399,3433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3608,3621],"content":"Create(T1,T2)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2)","pos":[0,13]}]},{"pos":[3926,3960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4011,4045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4109,4143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4326,4342],"content":"Create(T1,T2,T3)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3)","pos":[0,16]}]},{"pos":[4669,4703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4754,4788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4839,4873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4937,4971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5162,5181],"content":"Create(T1,T2,T3,T4)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4)","pos":[0,19]}]},{"pos":[5530,5564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5615,5649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5700,5734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5785,5819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5883,5917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6116,6138],"content":"Create(T1,T2,T3,T4,T5)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5)","pos":[0,22]}]},{"pos":[6509,6543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6594,6628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6679,6713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6764,6798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6849,6883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6947,6981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7188,7213],"content":"Create(T1,T2,T3,T4,T5,T6)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5,T6)","pos":[0,25]}]},{"pos":[7606,7640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7691,7725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7776,7810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7861,7895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7946,7980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8031,8065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8129,8163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8378,8406],"content":"Create(T1,T2,T3,T4,T5,T6,T7)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5,T6,T7)","pos":[0,28]}]},{"pos":[8821,8855],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8906,8940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8991,9025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9076,9110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9161,9195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9246,9280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9331,9365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9429,9463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9686,9717],"content":"Create(T1,T2,T3,T4,T5,T6,T7,T8)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5,T6,T7,T8)","pos":[0,31]}]},{"pos":[10166,10200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10251,10285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10336,10370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10421,10455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10506,10540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10591,10625],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10676,10710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10761,10795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10901,10935],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11116,11130],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[11420,11454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11513,11547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11774,11792],"content":"Equals(ValueTuple)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple)","pos":[0,18]}]},{"pos":[12093,12127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12186,12220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12419,12432],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[12714,12748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13089,13157],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[13606,13640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13720,13754],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13811,13845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14194,14266],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[14728,14762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14850,14884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14943,14977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15308,15378],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[15852,15886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15943,15977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16216,16252],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[16588,16622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16679,16713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16868,16878],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[17155,17189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17303,17319],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[17430,17451],"content":"CompareTo(ValueTuple)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple)","pos":[0,21]}]},{"pos":[17618,17623],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17741,17751],"content":"ValueTuple","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple","pos":[0,10]}]},{"pos":[17897,17905],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[18051,18061],"content":"ValueTuple","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple","pos":[0,10]}]},{"pos":[18215,18225],"content":"Create(T1)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1)","pos":[0,10]}]},{"pos":[18377,18391],"content":"ValueTuple<ph id=\"ph1\">&lt;T1&gt;</ph>","needQuote":true,"needEscape":true,"source":"ValueTuple<T1>"},{"pos":[18507,18509],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[18644,18657],"content":"Create(T1,T2)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2)","pos":[0,13]}]},{"pos":[18815,18832],"content":"ValueTuple<T1,T2>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2&gt;","pos":[0,17],"source":"ValueTuple<T1,T2>"}]},{"pos":[18954,18956],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[19041,19043],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[19182,19198],"content":"Create(T1,T2,T3)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3)","pos":[0,16]}]},{"pos":[19362,19382],"content":"ValueTuple<T1,T2,T3>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3&gt;","pos":[0,20],"source":"ValueTuple<T1,T2,T3>"}]},{"pos":[19510,19512],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[19597,19599],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[19684,19686],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[19829,19848],"content":"Create(T1,T2,T3,T4)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4)","pos":[0,19]}]},{"pos":[20018,20041],"content":"ValueTuple<T1,T2,T3,T4>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4&gt;","pos":[0,23],"source":"ValueTuple<T1,T2,T3,T4>"}]},{"pos":[20175,20177],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[20262,20264],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[20349,20351],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[20436,20438],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[20585,20607],"content":"Create(T1,T2,T3,T4,T5)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5)","pos":[0,22]}]},{"pos":[20783,20809],"content":"ValueTuple<T1,T2,T3,T4,T5>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5&gt;","pos":[0,26],"source":"ValueTuple<T1,T2,T3,T4,T5>"}]},{"pos":[20949,20951],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[21036,21038],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[21123,21125],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[21210,21212],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[21297,21299],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[21450,21475],"content":"Create(T1,T2,T3,T4,T5,T6)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5,T6)","pos":[0,25]}]},{"pos":[21657,21686],"content":"ValueTuple<T1,T2,T3,T4,T5,T6>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;","pos":[0,29],"source":"ValueTuple<T1,T2,T3,T4,T5,T6>"}]},{"pos":[21832,21834],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[21919,21921],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[22006,22008],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[22093,22095],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[22180,22182],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[22267,22269],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[22424,22452],"content":"Create(T1,T2,T3,T4,T5,T6,T7)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5,T6,T7)","pos":[0,28]}]},{"pos":[22640,22672],"content":"ValueTuple<T1,T2,T3,T4,T5,T6,T7>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7&gt;","pos":[0,32],"source":"ValueTuple<T1,T2,T3,T4,T5,T6,T7>"}]},{"pos":[22824,22826],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[22911,22913],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[22998,23000],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[23085,23087],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[23172,23174],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[23259,23261],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[23346,23348],"content":"T7","needQuote":true,"needEscape":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[23507,23538],"content":"Create(T1,T2,T3,T4,T5,T6,T7,T8)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(T1,T2,T3,T4,T5,T6,T7,T8)","pos":[0,31]}]},{"pos":[23774,23821],"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,ValueTuple<ph id=\"ph1\">&lt;T8&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>"},{"pos":[24010,24012],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[24097,24099],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[24184,24186],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[24271,24273],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[24358,24360],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[24445,24447],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[24532,24534],"content":"T7","needQuote":true,"needEscape":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[24619,24621],"content":"T8","needQuote":true,"needEscape":true,"nodes":[{"content":"T8","pos":[0,2]}]},{"pos":[24759,24773],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24928,24935],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25053,25059],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25216,25234],"content":"Equals(ValueTuple)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple)","pos":[0,18]}]},{"pos":[25397,25404],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25526,25536],"content":"ValueTuple","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple","pos":[0,10]}]},{"pos":[25687,25700],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[25851,25856],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26080,26148],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[26409,26414],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26528,26534],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26677,26686],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[26934,27006],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[27277,27284],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27402,27408],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27559,27576],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[27831,27901],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[28166,28171],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28320,28337],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[28546,28582],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[28779,28784],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28898,28904],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29044,29054],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[29200,29206],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple\n  id: ValueTuple\n  children:\n  - System.ValueTuple.CompareTo(System.ValueTuple)\n  - System.ValueTuple.Create\n  - System.ValueTuple.Create``1(``0)\n  - System.ValueTuple.Create``2(``0,``1)\n  - System.ValueTuple.Create``3(``0,``1,``2)\n  - System.ValueTuple.Create``4(``0,``1,``2,``3)\n  - System.ValueTuple.Create``5(``0,``1,``2,``3,``4)\n  - System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)\n  - System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)\n  - System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\n  - System.ValueTuple.Equals(System.Object)\n  - System.ValueTuple.Equals(System.ValueTuple)\n  - System.ValueTuple.GetHashCode\n  - System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple.ToString\n  langs:\n  - csharp\n  name: ValueTuple\n  nameWithType: ValueTuple\n  fullName: System.ValueTuple\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple : IComparable, IComparable<ValueTuple>, IEquatable<ValueTuple>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple>\n  - System.IEquatable<System.ValueTuple>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.CompareTo(System.ValueTuple)\n  id: CompareTo(System.ValueTuple)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple)\n  nameWithType: ValueTuple.CompareTo(ValueTuple)\n  fullName: System.ValueTuple.CompareTo(ValueTuple)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple other);\n    parameters:\n    - id: other\n      type: System.ValueTuple\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create\n  id: Create\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: ValueTuple.Create()\n  fullName: System.ValueTuple.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple Create ();\n    parameters: []\n    return:\n      type: System.ValueTuple\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``1(``0)\n  id: Create``1(``0)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1)\n  nameWithType: ValueTuple.Create(T1)\n  fullName: System.ValueTuple.Create(T1)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1> Create<T1> (T1 item1);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``2(``0,``1)\n  id: Create``2(``0,``1)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2)\n  nameWithType: ValueTuple.Create(T1,T2)\n  fullName: System.ValueTuple.Create(T1,T2)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2> Create<T1,T2> (T1 item1, T2 item2);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``3(``0,``1,``2)\n  id: Create``3(``0,``1,``2)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2,T3)\n  nameWithType: ValueTuple.Create(T1,T2,T3)\n  fullName: System.ValueTuple.Create(T1,T2,T3)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2,T3> Create<T1,T2,T3> (T1 item1, T2 item2, T3 item3);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``4(``0,``1,``2,``3)\n  id: Create``4(``0,``1,``2,``3)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2,T3,T4)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2,T3,T4> Create<T1,T2,T3,T4> (T1 item1, T2 item2, T3 item3, T4 item4);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``5(``0,``1,``2,``3,``4)\n  id: Create``5(``0,``1,``2,``3,``4)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2,T3,T4,T5)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2,T3,T4,T5> Create<T1,T2,T3,T4,T5> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`5\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)\n  id: Create``6(``0,``1,``2,``3,``4,``5)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2,T3,T4,T5,T6)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2,T3,T4,T5,T6> Create<T1,T2,T3,T4,T5,T6> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    - id: item6\n      type: T6\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`6\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)\n  id: Create``7(``0,``1,``2,``3,``4,``5,``6)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2,T3,T4,T5,T6,T7)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2,T3,T4,T5,T6,T7> Create<T1,T2,T3,T4,T5,T6,T7> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    - id: item6\n      type: T6\n      description: Parameter description to be filled\n    - id: item7\n      type: T7\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple`7\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\n  id: Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Create(T1,T2,T3,T4,T5,T6,T7,T8)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>> Create<T1,T2,T3,T4,T5,T6,T7,T8> (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, T8 item8);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    - id: item6\n      type: T6\n      description: Parameter description to be filled\n    - id: item7\n      type: T7\n      description: Parameter description to be filled\n    - id: item8\n      type: T8\n      description: Parameter description to be filled\n    return:\n      type: System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,System.ValueTuple{T8}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple.Equals(Object)\n  fullName: System.ValueTuple.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.Equals(System.ValueTuple)\n  id: Equals(System.ValueTuple)\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: Equals(ValueTuple)\n  nameWithType: ValueTuple.Equals(ValueTuple)\n  fullName: System.ValueTuple.Equals(ValueTuple)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple other);\n    parameters:\n    - id: other\n      type: System.ValueTuple\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple.GetHashCode()\n  fullName: System.ValueTuple.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple.ToString\n  id: ToString\n  parent: System.ValueTuple\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple.ToString()\n  fullName: System.ValueTuple.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple.CompareTo(System.ValueTuple)\n  parent: System.ValueTuple\n  isExternal: false\n  name: CompareTo(ValueTuple)\n  nameWithType: ValueTuple.CompareTo(ValueTuple)\n  fullName: System.ValueTuple.CompareTo(ValueTuple)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple\n  parent: System\n  isExternal: false\n  name: ValueTuple\n  nameWithType: ValueTuple\n  fullName: System.ValueTuple\n- uid: System.ValueTuple.Create\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create()\n  nameWithType: ValueTuple.Create()\n  fullName: System.ValueTuple.Create()\n- uid: System.ValueTuple\n  parent: System\n  isExternal: false\n  name: ValueTuple\n  nameWithType: ValueTuple\n  fullName: System.ValueTuple\n- uid: System.ValueTuple.Create``1(``0)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1)\n  nameWithType: ValueTuple.Create(T1)\n  fullName: System.ValueTuple.Create(T1)\n- uid: System.ValueTuple`1\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1>\n  nameWithType: ValueTuple<T1>\n  fullName: System.ValueTuple<T1>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple.Create``2(``0,``1)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2)\n  nameWithType: ValueTuple.Create(T1,T2)\n  fullName: System.ValueTuple.Create(T1,T2)\n- uid: System.ValueTuple`2\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2>\n  nameWithType: ValueTuple<T1,T2>\n  fullName: System.ValueTuple<T1,T2>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple.Create``3(``0,``1,``2)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2,T3)\n  nameWithType: ValueTuple.Create(T1,T2,T3)\n  fullName: System.ValueTuple.Create(T1,T2,T3)\n- uid: System.ValueTuple`3\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3>\n  nameWithType: ValueTuple<T1,T2,T3>\n  fullName: System.ValueTuple<T1,T2,T3>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple.Create``4(``0,``1,``2,``3)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2,T3,T4)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4)\n- uid: System.ValueTuple`4\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4>\n  nameWithType: ValueTuple<T1,T2,T3,T4>\n  fullName: System.ValueTuple<T1,T2,T3,T4>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.ValueTuple.Create``5(``0,``1,``2,``3,``4)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2,T3,T4,T5)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5)\n- uid: System.ValueTuple`5\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: System.ValueTuple.Create``6(``0,``1,``2,``3,``4,``5)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2,T3,T4,T5,T6)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6)\n- uid: System.ValueTuple`6\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: System.ValueTuple.Create``7(``0,``1,``2,``3,``4,``5,``6)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2,T3,T4,T5,T6,T7)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7)\n- uid: System.ValueTuple`7\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  parent: ''\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: System.ValueTuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Create(T1,T2,T3,T4,T5,T6,T7,T8)\n  nameWithType: ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)\n  fullName: System.ValueTuple.Create(T1,T2,T3,T4,T5,T6,T7,T8)\n- uid: System.ValueTuple{T1,T2,T3,T4,T5,T6,T7,System.ValueTuple{T8}}\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,ValueTuple<T8>>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,System.ValueTuple<T8>>\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  parent: ''\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: T8\n  parent: ''\n  isExternal: true\n  name: T8\n  nameWithType: T8\n  fullName: T8\n- uid: System.ValueTuple.Equals(System.Object)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple.Equals(Object)\n  fullName: System.ValueTuple.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple.Equals(System.ValueTuple)\n  parent: System.ValueTuple\n  isExternal: false\n  name: Equals(ValueTuple)\n  nameWithType: ValueTuple.Equals(ValueTuple)\n  fullName: System.ValueTuple.Equals(ValueTuple)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple\n  parent: System\n  isExternal: false\n  name: ValueTuple\n  nameWithType: ValueTuple\n  fullName: System.ValueTuple\n- uid: System.ValueTuple.GetHashCode\n  parent: System.ValueTuple\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple.GetHashCode()\n  fullName: System.ValueTuple.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple.ToString\n  parent: System.ValueTuple\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple.ToString()\n  fullName: System.ValueTuple.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple.Equals*\n  parent: System.ValueTuple\n  isExternal: false\n  nameWithType: ValueTuple.\n"}