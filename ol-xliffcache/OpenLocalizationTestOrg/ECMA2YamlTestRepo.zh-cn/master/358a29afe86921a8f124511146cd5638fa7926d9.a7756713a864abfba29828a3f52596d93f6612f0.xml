{"nodes":[{"pos":[570,584],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[1078,1092],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1386,1420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1479,1513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1682,1695],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[1985,2019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2238,2267],"content":"GetTargetType(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTargetType(TypedReference)","pos":[0,29]}]},{"pos":[2620,2654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2710,2744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3017,3055],"content":"MakeTypedReference(Object,FieldInfo[])","needQuote":true,"needEscape":true,"nodes":[{"content":"MakeTypedReference(Object,FieldInfo[])","pos":[0,38]}]},{"pos":[3463,3497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3574,3608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3674,3708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3963,4003],"content":"SetTypedReference(TypedReference,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetTypedReference(TypedReference,Object)","pos":[0,40]}]},{"pos":[4398,4432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4494,4528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4751,4782],"content":"TargetTypeToken(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"TargetTypeToken(TypedReference)","pos":[0,31]}]},{"pos":[5154,5188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5257,5291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5500,5524],"content":"ToObject(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToObject(TypedReference)","pos":[0,24]}]},{"pos":[5864,5898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5956,5990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6104,6120],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6232,6246],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6409,6416],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6534,6540],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6691,6704],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6863,6868],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7042,7071],"content":"GetTargetType(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTargetType(TypedReference)","pos":[0,29]}]},{"pos":[7261,7265],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7385,7399],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[7618,7656],"content":"MakeTypedReference(Object,FieldInfo[])","needQuote":true,"needEscape":true,"nodes":[{"content":"MakeTypedReference(Object,FieldInfo[])","pos":[0,38]}]},{"pos":[7874,7888],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[8020,8026],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8167,8176],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[8389,8429],"content":"SetTypedReference(TypedReference,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetTypedReference(TypedReference,Object)","pos":[0,40]}]},{"pos":[8651,8665],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[8797,8803],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8981,9012],"content":"TargetTypeToken(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"TargetTypeToken(TypedReference)","pos":[0,31]}]},{"pos":[9219,9236],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[9382,9396],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]},{"pos":[9583,9607],"content":"ToObject(TypedReference)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToObject(TypedReference)","pos":[0,24]}]},{"pos":[9789,9795],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9919,9933],"content":"TypedReference","needQuote":true,"needEscape":true,"nodes":[{"content":"TypedReference","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.TypedReference\n  id: TypedReference\n  children:\n  - System.TypedReference.Equals(System.Object)\n  - System.TypedReference.GetHashCode\n  - System.TypedReference.GetTargetType(System.TypedReference)\n  - System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  - System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  - System.TypedReference.TargetTypeToken(System.TypedReference)\n  - System.TypedReference.ToObject(System.TypedReference)\n  langs:\n  - csharp\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n  type: Struct\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct TypedReference\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: TypedReference.Equals(Object)\n  fullName: System.TypedReference.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.GetHashCode\n  id: GetHashCode\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: TypedReference.GetHashCode()\n  fullName: System.TypedReference.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.GetTargetType(System.TypedReference)\n  id: GetTargetType(System.TypedReference)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: GetTargetType(TypedReference)\n  nameWithType: TypedReference.GetTargetType(TypedReference)\n  fullName: System.TypedReference.GetTargetType(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Type GetTargetType (TypedReference value);\n    parameters:\n    - id: value\n      type: System.TypedReference\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  id: MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: MakeTypedReference(Object,FieldInfo[])\n  nameWithType: TypedReference.MakeTypedReference(Object,FieldInfo[])\n  fullName: System.TypedReference.MakeTypedReference(Object,FieldInfo[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static TypedReference MakeTypedReference (object target, System.Reflection.FieldInfo[] flds);\n    parameters:\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    - id: flds\n      type: System.Reflection.FieldInfo[]\n      description: Parameter description to be filled\n    return:\n      type: System.TypedReference\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  id: SetTypedReference(System.TypedReference,System.Object)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: SetTypedReference(TypedReference,Object)\n  nameWithType: TypedReference.SetTypedReference(TypedReference,Object)\n  fullName: System.TypedReference.SetTypedReference(TypedReference,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void SetTypedReference (TypedReference target, object value);\n    parameters:\n    - id: target\n      type: System.TypedReference\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.TargetTypeToken(System.TypedReference)\n  id: TargetTypeToken(System.TypedReference)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: TargetTypeToken(TypedReference)\n  nameWithType: TypedReference.TargetTypeToken(TypedReference)\n  fullName: System.TypedReference.TargetTypeToken(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static RuntimeTypeHandle TargetTypeToken (TypedReference value);\n    parameters:\n    - id: value\n      type: System.TypedReference\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.TypedReference.ToObject(System.TypedReference)\n  id: ToObject(System.TypedReference)\n  parent: System.TypedReference\n  langs:\n  - csharp\n  name: ToObject(TypedReference)\n  nameWithType: TypedReference.ToObject(TypedReference)\n  fullName: System.TypedReference.ToObject(TypedReference)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static object ToObject (TypedReference value);\n    parameters:\n    - id: value\n      type: System.TypedReference\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.TypedReference.Equals(System.Object)\n  parent: System.TypedReference\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: TypedReference.Equals(Object)\n  fullName: System.TypedReference.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TypedReference.GetHashCode\n  parent: System.TypedReference\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: TypedReference.GetHashCode()\n  fullName: System.TypedReference.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TypedReference.GetTargetType(System.TypedReference)\n  parent: System.TypedReference\n  isExternal: false\n  name: GetTargetType(TypedReference)\n  nameWithType: TypedReference.GetTargetType(TypedReference)\n  fullName: System.TypedReference.GetTargetType(TypedReference)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.TypedReference.MakeTypedReference(System.Object,System.Reflection.FieldInfo[])\n  parent: System.TypedReference\n  isExternal: false\n  name: MakeTypedReference(Object,FieldInfo[])\n  nameWithType: TypedReference.MakeTypedReference(Object,FieldInfo[])\n  fullName: System.TypedReference.MakeTypedReference(Object,FieldInfo[])\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo[]\n- uid: System.TypedReference.SetTypedReference(System.TypedReference,System.Object)\n  parent: System.TypedReference\n  isExternal: false\n  name: SetTypedReference(TypedReference,Object)\n  nameWithType: TypedReference.SetTypedReference(TypedReference,Object)\n  fullName: System.TypedReference.SetTypedReference(TypedReference,Object)\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TypedReference.TargetTypeToken(System.TypedReference)\n  parent: System.TypedReference\n  isExternal: false\n  name: TargetTypeToken(TypedReference)\n  nameWithType: TypedReference.TargetTypeToken(TypedReference)\n  fullName: System.TypedReference.TargetTypeToken(TypedReference)\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n- uid: System.TypedReference.ToObject(System.TypedReference)\n  parent: System.TypedReference\n  isExternal: false\n  name: ToObject(TypedReference)\n  nameWithType: TypedReference.ToObject(TypedReference)\n  fullName: System.TypedReference.ToObject(TypedReference)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.TypedReference\n  parent: System\n  isExternal: false\n  name: TypedReference\n  nameWithType: TypedReference\n  fullName: System.TypedReference\n"}