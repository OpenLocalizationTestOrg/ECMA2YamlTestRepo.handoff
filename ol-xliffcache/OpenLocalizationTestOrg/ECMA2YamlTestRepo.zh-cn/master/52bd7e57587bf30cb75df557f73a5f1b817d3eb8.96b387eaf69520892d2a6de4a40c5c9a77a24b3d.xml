{"nodes":[{"pos":[565,593],"content":"GenericTypeArgumentConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericTypeArgumentConverter","pos":[0,28]}]},{"pos":[1467,1497],"content":"GenericTypeArgumentConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericTypeArgumentConverter()","pos":[0,30]}]},{"pos":[2281,2320],"content":"Convert(Object,Type,Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Object,Type,Object,CultureInfo)","pos":[0,39]}]},{"pos":[2856,2890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2955,2989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3055,3089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3172,3206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3264,3298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3701,3744],"content":"ConvertBack(Object,Type,Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertBack(Object,Type,Object,CultureInfo)","pos":[0,43]}]},{"pos":[4292,4326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4391,4425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4491,4525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4608,4642],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4700,4734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4845,4858],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5040,5070],"content":"GenericTypeArgumentConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericTypeArgumentConverter()","pos":[0,30]}]},{"pos":[5512,5551],"content":"Convert(Object,Type,Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Object,Type,Object,CultureInfo)","pos":[0,39]}]},{"pos":[5820,5826],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5942,5948],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6062,6066],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[6178,6184],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6333,6344],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[6679,6722],"content":"ConvertBack(Object,Type,Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertBack(Object,Type,Object,CultureInfo)","pos":[0,43]}]},{"pos":[6999,7005],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7121,7127],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7241,7245],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7357,7363],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7512,7523],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  id: GenericTypeArgumentConverter\n  children:\n  - System.Activities.Core.Presentation.GenericTypeArgumentConverter.#ctor\n  - System.Activities.Core.Presentation.GenericTypeArgumentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Activities.Core.Presentation.GenericTypeArgumentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  langs:\n  - csharp\n  name: GenericTypeArgumentConverter\n  nameWithType: GenericTypeArgumentConverter\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  type: Class\n  syntax:\n    content: 'public sealed class GenericTypeArgumentConverter : System.Windows.Data.IValueConverter'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Data.IValueConverter\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter.#ctor\n  id: '#ctor'\n  parent: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  langs:\n  - csharp\n  name: GenericTypeArgumentConverter()\n  nameWithType: GenericTypeArgumentConverter.GenericTypeArgumentConverter()\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter.GenericTypeArgumentConverter()\n  type: Constructor\n  assemblies:\n  - System.Activities.Core.Presentation\n  namespace: System.Activities.Core.Presentation\n  syntax:\n    content: public GenericTypeArgumentConverter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  langs:\n  - csharp\n  name: Convert(Object,Type,Object,CultureInfo)\n  nameWithType: GenericTypeArgumentConverter.Convert(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter.Convert(Object,Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Core.Presentation\n  namespace: System.Activities.Core.Presentation\n  syntax:\n    content: public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: targetType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameter\n      type: System.Object\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object,Type,Object,CultureInfo)\n  nameWithType: GenericTypeArgumentConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Core.Presentation\n  namespace: System.Activities.Core.Presentation\n  syntax:\n    content: public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: targetType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameter\n      type: System.Object\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter.#ctor\n  parent: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  isExternal: false\n  name: GenericTypeArgumentConverter()\n  nameWithType: GenericTypeArgumentConverter.GenericTypeArgumentConverter()\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter.GenericTypeArgumentConverter()\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  isExternal: false\n  name: Convert(Object,Type,Object,CultureInfo)\n  nameWithType: GenericTypeArgumentConverter.Convert(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter.Convert(Object,Type,Object,CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Activities.Core.Presentation.GenericTypeArgumentConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Core.Presentation.GenericTypeArgumentConverter\n  isExternal: false\n  name: ConvertBack(Object,Type,Object,CultureInfo)\n  nameWithType: GenericTypeArgumentConverter.ConvertBack(Object,Type,Object,CultureInfo)\n  fullName: System.Activities.Core.Presentation.GenericTypeArgumentConverter.ConvertBack(Object,Type,Object,CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n"}