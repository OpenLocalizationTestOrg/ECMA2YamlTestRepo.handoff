{"nodes":[{"pos":[2855,2873],"content":"IHash<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IHash&lt;TKey,TValue&gt;","pos":[0,18],"source":"IHash<TKey,TValue>"}]},{"pos":[3303,3337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3374,3408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3863,3908],"content":"begin(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"begin(ContainerBidirectionalIterator<TValue>)"},{"pos":[4487,4521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4629,4663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4856,4870],"content":"bucket_count()","needQuote":true,"needEscape":true,"nodes":[{"content":"bucket_count()","pos":[0,14]}]},{"pos":[5214,5248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5427,5434],"content":"clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"clear()","pos":[0,7]}]},{"pos":[5888,5899],"content":"count(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"count(TKey)","pos":[0,11]}]},{"pos":[6237,6271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6328,6362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6541,6548],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[6874,6908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7219,7262],"content":"end(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"end(ContainerBidirectionalIterator<TValue>)"},{"pos":[7835,7869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7977,8011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8560,8668],"content":"equal_range(GenericPair&lt;ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>&gt;,TKey)","needQuote":true,"needEscape":true,"source":"equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)"},{"pos":[9619,9653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9708,9742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9850,9884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10071,10082],"content":"erase(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"erase(TKey)","pos":[0,11]}]},{"pos":[10420,10454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10511,10545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11040,11116],"content":"erase(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)"},{"pos":[11829,11863],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11976,12010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12118,12152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12775,12882],"content":"erase(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)"},{"pos":[13738,13772],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13890,13924],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14041,14075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14183,14217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14588,14637],"content":"find(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,TKey)","needQuote":true,"needEscape":true,"source":"find(ContainerBidirectionalIterator<TValue>,TKey)"},{"pos":[15237,15271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15326,15360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15468,15502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15697,15712],"content":"hash_delegate()","needQuote":true,"needEscape":true,"nodes":[{"content":"hash_delegate()","pos":[0,15]}]},{"pos":[16149,16183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16428,16447],"content":"insert(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"insert(IEnumerable)","pos":[0,19]}]},{"pos":[16853,16887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17323,17376],"content":"insert(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,IInputIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"insert(IInputIterator<TValue>,IInputIterator<TValue>)"},{"pos":[17957,17991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18089,18123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18609,18683],"content":"insert(GenericPair&lt;ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Boolean&gt;,TValue)","needQuote":true,"needEscape":true,"source":"insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)"},{"pos":[19436,19470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19524,19558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19666,19700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20204,20288],"content":"insert(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator,TValue)","needQuote":true,"needEscape":true,"source":"insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)"},{"pos":[21031,21065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21178,21212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21266,21300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21408,21442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21680,21690],"content":"key_comp()","needQuote":true,"needEscape":true,"nodes":[{"content":"key_comp()","pos":[0,10]}]},{"pos":[22127,22161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22352,22365],"content":"load_factor()","needQuote":true,"needEscape":true,"nodes":[{"content":"load_factor()","pos":[0,13]}]},{"pos":[22709,22743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23076,23132],"content":"lower_bound(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,TKey)","needQuote":true,"needEscape":true,"source":"lower_bound(ContainerBidirectionalIterator<TValue>,TKey)"},{"pos":[23753,23787],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23842,23876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23984,24018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24217,24234],"content":"max_load_factor()","needQuote":true,"needEscape":true,"nodes":[{"content":"max_load_factor()","pos":[0,17]}]},{"pos":[24590,24624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24915,24938],"content":"max_load_factor(Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"max_load_factor(Single)","pos":[0,23]}]},{"pos":[25321,25355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25730,25774],"content":"rbegin(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rbegin(ReverseBidirectionalIterator<TValue>)"},{"pos":[26348,26382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26490,26524],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26733,26746],"content":"rehash(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"rehash(Int32)","pos":[0,13]}]},{"pos":[27099,27133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27442,27484],"content":"rend(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rend(ReverseBidirectionalIterator<TValue>)"},{"pos":[28052,28086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28194,28228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28405,28411],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[28731,28765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29010,29034],"content":"swap(IHash<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"swap(IHash&lt;TKey,TValue&gt;)","pos":[0,24],"source":"swap(IHash<TKey,TValue>)"}]},{"pos":[29463,29497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29830,29886],"content":"upper_bound(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,TKey)","needQuote":true,"needEscape":true,"source":"upper_bound(ContainerBidirectionalIterator<TValue>,TKey)"},{"pos":[30507,30541],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30596,30630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30738,30772],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30961,30973],"content":"value_comp()","needQuote":true,"needEscape":true,"nodes":[{"content":"value_comp()","pos":[0,12]}]},{"pos":[31424,31458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31705,31750],"content":"begin(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"begin(ContainerBidirectionalIterator<TValue>)"},{"pos":[32078,32116],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[32380,32394],"content":"bucket_count()","needQuote":true,"needEscape":true,"nodes":[{"content":"bucket_count()","pos":[0,14]}]},{"pos":[32581,32586],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32751,32758],"content":"clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"clear()","pos":[0,7]}]},{"pos":[32987,32998],"content":"count(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"count(TKey)","pos":[0,11]}]},{"pos":[33179,33184],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33284,33288],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[33444,33451],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[33626,33633],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33868,33911],"content":"end(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"end(ContainerBidirectionalIterator<TValue>)"},{"pos":[34235,34273],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[34715,34823],"content":"equal_range(GenericPair&lt;ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>&gt;,TKey)","needQuote":true,"needEscape":true,"source":"equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)"},{"pos":[35385,35475],"content":"GenericPair&lt;ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator<ph id=\"ph2\">&lt;TValue&gt;</ph><ph id=\"ph3\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>"},{"pos":[35829,35833],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[35993,36004],"content":"erase(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"erase(TKey)","pos":[0,11]}]},{"pos":[36185,36190],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36290,36294],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[36582,36658],"content":"erase(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)"},{"pos":[37048,37086],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[37367,37397],"content":"ContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerBidirectionalIterator","pos":[0,30]}]},{"pos":[37834,37941],"content":"erase(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"source":"erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)"},{"pos":[38393,38431],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[38712,38742],"content":"ContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerBidirectionalIterator","pos":[0,30]}]},{"pos":[39007,39037],"content":"ContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerBidirectionalIterator","pos":[0,30]}]},{"pos":[39348,39397],"content":"find(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,TKey)","needQuote":true,"needEscape":true,"source":"find(ContainerBidirectionalIterator<TValue>,TKey)"},{"pos":[39733,39771],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[39963,39967],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[40131,40146],"content":"hash_delegate()","needQuote":true,"needEscape":true,"nodes":[{"content":"hash_delegate()","pos":[0,15]}]},{"pos":[40398,40423],"content":"UnaryDelegate<TKey,Int32>","needQuote":true,"needEscape":true,"nodes":[{"content":"UnaryDelegate&lt;TKey,Int32&gt;","pos":[0,25],"source":"UnaryDelegate<TKey,Int32>"}]},{"pos":[40686,40705],"content":"insert(IEnumerable)","needQuote":true,"needEscape":true,"nodes":[{"content":"insert(IEnumerable)","pos":[0,19]}]},{"pos":[40932,40943],"content":"IEnumerable","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable","pos":[0,11]}]},{"pos":[41234,41287],"content":"insert(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,IInputIterator<ph id=\"ph2\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"insert(IInputIterator<TValue>,IInputIterator<TValue>)"},{"pos":[41615,41637],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[41873,41895],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[42247,42321],"content":"insert(GenericPair&lt;ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Boolean&gt;,TValue)","needQuote":true,"needEscape":true,"source":"insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)"},{"pos":[42758,42817],"content":"GenericPair&lt;ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Boolean&gt;","needQuote":true,"needEscape":true,"source":"GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>"},{"pos":[43085,43091],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[43387,43471],"content":"insert(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerBidirectionalIterator,TValue)","needQuote":true,"needEscape":true,"source":"insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)"},{"pos":[43877,43915],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[44196,44226],"content":"ContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerBidirectionalIterator","pos":[0,30]}]},{"pos":[44404,44410],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[44573,44583],"content":"key_comp()","needQuote":true,"needEscape":true,"nodes":[{"content":"key_comp()","pos":[0,10]}]},{"pos":[44833,44866],"content":"BinaryDelegate<TKey,TKey,Boolean>","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryDelegate&lt;TKey,TKey,Boolean&gt;","pos":[0,33],"source":"BinaryDelegate<TKey,TKey,Boolean>"}]},{"pos":[45118,45131],"content":"load_factor()","needQuote":true,"needEscape":true,"nodes":[{"content":"load_factor()","pos":[0,13]}]},{"pos":[45317,45323],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[45567,45623],"content":"lower_bound(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,TKey)","needQuote":true,"needEscape":true,"source":"lower_bound(ContainerBidirectionalIterator<TValue>,TKey)"},{"pos":[45973,46011],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[46203,46207],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[46373,46390],"content":"max_load_factor()","needQuote":true,"needEscape":true,"nodes":[{"content":"max_load_factor()","pos":[0,17]}]},{"pos":[46584,46590],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[46782,46805],"content":"max_load_factor(Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"max_load_factor(Single)","pos":[0,23]}]},{"pos":[47011,47017],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[47251,47295],"content":"rbegin(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rbegin(ReverseBidirectionalIterator<TValue>)"},{"pos":[47619,47655],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[47923,47936],"content":"rehash(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"rehash(Int32)","pos":[0,13]}]},{"pos":[48121,48126],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48356,48398],"content":"rend(ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"rend(ReverseBidirectionalIterator<TValue>)"},{"pos":[48718,48754],"content":"ReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReverseBidirectionalIterator<TValue>"},{"pos":[49006,49012],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[49183,49188],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49386,49410],"content":"swap(IHash<TKey,TValue>)","needQuote":true,"needEscape":true,"nodes":[{"content":"swap(IHash&lt;TKey,TValue&gt;)","pos":[0,24],"source":"swap(IHash<TKey,TValue>)"}]},{"pos":[49655,49673],"content":"IHash<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IHash&lt;TKey,TValue&gt;","pos":[0,18],"source":"IHash<TKey,TValue>"}]},{"pos":[49959,50015],"content":"upper_bound(ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,TKey)","needQuote":true,"needEscape":true,"source":"upper_bound(ContainerBidirectionalIterator<TValue>,TKey)"},{"pos":[50365,50403],"content":"ContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerBidirectionalIterator<TValue>"},{"pos":[50595,50599],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[50760,50772],"content":"value_comp()","needQuote":true,"needEscape":true,"nodes":[{"content":"value_comp()","pos":[0,12]}]},{"pos":[51030,51067],"content":"BinaryDelegate<TValue,TValue,Boolean>","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryDelegate&lt;TValue,TValue,Boolean&gt;","pos":[0,37],"source":"BinaryDelegate<TValue,TValue,Boolean>"}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IHash`2\n  id: IHash`2\n  children:\n  - Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.bucket_count\n  - Microsoft.VisualC.StlClr.IHash`2.clear\n  - Microsoft.VisualC.StlClr.IHash`2.count(`0)\n  - Microsoft.VisualC.StlClr.IHash`2.empty\n  - Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.erase(`0)\n  - Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.hash_delegate\n  - Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)\n  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  - Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  - Microsoft.VisualC.StlClr.IHash`2.key_comp\n  - Microsoft.VisualC.StlClr.IHash`2.load_factor\n  - Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.max_load_factor\n  - Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)\n  - Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)\n  - Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.IHash`2.size\n  - Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)\n  - Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  - Microsoft.VisualC.StlClr.IHash`2.value_comp\n  langs:\n  - csharp\n  name: IHash<TKey,TValue>\n  nameWithType: IHash<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>\n  type: Interface\n  syntax:\n    content: >-\n      [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Microsoft.Design\", \"CA1005\")]\n\n      public interface IHash<TKey,TValue> : ICloneable, Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>, System.Collections.ICollection\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer<TValue>\n  - System.Collections.ICollection\n  - System.ICloneable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  id: begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: begin(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) begin (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count\n  id: bucket_count\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: bucket_count()\n  nameWithType: IHash<TKey,TValue>.bucket_count()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.bucket_count()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int bucket_count ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.clear\n  id: clear\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: clear()\n  nameWithType: IHash<TKey,TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.clear()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.count(`0)\n  id: count(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: count(TKey)\n  nameWithType: IHash<TKey,TValue>.count(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.count(TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int count (TKey _Keyval);\n    parameters:\n    - id: _Keyval\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IHash<TKey,TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  id: end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: end(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) end (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  id: equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  nameWithType: IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) equal_range (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}\n      description: Parameter description to be filled\n    - id: _Keyval\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(`0)\n  id: erase(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: erase(TKey)\n  nameWithType: IHash<TKey,TValue>.erase(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int erase (TKey _Keyval);\n    parameters:\n    - id: _Keyval\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.erase*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.erase*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) erase (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _First_iter, Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Last_iter);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: _First_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: Parameter description to be filled\n    - id: _Last_iter\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.erase*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  id: find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: find(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) find (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: _Keyval\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate\n  id: hash_delegate\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: hash_delegate()\n  nameWithType: IHash<TKey,TValue>.hash_delegate()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.hash_delegate()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.UnaryDelegate<TKey,int> hash_delegate ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.UnaryDelegate{TKey,System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)\n  id: insert(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(IEnumerable)\n  nameWithType: IHash<TKey,TValue>.insert(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IEnumerable)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (System.Collections.IEnumerable _Right);\n    parameters:\n    - id: _Right\n      type: System.Collections.IEnumerable\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void insert (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _First, Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Last);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    - id: _Last\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  id: insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,bool> , TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}\n      description: Parameter description to be filled\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  id: insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) insert (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Where, TValue _Val);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: _Where\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: Parameter description to be filled\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.insert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp\n  id: key_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: key_comp()\n  nameWithType: IHash<TKey,TValue>.key_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.key_comp()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,bool> key_comp ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor\n  id: load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: load_factor()\n  nameWithType: IHash<TKey,TValue>.load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.load_factor()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public float load_factor ();\n    parameters: []\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  id: lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) lower_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: _Keyval\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor\n  id: max_load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: max_load_factor()\n  nameWithType: IHash<TKey,TValue>.max_load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public float max_load_factor ();\n    parameters: []\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)\n  id: max_load_factor(System.Single)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: max_load_factor(Single)\n  nameWithType: IHash<TKey,TValue>.max_load_factor(Single)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor(Single)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void max_load_factor (float _Newmax);\n    parameters:\n    - id: _Newmax\n      type: System.Single\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: rbegin(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rbegin (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)\n  id: rehash(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: rehash(Int32)\n  nameWithType: IHash<TKey,TValue>.rehash(Int32)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rehash(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void rehash (int _Buckets);\n    parameters:\n    - id: _Buckets\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  id: rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: rend(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) rend (ref Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IHash<TKey,TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)\n  id: swap(Microsoft.VisualC.StlClr.IHash`2)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: swap(IHash<TKey,TValue>)\n  nameWithType: IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void swap (Microsoft.VisualC.StlClr.IHash<TKey,TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IHash`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  id: upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) upper_bound (ref Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue> , TKey _Keyval);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: _Keyval\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp\n  id: value_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  langs:\n  - csharp\n  name: value_comp()\n  nameWithType: IHash<TKey,TValue>.value_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.value_comp()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: begin(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.begin(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.bucket_count\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: bucket_count()\n  nameWithType: IHash<TKey,TValue>.bucket_count()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.bucket_count()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IHash`2.clear\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: clear()\n  nameWithType: IHash<TKey,TValue>.clear()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.clear()\n- uid: Microsoft.VisualC.StlClr.IHash`2.count(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: count(TKey)\n  nameWithType: IHash<TKey,TValue>.count(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.count(TKey)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.empty\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: empty()\n  nameWithType: IHash<TKey,TValue>.empty()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: end(ContainerBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.end(ContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  nameWithType: IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.equal_range(GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>,TKey)\n- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue}}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>\n  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator<TValue>>\n  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>>\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase(TKey)\n  nameWithType: IHash<TKey,TValue>.erase(TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(TKey)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  nameWithType: IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.erase(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: find(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.find(ContainerBidirectionalIterator<TValue>,TKey)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.hash_delegate\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: hash_delegate()\n  nameWithType: IHash<TKey,TValue>.hash_delegate()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.hash_delegate()\n- uid: Microsoft.VisualC.StlClr.UnaryDelegate{TKey,System.Int32}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: UnaryDelegate<TKey,Int32>\n  nameWithType: UnaryDelegate<TKey,Int32>\n  fullName: Microsoft.VisualC.StlClr.UnaryDelegate<TKey,System.Int32>\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(IEnumerable)\n  nameWithType: IHash<TKey,TValue>.insert(IEnumerable)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IEnumerable)\n- uid: System.Collections.IEnumerable\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerable\n  nameWithType: IEnumerable\n  fullName: System.Collections.IEnumerable\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator`1,Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(IInputIterator<TValue>,IInputIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>,TValue)\n- uid: Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{TValue},System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>\n  nameWithType: GenericPair<ContainerBidirectionalIterator<TValue>,Boolean>\n  fullName: Microsoft.VisualC.StlClr.GenericPair<Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>,System.Boolean>\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator,`1)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  nameWithType: IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.insert(ContainerBidirectionalIterator<TValue>,ContainerBidirectionalIterator,TValue)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IHash`2.key_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: key_comp()\n  nameWithType: IHash<TKey,TValue>.key_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.key_comp()\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TKey,TKey,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TKey,TKey,Boolean>\n  nameWithType: BinaryDelegate<TKey,TKey,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TKey,TKey,System.Boolean>\n- uid: Microsoft.VisualC.StlClr.IHash`2.load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: load_factor()\n  nameWithType: IHash<TKey,TValue>.load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.load_factor()\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.lower_bound(ContainerBidirectionalIterator<TValue>,TKey)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: max_load_factor()\n  nameWithType: IHash<TKey,TValue>.max_load_factor()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor()\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: max_load_factor(Single)\n  nameWithType: IHash<TKey,TValue>.max_load_factor(Single)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.max_load_factor(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rbegin(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rbegin(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rehash(Int32)\n  nameWithType: IHash<TKey,TValue>.rehash(Int32)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rehash(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: rend(ReverseBidirectionalIterator<TValue>)\n  nameWithType: IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.rend(ReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ReverseBidirectionalIterator<TValue>\n  nameWithType: ReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.size\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: size()\n  nameWithType: IHash<TKey,TValue>.size()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.size()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash`2)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: swap(IHash<TKey,TValue>)\n  nameWithType: IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.swap(IHash<TKey,TValue>)\n- uid: Microsoft.VisualC.StlClr.IHash`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IHash<TKey,TValue>\n  nameWithType: IHash<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>\n- uid: Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1@,`0)\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  nameWithType: IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.upper_bound(ContainerBidirectionalIterator<TValue>,TKey)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerBidirectionalIterator<TValue>\n  nameWithType: ContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator<TValue>\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: Microsoft.VisualC.StlClr.IHash`2.value_comp\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  name: value_comp()\n  nameWithType: IHash<TKey,TValue>.value_comp()\n  fullName: Microsoft.VisualC.StlClr.IHash<TKey,TValue>.value_comp()\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TValue,TValue,Boolean>\n  nameWithType: BinaryDelegate<TValue,TValue,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>\n- uid: Microsoft.VisualC.StlClr.IHash`2.erase*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  nameWithType: IHash<TKey,TValue>.\n- uid: Microsoft.VisualC.StlClr.IHash`2.insert*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  nameWithType: IHash<TKey,TValue>.\n- uid: Microsoft.VisualC.StlClr.IHash`2.max_load_factor*\n  parent: Microsoft.VisualC.StlClr.IHash`2\n  isExternal: false\n  nameWithType: IHash<TKey,TValue>.\n"}