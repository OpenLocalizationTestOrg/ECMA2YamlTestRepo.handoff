{"nodes":[{"pos":[1224,1236],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[1664,1675],"content":"EmptyHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"EmptyHandle","pos":[0,11]}]},{"pos":[1957,1991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2188,2208],"content":"Equals(ModuleHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ModuleHandle)","pos":[0,20]}]},{"pos":[2523,2557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2616,2650],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2875,2889],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3183,3217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3276,3310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3515,3528],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3814,3848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4095,4140],"content":"GetRuntimeFieldHandleFromMetadataToken(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRuntimeFieldHandleFromMetadataToken(Int32)","pos":[0,45]}]},{"pos":[4543,4577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4647,4681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4930,4976],"content":"GetRuntimeMethodHandleFromMetadataToken(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRuntimeMethodHandleFromMetadataToken(Int32)","pos":[0,46]}]},{"pos":[5385,5419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5490,5524],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5769,5813],"content":"GetRuntimeTypeHandleFromMetadataToken(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRuntimeTypeHandleFromMetadataToken(Int32)","pos":[0,44]}]},{"pos":[6210,6244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6313,6347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6520,6535],"content":"MDStreamVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"MDStreamVersion","pos":[0,15]}]},{"pos":[6808,6842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7089,7127],"content":"op_Equality(ModuleHandle,ModuleHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ModuleHandle,ModuleHandle)","pos":[0,38]}]},{"pos":[7508,7542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7610,7644],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7703,7737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7988,8028],"content":"op_Inequality(ModuleHandle,ModuleHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ModuleHandle,ModuleHandle)","pos":[0,40]}]},{"pos":[8415,8449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8517,8551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8610,8644],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8851,8876],"content":"ResolveFieldHandle(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveFieldHandle(Int32)","pos":[0,25]}]},{"pos":[9219,9253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9323,9357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9724,9789],"content":"ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","pos":[0,65]}]},{"pos":[10306,10340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10434,10468],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10564,10598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10668,10702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10963,10989],"content":"ResolveMethodHandle(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethodHandle(Int32)","pos":[0,26]}]},{"pos":[11338,11372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11443,11477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11847,11913],"content":"ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","pos":[0,66]}]},{"pos":[12436,12470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12564,12598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12694,12728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12799,12833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13091,13115],"content":"ResolveTypeHandle(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveTypeHandle(Int32)","pos":[0,24]}]},{"pos":[13452,13486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13555,13589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13953,14017],"content":"ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","pos":[0,64]}]},{"pos":[14528,14562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14656,14690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14786,14820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14889,14923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15088,15104],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[15202,15213],"content":"EmptyHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"EmptyHandle","pos":[0,11]}]},{"pos":[15371,15383],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[15558,15578],"content":"Equals(ModuleHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ModuleHandle)","pos":[0,20]}]},{"pos":[15749,15756],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15880,15892],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[16061,16075],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[16234,16241],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16359,16365],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16512,16525],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16680,16685],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16871,16916],"content":"GetRuntimeFieldHandleFromMetadataToken(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRuntimeFieldHandleFromMetadataToken(Int32)","pos":[0,45]}]},{"pos":[17148,17166],"content":"RuntimeFieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeFieldHandle","pos":[0,18]}]},{"pos":[17305,17310],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17497,17543],"content":"GetRuntimeMethodHandleFromMetadataToken(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRuntimeMethodHandleFromMetadataToken(Int32)","pos":[0,46]}]},{"pos":[17778,17797],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[17938,17943],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18128,18172],"content":"GetRuntimeTypeHandleFromMetadataToken(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRuntimeTypeHandleFromMetadataToken(Int32)","pos":[0,44]}]},{"pos":[18401,18418],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[18555,18560],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18709,18724],"content":"MDStreamVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"MDStreamVersion","pos":[0,15]}]},{"pos":[18883,18888],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19074,19112],"content":"op_Equality(ModuleHandle,ModuleHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ModuleHandle,ModuleHandle)","pos":[0,38]}]},{"pos":[19319,19326],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19450,19462],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[19596,19608],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[19810,19850],"content":"op_Inequality(ModuleHandle,ModuleHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ModuleHandle,ModuleHandle)","pos":[0,40]}]},{"pos":[20061,20068],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20192,20204],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[20338,20350],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[20530,20555],"content":"ResolveFieldHandle(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveFieldHandle(Int32)","pos":[0,25]}]},{"pos":[20747,20765],"content":"RuntimeFieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeFieldHandle","pos":[0,18]}]},{"pos":[20904,20909],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21129,21194],"content":"ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","pos":[0,65]}]},{"pos":[21466,21484],"content":"RuntimeFieldHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeFieldHandle","pos":[0,18]}]},{"pos":[21623,21628],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21753,21770],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[21921,21938],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[22131,22157],"content":"ResolveMethodHandle(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethodHandle(Int32)","pos":[0,26]}]},{"pos":[22352,22371],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[22512,22517],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22738,22804],"content":"ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","pos":[0,66]}]},{"pos":[23079,23098],"content":"RuntimeMethodHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeMethodHandle","pos":[0,19]}]},{"pos":[23239,23244],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23369,23386],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[23537,23554],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[23745,23769],"content":"ResolveTypeHandle(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveTypeHandle(Int32)","pos":[0,24]}]},{"pos":[23958,23975],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[24112,24117],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24336,24400],"content":"ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])","pos":[0,64]}]},{"pos":[24669,24686],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[24823,24828],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24953,24970],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]},{"pos":[25121,25138],"content":"RuntimeTypeHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"RuntimeTypeHandle","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ModuleHandle\n  id: ModuleHandle\n  children:\n  - System.ModuleHandle.EmptyHandle\n  - System.ModuleHandle.Equals(System.ModuleHandle)\n  - System.ModuleHandle.Equals(System.Object)\n  - System.ModuleHandle.GetHashCode\n  - System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)\n  - System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)\n  - System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)\n  - System.ModuleHandle.MDStreamVersion\n  - System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)\n  - System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)\n  - System.ModuleHandle.ResolveFieldHandle(System.Int32)\n  - System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  - System.ModuleHandle.ResolveMethodHandle(System.Int32)\n  - System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  - System.ModuleHandle.ResolveTypeHandle(System.Int32)\n  - System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  langs:\n  - csharp\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct ModuleHandle\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.EmptyHandle\n  id: EmptyHandle\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: EmptyHandle\n  nameWithType: ModuleHandle.EmptyHandle\n  fullName: System.ModuleHandle.EmptyHandle\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static readonly ModuleHandle EmptyHandle;\n    return:\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.Equals(System.ModuleHandle)\n  id: Equals(System.ModuleHandle)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: Equals(ModuleHandle)\n  nameWithType: ModuleHandle.Equals(ModuleHandle)\n  fullName: System.ModuleHandle.Equals(ModuleHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ModuleHandle handle);\n    parameters:\n    - id: handle\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ModuleHandle.Equals(Object)\n  fullName: System.ModuleHandle.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.GetHashCode\n  id: GetHashCode\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ModuleHandle.GetHashCode()\n  fullName: System.ModuleHandle.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)\n  id: GetRuntimeFieldHandleFromMetadataToken(System.Int32)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: GetRuntimeFieldHandleFromMetadataToken(Int32)\n  nameWithType: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)\n  fullName: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeFieldHandle GetRuntimeFieldHandleFromMetadataToken (int fieldToken);\n    parameters:\n    - id: fieldToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeFieldHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)\n  id: GetRuntimeMethodHandleFromMetadataToken(System.Int32)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: GetRuntimeMethodHandleFromMetadataToken(Int32)\n  nameWithType: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)\n  fullName: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeMethodHandle GetRuntimeMethodHandleFromMetadataToken (int methodToken);\n    parameters:\n    - id: methodToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)\n  id: GetRuntimeTypeHandleFromMetadataToken(System.Int32)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: GetRuntimeTypeHandleFromMetadataToken(Int32)\n  nameWithType: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)\n  fullName: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeTypeHandle GetRuntimeTypeHandleFromMetadataToken (int typeToken);\n    parameters:\n    - id: typeToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.MDStreamVersion\n  id: MDStreamVersion\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: MDStreamVersion\n  nameWithType: ModuleHandle.MDStreamVersion\n  fullName: System.ModuleHandle.MDStreamVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int MDStreamVersion { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)\n  id: op_Equality(System.ModuleHandle,System.ModuleHandle)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: op_Equality(ModuleHandle,ModuleHandle)\n  nameWithType: ModuleHandle.op_Equality(ModuleHandle,ModuleHandle)\n  fullName: System.ModuleHandle.op_Equality(ModuleHandle,ModuleHandle)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Equality (ModuleHandle left, ModuleHandle right);\n    parameters:\n    - id: left\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n    - id: right\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)\n  id: op_Inequality(System.ModuleHandle,System.ModuleHandle)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: op_Inequality(ModuleHandle,ModuleHandle)\n  nameWithType: ModuleHandle.op_Inequality(ModuleHandle,ModuleHandle)\n  fullName: System.ModuleHandle.op_Inequality(ModuleHandle,ModuleHandle)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Inequality (ModuleHandle left, ModuleHandle right);\n    parameters:\n    - id: left\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n    - id: right\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32)\n  id: ResolveFieldHandle(System.Int32)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: ResolveFieldHandle(Int32)\n  nameWithType: ModuleHandle.ResolveFieldHandle(Int32)\n  fullName: System.ModuleHandle.ResolveFieldHandle(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeFieldHandle ResolveFieldHandle (int fieldToken);\n    parameters:\n    - id: fieldToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeFieldHandle\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.ResolveFieldHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  id: ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  nameWithType: ModuleHandle.ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  fullName: System.ModuleHandle.ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeFieldHandle ResolveFieldHandle (int fieldToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);\n    parameters:\n    - id: fieldToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: typeInstantiationContext\n      type: System.RuntimeTypeHandle[]\n      description: Parameter description to be filled\n    - id: methodInstantiationContext\n      type: System.RuntimeTypeHandle[]\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeFieldHandle\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.ResolveFieldHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32)\n  id: ResolveMethodHandle(System.Int32)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: ResolveMethodHandle(Int32)\n  nameWithType: ModuleHandle.ResolveMethodHandle(Int32)\n  fullName: System.ModuleHandle.ResolveMethodHandle(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeMethodHandle ResolveMethodHandle (int methodToken);\n    parameters:\n    - id: methodToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.ResolveMethodHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  id: ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  nameWithType: ModuleHandle.ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  fullName: System.ModuleHandle.ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeMethodHandle ResolveMethodHandle (int methodToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);\n    parameters:\n    - id: methodToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: typeInstantiationContext\n      type: System.RuntimeTypeHandle[]\n      description: Parameter description to be filled\n    - id: methodInstantiationContext\n      type: System.RuntimeTypeHandle[]\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeMethodHandle\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.ResolveMethodHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32)\n  id: ResolveTypeHandle(System.Int32)\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: ResolveTypeHandle(Int32)\n  nameWithType: ModuleHandle.ResolveTypeHandle(Int32)\n  fullName: System.ModuleHandle.ResolveTypeHandle(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeTypeHandle ResolveTypeHandle (int typeToken);\n    parameters:\n    - id: typeToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.ResolveTypeHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  id: ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  parent: System.ModuleHandle\n  langs:\n  - csharp\n  name: ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  nameWithType: ModuleHandle.ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  fullName: System.ModuleHandle.ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public RuntimeTypeHandle ResolveTypeHandle (int typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext);\n    parameters:\n    - id: typeToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: typeInstantiationContext\n      type: System.RuntimeTypeHandle[]\n      description: Parameter description to be filled\n    - id: methodInstantiationContext\n      type: System.RuntimeTypeHandle[]\n      description: Parameter description to be filled\n    return:\n      type: System.RuntimeTypeHandle\n      description: Parameter description to be filled\n  overload: System.ModuleHandle.ResolveTypeHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ModuleHandle.EmptyHandle\n  parent: System.ModuleHandle\n  isExternal: false\n  name: EmptyHandle\n  nameWithType: ModuleHandle.EmptyHandle\n  fullName: System.ModuleHandle.EmptyHandle\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.ModuleHandle.Equals(System.ModuleHandle)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: Equals(ModuleHandle)\n  nameWithType: ModuleHandle.Equals(ModuleHandle)\n  fullName: System.ModuleHandle.Equals(ModuleHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.ModuleHandle.Equals(System.Object)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ModuleHandle.Equals(Object)\n  fullName: System.ModuleHandle.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ModuleHandle.GetHashCode\n  parent: System.ModuleHandle\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ModuleHandle.GetHashCode()\n  fullName: System.ModuleHandle.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(System.Int32)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: GetRuntimeFieldHandleFromMetadataToken(Int32)\n  nameWithType: ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)\n  fullName: System.ModuleHandle.GetRuntimeFieldHandleFromMetadataToken(Int32)\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: false\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(System.Int32)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: GetRuntimeMethodHandleFromMetadataToken(Int32)\n  nameWithType: ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)\n  fullName: System.ModuleHandle.GetRuntimeMethodHandleFromMetadataToken(Int32)\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(System.Int32)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: GetRuntimeTypeHandleFromMetadataToken(Int32)\n  nameWithType: ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)\n  fullName: System.ModuleHandle.GetRuntimeTypeHandleFromMetadataToken(Int32)\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.MDStreamVersion\n  parent: System.ModuleHandle\n  isExternal: false\n  name: MDStreamVersion\n  nameWithType: ModuleHandle.MDStreamVersion\n  fullName: System.ModuleHandle.MDStreamVersion\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.op_Equality(System.ModuleHandle,System.ModuleHandle)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: op_Equality(ModuleHandle,ModuleHandle)\n  nameWithType: ModuleHandle.op_Equality(ModuleHandle,ModuleHandle)\n  fullName: System.ModuleHandle.op_Equality(ModuleHandle,ModuleHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.ModuleHandle.op_Inequality(System.ModuleHandle,System.ModuleHandle)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: op_Inequality(ModuleHandle,ModuleHandle)\n  nameWithType: ModuleHandle.op_Inequality(ModuleHandle,ModuleHandle)\n  fullName: System.ModuleHandle.op_Inequality(ModuleHandle,ModuleHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: ResolveFieldHandle(Int32)\n  nameWithType: ModuleHandle.ResolveFieldHandle(Int32)\n  fullName: System.ModuleHandle.ResolveFieldHandle(Int32)\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: false\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.ResolveFieldHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  parent: System.ModuleHandle\n  isExternal: false\n  name: ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  nameWithType: ModuleHandle.ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  fullName: System.ModuleHandle.ResolveFieldHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n- uid: System.RuntimeFieldHandle\n  parent: System\n  isExternal: false\n  name: RuntimeFieldHandle\n  nameWithType: RuntimeFieldHandle\n  fullName: System.RuntimeFieldHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle[]\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle[]\n- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: ResolveMethodHandle(Int32)\n  nameWithType: ModuleHandle.ResolveMethodHandle(Int32)\n  fullName: System.ModuleHandle.ResolveMethodHandle(Int32)\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.ResolveMethodHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  parent: System.ModuleHandle\n  isExternal: false\n  name: ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  nameWithType: ModuleHandle.ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  fullName: System.ModuleHandle.ResolveMethodHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n- uid: System.RuntimeMethodHandle\n  parent: System\n  isExternal: false\n  name: RuntimeMethodHandle\n  nameWithType: RuntimeMethodHandle\n  fullName: System.RuntimeMethodHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle[]\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle[]\n- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32)\n  parent: System.ModuleHandle\n  isExternal: false\n  name: ResolveTypeHandle(Int32)\n  nameWithType: ModuleHandle.ResolveTypeHandle(Int32)\n  fullName: System.ModuleHandle.ResolveTypeHandle(Int32)\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ModuleHandle.ResolveTypeHandle(System.Int32,System.RuntimeTypeHandle[],System.RuntimeTypeHandle[])\n  parent: System.ModuleHandle\n  isExternal: false\n  name: ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  nameWithType: ModuleHandle.ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n  fullName: System.ModuleHandle.ResolveTypeHandle(Int32,RuntimeTypeHandle[],RuntimeTypeHandle[])\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle[]\n- uid: System.RuntimeTypeHandle\n  parent: System\n  isExternal: false\n  name: RuntimeTypeHandle\n  nameWithType: RuntimeTypeHandle\n  fullName: System.RuntimeTypeHandle[]\n- uid: System.ModuleHandle.Equals*\n  parent: System.ModuleHandle\n  isExternal: false\n  nameWithType: ModuleHandle.\n- uid: System.ModuleHandle.ResolveFieldHandle*\n  parent: System.ModuleHandle\n  isExternal: false\n  nameWithType: ModuleHandle.\n- uid: System.ModuleHandle.ResolveMethodHandle*\n  parent: System.ModuleHandle\n  isExternal: false\n  nameWithType: ModuleHandle.\n- uid: System.ModuleHandle.ResolveTypeHandle*\n  parent: System.ModuleHandle\n  isExternal: false\n  nameWithType: ModuleHandle.\n"}