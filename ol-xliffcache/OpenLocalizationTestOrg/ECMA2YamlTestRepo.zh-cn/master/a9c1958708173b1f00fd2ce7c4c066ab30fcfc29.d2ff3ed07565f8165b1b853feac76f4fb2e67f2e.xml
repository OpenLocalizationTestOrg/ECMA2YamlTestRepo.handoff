{"nodes":[{"pos":[990,1002],"content":"LineGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry","pos":[0,12]}]},{"pos":[5412,5426],"content":"LineGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry()","pos":[0,14]}]},{"pos":[5955,5980],"content":"LineGeometry(Point,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry(Point,Point)","pos":[0,25]}]},{"pos":[6395,6429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6501,6535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6866,6901],"content":"LineGeometry(Point,Point,Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry(Point,Point,Transform)","pos":[0,35]}]},{"pos":[7378,7412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7484,7518],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7601,7635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7818,7824],"content":"Bounds","needQuote":true,"needEscape":true,"nodes":[{"content":"Bounds","pos":[0,6]}]},{"pos":[8138,8172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8353,8360],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8706,8740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8945,8964],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[9346,9380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9587,9607],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[9986,10020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10207,10215],"content":"EndPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[10533,10567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10770,10786],"content":"EndPointProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"EndPointProperty","pos":[0,16]}]},{"pos":[11154,11188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11473,11502],"content":"GetArea(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArea(Double,ToleranceType)","pos":[0,29]}]},{"pos":[11918,11952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12034,12068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12126,12160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12345,12354],"content":"IsEmpty()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty()","pos":[0,9]}]},{"pos":[12667,12701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12898,12913],"content":"MayHaveCurves()","needQuote":true,"needEscape":true,"nodes":[{"content":"MayHaveCurves()","pos":[0,15]}]},{"pos":[13244,13278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13469,13479],"content":"StartPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"StartPoint","pos":[0,10]}]},{"pos":[13803,13837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14044,14062],"content":"StartPointProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"StartPointProperty","pos":[0,18]}]},{"pos":[14436,14470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14597,14626],"content":"System.Windows.Media.Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Geometry","pos":[0,29]}]},{"pos":[14746,14760],"content":"LineGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry()","pos":[0,14]}]},{"pos":[15028,15053],"content":"LineGeometry(Point,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry(Point,Point)","pos":[0,25]}]},{"pos":[15261,15266],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[15402,15407],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[15656,15691],"content":"LineGeometry(Point,Point,Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry(Point,Point,Transform)","pos":[0,35]}]},{"pos":[15919,15924],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[16060,16065],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[16218,16227],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[16417,16423],"content":"Bounds","needQuote":true,"needEscape":true,"nodes":[{"content":"Bounds","pos":[0,6]}]},{"pos":[16592,16596],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[16769,16776],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[16968,16980],"content":"LineGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry","pos":[0,12]}]},{"pos":[17187,17206],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[17422,17434],"content":"LineGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"LineGeometry","pos":[0,12]}]},{"pos":[17642,17662],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[17864,17873],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[18059,18067],"content":"EndPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"EndPoint","pos":[0,8]}]},{"pos":[18241,18246],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[18432,18448],"content":"EndPointProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"EndPointProperty","pos":[0,16]}]},{"pos":[18651,18669],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[18922,18951],"content":"GetArea(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArea(Double,ToleranceType)","pos":[0,29]}]},{"pos":[19153,19159],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[19275,19281],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[19432,19445],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[19644,19653],"content":"IsEmpty()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty()","pos":[0,9]}]},{"pos":[19816,19823],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20002,20017],"content":"MayHaveCurves()","needQuote":true,"needEscape":true,"nodes":[{"content":"MayHaveCurves()","pos":[0,15]}]},{"pos":[20192,20199],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20375,20385],"content":"StartPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"StartPoint","pos":[0,10]}]},{"pos":[20563,20568],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[20756,20774],"content":"StartPointProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"StartPointProperty","pos":[0,18]}]},{"pos":[20981,20999],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.LineGeometry\n  id: LineGeometry\n  children:\n  - System.Windows.Media.LineGeometry.#ctor\n  - System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point)\n  - System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Media.Transform)\n  - System.Windows.Media.LineGeometry.Bounds\n  - System.Windows.Media.LineGeometry.Clone\n  - System.Windows.Media.LineGeometry.CloneCurrentValue\n  - System.Windows.Media.LineGeometry.CreateInstanceCore\n  - System.Windows.Media.LineGeometry.EndPoint\n  - System.Windows.Media.LineGeometry.EndPointProperty\n  - System.Windows.Media.LineGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.LineGeometry.IsEmpty\n  - System.Windows.Media.LineGeometry.MayHaveCurves\n  - System.Windows.Media.LineGeometry.StartPoint\n  - System.Windows.Media.LineGeometry.StartPointProperty\n  langs:\n  - csharp\n  name: LineGeometry\n  nameWithType: LineGeometry\n  fullName: System.Windows.Media.LineGeometry\n  type: Class\n  syntax:\n    content: 'public sealed class LineGeometry : System.Windows.Media.Geometry'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Geometry\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)\n  - System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.Empty\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Point)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetArea\n  - System.Windows.Media.Geometry.GetFlattenedPathGeometry\n  - System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetOutlinedPathGeometry\n  - System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)\n  - System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)\n  - System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.Parse(System.String)\n  - System.Windows.Media.Geometry.ShouldSerializeTransform\n  - System.Windows.Media.Geometry.StandardFlatteningTolerance\n  - System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)\n  - System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Geometry.ToString\n  - System.Windows.Media.Geometry.ToString(System.IFormatProvider)\n  - System.Windows.Media.Geometry.Transform\n  - System.Windows.Media.Geometry.TransformProperty\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: LineGeometry()\n  nameWithType: LineGeometry.LineGeometry()\n  fullName: System.Windows.Media.LineGeometry.LineGeometry()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public LineGeometry ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point)\n  id: '#ctor(System.Windows.Point,System.Windows.Point)'\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: LineGeometry(Point,Point)\n  nameWithType: LineGeometry.LineGeometry(Point,Point)\n  fullName: System.Windows.Media.LineGeometry.LineGeometry(Point,Point)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public LineGeometry (System.Windows.Point startPoint, System.Windows.Point endPoint);\n    parameters:\n    - id: startPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: endPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Media.Transform)\n  id: '#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Media.Transform)'\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: LineGeometry(Point,Point,Transform)\n  nameWithType: LineGeometry.LineGeometry(Point,Point,Transform)\n  fullName: System.Windows.Media.LineGeometry.LineGeometry(Point,Point,Transform)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public LineGeometry (System.Windows.Point startPoint, System.Windows.Point endPoint, System.Windows.Media.Transform transform);\n    parameters:\n    - id: startPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: endPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: transform\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.Bounds\n  id: Bounds\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: Bounds\n  nameWithType: LineGeometry.Bounds\n  fullName: System.Windows.Media.LineGeometry.Bounds\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override System.Windows.Rect Bounds { get; }\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.Clone\n  id: Clone\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: LineGeometry.Clone()\n  fullName: System.Windows.Media.LineGeometry.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.LineGeometry Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.LineGeometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: LineGeometry.CloneCurrentValue()\n  fullName: System.Windows.Media.LineGeometry.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.LineGeometry CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.LineGeometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: LineGeometry.CreateInstanceCore()\n  fullName: System.Windows.Media.LineGeometry.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.EndPoint\n  id: EndPoint\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: EndPoint\n  nameWithType: LineGeometry.EndPoint\n  fullName: System.Windows.Media.LineGeometry.EndPoint\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Point EndPoint { get; set; }\n    return:\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.EndPointProperty\n  id: EndPointProperty\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: EndPointProperty\n  nameWithType: LineGeometry.EndPointProperty\n  fullName: System.Windows.Media.LineGeometry.EndPointProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty EndPointProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  id: GetArea(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: GetArea(Double,ToleranceType)\n  nameWithType: LineGeometry.GetArea(Double,ToleranceType)\n  fullName: System.Windows.Media.LineGeometry.GetArea(Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override double GetArea (double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: IsEmpty()\n  nameWithType: LineGeometry.IsEmpty()\n  fullName: System.Windows.Media.LineGeometry.IsEmpty()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool IsEmpty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.MayHaveCurves\n  id: MayHaveCurves\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: MayHaveCurves()\n  nameWithType: LineGeometry.MayHaveCurves()\n  fullName: System.Windows.Media.LineGeometry.MayHaveCurves()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool MayHaveCurves ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.StartPoint\n  id: StartPoint\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: StartPoint\n  nameWithType: LineGeometry.StartPoint\n  fullName: System.Windows.Media.LineGeometry.StartPoint\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Point StartPoint { get; set; }\n    return:\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.LineGeometry.StartPointProperty\n  id: StartPointProperty\n  parent: System.Windows.Media.LineGeometry\n  langs:\n  - csharp\n  name: StartPointProperty\n  nameWithType: LineGeometry.StartPointProperty\n  fullName: System.Windows.Media.LineGeometry.StartPointProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty StartPointProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Geometry\n  isExternal: false\n  name: System.Windows.Media.Geometry\n- uid: System.Windows.Media.LineGeometry.#ctor\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: LineGeometry()\n  nameWithType: LineGeometry.LineGeometry()\n  fullName: System.Windows.Media.LineGeometry.LineGeometry()\n- uid: System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point)\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: LineGeometry(Point,Point)\n  nameWithType: LineGeometry.LineGeometry(Point,Point)\n  fullName: System.Windows.Media.LineGeometry.LineGeometry(Point,Point)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.LineGeometry.#ctor(System.Windows.Point,System.Windows.Point,System.Windows.Media.Transform)\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: LineGeometry(Point,Point,Transform)\n  nameWithType: LineGeometry.LineGeometry(Point,Point,Transform)\n  fullName: System.Windows.Media.LineGeometry.LineGeometry(Point,Point,Transform)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.LineGeometry.Bounds\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: Bounds\n  nameWithType: LineGeometry.Bounds\n  fullName: System.Windows.Media.LineGeometry.Bounds\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.LineGeometry.Clone\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: Clone()\n  nameWithType: LineGeometry.Clone()\n  fullName: System.Windows.Media.LineGeometry.Clone()\n- uid: System.Windows.Media.LineGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: LineGeometry\n  nameWithType: LineGeometry\n  fullName: System.Windows.Media.LineGeometry\n- uid: System.Windows.Media.LineGeometry.CloneCurrentValue\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: LineGeometry.CloneCurrentValue()\n  fullName: System.Windows.Media.LineGeometry.CloneCurrentValue()\n- uid: System.Windows.Media.LineGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: LineGeometry\n  nameWithType: LineGeometry\n  fullName: System.Windows.Media.LineGeometry\n- uid: System.Windows.Media.LineGeometry.CreateInstanceCore\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: LineGeometry.CreateInstanceCore()\n  fullName: System.Windows.Media.LineGeometry.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.LineGeometry.EndPoint\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: EndPoint\n  nameWithType: LineGeometry.EndPoint\n  fullName: System.Windows.Media.LineGeometry.EndPoint\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.LineGeometry.EndPointProperty\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: EndPointProperty\n  nameWithType: LineGeometry.EndPointProperty\n  fullName: System.Windows.Media.LineGeometry.EndPointProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.LineGeometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: GetArea(Double,ToleranceType)\n  nameWithType: LineGeometry.GetArea(Double,ToleranceType)\n  fullName: System.Windows.Media.LineGeometry.GetArea(Double,ToleranceType)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.LineGeometry.IsEmpty\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: IsEmpty()\n  nameWithType: LineGeometry.IsEmpty()\n  fullName: System.Windows.Media.LineGeometry.IsEmpty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.LineGeometry.MayHaveCurves\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: MayHaveCurves()\n  nameWithType: LineGeometry.MayHaveCurves()\n  fullName: System.Windows.Media.LineGeometry.MayHaveCurves()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.LineGeometry.StartPoint\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: StartPoint\n  nameWithType: LineGeometry.StartPoint\n  fullName: System.Windows.Media.LineGeometry.StartPoint\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.LineGeometry.StartPointProperty\n  parent: System.Windows.Media.LineGeometry\n  isExternal: false\n  name: StartPointProperty\n  nameWithType: LineGeometry.StartPointProperty\n  fullName: System.Windows.Media.LineGeometry.StartPointProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n"}