{"nodes":[{"pos":[5184,5224],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[5582,5616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6275,6309],"content":"ConstReverseRandomAccessIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator()","pos":[0,34]}]},{"pos":[7102,7168],"content":"ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)","pos":[0,66]}]},{"pos":[7824,7858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8225,8288],"content":"ConstReverseRandomAccessIterator(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)"},{"pos":[8924,8958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9333,9394],"content":"ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)","pos":[0,61]}]},{"pos":[10028,10062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10309,10315],"content":"base()","needQuote":true,"needEscape":true,"nodes":[{"content":"base()","pos":[0,6]}]},{"pos":[10798,10832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11081,11088],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[11483,11517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11774,11785],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[12192,12226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12615,12657],"content":"distance(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"distance(ConstReverseRandomAccessIterator)","pos":[0,42]}]},{"pos":[13240,13274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13331,13365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13826,13865],"content":"distance(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"distance(IRandomAccessIterator<TValue>)"},{"pos":[14438,14472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14529,14563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15042,15084],"content":"equal_to(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ConstReverseRandomAccessIterator)","pos":[0,42]}]},{"pos":[15668,15702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15761,15795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16242,16274],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[16820,16854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16913,16947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17312,17323],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[17733,17767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17819,17853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18244,18287],"content":"less_than(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"less_than(ConstReverseRandomAccessIterator)","pos":[0,43]}]},{"pos":[18874,18908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18967,19001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19465,19505],"content":"less_than(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"less_than(IRandomAccessIterator<TValue>)"},{"pos":[20082,20116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20175,20209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20575,20586],"content":"move(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"move(Int32)","pos":[0,11]}]},{"pos":[20998,21032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21089,21123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21370,21376],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[22135,22194],"content":"op_Addition(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[22885,22919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22981,23015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23123,23157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23716,23808],"content":"op_Addition(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32,ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)"},{"pos":[24645,24679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24740,24774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24889,24923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25031,25065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25456,25499],"content":"op_Assign(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ConstReverseRandomAccessIterator)","pos":[0,43]}]},{"pos":[26149,26183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26293,26327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26708,26746],"content":"op_Assign(ReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ReverseRandomAccessIterator)","pos":[0,38]}]},{"pos":[27376,27410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27520,27554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27957,28011],"content":"op_Decrement(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseRandomAccessIterator<TValue>)"},{"pos":[28681,28715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28823,28857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29286,29346],"content":"op_Decrement(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[30037,30071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30130,30164],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30272,30306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30701,30746],"content":"op_Equality(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConstReverseRandomAccessIterator)","pos":[0,45]}]},{"pos":[31341,31375],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31434,31468],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31869,31917],"content":"op_GreaterThan(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(ConstReverseRandomAccessIterator)","pos":[0,48]}]},{"pos":[32521,32555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32614,32648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33063,33118],"content":"op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)","pos":[0,55]}]},{"pos":[33743,33777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33836,33870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34131,34142],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[34644,34678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35081,35135],"content":"op_Increment(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseRandomAccessIterator<TValue>)"},{"pos":[35805,35839],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35947,35981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36410,36470],"content":"op_Increment(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[37161,37195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37254,37288],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37396,37430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37829,37876],"content":"op_Inequality(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConstReverseRandomAccessIterator)","pos":[0,47]}]},{"pos":[38477,38511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38570,38604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38999,39044],"content":"op_LessThan(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(ConstReverseRandomAccessIterator)","pos":[0,45]}]},{"pos":[39639,39673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39732,39766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40175,40227],"content":"op_LessThanOrEqual(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(ConstReverseRandomAccessIterator)","pos":[0,52]}]},{"pos":[40843,40877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40936,40970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41379,41431],"content":"op_MemberSelection(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ConstReverseRandomAccessIterator)","pos":[0,52]}]},{"pos":[42054,42088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42140,42174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42589,42644],"content":"op_PointerDereference(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ConstReverseRandomAccessIterator)","pos":[0,55]}]},{"pos":[43276,43310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43362,43396],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43779,43824],"content":"op_Subtraction(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Subtraction(IRandomAccessIterator<TValue>)"},{"pos":[44409,44443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44500,44534],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44967,45029],"content":"op_Subtraction(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[45729,45763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45825,45859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45967,46001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46248,46254],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[46835,46842],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[47236,47270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47381,47394],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[47582,47616],"content":"ConstReverseRandomAccessIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator()","pos":[0,34]}]},{"pos":[48084,48150],"content":"ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)","pos":[0,66]}]},{"pos":[48571,48603],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[48976,49039],"content":"ConstReverseRandomAccessIterator(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)"},{"pos":[49446,49475],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[49846,49907],"content":"ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)","pos":[0,61]}]},{"pos":[50313,50340],"content":"ReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseRandomAccessIterator","pos":[0,27]}]},{"pos":[50644,50650],"content":"base()","needQuote":true,"needEscape":true,"nodes":[{"content":"base()","pos":[0,6]}]},{"pos":[50943,50972],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[51281,51288],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[51514,51520],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51761,51772],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[52006,52012],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52319,52361],"content":"distance(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"distance(ConstReverseRandomAccessIterator)","pos":[0,42]}]},{"pos":[52656,52661],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[52852,52884],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[53260,53299],"content":"distance(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"distance(IRandomAccessIterator<TValue>)"},{"pos":[53588,53593],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53776,53805],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[54184,54226],"content":"equal_to(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ConstReverseRandomAccessIterator)","pos":[0,42]}]},{"pos":[54523,54530],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54725,54757],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[55126,55158],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[55435,55442],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55622,55644],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[55952,55963],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[56196,56201],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56507,56550],"content":"less_than(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"less_than(ConstReverseRandomAccessIterator)","pos":[0,43]}]},{"pos":[56849,56856],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57051,57083],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[57460,57500],"content":"less_than(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"less_than(IRandomAccessIterator<TValue>)"},{"pos":[57793,57800],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57987,58016],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[58338,58349],"content":"move(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"move(Int32)","pos":[0,11]}]},{"pos":[58582,58587],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58700,58705],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[58939,58945],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[59379,59438],"content":"op_Addition(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[59848,59888],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[60097,60102],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60492,60584],"content":"op_Addition(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32,ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)"},{"pos":[61060,61100],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[61309,61314],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61505,61537],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[61923,61966],"content":"op_Assign(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ConstReverseRandomAccessIterator)","pos":[0,43]}]},{"pos":[62341,62373],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[62644,62676],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[63057,63095],"content":"op_Assign(ReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ReverseRandomAccessIterator)","pos":[0,38]}]},{"pos":[63460,63492],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[63758,63785],"content":"ReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseRandomAccessIterator","pos":[0,27]}]},{"pos":[64167,64221],"content":"op_Decrement(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseRandomAccessIterator<TValue>)"},{"pos":[64621,64661],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[65082,65142],"content":"op_Decrement(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[65554,65594],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[65803,65808],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66116,66161],"content":"op_Equality(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConstReverseRandomAccessIterator)","pos":[0,45]}]},{"pos":[66464,66471],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[66666,66698],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[67089,67137],"content":"op_GreaterThan(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(ConstReverseRandomAccessIterator)","pos":[0,48]}]},{"pos":[67446,67453],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67648,67680],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[68078,68133],"content":"op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)","pos":[0,55]}]},{"pos":[68456,68463],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68658,68690],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[69011,69022],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[69325,69354],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[69740,69794],"content":"op_Increment(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseRandomAccessIterator<TValue>)"},{"pos":[70194,70234],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[70655,70715],"content":"op_Increment(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[71127,71167],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[71376,71381],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71691,71738],"content":"op_Inequality(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConstReverseRandomAccessIterator)","pos":[0,47]}]},{"pos":[72045,72052],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72247,72279],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[72667,72712],"content":"op_LessThan(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(ConstReverseRandomAccessIterator)","pos":[0,45]}]},{"pos":[73015,73022],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73217,73249],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[73644,73696],"content":"op_LessThanOrEqual(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(ConstReverseRandomAccessIterator)","pos":[0,52]}]},{"pos":[74013,74020],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74215,74247],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[74642,74694],"content":"op_MemberSelection(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ConstReverseRandomAccessIterator)","pos":[0,52]}]},{"pos":[75087,75119],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[75517,75572],"content":"op_PointerDereference(ConstReverseRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ConstReverseRandomAccessIterator)","pos":[0,55]}]},{"pos":[75971,76003],"content":"ConstReverseRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseRandomAccessIterator","pos":[0,32]}]},{"pos":[76385,76430],"content":"op_Subtraction(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Subtraction(IRandomAccessIterator<TValue>)"},{"pos":[76731,76736],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[76919,76948],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[77349,77411],"content":"op_Subtraction(ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)"},{"pos":[77827,77867],"content":"ConstReverseRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseRandomAccessIterator<TValue>"},{"pos":[78076,78081],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78315,78321],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[78666,78673],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[78900,78907],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  id: ConstReverseRandomAccessIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid\n  langs:\n  - csharp\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ConstReverseRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstReverseRandomAccessIterator()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseRandomAccessIterator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base\n  id: base\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: base()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.base()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> base ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.distance(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.distance(ConstReverseRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int distance (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.equal_to(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.equal_to(ConstReverseRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public TValue this[int _Pos] { get; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.less_than(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.less_than(ConstReverseRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)\n  id: move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: move(Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.move(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int move (int _Offset);\n    parameters:\n    - id: _Offset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Right\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Left\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Assign(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Assign(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstReverseRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Equality(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Equality(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_GreaterThan(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_GreaterThan(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstReverseRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Inequality(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Inequality(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_LessThan(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_LessThan(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_MemberSelection(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_MemberSelection(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_PointerDereference(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_PointerDereference(ConstReverseRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Right\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: ConstReverseRandomAccessIterator()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ConstReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(IRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.ConstReverseRandomAccessIterator(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseRandomAccessIterator\n  nameWithType: ReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: base()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.base()\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.container()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: distance(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.distance(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.distance(ConstReverseRandomAccessIterator)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.equal_to(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.equal_to(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.Item(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: less_than(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.less_than(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.less_than(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: move(Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.move(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Addition(ConstReverseRandomAccessIterator<TValue>,Int32,ConstReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Assign(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Assign(ConstReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Assign(ReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseRandomAccessIterator\n  nameWithType: ReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ConstReverseRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Decrement(ConstReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Equality(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Equality(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_GreaterThan(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_GreaterThan(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ConstReverseRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Increment(ConstReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Inequality(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Inequality(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_LessThan(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_LessThan(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_LessThanOrEqual(ConstReverseRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_MemberSelection(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_MemberSelection(ConstReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference(ConstReverseRandomAccessIterator)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_PointerDereference(ConstReverseRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_PointerDereference(ConstReverseRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseRandomAccessIterator\n  nameWithType: ConstReverseRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.op_Subtraction(ConstReverseRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseRandomAccessIterator<TValue>\n  nameWithType: ConstReverseRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator<TValue>.valid()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1\n  isExternal: false\n  nameWithType: ConstReverseRandomAccessIterator<TValue>.\n"}