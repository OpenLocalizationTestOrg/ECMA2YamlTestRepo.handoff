{"nodes":[{"pos":[606,622],"content":"WindowCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowCollection","pos":[0,16]}]},{"pos":[1363,1381],"content":"WindowCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowCollection()","pos":[0,18]}]},{"pos":[1909,1931],"content":"CopyTo(Window[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Window[],Int32)","pos":[0,22]}]},{"pos":[2311,2345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2406,2440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2617,2622],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[2902,2936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3129,3144],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[3509,3543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3738,3752],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[4062,4096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4299,4310],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[4650,4684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4750,4784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4967,4975],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[5268,5302],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5611,5661],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[6073,6107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6168,6202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6313,6326],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6442,6460],"content":"WindowCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowCollection()","pos":[0,18]}]},{"pos":[6730,6752],"content":"CopyTo(Window[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Window[],Int32)","pos":[0,22]}]},{"pos":[6958,6964],"content":"Window","needQuote":true,"needEscape":true,"nodes":[{"content":"Window","pos":[0,6]}]},{"pos":[7089,7094],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7257,7262],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7417,7422],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7593,7608],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[7813,7824],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[8020,8034],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[8209,8216],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8396,8407],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[8591,8597],"content":"Window","needQuote":true,"needEscape":true,"nodes":[{"content":"Window","pos":[0,6]}]},{"pos":[8720,8725],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8891,8899],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[9061,9067],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9291,9341],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[9586,9591],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[9704,9709],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.WindowCollection\n  id: WindowCollection\n  children:\n  - System.Windows.WindowCollection.#ctor\n  - System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)\n  - System.Windows.WindowCollection.Count\n  - System.Windows.WindowCollection.GetEnumerator\n  - System.Windows.WindowCollection.IsSynchronized\n  - System.Windows.WindowCollection.Item(System.Int32)\n  - System.Windows.WindowCollection.SyncRoot\n  - System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  langs:\n  - csharp\n  name: WindowCollection\n  nameWithType: WindowCollection\n  fullName: System.Windows.WindowCollection\n  type: Class\n  syntax:\n    content: 'public sealed class WindowCollection : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: WindowCollection()\n  nameWithType: WindowCollection.WindowCollection()\n  fullName: System.Windows.WindowCollection.WindowCollection()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public WindowCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)\n  id: CopyTo(System.Windows.Window[],System.Int32)\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: CopyTo(Window[],Int32)\n  nameWithType: WindowCollection.CopyTo(Window[],Int32)\n  fullName: System.Windows.WindowCollection.CopyTo(Window[],Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public void CopyTo (System.Windows.Window[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Window[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.Count\n  id: Count\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: WindowCollection.Count\n  fullName: System.Windows.WindowCollection.Count\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: WindowCollection.GetEnumerator()\n  fullName: System.Windows.WindowCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.IsSynchronized\n  id: IsSynchronized\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: WindowCollection.IsSynchronized\n  fullName: System.Windows.WindowCollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: WindowCollection.Item(Int32)\n  fullName: System.Windows.WindowCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public System.Windows.Window this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Window\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.SyncRoot\n  id: SyncRoot\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: WindowCollection.SyncRoot\n  fullName: System.Windows.WindowCollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.WindowCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.WindowCollection.#ctor\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: WindowCollection()\n  nameWithType: WindowCollection.WindowCollection()\n  fullName: System.Windows.WindowCollection.WindowCollection()\n- uid: System.Windows.WindowCollection.CopyTo(System.Windows.Window[],System.Int32)\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: CopyTo(Window[],Int32)\n  nameWithType: WindowCollection.CopyTo(Window[],Int32)\n  fullName: System.Windows.WindowCollection.CopyTo(Window[],Int32)\n- uid: System.Windows.Window\n  parent: System.Windows\n  isExternal: false\n  name: Window\n  nameWithType: Window\n  fullName: System.Windows.Window[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.WindowCollection.Count\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: Count\n  nameWithType: WindowCollection.Count\n  fullName: System.Windows.WindowCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.WindowCollection.GetEnumerator\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: WindowCollection.GetEnumerator()\n  fullName: System.Windows.WindowCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.WindowCollection.IsSynchronized\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: WindowCollection.IsSynchronized\n  fullName: System.Windows.WindowCollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.WindowCollection.Item(System.Int32)\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: WindowCollection.Item(Int32)\n  fullName: System.Windows.WindowCollection.Item(Int32)\n- uid: System.Windows.Window\n  parent: System.Windows\n  isExternal: false\n  name: Window\n  nameWithType: Window\n  fullName: System.Windows.Window\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.WindowCollection.SyncRoot\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: SyncRoot\n  nameWithType: WindowCollection.SyncRoot\n  fullName: System.Windows.WindowCollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.WindowCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.WindowCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}