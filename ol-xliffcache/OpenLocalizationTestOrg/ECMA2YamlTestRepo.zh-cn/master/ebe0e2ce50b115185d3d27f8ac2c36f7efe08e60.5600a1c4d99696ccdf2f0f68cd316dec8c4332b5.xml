{"nodes":[{"pos":[965,991],"content":"ValueTuple<T1,T2,T3,T4,T5>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5&gt;","pos":[0,26],"source":"ValueTuple<T1,T2,T3,T4,T5>"}]},{"pos":[1392,1426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1459,1493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1526,1560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1593,1627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1660,1694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2176,2202],"content":"ValueTuple(T1,T2,T3,T4,T5)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4,T5)","pos":[0,26]}]},{"pos":[2572,2606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2657,2691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2742,2776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2827,2861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2912,2946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3149,3186],"content":"CompareTo(ValueTuple<T1,T2,T3,T4,T5>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4,T5&gt;)","pos":[0,37],"source":"CompareTo(ValueTuple<T1,T2,T3,T4,T5>)"}]},{"pos":[3577,3611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3668,3702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3887,3901],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4223,4257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4316,4350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4587,4621],"content":"Equals(ValueTuple<T1,T2,T3,T4,T5>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4,T5&gt;)","pos":[0,34],"source":"Equals(ValueTuple<T1,T2,T3,T4,T5>)"}]},{"pos":[5004,5038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5097,5131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5336,5349],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5663,5697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5850,5855],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[6104,6138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6291,6296],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[6545,6579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6732,6737],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[6986,7020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7173,7178],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[7427,7461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7614,7619],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[7868,7902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8247,8315],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[8796,8830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8910,8944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9001,9035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9388,9460],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[9954,9988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10076,10110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10169,10203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10538,10608],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[11114,11148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11205,11239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11482,11518],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[11886,11920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11977,12011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12170,12180],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[12489,12523],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12637,12653],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[12761,12787],"content":"ValueTuple(T1,T2,T3,T4,T5)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4,T5)","pos":[0,26]}]},{"pos":[12981,12983],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[13068,13070],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[13155,13157],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[13242,13244],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[13329,13331],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[13482,13519],"content":"CompareTo(ValueTuple<T1,T2,T3,T4,T5>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4,T5&gt;)","pos":[0,37],"source":"CompareTo(ValueTuple<T1,T2,T3,T4,T5>)"}]},{"pos":[13750,13755],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13875,13901],"content":"ValueTuple<T1,T2,T3,T4,T5>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5&gt;","pos":[0,26],"source":"ValueTuple<T1,T2,T3,T4,T5>"}]},{"pos":[14098,14112],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14299,14306],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14424,14430],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14593,14627],"content":"Equals(ValueTuple<T1,T2,T3,T4,T5>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4,T5&gt;)","pos":[0,34],"source":"Equals(ValueTuple<T1,T2,T3,T4,T5>)"}]},{"pos":[14854,14861],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14985,15011],"content":"ValueTuple<T1,T2,T3,T4,T5>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5&gt;","pos":[0,26],"source":"ValueTuple<T1,T2,T3,T4,T5>"}]},{"pos":[15198,15211],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15394,15399],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15538,15543],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[15695,15697],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[15823,15828],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[15980,15982],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[16108,16113],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[16265,16267],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[16393,16398],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[16550,16552],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[16678,16683],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[16835,16837],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[17052,17120],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[17413,17418],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17532,17538],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17681,17690],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[17942,18014],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[18317,18324],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18442,18448],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18599,18616],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[18875,18945],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[19242,19247],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19396,19413],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[19626,19662],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[19891,19896],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20010,20016],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20160,20170],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[20348,20354],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`5\n  id: ValueTuple`5\n  children:\n  - System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)\n  - System.ValueTuple`5.CompareTo(System.ValueTuple`5)\n  - System.ValueTuple`5.Equals(System.Object)\n  - System.ValueTuple`5.Equals(System.ValueTuple`5)\n  - System.ValueTuple`5.GetHashCode\n  - System.ValueTuple`5.Item1\n  - System.ValueTuple`5.Item2\n  - System.ValueTuple`5.Item3\n  - System.ValueTuple`5.Item4\n  - System.ValueTuple`5.Item5\n  - System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`5.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`5.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3,T4,T5>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1,T2,T3,T4,T5> : IComparable, IComparable<ValueTuple<T1,T2,T3,T4,T5>>, IEquatable<ValueTuple<T1,T2,T3,T4,T5>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n    - id: T3\n      description: Parameter description to be filled\n    - id: T4\n      description: Parameter description to be filled\n    - id: T5\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1,T2,T3,T4,T5>>\n  - System.IEquatable<System.ValueTuple<T1,T2,T3,T4,T5>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)\n  id: '#ctor(`0,`1,`2,`3,`4)'\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: ValueTuple(T1,T2,T3,T4,T5)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.ValueTuple(T1,T2,T3,T4,T5)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.ValueTuple(T1,T2,T3,T4,T5)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.CompareTo(System.ValueTuple`5)\n  id: CompareTo(System.ValueTuple`5)\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.CompareTo(ValueTuple<T1,T2,T3,T4,T5>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.CompareTo(ValueTuple<T1,T2,T3,T4,T5>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2,T3,T4,T5> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`5\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`5.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Equals(System.ValueTuple`5)\n  id: Equals(System.ValueTuple`5)\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Equals(ValueTuple<T1,T2,T3,T4,T5>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Equals(ValueTuple<T1,T2,T3,T4,T5>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2,T3,T4,T5> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`5\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`5.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Item1\n  id: Item1\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Item2\n  id: Item2\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item2\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Item3\n  id: Item3\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item3\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T3 Item3;\n    return:\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Item4\n  id: Item4\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item4\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T4 Item4;\n    return:\n      type: T4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.Item5\n  id: Item5\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item5\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item5\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T5 Item5;\n    return:\n      type: T5\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`5.ToString\n  id: ToString\n  parent: System.ValueTuple`5\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`5.#ctor(`0,`1,`2,`3,`4)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: ValueTuple(T1,T2,T3,T4,T5)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.ValueTuple(T1,T2,T3,T4,T5)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.ValueTuple(T1,T2,T3,T4,T5)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: System.ValueTuple`5.CompareTo(System.ValueTuple`5)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.CompareTo(ValueTuple<T1,T2,T3,T4,T5>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.CompareTo(ValueTuple<T1,T2,T3,T4,T5>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`5\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>\n- uid: System.ValueTuple`5.Equals(System.Object)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`5.Equals(System.ValueTuple`5)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Equals(ValueTuple<T1,T2,T3,T4,T5>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Equals(ValueTuple<T1,T2,T3,T4,T5>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`5\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>\n- uid: System.ValueTuple`5.GetHashCode\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`5.Item1\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`5.Item2\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`5.Item3\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item3\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple`5.Item4\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item4\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.ValueTuple`5.Item5\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.Item5\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.Item5\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: System.ValueTuple`5.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`5.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`5.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`5.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`5.ToString\n  parent: System.ValueTuple`5\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`5.Equals*\n  parent: System.ValueTuple`5\n  isExternal: false\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5>.\n"}