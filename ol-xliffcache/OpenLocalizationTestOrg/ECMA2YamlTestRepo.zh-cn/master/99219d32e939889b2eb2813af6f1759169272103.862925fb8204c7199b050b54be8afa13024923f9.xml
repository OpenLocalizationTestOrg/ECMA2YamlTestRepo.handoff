{"nodes":[{"pos":[541,562],"content":"EncoderFallbackBuffer","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallbackBuffer","pos":[0,21]}]},{"pos":[1254,1277],"content":"EncoderFallbackBuffer()","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallbackBuffer()","pos":[0,23]}]},{"pos":[1798,1818],"content":"Fallback(Char,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Fallback(Char,Int32)","pos":[0,20]}]},{"pos":[2177,2211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2272,2306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2365,2399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2718,2743],"content":"Fallback(Char,Char,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Fallback(Char,Char,Int32)","pos":[0,25]}]},{"pos":[3141,3175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3244,3278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3339,3373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3432,3466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3715,3728],"content":"GetNextChar()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNextChar()","pos":[0,13]}]},{"pos":[4042,4076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4271,4285],"content":"MovePrevious()","needQuote":true,"needEscape":true,"nodes":[{"content":"MovePrevious()","pos":[0,14]}]},{"pos":[4605,4639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4828,4837],"content":"Remaining","needQuote":true,"needEscape":true,"nodes":[{"content":"Remaining","pos":[0,9]}]},{"pos":[5129,5163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5344,5351],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[5701,5714],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5834,5857],"content":"EncoderFallbackBuffer()","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallbackBuffer()","pos":[0,23]}]},{"pos":[6138,6158],"content":"Fallback(Char,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Fallback(Char,Int32)","pos":[0,20]}]},{"pos":[6352,6359],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6475,6479],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[6590,6595],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6803,6828],"content":"Fallback(Char,Char,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Fallback(Char,Char,Int32)","pos":[0,25]}]},{"pos":[7032,7039],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7155,7159],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[7269,7273],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[7384,7389],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7562,7575],"content":"GetNextChar()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNextChar()","pos":[0,13]}]},{"pos":[7752,7756],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[7928,7942],"content":"MovePrevious()","needQuote":true,"needEscape":true,"nodes":[{"content":"MovePrevious()","pos":[0,14]}]},{"pos":[8124,8131],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8306,8315],"content":"Remaining","needQuote":true,"needEscape":true,"nodes":[{"content":"Remaining","pos":[0,9]}]},{"pos":[8485,8490],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8657,8664],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.EncoderFallbackBuffer\n  id: EncoderFallbackBuffer\n  children:\n  - System.Text.EncoderFallbackBuffer.#ctor\n  - System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)\n  - System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)\n  - System.Text.EncoderFallbackBuffer.GetNextChar\n  - System.Text.EncoderFallbackBuffer.MovePrevious\n  - System.Text.EncoderFallbackBuffer.Remaining\n  - System.Text.EncoderFallbackBuffer.Reset\n  langs:\n  - csharp\n  name: EncoderFallbackBuffer\n  nameWithType: EncoderFallbackBuffer\n  fullName: System.Text.EncoderFallbackBuffer\n  type: Class\n  syntax:\n    content: public abstract class EncoderFallbackBuffer\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.#ctor\n  id: '#ctor'\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: EncoderFallbackBuffer()\n  nameWithType: EncoderFallbackBuffer.EncoderFallbackBuffer()\n  fullName: System.Text.EncoderFallbackBuffer.EncoderFallbackBuffer()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: protected EncoderFallbackBuffer ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)\n  id: Fallback(System.Char,System.Int32)\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: Fallback(Char,Int32)\n  nameWithType: EncoderFallbackBuffer.Fallback(Char,Int32)\n  fullName: System.Text.EncoderFallbackBuffer.Fallback(Char,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract bool Fallback (char charUnknown, int index);\n    parameters:\n    - id: charUnknown\n      type: System.Char\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Text.EncoderFallbackBuffer.Fallback*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)\n  id: Fallback(System.Char,System.Char,System.Int32)\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: Fallback(Char,Char,Int32)\n  nameWithType: EncoderFallbackBuffer.Fallback(Char,Char,Int32)\n  fullName: System.Text.EncoderFallbackBuffer.Fallback(Char,Char,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract bool Fallback (char charUnknownHigh, char charUnknownLow, int index);\n    parameters:\n    - id: charUnknownHigh\n      type: System.Char\n      description: Parameter description to be filled\n    - id: charUnknownLow\n      type: System.Char\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Text.EncoderFallbackBuffer.Fallback*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.GetNextChar\n  id: GetNextChar\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: GetNextChar()\n  nameWithType: EncoderFallbackBuffer.GetNextChar()\n  fullName: System.Text.EncoderFallbackBuffer.GetNextChar()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract char GetNextChar ();\n    parameters: []\n    return:\n      type: System.Char\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.MovePrevious\n  id: MovePrevious\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: MovePrevious()\n  nameWithType: EncoderFallbackBuffer.MovePrevious()\n  fullName: System.Text.EncoderFallbackBuffer.MovePrevious()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract bool MovePrevious ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.Remaining\n  id: Remaining\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: Remaining\n  nameWithType: EncoderFallbackBuffer.Remaining\n  fullName: System.Text.EncoderFallbackBuffer.Remaining\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int Remaining { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.EncoderFallbackBuffer.Reset\n  id: Reset\n  parent: System.Text.EncoderFallbackBuffer\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: EncoderFallbackBuffer.Reset()\n  fullName: System.Text.EncoderFallbackBuffer.Reset()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual void Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Text.EncoderFallbackBuffer.#ctor\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: EncoderFallbackBuffer()\n  nameWithType: EncoderFallbackBuffer.EncoderFallbackBuffer()\n  fullName: System.Text.EncoderFallbackBuffer.EncoderFallbackBuffer()\n- uid: System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Int32)\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: Fallback(Char,Int32)\n  nameWithType: EncoderFallbackBuffer.Fallback(Char,Int32)\n  fullName: System.Text.EncoderFallbackBuffer.Fallback(Char,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncoderFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: Fallback(Char,Char,Int32)\n  nameWithType: EncoderFallbackBuffer.Fallback(Char,Char,Int32)\n  fullName: System.Text.EncoderFallbackBuffer.Fallback(Char,Char,Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncoderFallbackBuffer.GetNextChar\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: GetNextChar()\n  nameWithType: EncoderFallbackBuffer.GetNextChar()\n  fullName: System.Text.EncoderFallbackBuffer.GetNextChar()\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Text.EncoderFallbackBuffer.MovePrevious\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: MovePrevious()\n  nameWithType: EncoderFallbackBuffer.MovePrevious()\n  fullName: System.Text.EncoderFallbackBuffer.MovePrevious()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.EncoderFallbackBuffer.Remaining\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: Remaining\n  nameWithType: EncoderFallbackBuffer.Remaining\n  fullName: System.Text.EncoderFallbackBuffer.Remaining\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncoderFallbackBuffer.Reset\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  name: Reset()\n  nameWithType: EncoderFallbackBuffer.Reset()\n  fullName: System.Text.EncoderFallbackBuffer.Reset()\n- uid: System.Text.EncoderFallbackBuffer.Fallback*\n  parent: System.Text.EncoderFallbackBuffer\n  isExternal: false\n  nameWithType: EncoderFallbackBuffer.\n"}