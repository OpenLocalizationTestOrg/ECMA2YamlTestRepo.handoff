{"nodes":[{"pos":[557,571],"content":"TouchEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchEventArgs","pos":[0,14]}]},{"pos":[1844,1877],"content":"TouchEventArgs(TouchDevice,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchEventArgs(TouchDevice,Int32)","pos":[0,33]}]},{"pos":[2324,2358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2423,2457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2744,2785],"content":"GetIntermediateTouchPoints(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIntermediateTouchPoints(IInputElement)","pos":[0,41]}]},{"pos":[3272,3306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3392,3426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3687,3715],"content":"GetTouchPoint(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTouchPoint(IInputElement)","pos":[0,28]}]},{"pos":[4153,4187],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4263,4297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4570,4605],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[5044,5078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5148,5182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5379,5390],"content":"TouchDevice","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice","pos":[0,11]}]},{"pos":[5740,5774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5907,5942],"content":"System.Windows.Input.InputEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.InputEventArgs","pos":[0,35]}]},{"pos":[6113,6146],"content":"TouchEventArgs(TouchDevice,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchEventArgs(TouchDevice,Int32)","pos":[0,33]}]},{"pos":[6393,6404],"content":"TouchDevice","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice","pos":[0,11]}]},{"pos":[6543,6548],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6770,6811],"content":"GetIntermediateTouchPoints(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIntermediateTouchPoints(IInputElement)","pos":[0,41]}]},{"pos":[7083,7103],"content":"TouchPointCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchPointCollection","pos":[0,20]}]},{"pos":[7284,7297],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[7530,7558],"content":"GetTouchPoint(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTouchPoint(IInputElement)","pos":[0,28]}]},{"pos":[7794,7804],"content":"TouchPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchPoint","pos":[0,10]}]},{"pos":[7965,7978],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[8217,8252],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[8472,8480],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[8600,8606],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8785,8796],"content":"TouchDevice","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice","pos":[0,11]}]},{"pos":[8999,9010],"content":"TouchDevice","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.TouchEventArgs\n  id: TouchEventArgs\n  children:\n  - System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  - System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  - System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  - System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.TouchEventArgs.TouchDevice\n  langs:\n  - csharp\n  name: TouchEventArgs\n  nameWithType: TouchEventArgs\n  fullName: System.Windows.Input.TouchEventArgs\n  type: Class\n  syntax:\n    content: 'public class TouchEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  id: '#ctor(System.Windows.Input.TouchDevice,System.Int32)'\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: TouchEventArgs(TouchDevice,Int32)\n  nameWithType: TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n  fullName: System.Windows.Input.TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public TouchEventArgs (System.Windows.Input.TouchDevice touchDevice, int timestamp);\n    parameters:\n    - id: touchDevice\n      type: System.Windows.Input.TouchDevice\n      description: Parameter description to be filled\n    - id: timestamp\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  id: GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Input.TouchPointCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  id: GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchEventArgs.GetTouchPoint(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetTouchPoint(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Input.TouchPoint\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: TouchEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.TouchEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: genericTarget\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice\n  id: TouchDevice\n  parent: System.Windows.Input.TouchEventArgs\n  langs:\n  - csharp\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: System.Windows.Input.TouchEventArgs.TouchDevice\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.TouchDevice TouchDevice { get; }\n    return:\n      type: System.Windows.Input.TouchDevice\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.TouchEventArgs.#ctor(System.Windows.Input.TouchDevice,System.Int32)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchEventArgs(TouchDevice,Int32)\n  nameWithType: TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n  fullName: System.Windows.Input.TouchEventArgs.TouchEventArgs(TouchDevice,Int32)\n- uid: System.Windows.Input.TouchDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchDevice\n  fullName: System.Windows.Input.TouchDevice\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetIntermediateTouchPoints(IInputElement)\n- uid: System.Windows.Input.TouchPointCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPointCollection\n  nameWithType: TouchPointCollection\n  fullName: System.Windows.Input.TouchPointCollection\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchEventArgs.GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchEventArgs.GetTouchPoint(IInputElement)\n  fullName: System.Windows.Input.TouchEventArgs.GetTouchPoint(IInputElement)\n- uid: System.Windows.Input.TouchPoint\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPoint\n  nameWithType: TouchPoint\n  fullName: System.Windows.Input.TouchPoint\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: TouchEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.TouchEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.TouchEventArgs.TouchDevice\n  parent: System.Windows.Input.TouchEventArgs\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchEventArgs.TouchDevice\n  fullName: System.Windows.Input.TouchEventArgs.TouchDevice\n- uid: System.Windows.Input.TouchDevice\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchDevice\n  nameWithType: TouchDevice\n  fullName: System.Windows.Input.TouchDevice\n"}