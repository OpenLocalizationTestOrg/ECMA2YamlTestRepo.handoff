{"nodes":[{"pos":[615,643],"content":"IPriorityQueue<TValue,TCont>","needQuote":true,"needEscape":true,"nodes":[{"content":"IPriorityQueue&lt;TValue,TCont&gt;","pos":[0,28],"source":"IPriorityQueue<TValue,TCont>"}]},{"pos":[913,947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[983,1017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1338,1374],"content":"assign(IPriorityQueue<TValue,TCont>)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IPriorityQueue&lt;TValue,TCont&gt;)","pos":[0,36],"source":"assign(IPriorityQueue<TValue,TCont>)"}]},{"pos":[1868,1902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2099,2106],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[2452,2486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2679,2684],"content":"pop()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop()","pos":[0,5]}]},{"pos":[3168,3180],"content":"push(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push(TValue)","pos":[0,12]}]},{"pos":[3538,3572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3767,3773],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[4113,4147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4340,4345],"content":"top()","needQuote":true,"needEscape":true,"nodes":[{"content":"top()","pos":[0,5]}]},{"pos":[4680,4714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4917,4925],"content":"top_item","needQuote":true,"needEscape":true,"nodes":[{"content":"top_item","pos":[0,8]}]},{"pos":[5263,5297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5504,5516],"content":"value_comp()","needQuote":true,"needEscape":true,"nodes":[{"content":"value_comp()","pos":[0,12]}]},{"pos":[5987,6021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6262,6298],"content":"assign(IPriorityQueue<TValue,TCont>)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IPriorityQueue&lt;TValue,TCont&gt;)","pos":[0,36],"source":"assign(IPriorityQueue<TValue,TCont>)"}]},{"pos":[6596,6624],"content":"IPriorityQueue<TValue,TCont>","needQuote":true,"needEscape":true,"nodes":[{"content":"IPriorityQueue&lt;TValue,TCont&gt;","pos":[0,28],"source":"IPriorityQueue<TValue,TCont>"}]},{"pos":[6871,6878],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[7073,7080],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7265,7270],"content":"pop()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop()","pos":[0,5]}]},{"pos":[7532,7544],"content":"push(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push(TValue)","pos":[0,12]}]},{"pos":[7736,7742],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[7919,7925],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[8116,8121],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8302,8307],"content":"top()","needQuote":true,"needEscape":true,"nodes":[{"content":"top()","pos":[0,5]}]},{"pos":[8569,8577],"content":"top_item","needQuote":true,"needEscape":true,"nodes":[{"content":"top_item","pos":[0,8]}]},{"pos":[8761,8767],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[8950,8962],"content":"value_comp()","needQuote":true,"needEscape":true,"nodes":[{"content":"value_comp()","pos":[0,12]}]},{"pos":[9240,9277],"content":"BinaryDelegate<TValue,TValue,Boolean>","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryDelegate&lt;TValue,TValue,Boolean&gt;","pos":[0,37],"source":"BinaryDelegate<TValue,TValue,Boolean>"}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  id: IPriorityQueue`2\n  children:\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue`2)\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  - Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  langs:\n  - csharp\n  name: IPriorityQueue<TValue,TCont>\n  nameWithType: IPriorityQueue<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>\n  type: Interface\n  syntax:\n    content: 'public interface IPriorityQueue<TValue,TCont> : ICloneable'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n    - id: TCont\n      description: Parameter description to be filled\n  implements:\n  - System.ICloneable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue`2)\n  id: assign(Microsoft.VisualC.StlClr.IPriorityQueue`2)\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: assign(IPriorityQueue<TValue,TCont>)\n  nameWithType: IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IPriorityQueue`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IPriorityQueue<TValue,TCont>.empty()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  id: pop\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: pop()\n  nameWithType: IPriorityQueue<TValue,TCont>.pop()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.pop()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void pop ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  id: push(`0)\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: push(TValue)\n  nameWithType: IPriorityQueue<TValue,TCont>.push(TValue)\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.push(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void push (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IPriorityQueue<TValue,TCont>.size()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  id: top\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: top()\n  nameWithType: IPriorityQueue<TValue,TCont>.top()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.top()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue top ();\n    parameters: []\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  id: top_item\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: top_item\n  nameWithType: IPriorityQueue<TValue,TCont>.top_item\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.top_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue top_item { get; set; }\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  id: value_comp\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  langs:\n  - csharp\n  name: value_comp()\n  nameWithType: IPriorityQueue<TValue,TCont>.value_comp()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.value_comp()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,bool> value_comp ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue`2)\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: assign(IPriorityQueue<TValue,TCont>)\n  nameWithType: IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.assign(IPriorityQueue<TValue,TCont>)\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IPriorityQueue<TValue,TCont>\n  nameWithType: IPriorityQueue<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.empty\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: empty()\n  nameWithType: IPriorityQueue<TValue,TCont>.empty()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.pop\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: pop()\n  nameWithType: IPriorityQueue<TValue,TCont>.pop()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.pop()\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: push(TValue)\n  nameWithType: IPriorityQueue<TValue,TCont>.push(TValue)\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.push(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.size\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: size()\n  nameWithType: IPriorityQueue<TValue,TCont>.size()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.size()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: top()\n  nameWithType: IPriorityQueue<TValue,TCont>.top()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.top()\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: top_item\n  nameWithType: IPriorityQueue<TValue,TCont>.top_item\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.top_item\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp\n  parent: Microsoft.VisualC.StlClr.IPriorityQueue`2\n  isExternal: false\n  name: value_comp()\n  nameWithType: IPriorityQueue<TValue,TCont>.value_comp()\n  fullName: Microsoft.VisualC.StlClr.IPriorityQueue<TValue,TCont>.value_comp()\n- uid: Microsoft.VisualC.StlClr.BinaryDelegate{TValue,TValue,System.Boolean}\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: BinaryDelegate<TValue,TValue,Boolean>\n  nameWithType: BinaryDelegate<TValue,TValue,Boolean>\n  fullName: Microsoft.VisualC.StlClr.BinaryDelegate<TValue,TValue,System.Boolean>\n"}