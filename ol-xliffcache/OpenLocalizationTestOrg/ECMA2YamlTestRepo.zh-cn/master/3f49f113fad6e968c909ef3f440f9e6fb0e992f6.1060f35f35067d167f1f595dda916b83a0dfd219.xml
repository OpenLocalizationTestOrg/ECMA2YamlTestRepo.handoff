{"nodes":[{"pos":[660,676],"content":"AsyncFlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncFlowControl","pos":[0,16]}]},{"pos":[1116,1125],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[1575,1589],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1911,1945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2004,2038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2345,2369],"content":"Equals(AsyncFlowControl)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(AsyncFlowControl)","pos":[0,24]}]},{"pos":[2749,2783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2842,2876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3123,3136],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3450,3484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3815,3861],"content":"op_Equality(AsyncFlowControl,AsyncFlowControl)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(AsyncFlowControl,AsyncFlowControl)","pos":[0,46]}]},{"pos":[4332,4366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4444,4478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4537,4571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4906,4954],"content":"op_Inequality(AsyncFlowControl,AsyncFlowControl)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(AsyncFlowControl,AsyncFlowControl)","pos":[0,48]}]},{"pos":[5431,5465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5543,5577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5636,5670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5849,5855],"content":"Undo()","needQuote":true,"needEscape":true,"nodes":[{"content":"Undo()","pos":[0,6]}]},{"pos":[6197,6213],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6335,6344],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6579,6593],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6770,6777],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6895,6901],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7106,7130],"content":"Equals(AsyncFlowControl)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(AsyncFlowControl)","pos":[0,24]}]},{"pos":[7327,7334],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7482,7498],"content":"AsyncFlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncFlowControl","pos":[0,16]}]},{"pos":[7703,7716],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7889,7894],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8136,8182],"content":"op_Equality(AsyncFlowControl,AsyncFlowControl)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(AsyncFlowControl,AsyncFlowControl)","pos":[0,46]}]},{"pos":[8423,8430],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8578,8594],"content":"AsyncFlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncFlowControl","pos":[0,16]}]},{"pos":[8770,8786],"content":"AsyncFlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncFlowControl","pos":[0,16]}]},{"pos":[9062,9110],"content":"op_Inequality(AsyncFlowControl,AsyncFlowControl)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(AsyncFlowControl,AsyncFlowControl)","pos":[0,48]}]},{"pos":[9355,9362],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9510,9526],"content":"AsyncFlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncFlowControl","pos":[0,16]}]},{"pos":[9702,9718],"content":"AsyncFlowControl","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncFlowControl","pos":[0,16]}]},{"pos":[9916,9922],"content":"Undo()","needQuote":true,"needEscape":true,"nodes":[{"content":"Undo()","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.AsyncFlowControl\n  id: AsyncFlowControl\n  children:\n  - System.Threading.AsyncFlowControl.Dispose\n  - System.Threading.AsyncFlowControl.Equals(System.Object)\n  - System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)\n  - System.Threading.AsyncFlowControl.GetHashCode\n  - System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  - System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  - System.Threading.AsyncFlowControl.Undo\n  langs:\n  - csharp\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n  type: Struct\n  syntax:\n    content: 'public struct AsyncFlowControl : IDisposable'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IDisposable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.Dispose\n  id: Dispose\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: AsyncFlowControl.Dispose()\n  fullName: System.Threading.AsyncFlowControl.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: AsyncFlowControl.Equals(Object)\n  fullName: System.Threading.AsyncFlowControl.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.AsyncFlowControl.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)\n  id: Equals(System.Threading.AsyncFlowControl)\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: Equals(AsyncFlowControl)\n  nameWithType: AsyncFlowControl.Equals(AsyncFlowControl)\n  fullName: System.Threading.AsyncFlowControl.Equals(AsyncFlowControl)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public bool Equals (System.Threading.AsyncFlowControl obj);\n    parameters:\n    - id: obj\n      type: System.Threading.AsyncFlowControl\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.AsyncFlowControl.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.GetHashCode\n  id: GetHashCode\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: AsyncFlowControl.GetHashCode()\n  fullName: System.Threading.AsyncFlowControl.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  id: op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: op_Equality(AsyncFlowControl,AsyncFlowControl)\n  nameWithType: AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)\n  fullName: System.Threading.AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool op_Equality (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);\n    parameters:\n    - id: a\n      type: System.Threading.AsyncFlowControl\n      description: Parameter description to be filled\n    - id: b\n      type: System.Threading.AsyncFlowControl\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  id: op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: op_Inequality(AsyncFlowControl,AsyncFlowControl)\n  nameWithType: AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)\n  fullName: System.Threading.AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool op_Inequality (System.Threading.AsyncFlowControl a, System.Threading.AsyncFlowControl b);\n    parameters:\n    - id: a\n      type: System.Threading.AsyncFlowControl\n      description: Parameter description to be filled\n    - id: b\n      type: System.Threading.AsyncFlowControl\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.AsyncFlowControl.Undo\n  id: Undo\n  parent: System.Threading.AsyncFlowControl\n  langs:\n  - csharp\n  name: Undo()\n  nameWithType: AsyncFlowControl.Undo()\n  fullName: System.Threading.AsyncFlowControl.Undo()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public void Undo ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Threading.AsyncFlowControl.Dispose\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: Dispose()\n  nameWithType: AsyncFlowControl.Dispose()\n  fullName: System.Threading.AsyncFlowControl.Dispose()\n- uid: System.Threading.AsyncFlowControl.Equals(System.Object)\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: AsyncFlowControl.Equals(Object)\n  fullName: System.Threading.AsyncFlowControl.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.AsyncFlowControl.Equals(System.Threading.AsyncFlowControl)\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: Equals(AsyncFlowControl)\n  nameWithType: AsyncFlowControl.Equals(AsyncFlowControl)\n  fullName: System.Threading.AsyncFlowControl.Equals(AsyncFlowControl)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.AsyncFlowControl\n  parent: System.Threading\n  isExternal: false\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n- uid: System.Threading.AsyncFlowControl.GetHashCode\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: AsyncFlowControl.GetHashCode()\n  fullName: System.Threading.AsyncFlowControl.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.AsyncFlowControl.op_Equality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: op_Equality(AsyncFlowControl,AsyncFlowControl)\n  nameWithType: AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)\n  fullName: System.Threading.AsyncFlowControl.op_Equality(AsyncFlowControl,AsyncFlowControl)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.AsyncFlowControl\n  parent: System.Threading\n  isExternal: false\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n- uid: System.Threading.AsyncFlowControl\n  parent: System.Threading\n  isExternal: false\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n- uid: System.Threading.AsyncFlowControl.op_Inequality(System.Threading.AsyncFlowControl,System.Threading.AsyncFlowControl)\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: op_Inequality(AsyncFlowControl,AsyncFlowControl)\n  nameWithType: AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)\n  fullName: System.Threading.AsyncFlowControl.op_Inequality(AsyncFlowControl,AsyncFlowControl)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.AsyncFlowControl\n  parent: System.Threading\n  isExternal: false\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n- uid: System.Threading.AsyncFlowControl\n  parent: System.Threading\n  isExternal: false\n  name: AsyncFlowControl\n  nameWithType: AsyncFlowControl\n  fullName: System.Threading.AsyncFlowControl\n- uid: System.Threading.AsyncFlowControl.Undo\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  name: Undo()\n  nameWithType: AsyncFlowControl.Undo()\n  fullName: System.Threading.AsyncFlowControl.Undo()\n- uid: System.Threading.AsyncFlowControl.Equals*\n  parent: System.Threading.AsyncFlowControl\n  isExternal: false\n  nameWithType: AsyncFlowControl.\n"}