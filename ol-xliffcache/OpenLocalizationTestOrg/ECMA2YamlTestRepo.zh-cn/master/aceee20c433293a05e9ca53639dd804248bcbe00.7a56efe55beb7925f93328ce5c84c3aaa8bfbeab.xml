{"nodes":[{"pos":[863,877],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[1891,1907],"content":"StringComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer()","pos":[0,16]}]},{"pos":[2363,2385],"content":"Compare(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(Object,Object)","pos":[0,22]}]},{"pos":[2696,2730],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2788,2822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2879,2913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3175,3197],"content":"Compare(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(String,String)","pos":[0,22]}]},{"pos":[3517,3551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3609,3643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3700,3734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4034,4061],"content":"Create(CultureInfo,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(CultureInfo,Boolean)","pos":[0,27]}]},{"pos":[4463,4497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4565,4599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4665,4699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4874,4888],"content":"CurrentCulture","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentCulture","pos":[0,14]}]},{"pos":[5189,5223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5418,5442],"content":"CurrentCultureIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentCultureIgnoreCase","pos":[0,24]}]},{"pos":[5773,5807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6024,6045],"content":"Equals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object,Object)","pos":[0,21]}]},{"pos":[6354,6388],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6446,6480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6539,6573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6832,6853],"content":"Equals(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(String,String)","pos":[0,21]}]},{"pos":[7171,7205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7263,7297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7356,7390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7631,7650],"content":"GetHashCode(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(Object)","pos":[0,19]}]},{"pos":[7953,7987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8044,8078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8324,8343],"content":"GetHashCode(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(String)","pos":[0,19]}]},{"pos":[8655,8689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8746,8780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9006,9022],"content":"InvariantCulture","needQuote":true,"needEscape":true,"nodes":[{"content":"InvariantCulture","pos":[0,16]}]},{"pos":[9329,9363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9562,9588],"content":"InvariantCultureIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"InvariantCultureIgnoreCase","pos":[0,26]}]},{"pos":[9925,9959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10120,10127],"content":"Ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"Ordinal","pos":[0,7]}]},{"pos":[10407,10441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10622,10639],"content":"OrdinalIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"OrdinalIgnoreCase","pos":[0,17]}]},{"pos":[10949,10983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11094,11107],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11203,11219],"content":"StringComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer()","pos":[0,16]}]},{"pos":[11445,11467],"content":"Compare(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(Object,Object)","pos":[0,22]}]},{"pos":[11644,11649],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[11763,11769],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11885,11891],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12067,12089],"content":"Compare(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(String,String)","pos":[0,22]}]},{"pos":[12266,12271],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12385,12391],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12507,12513],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12708,12735],"content":"Create(CultureInfo,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(CultureInfo,Boolean)","pos":[0,27]}]},{"pos":[12931,12945],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[13110,13121],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[13262,13269],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13425,13439],"content":"CurrentCulture","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentCulture","pos":[0,14]}]},{"pos":[13609,13623],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[13803,13827],"content":"CurrentCultureIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentCultureIgnoreCase","pos":[0,24]}]},{"pos":[14017,14031],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[14222,14243],"content":"Equals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object,Object)","pos":[0,21]}]},{"pos":[14420,14427],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14545,14551],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14667,14673],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14848,14869],"content":"Equals(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(String,String)","pos":[0,21]}]},{"pos":[15046,15053],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15171,15177],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15293,15299],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15465,15484],"content":"GetHashCode(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(Object)","pos":[0,19]}]},{"pos":[15655,15660],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15774,15780],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15946,15965],"content":"GetHashCode(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(String)","pos":[0,19]}]},{"pos":[16136,16141],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16255,16261],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16417,16433],"content":"InvariantCulture","needQuote":true,"needEscape":true,"nodes":[{"content":"InvariantCulture","pos":[0,16]}]},{"pos":[16607,16621],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[16803,16829],"content":"InvariantCultureIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"InvariantCultureIgnoreCase","pos":[0,26]}]},{"pos":[17023,17037],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[17200,17207],"content":"Ordinal","needQuote":true,"needEscape":true,"nodes":[{"content":"Ordinal","pos":[0,7]}]},{"pos":[17363,17377],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]},{"pos":[17550,17567],"content":"OrdinalIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"OrdinalIgnoreCase","pos":[0,17]}]},{"pos":[17743,17757],"content":"StringComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"StringComparer","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.StringComparer\n  id: StringComparer\n  children:\n  - System.StringComparer.#ctor\n  - System.StringComparer.Compare(System.Object,System.Object)\n  - System.StringComparer.Compare(System.String,System.String)\n  - System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)\n  - System.StringComparer.CurrentCulture\n  - System.StringComparer.CurrentCultureIgnoreCase\n  - System.StringComparer.Equals(System.Object,System.Object)\n  - System.StringComparer.Equals(System.String,System.String)\n  - System.StringComparer.GetHashCode(System.Object)\n  - System.StringComparer.GetHashCode(System.String)\n  - System.StringComparer.InvariantCulture\n  - System.StringComparer.InvariantCultureIgnoreCase\n  - System.StringComparer.Ordinal\n  - System.StringComparer.OrdinalIgnoreCase\n  langs:\n  - csharp\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class StringComparer : System.Collections.Generic.IComparer<string>, System.Collections.Generic.IEqualityComparer<string>, System.Collections.IComparer, System.Collections.IEqualityComparer\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IComparer<System.String>\n  - System.Collections.Generic.IEqualityComparer<System.String>\n  - System.Collections.IComparer\n  - System.Collections.IEqualityComparer\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.#ctor\n  id: '#ctor'\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: StringComparer()\n  nameWithType: StringComparer.StringComparer()\n  fullName: System.StringComparer.StringComparer()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected StringComparer ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.Compare(System.Object,System.Object)\n  id: Compare(System.Object,System.Object)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: Compare(Object,Object)\n  nameWithType: StringComparer.Compare(Object,Object)\n  fullName: System.StringComparer.Compare(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Compare (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: Parameter description to be filled\n    - id: y\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.StringComparer.Compare*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.Compare(System.String,System.String)\n  id: Compare(System.String,System.String)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: Compare(String,String)\n  nameWithType: StringComparer.Compare(String,String)\n  fullName: System.StringComparer.Compare(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract int Compare (string x, string y);\n    parameters:\n    - id: x\n      type: System.String\n      description: Parameter description to be filled\n    - id: y\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.StringComparer.Compare*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)\n  id: Create(System.Globalization.CultureInfo,System.Boolean)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: Create(CultureInfo,Boolean)\n  nameWithType: StringComparer.Create(CultureInfo,Boolean)\n  fullName: System.StringComparer.Create(CultureInfo,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer Create (System.Globalization.CultureInfo culture, bool ignoreCase);\n    parameters:\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.CurrentCulture\n  id: CurrentCulture\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: CurrentCulture\n  nameWithType: StringComparer.CurrentCulture\n  fullName: System.StringComparer.CurrentCulture\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer CurrentCulture { get; }\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.CurrentCultureIgnoreCase\n  id: CurrentCultureIgnoreCase\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: CurrentCultureIgnoreCase\n  nameWithType: StringComparer.CurrentCultureIgnoreCase\n  fullName: System.StringComparer.CurrentCultureIgnoreCase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer CurrentCultureIgnoreCase { get; }\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.Equals(System.Object,System.Object)\n  id: Equals(System.Object,System.Object)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: Equals(Object,Object)\n  nameWithType: StringComparer.Equals(Object,Object)\n  fullName: System.StringComparer.Equals(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: Parameter description to be filled\n    - id: y\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.StringComparer.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.Equals(System.String,System.String)\n  id: Equals(System.String,System.String)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: Equals(String,String)\n  nameWithType: StringComparer.Equals(String,String)\n  fullName: System.StringComparer.Equals(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract bool Equals (string x, string y);\n    parameters:\n    - id: x\n      type: System.String\n      description: Parameter description to be filled\n    - id: y\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.StringComparer.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.GetHashCode(System.Object)\n  id: GetHashCode(System.Object)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: GetHashCode(Object)\n  nameWithType: StringComparer.GetHashCode(Object)\n  fullName: System.StringComparer.GetHashCode(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int GetHashCode (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.StringComparer.GetHashCode*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.GetHashCode(System.String)\n  id: GetHashCode(System.String)\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: GetHashCode(String)\n  nameWithType: StringComparer.GetHashCode(String)\n  fullName: System.StringComparer.GetHashCode(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public abstract int GetHashCode (string obj);\n    parameters:\n    - id: obj\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.StringComparer.GetHashCode*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.InvariantCulture\n  id: InvariantCulture\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: InvariantCulture\n  nameWithType: StringComparer.InvariantCulture\n  fullName: System.StringComparer.InvariantCulture\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer InvariantCulture { get; }\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.InvariantCultureIgnoreCase\n  id: InvariantCultureIgnoreCase\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: InvariantCultureIgnoreCase\n  nameWithType: StringComparer.InvariantCultureIgnoreCase\n  fullName: System.StringComparer.InvariantCultureIgnoreCase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer InvariantCultureIgnoreCase { get; }\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.Ordinal\n  id: Ordinal\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: Ordinal\n  nameWithType: StringComparer.Ordinal\n  fullName: System.StringComparer.Ordinal\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer Ordinal { get; }\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.StringComparer.OrdinalIgnoreCase\n  id: OrdinalIgnoreCase\n  parent: System.StringComparer\n  langs:\n  - csharp\n  name: OrdinalIgnoreCase\n  nameWithType: StringComparer.OrdinalIgnoreCase\n  fullName: System.StringComparer.OrdinalIgnoreCase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static StringComparer OrdinalIgnoreCase { get; }\n    return:\n      type: System.StringComparer\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.StringComparer.#ctor\n  parent: System.StringComparer\n  isExternal: false\n  name: StringComparer()\n  nameWithType: StringComparer.StringComparer()\n  fullName: System.StringComparer.StringComparer()\n- uid: System.StringComparer.Compare(System.Object,System.Object)\n  parent: System.StringComparer\n  isExternal: false\n  name: Compare(Object,Object)\n  nameWithType: StringComparer.Compare(Object,Object)\n  fullName: System.StringComparer.Compare(Object,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.StringComparer.Compare(System.String,System.String)\n  parent: System.StringComparer\n  isExternal: false\n  name: Compare(String,String)\n  nameWithType: StringComparer.Compare(String,String)\n  fullName: System.StringComparer.Compare(String,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.StringComparer.Create(System.Globalization.CultureInfo,System.Boolean)\n  parent: System.StringComparer\n  isExternal: false\n  name: Create(CultureInfo,Boolean)\n  nameWithType: StringComparer.Create(CultureInfo,Boolean)\n  fullName: System.StringComparer.Create(CultureInfo,Boolean)\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.StringComparer.CurrentCulture\n  parent: System.StringComparer\n  isExternal: false\n  name: CurrentCulture\n  nameWithType: StringComparer.CurrentCulture\n  fullName: System.StringComparer.CurrentCulture\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.StringComparer.CurrentCultureIgnoreCase\n  parent: System.StringComparer\n  isExternal: false\n  name: CurrentCultureIgnoreCase\n  nameWithType: StringComparer.CurrentCultureIgnoreCase\n  fullName: System.StringComparer.CurrentCultureIgnoreCase\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.StringComparer.Equals(System.Object,System.Object)\n  parent: System.StringComparer\n  isExternal: false\n  name: Equals(Object,Object)\n  nameWithType: StringComparer.Equals(Object,Object)\n  fullName: System.StringComparer.Equals(Object,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.StringComparer.Equals(System.String,System.String)\n  parent: System.StringComparer\n  isExternal: false\n  name: Equals(String,String)\n  nameWithType: StringComparer.Equals(String,String)\n  fullName: System.StringComparer.Equals(String,String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.StringComparer.GetHashCode(System.Object)\n  parent: System.StringComparer\n  isExternal: false\n  name: GetHashCode(Object)\n  nameWithType: StringComparer.GetHashCode(Object)\n  fullName: System.StringComparer.GetHashCode(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.StringComparer.GetHashCode(System.String)\n  parent: System.StringComparer\n  isExternal: false\n  name: GetHashCode(String)\n  nameWithType: StringComparer.GetHashCode(String)\n  fullName: System.StringComparer.GetHashCode(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.StringComparer.InvariantCulture\n  parent: System.StringComparer\n  isExternal: false\n  name: InvariantCulture\n  nameWithType: StringComparer.InvariantCulture\n  fullName: System.StringComparer.InvariantCulture\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.StringComparer.InvariantCultureIgnoreCase\n  parent: System.StringComparer\n  isExternal: false\n  name: InvariantCultureIgnoreCase\n  nameWithType: StringComparer.InvariantCultureIgnoreCase\n  fullName: System.StringComparer.InvariantCultureIgnoreCase\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.StringComparer.Ordinal\n  parent: System.StringComparer\n  isExternal: false\n  name: Ordinal\n  nameWithType: StringComparer.Ordinal\n  fullName: System.StringComparer.Ordinal\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.StringComparer.OrdinalIgnoreCase\n  parent: System.StringComparer\n  isExternal: false\n  name: OrdinalIgnoreCase\n  nameWithType: StringComparer.OrdinalIgnoreCase\n  fullName: System.StringComparer.OrdinalIgnoreCase\n- uid: System.StringComparer\n  parent: System\n  isExternal: false\n  name: StringComparer\n  nameWithType: StringComparer\n  fullName: System.StringComparer\n- uid: System.StringComparer.Compare*\n  parent: System.StringComparer\n  isExternal: false\n  nameWithType: StringComparer.\n- uid: System.StringComparer.Equals*\n  parent: System.StringComparer\n  isExternal: false\n  nameWithType: StringComparer.\n- uid: System.StringComparer.GetHashCode*\n  parent: System.StringComparer\n  isExternal: false\n  nameWithType: StringComparer.\n"}