{"nodes":[{"pos":[763,782],"content":"WindowHelperService","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowHelperService","pos":[0,19]}]},{"pos":[1566,1593],"content":"WindowHelperService(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowHelperService(IntPtr)","pos":[0,27]}]},{"pos":[2019,2053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2306,2322],"content":"ParentWindowHwnd","needQuote":true,"needEscape":true,"nodes":[{"content":"ParentWindowHwnd","pos":[0,16]}]},{"pos":[2702,2736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3121,3164],"content":"RegisterWindowMessageHandler(WindowMessage)","needQuote":true,"needEscape":true,"nodes":[{"content":"RegisterWindowMessageHandler(WindowMessage)","pos":[0,43]}]},{"pos":[3724,3758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3817,3851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4216,4258],"content":"TrySetWindowOwner(DependencyObject,Window)","needQuote":true,"needEscape":true,"nodes":[{"content":"TrySetWindowOwner(DependencyObject,Window)","pos":[0,42]}]},{"pos":[4789,4823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4894,4928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4987,5021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5410,5455],"content":"UnregisterWindowMessageHandler(WindowMessage)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnregisterWindowMessageHandler(WindowMessage)","pos":[0,45]}]},{"pos":[6021,6055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6114,6148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6259,6272],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6457,6484],"content":"WindowHelperService(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowHelperService(IntPtr)","pos":[0,27]}]},{"pos":[6714,6720],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[6950,6966],"content":"ParentWindowHwnd","needQuote":true,"needEscape":true,"nodes":[{"content":"ParentWindowHwnd","pos":[0,16]}]},{"pos":[7174,7180],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[7476,7519],"content":"RegisterWindowMessageHandler(WindowMessage)","needQuote":true,"needEscape":true,"nodes":[{"content":"RegisterWindowMessageHandler(WindowMessage)","pos":[0,43]}]},{"pos":[7782,7789],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7978,7991],"content":"WindowMessage","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowMessage","pos":[0,13]}]},{"pos":[8323,8365],"content":"TrySetWindowOwner(DependencyObject,Window)","needQuote":true,"needEscape":true,"nodes":[{"content":"TrySetWindowOwner(DependencyObject,Window)","pos":[0,42]}]},{"pos":[8626,8633],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8776,8792],"content":"DependencyObject","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyObject","pos":[0,16]}]},{"pos":[8952,8958],"content":"Window","needQuote":true,"needEscape":true,"nodes":[{"content":"Window","pos":[0,6]}]},{"pos":[9264,9309],"content":"UnregisterWindowMessageHandler(WindowMessage)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnregisterWindowMessageHandler(WindowMessage)","pos":[0,45]}]},{"pos":[9576,9583],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9772,9785],"content":"WindowMessage","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowMessage","pos":[0,13]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Hosting.WindowHelperService\n  id: WindowHelperService\n  children:\n  - System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)\n  - System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd\n  - System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  - System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)\n  - System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  langs:\n  - csharp\n  name: WindowHelperService\n  nameWithType: WindowHelperService\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService\n  type: Class\n  syntax:\n    content: public class WindowHelperService\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)\n  id: '#ctor(System.IntPtr)'\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  langs:\n  - csharp\n  name: WindowHelperService(IntPtr)\n  nameWithType: WindowHelperService.WindowHelperService(IntPtr)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.WindowHelperService(IntPtr)\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public WindowHelperService (IntPtr hwnd);\n    parameters:\n    - id: hwnd\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd\n  id: ParentWindowHwnd\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  langs:\n  - csharp\n  name: ParentWindowHwnd\n  nameWithType: WindowHelperService.ParentWindowHwnd\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd\n  type: Property\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public IntPtr ParentWindowHwnd { get; }\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  id: RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  langs:\n  - csharp\n  name: RegisterWindowMessageHandler(WindowMessage)\n  nameWithType: WindowHelperService.RegisterWindowMessageHandler(WindowMessage)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(WindowMessage)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public bool RegisterWindowMessageHandler (System.Activities.Presentation.Hosting.WindowMessage callback);\n    parameters:\n    - id: callback\n      type: System.Activities.Presentation.Hosting.WindowMessage\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)\n  id: TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  langs:\n  - csharp\n  name: TrySetWindowOwner(DependencyObject,Window)\n  nameWithType: WindowHelperService.TrySetWindowOwner(DependencyObject,Window)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(DependencyObject,Window)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public bool TrySetWindowOwner (System.Windows.DependencyObject source, System.Windows.Window target);\n    parameters:\n    - id: source\n      type: System.Windows.DependencyObject\n      description: Parameter description to be filled\n    - id: target\n      type: System.Windows.Window\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  id: UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  langs:\n  - csharp\n  name: UnregisterWindowMessageHandler(WindowMessage)\n  nameWithType: WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Hosting\n  syntax:\n    content: public bool UnregisterWindowMessageHandler (System.Activities.Presentation.Hosting.WindowMessage callback);\n    parameters:\n    - id: callback\n      type: System.Activities.Presentation.Hosting.WindowMessage\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.#ctor(System.IntPtr)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  isExternal: false\n  name: WindowHelperService(IntPtr)\n  nameWithType: WindowHelperService.WindowHelperService(IntPtr)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.WindowHelperService(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  isExternal: false\n  name: ParentWindowHwnd\n  nameWithType: WindowHelperService.ParentWindowHwnd\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.ParentWindowHwnd\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  isExternal: false\n  name: RegisterWindowMessageHandler(WindowMessage)\n  nameWithType: WindowHelperService.RegisterWindowMessageHandler(WindowMessage)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.RegisterWindowMessageHandler(WindowMessage)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Hosting.WindowMessage\n  parent: System.Activities.Presentation.Hosting\n  isExternal: false\n  name: WindowMessage\n  nameWithType: WindowMessage\n  fullName: System.Activities.Presentation.Hosting.WindowMessage\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(System.Windows.DependencyObject,System.Windows.Window)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  isExternal: false\n  name: TrySetWindowOwner(DependencyObject,Window)\n  nameWithType: WindowHelperService.TrySetWindowOwner(DependencyObject,Window)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.TrySetWindowOwner(DependencyObject,Window)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: true\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.Window\n  parent: System.Windows\n  isExternal: false\n  name: Window\n  nameWithType: Window\n  fullName: System.Windows.Window\n- uid: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(System.Activities.Presentation.Hosting.WindowMessage)\n  parent: System.Activities.Presentation.Hosting.WindowHelperService\n  isExternal: false\n  name: UnregisterWindowMessageHandler(WindowMessage)\n  nameWithType: WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)\n  fullName: System.Activities.Presentation.Hosting.WindowHelperService.UnregisterWindowMessageHandler(WindowMessage)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Presentation.Hosting.WindowMessage\n  parent: System.Activities.Presentation.Hosting\n  isExternal: false\n  name: WindowMessage\n  nameWithType: WindowMessage\n  fullName: System.Activities.Presentation.Hosting.WindowMessage\n"}