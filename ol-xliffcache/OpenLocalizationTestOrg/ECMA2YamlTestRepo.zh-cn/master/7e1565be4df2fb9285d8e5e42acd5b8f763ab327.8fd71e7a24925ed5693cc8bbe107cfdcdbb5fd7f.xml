{"nodes":[{"pos":[3031,3049],"content":"ECDiffieHellmanCng","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng","pos":[0,18]}]},{"pos":[5122,5142],"content":"ECDiffieHellmanCng()","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng()","pos":[0,20]}]},{"pos":[5682,5707],"content":"ECDiffieHellmanCng(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng(Int32)","pos":[0,25]}]},{"pos":[6089,6123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6408,6434],"content":"ECDiffieHellmanCng(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng(CngKey)","pos":[0,26]}]},{"pos":[6865,6899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7186,7213],"content":"ECDiffieHellmanCng(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng(ECCurve)","pos":[0,27]}]},{"pos":[7652,7686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8179,8254],"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","pos":[0,75]}]},{"pos":[8966,9000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9103,9137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9207,9241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9310,9344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9402,9436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9957,10039],"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","pos":[0,82]}]},{"pos":[10781,10815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10918,10952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11016,11050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11120,11154],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11223,11257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11315,11349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11656,11681],"content":"DeriveKeyMaterial(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyMaterial(CngKey)","pos":[0,25]}]},{"pos":[12143,12177],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12235,12269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12691,12734],"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","pos":[0,43]}]},{"pos":[13277,13311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13369,13403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13871,13923],"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","pos":[0,52]}]},{"pos":[14512,14546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14611,14645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14709,14743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14801,14835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15162,15197],"content":"DeriveSecretAgreementHandle(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveSecretAgreementHandle(CngKey)","pos":[0,35]}]},{"pos":[15733,15767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15862,15896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16348,16401],"content":"DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)","pos":[0,53]}]},{"pos":[17009,17043],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17138,17172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17506,17522],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[17894,17928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18207,18240],"content":"ExportExplicitParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportExplicitParameters(Boolean)","pos":[0,33]}]},{"pos":[18727,18761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18847,18881],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19144,19169],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[19632,19666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19752,19786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20041,20062],"content":"FromXmlString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String)","pos":[0,21]}]},{"pos":[20448,20482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20900,20936],"content":"FromXmlString(String,ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String,ECKeyXmlFormat)","pos":[0,36]}]},{"pos":[21383,21417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21510,21544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21916,21936],"content":"GenerateKey(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey(ECCurve)","pos":[0,20]}]},{"pos":[22363,22397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22622,22635],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[23033,23067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23280,23287],"content":"HmacKey","needQuote":true,"needEscape":true,"nodes":[{"content":"HmacKey","pos":[0,7]}]},{"pos":[23604,23638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23955,23985],"content":"ImportParameters(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(ECParameters)","pos":[0,30]}]},{"pos":[24457,24491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24696,24699],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[25050,25084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25325,25346],"content":"KeyDerivationFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyDerivationFunction","pos":[0,21]}]},{"pos":[25816,25850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26059,26064],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[26375,26409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26626,26635],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[27049,27083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27306,27318],"content":"SecretAppend","needQuote":true,"needEscape":true,"nodes":[{"content":"SecretAppend","pos":[0,12]}]},{"pos":[27650,27684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27909,27922],"content":"SecretPrepend","needQuote":true,"needEscape":true,"nodes":[{"content":"SecretPrepend","pos":[0,13]}]},{"pos":[28257,28291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28498,28502],"content":"Seed","needQuote":true,"needEscape":true,"nodes":[{"content":"Seed","pos":[0,4]}]},{"pos":[28810,28844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29097,29117],"content":"ToXmlString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(Boolean)","pos":[0,20]}]},{"pos":[29530,29564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29622,29656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30040,30067],"content":"ToXmlString(ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(ECKeyXmlFormat)","pos":[0,27]}]},{"pos":[30517,30551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30609,30643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30969,30996],"content":"UseSecretAgreementAsHmacKey","needQuote":true,"needEscape":true,"nodes":[{"content":"UseSecretAgreementAsHmacKey","pos":[0,27]}]},{"pos":[31367,31401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31543,31587],"content":"System.Security.Cryptography.ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.ECDiffieHellman","pos":[0,44]}]},{"pos":[31735,31755],"content":"ECDiffieHellmanCng()","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng()","pos":[0,20]}]},{"pos":[32054,32079],"content":"ECDiffieHellmanCng(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng(Int32)","pos":[0,25]}]},{"pos":[32292,32297],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32529,32555],"content":"ECDiffieHellmanCng(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng(CngKey)","pos":[0,26]}]},{"pos":[32815,32821],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[33078,33105],"content":"ECDiffieHellmanCng(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanCng(ECCurve)","pos":[0,27]}]},{"pos":[33368,33375],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[33738,33813],"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])","pos":[0,75]}]},{"pos":[34125,34129],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34305,34329],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[34558,34575],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[34733,34737],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34849,34853],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[35204,35286],"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])","pos":[0,82]}]},{"pos":[35612,35616],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[35792,35816],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[36045,36062],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[36220,36224],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36336,36340],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36452,36456],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36700,36725],"content":"DeriveKeyMaterial(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyMaterial(CngKey)","pos":[0,25]}]},{"pos":[36937,36941],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[37099,37105],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[37391,37434],"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyMaterial(ECDiffieHellmanPublicKey)","pos":[0,43]}]},{"pos":[37682,37686],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[37862,37886],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[38231,38283],"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])","pos":[0,52]}]},{"pos":[38549,38553],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[38729,38753],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[38925,38929],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[39041,39045],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[39299,39334],"content":"DeriveSecretAgreementHandle(CngKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveSecretAgreementHandle(CngKey)","pos":[0,35]}]},{"pos":[39626,39648],"content":"SafeNCryptSecretHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeNCryptSecretHandle","pos":[0,22]}]},{"pos":[39861,39867],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[40163,40216],"content":"DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)","pos":[0,53]}]},{"pos":[40544,40566],"content":"SafeNCryptSecretHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeNCryptSecretHandle","pos":[0,22]}]},{"pos":[40797,40821],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[41094,41110],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[41307,41314],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41548,41581],"content":"ExportExplicitParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportExplicitParameters(Boolean)","pos":[0,33]}]},{"pos":[41861,41873],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[42024,42031],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42257,42282],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[42546,42558],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[42709,42716],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42938,42959],"content":"FromXmlString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String)","pos":[0,21]}]},{"pos":[43165,43171],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43435,43471],"content":"FromXmlString(String,ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXmlString(String,ECKeyXmlFormat)","pos":[0,36]}]},{"pos":[43707,43713],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43881,43895],"content":"ECKeyXmlFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"ECKeyXmlFormat","pos":[0,14]}]},{"pos":[44174,44194],"content":"GenerateKey(ECCurve)","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey(ECCurve)","pos":[0,20]}]},{"pos":[44443,44450],"content":"ECCurve","needQuote":true,"needEscape":true,"nodes":[{"content":"ECCurve","pos":[0,7]}]},{"pos":[44679,44692],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[44932,44944],"content":"CngAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithm","pos":[0,12]}]},{"pos":[45177,45184],"content":"HmacKey","needQuote":true,"needEscape":true,"nodes":[{"content":"HmacKey","pos":[0,7]}]},{"pos":[45360,45364],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[45613,45643],"content":"ImportParameters(ECParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(ECParameters)","pos":[0,30]}]},{"pos":[45917,45929],"content":"ECParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"ECParameters","pos":[0,12]}]},{"pos":[46158,46161],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[46375,46381],"content":"CngKey","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKey","pos":[0,6]}]},{"pos":[46616,46637],"content":"KeyDerivationFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyDerivationFunction","pos":[0,21]}]},{"pos":[46917,46953],"content":"ECDiffieHellmanKeyDerivationFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanKeyDerivationFunction","pos":[0,36]}]},{"pos":[47232,47237],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[47409,47413],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[47612,47621],"content":"PublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicKey","pos":[0,9]}]},{"pos":[47865,47889],"content":"ECDiffieHellmanPublicKey","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellmanPublicKey","pos":[0,24]}]},{"pos":[48151,48163],"content":"SecretAppend","needQuote":true,"needEscape":true,"nodes":[{"content":"SecretAppend","pos":[0,12]}]},{"pos":[48349,48353],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[48556,48569],"content":"SecretPrepend","needQuote":true,"needEscape":true,"nodes":[{"content":"SecretPrepend","pos":[0,13]}]},{"pos":[48757,48761],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[48955,48959],"content":"Seed","needQuote":true,"needEscape":true,"nodes":[{"content":"Seed","pos":[0,4]}]},{"pos":[49129,49133],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[49350,49370],"content":"ToXmlString(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(Boolean)","pos":[0,20]}]},{"pos":[49574,49580],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49697,49704],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49954,49981],"content":"ToXmlString(ECKeyXmlFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXmlString(ECKeyXmlFormat)","pos":[0,27]}]},{"pos":[50199,50205],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50373,50387],"content":"ECKeyXmlFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"ECKeyXmlFormat","pos":[0,14]}]},{"pos":[50644,50671],"content":"UseSecretAgreementAsHmacKey","needQuote":true,"needEscape":true,"nodes":[{"content":"UseSecretAgreementAsHmacKey","pos":[0,27]}]},{"pos":[50890,50897],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.ECDiffieHellmanCng\n  id: ECDiffieHellmanCng\n  children:\n  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor\n  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)\n  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)\n  - System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  - System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)\n  - System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  - System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\n  - System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\n  - System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)\n  - System.Security.Cryptography.ECDiffieHellmanCng.Key\n  - System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction\n  - System.Security.Cryptography.ECDiffieHellmanCng.Label\n  - System.Security.Cryptography.ECDiffieHellmanCng.PublicKey\n  - System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend\n  - System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend\n  - System.Security.Cryptography.ECDiffieHellmanCng.Seed\n  - System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  - System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n  langs:\n  - csharp\n  name: ECDiffieHellmanCng\n  nameWithType: ECDiffieHellmanCng\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng\n  type: Class\n  syntax:\n    content: 'public sealed class ECDiffieHellmanCng : System.Security.Cryptography.ECDiffieHellman'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  - System.Security.Cryptography.ECDiffieHellman\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.ECDiffieHellman.Create\n  - System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECCurve)\n  - System.Security.Cryptography.ECDiffieHellman.Create(System.Security.Cryptography.ECParameters)\n  - System.Security.Cryptography.ECDiffieHellman.Create(System.String)\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.ECDiffieHellman.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[])\n  - System.Security.Cryptography.ECDiffieHellman.KeyExchangeAlgorithm\n  - System.Security.Cryptography.ECDiffieHellman.SignatureAlgorithm\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ECDiffieHellmanCng()\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng()\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDiffieHellmanCng ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ECDiffieHellmanCng(Int32)\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDiffieHellmanCng (int keySize);\n    parameters:\n    - id: keySize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)\n  id: '#ctor(System.Security.Cryptography.CngKey)'\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ECDiffieHellmanCng(CngKey)\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDiffieHellmanCng (System.Security.Cryptography.CngKey key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)\n  id: '#ctor(System.Security.Cryptography.ECCurve)'\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ECDiffieHellmanCng(ECCurve)\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(ECCurve)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public ECDiffieHellmanCng (System.Security.Cryptography.ECCurve curve);\n    parameters:\n    - id: curve\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  id: DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] DeriveKeyFromHash (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] secretPrepend, byte[] secretAppend);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: secretPrepend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: secretAppend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  id: DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] DeriveKeyFromHmac (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, byte[] hmacKey, byte[] secretPrepend, byte[] secretAppend);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: hmacKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: secretPrepend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: secretAppend\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)\n  id: DeriveKeyMaterial(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveKeyMaterial(CngKey)\n  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] DeriveKeyMaterial (System.Security.Cryptography.CngKey otherPartyPublicKey);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  id: DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] DeriveKeyMaterial (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  id: DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  nameWithType: ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] DeriveKeyTls (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey, byte[] prfLabel, byte[] prfSeed);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    - id: prfLabel\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: prfSeed\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)\n  id: DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveSecretAgreementHandle(CngKey)\n  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.CngKey otherPartyPublicKey);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  id: DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)\n  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle DeriveSecretAgreementHandle (System.Security.Cryptography.ECDiffieHellmanPublicKey otherPartyPublicKey);\n    parameters:\n    - id: otherPartyPublicKey\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: ECDiffieHellmanCng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)\n  id: ExportExplicitParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ExportExplicitParameters(Boolean)\n  nameWithType: ECDiffieHellmanCng.ExportExplicitParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ECParameters ExportExplicitParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: ECDiffieHellmanCng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ECParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)\n  id: FromXmlString(System.String)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: FromXmlString(String)\n  nameWithType: ECDiffieHellmanCng.FromXmlString(String)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void FromXmlString (string xmlString);\n    parameters:\n    - id: xmlString\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  id: FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: FromXmlString(String,ECKeyXmlFormat)\n  nameWithType: ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void FromXmlString (string xml, System.Security.Cryptography.ECKeyXmlFormat format);\n    parameters:\n    - id: xml\n      type: System.String\n      description: Parameter description to be filled\n    - id: format\n      type: System.Security.Cryptography.ECKeyXmlFormat\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)\n  id: GenerateKey(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: GenerateKey(ECCurve)\n  nameWithType: ECDiffieHellmanCng.GenerateKey(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(ECCurve)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GenerateKey (System.Security.Cryptography.ECCurve curve);\n    parameters:\n    - id: curve\n      type: System.Security.Cryptography.ECCurve\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: ECDiffieHellmanCng.HashAlgorithm\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CngAlgorithm HashAlgorithm { get; set; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\n  id: HmacKey\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: HmacKey\n  nameWithType: ECDiffieHellmanCng.HmacKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] HmacKey { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)\n  id: ImportParameters(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ImportParameters(ECParameters)\n  nameWithType: ECDiffieHellmanCng.ImportParameters(ECParameters)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(ECParameters)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void ImportParameters (System.Security.Cryptography.ECParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.ECParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key\n  id: Key\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: Key\n  nameWithType: ECDiffieHellmanCng.Key\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Key\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CngKey Key { get; }\n    return:\n      type: System.Security.Cryptography.CngKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction\n  id: KeyDerivationFunction\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: KeyDerivationFunction\n  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction KeyDerivationFunction { get; set; }\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label\n  id: Label\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: Label\n  nameWithType: ECDiffieHellmanCng.Label\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Label\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Label { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey\n  id: PublicKey\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: PublicKey\n  nameWithType: ECDiffieHellmanCng.PublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ECDiffieHellmanPublicKey PublicKey { get; }\n    return:\n      type: System.Security.Cryptography.ECDiffieHellmanPublicKey\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend\n  id: SecretAppend\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: SecretAppend\n  nameWithType: ECDiffieHellmanCng.SecretAppend\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SecretAppend { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend\n  id: SecretPrepend\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: SecretPrepend\n  nameWithType: ECDiffieHellmanCng.SecretPrepend\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SecretPrepend { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed\n  id: Seed\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: Seed\n  nameWithType: ECDiffieHellmanCng.Seed\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Seed\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Seed { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)\n  id: ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ToXmlString(Boolean)\n  nameWithType: ECDiffieHellmanCng.ToXmlString(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string ToXmlString (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  id: ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: ToXmlString(ECKeyXmlFormat)\n  nameWithType: ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string ToXmlString (System.Security.Cryptography.ECKeyXmlFormat format);\n    parameters:\n    - id: format\n      type: System.Security.Cryptography.ECKeyXmlFormat\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n  id: UseSecretAgreementAsHmacKey\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  langs:\n  - csharp\n  name: UseSecretAgreementAsHmacKey\n  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool UseSecretAgreementAsHmacKey { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.ECDiffieHellman\n  isExternal: false\n  name: System.Security.Cryptography.ECDiffieHellman\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ECDiffieHellmanCng()\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng()\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng()\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Int32)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ECDiffieHellmanCng(Int32)\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ECDiffieHellmanCng(CngKey)\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(CngKey)\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.#ctor(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ECDiffieHellmanCng(ECCurve)\n  nameWithType: ECDiffieHellmanCng.ECDiffieHellmanCng(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ECDiffieHellmanCng(ECCurve)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHash(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Security.Cryptography.HashAlgorithmName,System.Byte[],System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  nameWithType: ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyFromHmac(ECDiffieHellmanPublicKey,HashAlgorithmName,Byte[],Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveKeyMaterial(CngKey)\n  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(CngKey)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  nameWithType: ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial(ECDiffieHellmanPublicKey)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(System.Security.Cryptography.ECDiffieHellmanPublicKey,System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  nameWithType: ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyTls(ECDiffieHellmanPublicKey,Byte[],Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.CngKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveSecretAgreementHandle(CngKey)\n  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(CngKey)\n- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeNCryptSecretHandle\n  nameWithType: SafeNCryptSecretHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(System.Security.Cryptography.ECDiffieHellmanPublicKey)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)\n  nameWithType: ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle(ECDiffieHellmanPublicKey)\n- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeNCryptSecretHandle\n  nameWithType: SafeNCryptSecretHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: ECDiffieHellmanCng.Dispose(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ExportExplicitParameters(Boolean)\n  nameWithType: ECDiffieHellmanCng.ExportExplicitParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ExportExplicitParameters(Boolean)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: ECDiffieHellmanCng.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: FromXmlString(String)\n  nameWithType: ECDiffieHellmanCng.FromXmlString(String)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(System.String,System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: FromXmlString(String,ECKeyXmlFormat)\n  nameWithType: ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString(String,ECKeyXmlFormat)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECKeyXmlFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECKeyXmlFormat\n  nameWithType: ECKeyXmlFormat\n  fullName: System.Security.Cryptography.ECKeyXmlFormat\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(System.Security.Cryptography.ECCurve)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: GenerateKey(ECCurve)\n  nameWithType: ECDiffieHellmanCng.GenerateKey(ECCurve)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.GenerateKey(ECCurve)\n- uid: System.Security.Cryptography.ECCurve\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECCurve\n  nameWithType: ECCurve\n  fullName: System.Security.Cryptography.ECCurve\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: ECDiffieHellmanCng.HashAlgorithm\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm\n- uid: System.Security.Cryptography.CngAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithm\n  nameWithType: CngAlgorithm\n  fullName: System.Security.Cryptography.CngAlgorithm\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: HmacKey\n  nameWithType: ECDiffieHellmanCng.HmacKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.HmacKey\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(System.Security.Cryptography.ECParameters)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ImportParameters(ECParameters)\n  nameWithType: ECDiffieHellmanCng.ImportParameters(ECParameters)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ImportParameters(ECParameters)\n- uid: System.Security.Cryptography.ECParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECParameters\n  nameWithType: ECParameters\n  fullName: System.Security.Cryptography.ECParameters\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Key\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: Key\n  nameWithType: ECDiffieHellmanCng.Key\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Key\n- uid: System.Security.Cryptography.CngKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKey\n  nameWithType: CngKey\n  fullName: System.Security.Cryptography.CngKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: KeyDerivationFunction\n  nameWithType: ECDiffieHellmanCng.KeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction\n- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanKeyDerivationFunction\n  nameWithType: ECDiffieHellmanKeyDerivationFunction\n  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Label\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: Label\n  nameWithType: ECDiffieHellmanCng.Label\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Label\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: PublicKey\n  nameWithType: ECDiffieHellmanCng.PublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.PublicKey\n- uid: System.Security.Cryptography.ECDiffieHellmanPublicKey\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECDiffieHellmanPublicKey\n  nameWithType: ECDiffieHellmanPublicKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanPublicKey\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: SecretAppend\n  nameWithType: ECDiffieHellmanCng.SecretAppend\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: SecretPrepend\n  nameWithType: ECDiffieHellmanCng.SecretPrepend\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.Seed\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: Seed\n  nameWithType: ECDiffieHellmanCng.Seed\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.Seed\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Boolean)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ToXmlString(Boolean)\n  nameWithType: ECDiffieHellmanCng.ToXmlString(Boolean)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(System.Security.Cryptography.ECKeyXmlFormat)\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: ToXmlString(ECKeyXmlFormat)\n  nameWithType: ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString(ECKeyXmlFormat)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.ECKeyXmlFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ECKeyXmlFormat\n  nameWithType: ECKeyXmlFormat\n  fullName: System.Security.Cryptography.ECKeyXmlFormat\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  name: UseSecretAgreementAsHmacKey\n  nameWithType: ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n  fullName: System.Security.Cryptography.ECDiffieHellmanCng.UseSecretAgreementAsHmacKey\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial*\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  nameWithType: ECDiffieHellmanCng.\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.DeriveSecretAgreementHandle*\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  nameWithType: ECDiffieHellmanCng.\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.FromXmlString*\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  nameWithType: ECDiffieHellmanCng.\n- uid: System.Security.Cryptography.ECDiffieHellmanCng.ToXmlString*\n  parent: System.Security.Cryptography.ECDiffieHellmanCng\n  isExternal: false\n  nameWithType: ECDiffieHellmanCng.\n"}