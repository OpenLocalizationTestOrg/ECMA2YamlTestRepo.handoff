{"nodes":[{"pos":[2410,2427],"content":"CryptoKeySecurity","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeySecurity","pos":[0,17]}]},{"pos":[8760,8779],"content":"CryptoKeySecurity()","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeySecurity()","pos":[0,19]}]},{"pos":[9397,9440],"content":"CryptoKeySecurity(CommonSecurityDescriptor)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeySecurity(CommonSecurityDescriptor)","pos":[0,43]}]},{"pos":[9969,10003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10232,10247],"content":"AccessRightType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[10585,10619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11282,11384],"content":"AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)","pos":[0,102]}]},{"pos":[12277,12311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12377,12411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12480,12514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12620,12654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12760,12794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12889,12923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13008,13042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13269,13283],"content":"AccessRuleType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[13618,13652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13979,14013],"content":"AddAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAccessRule(CryptoKeyAccessRule)","pos":[0,34]}]},{"pos":[14482,14516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14839,14871],"content":"AddAuditRule(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAuditRule(CryptoKeyAuditRule)","pos":[0,32]}]},{"pos":[15333,15367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16014,16108],"content":"AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,94]}]},{"pos":[16977,17011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17077,17111],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17180,17214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17320,17354],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17460,17494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17583,17617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17701,17735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17960,17973],"content":"AuditRuleType","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[18305,18339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18672,18709],"content":"RemoveAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAccessRule(CryptoKeyAccessRule)","pos":[0,37]}]},{"pos":[19187,19221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19280,19314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19653,19693],"content":"RemoveAccessRuleAll(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAccessRuleAll(CryptoKeyAccessRule)","pos":[0,40]}]},{"pos":[20180,20214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20563,20608],"content":"RemoveAccessRuleSpecific(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAccessRuleSpecific(CryptoKeyAccessRule)","pos":[0,45]}]},{"pos":[21110,21144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21473,21508],"content":"RemoveAuditRule(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAuditRule(CryptoKeyAuditRule)","pos":[0,35]}]},{"pos":[21979,22013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22072,22106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22441,22479],"content":"RemoveAuditRuleAll(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAuditRuleAll(CryptoKeyAuditRule)","pos":[0,38]}]},{"pos":[22959,22993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23338,23381],"content":"RemoveAuditRuleSpecific(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAuditRuleSpecific(CryptoKeyAuditRule)","pos":[0,43]}]},{"pos":[23876,23910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24241,24277],"content":"ResetAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResetAccessRule(CryptoKeyAccessRule)","pos":[0,36]}]},{"pos":[24752,24786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25113,25147],"content":"SetAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAccessRule(CryptoKeyAccessRule)","pos":[0,34]}]},{"pos":[25616,25650],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25973,26005],"content":"SetAuditRule(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAuditRule(CryptoKeyAuditRule)","pos":[0,32]}]},{"pos":[26467,26501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26649,26699],"content":"System.Security.AccessControl.NativeObjectSecurity","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.NativeObjectSecurity","pos":[0,50]}]},{"pos":[26847,26866],"content":"CryptoKeySecurity()","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeySecurity()","pos":[0,19]}]},{"pos":[27204,27247],"content":"CryptoKeySecurity(CommonSecurityDescriptor)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeySecurity(CommonSecurityDescriptor)","pos":[0,43]}]},{"pos":[27560,27584],"content":"CommonSecurityDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"CommonSecurityDescriptor","pos":[0,24]}]},{"pos":[27850,27865],"content":"AccessRightType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRightType","pos":[0,15]}]},{"pos":[28056,28060],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[28480,28582],"content":"AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)","pos":[0,102]}]},{"pos":[28999,29009],"content":"AccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRule","pos":[0,10]}]},{"pos":[29205,29222],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[29378,29383],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29498,29505],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29679,29695],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[29910,29926],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[30142,30159],"content":"AccessControlType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessControlType","pos":[0,17]}]},{"pos":[30410,30424],"content":"AccessRuleType","needQuote":true,"needEscape":true,"nodes":[{"content":"AccessRuleType","pos":[0,14]}]},{"pos":[30613,30617],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[30869,30903],"content":"AddAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAccessRule(CryptoKeyAccessRule)","pos":[0,34]}]},{"pos":[31193,31212],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[31515,31547],"content":"AddAuditRule(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddAuditRule(CryptoKeyAuditRule)","pos":[0,32]}]},{"pos":[31832,31850],"content":"CryptoKeyAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAuditRule","pos":[0,18]}]},{"pos":[32313,32407],"content":"AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)","pos":[0,94]}]},{"pos":[32807,32816],"content":"AuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRule","pos":[0,9]}]},{"pos":[33010,33027],"content":"IdentityReference","needQuote":true,"needEscape":true,"nodes":[{"content":"IdentityReference","pos":[0,17]}]},{"pos":[33183,33188],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33303,33310],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33484,33500],"content":"InheritanceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritanceFlags","pos":[0,16]}]},{"pos":[33715,33731],"content":"PropagationFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"PropagationFlags","pos":[0,16]}]},{"pos":[33940,33950],"content":"AuditFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditFlags","pos":[0,10]}]},{"pos":[34186,34199],"content":"AuditRuleType","needQuote":true,"needEscape":true,"nodes":[{"content":"AuditRuleType","pos":[0,13]}]},{"pos":[34386,34390],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[34645,34682],"content":"RemoveAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAccessRule(CryptoKeyAccessRule)","pos":[0,37]}]},{"pos":[34920,34927],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35104,35123],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[35434,35474],"content":"RemoveAccessRuleAll(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAccessRuleAll(CryptoKeyAccessRule)","pos":[0,40]}]},{"pos":[35776,35795],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[36111,36156],"content":"RemoveAccessRuleSpecific(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAccessRuleSpecific(CryptoKeyAccessRule)","pos":[0,45]}]},{"pos":[36468,36487],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[36793,36828],"content":"RemoveAuditRule(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAuditRule(CryptoKeyAuditRule)","pos":[0,35]}]},{"pos":[37062,37069],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37245,37263],"content":"CryptoKeyAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAuditRule","pos":[0,18]}]},{"pos":[37570,37608],"content":"RemoveAuditRuleAll(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAuditRuleAll(CryptoKeyAuditRule)","pos":[0,38]}]},{"pos":[37905,37923],"content":"CryptoKeyAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAuditRule","pos":[0,18]}]},{"pos":[38235,38278],"content":"RemoveAuditRuleSpecific(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAuditRuleSpecific(CryptoKeyAuditRule)","pos":[0,43]}]},{"pos":[38585,38603],"content":"CryptoKeyAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAuditRule","pos":[0,18]}]},{"pos":[38908,38944],"content":"ResetAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResetAccessRule(CryptoKeyAccessRule)","pos":[0,36]}]},{"pos":[39238,39257],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[39562,39596],"content":"SetAccessRule(CryptoKeyAccessRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAccessRule(CryptoKeyAccessRule)","pos":[0,34]}]},{"pos":[39886,39905],"content":"CryptoKeyAccessRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAccessRule","pos":[0,19]}]},{"pos":[40208,40240],"content":"SetAuditRule(CryptoKeyAuditRule)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAuditRule(CryptoKeyAuditRule)","pos":[0,32]}]},{"pos":[40525,40543],"content":"CryptoKeyAuditRule","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoKeyAuditRule","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.CryptoKeySecurity\n  id: CryptoKeySecurity\n  children:\n  - System.Security.AccessControl.CryptoKeySecurity.#ctor\n  - System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  - System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  - System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  - System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  - System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  - System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  - System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  - System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  langs:\n  - csharp\n  name: CryptoKeySecurity\n  nameWithType: CryptoKeySecurity\n  fullName: System.Security.AccessControl.CryptoKeySecurity\n  type: Class\n  syntax:\n    content: 'public sealed class CryptoKeySecurity : System.Security.AccessControl.NativeObjectSecurity'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.ObjectSecurity\n  - System.Security.AccessControl.CommonObjectSecurity\n  - System.Security.AccessControl.NativeObjectSecurity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)\n  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)\n  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical\n  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected\n  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified\n  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm\n  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.GroupModified\n  - System.Security.AccessControl.ObjectSecurity.IsContainer\n  - System.Security.AccessControl.ObjectSecurity.IsDS\n  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported\n  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)\n  - System.Security.AccessControl.ObjectSecurity.OwnerModified\n  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.ReadLock\n  - System.Security.AccessControl.ObjectSecurity.ReadUnlock\n  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)\n  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)\n  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)\n  - System.Security.AccessControl.ObjectSecurity.WriteLock\n  - System.Security.AccessControl.ObjectSecurity.WriteUnlock\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: CryptoKeySecurity()\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity()\n  fullName: System.Security.AccessControl.CryptoKeySecurity.CryptoKeySecurity()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CryptoKeySecurity ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  id: '#ctor(System.Security.AccessControl.CommonSecurityDescriptor)'\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: CryptoKeySecurity(CommonSecurityDescriptor)\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public CryptoKeySecurity (System.Security.AccessControl.CommonSecurityDescriptor securityDescriptor);\n    parameters:\n    - id: securityDescriptor\n      type: System.Security.AccessControl.CommonSecurityDescriptor\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  id: AccessRightType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AccessRightType\n  nameWithType: CryptoKeySecurity.AccessRightType\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override Type AccessRightType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: CryptoKeySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override sealed System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: accessMask\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: isInherited\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: type\n      type: System.Security.AccessControl.AccessControlType\n      description: Parameter description to be filled\n    return:\n      type: System.Security.AccessControl.AccessRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  id: AccessRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AccessRuleType\n  nameWithType: CryptoKeySecurity.AccessRuleType\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override Type AccessRuleType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AddAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void AddAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AddAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void AddAuditRule (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: CryptoKeySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);\n    parameters:\n    - id: identityReference\n      type: System.Security.Principal.IdentityReference\n      description: Parameter description to be filled\n    - id: accessMask\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: isInherited\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: inheritanceFlags\n      type: System.Security.AccessControl.InheritanceFlags\n      description: Parameter description to be filled\n    - id: propagationFlags\n      type: System.Security.AccessControl.PropagationFlags\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.AuditFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Security.AccessControl.AuditRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  id: AuditRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: AuditRuleType\n  nameWithType: CryptoKeySecurity.AuditRuleType\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override Type AuditRuleType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public bool RemoveAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleAll(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void RemoveAccessRuleAll (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void RemoveAccessRuleSpecific (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public bool RemoveAuditRule (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleAll(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void RemoveAuditRuleAll (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void RemoveAuditRuleSpecific (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: ResetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void ResetAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  id: SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: SetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void SetAccessRule (System.Security.AccessControl.CryptoKeyAccessRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAccessRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  id: SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  langs:\n  - csharp\n  name: SetAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void SetAuditRule (System.Security.AccessControl.CryptoKeyAuditRule rule);\n    parameters:\n    - id: rule\n      type: System.Security.AccessControl.CryptoKeyAuditRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.NativeObjectSecurity\n  isExternal: false\n  name: System.Security.AccessControl.NativeObjectSecurity\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: CryptoKeySecurity()\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity()\n  fullName: System.Security.AccessControl.CryptoKeySecurity.CryptoKeySecurity()\n- uid: System.Security.AccessControl.CryptoKeySecurity.#ctor(System.Security.AccessControl.CommonSecurityDescriptor)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: CryptoKeySecurity(CommonSecurityDescriptor)\n  nameWithType: CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.CryptoKeySecurity(CommonSecurityDescriptor)\n- uid: System.Security.AccessControl.CommonSecurityDescriptor\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CommonSecurityDescriptor\n  nameWithType: CommonSecurityDescriptor\n  fullName: System.Security.AccessControl.CommonSecurityDescriptor\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRightType\n  nameWithType: CryptoKeySecurity.AccessRightType\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AccessRightType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  nameWithType: CryptoKeySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)\n- uid: System.Security.AccessControl.AccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessRule\n  nameWithType: AccessRule\n  fullName: System.Security.AccessControl.AccessRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AccessControlType\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AccessControlType\n  nameWithType: AccessControlType\n  fullName: System.Security.AccessControl.AccessControlType\n- uid: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AccessRuleType\n  nameWithType: CryptoKeySecurity.AccessRuleType\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AccessRuleType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AddAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AddAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AddAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AddAuditRule(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeyAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAuditRule\n  nameWithType: CryptoKeyAuditRule\n  fullName: System.Security.AccessControl.CryptoKeyAuditRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  nameWithType: CryptoKeySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)\n- uid: System.Security.AccessControl.AuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditRule\n  nameWithType: AuditRule\n  fullName: System.Security.AccessControl.AuditRule\n- uid: System.Security.Principal.IdentityReference\n  parent: System.Security.Principal\n  isExternal: false\n  name: IdentityReference\n  nameWithType: IdentityReference\n  fullName: System.Security.Principal.IdentityReference\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.InheritanceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: InheritanceFlags\n  nameWithType: InheritanceFlags\n  fullName: System.Security.AccessControl.InheritanceFlags\n- uid: System.Security.AccessControl.PropagationFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: PropagationFlags\n  nameWithType: PropagationFlags\n  fullName: System.Security.AccessControl.PropagationFlags\n- uid: System.Security.AccessControl.AuditFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AuditFlags\n  nameWithType: AuditFlags\n  fullName: System.Security.AccessControl.AuditFlags\n- uid: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: AuditRuleType\n  nameWithType: CryptoKeySecurity.AuditRuleType\n  fullName: System.Security.AccessControl.CryptoKeySecurity.AuditRuleType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRule(CryptoKeyAccessRule)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRuleAll(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleAll(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAccessRuleSpecific(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRule(CryptoKeyAuditRule)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.CryptoKeyAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAuditRule\n  nameWithType: CryptoKeyAuditRule\n  fullName: System.Security.AccessControl.CryptoKeyAuditRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRuleAll(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleAll(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeyAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAuditRule\n  nameWithType: CryptoKeyAuditRule\n  fullName: System.Security.AccessControl.CryptoKeyAuditRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.RemoveAuditRuleSpecific(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeyAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAuditRule\n  nameWithType: CryptoKeyAuditRule\n  fullName: System.Security.AccessControl.CryptoKeyAuditRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: ResetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.ResetAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(System.Security.AccessControl.CryptoKeyAccessRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: SetAccessRule(CryptoKeyAccessRule)\n  nameWithType: CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.SetAccessRule(CryptoKeyAccessRule)\n- uid: System.Security.AccessControl.CryptoKeyAccessRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAccessRule\n  nameWithType: CryptoKeyAccessRule\n  fullName: System.Security.AccessControl.CryptoKeyAccessRule\n- uid: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(System.Security.AccessControl.CryptoKeyAuditRule)\n  parent: System.Security.AccessControl.CryptoKeySecurity\n  isExternal: false\n  name: SetAuditRule(CryptoKeyAuditRule)\n  nameWithType: CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n  fullName: System.Security.AccessControl.CryptoKeySecurity.SetAuditRule(CryptoKeyAuditRule)\n- uid: System.Security.AccessControl.CryptoKeyAuditRule\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: CryptoKeyAuditRule\n  nameWithType: CryptoKeyAuditRule\n  fullName: System.Security.AccessControl.CryptoKeyAuditRule\n"}