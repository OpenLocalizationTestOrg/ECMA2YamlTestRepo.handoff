{"nodes":[{"pos":[639,666],"content":"ReflectionTypeLoadException","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionTypeLoadException","pos":[0,27]}]},{"pos":[1932,1979],"content":"ReflectionTypeLoadException(Type[],Exception[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionTypeLoadException(Type[],Exception[])","pos":[0,47]}]},{"pos":[2435,2469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2541,2575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2878,2932],"content":"ReflectionTypeLoadException(Type[],Exception[],String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionTypeLoadException(Type[],Exception[],String)","pos":[0,54]}]},{"pos":[3418,3452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3524,3558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3622,3656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4065,4114],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[4667,4701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4797,4831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5058,5074],"content":"LoaderExceptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LoaderExceptions","pos":[0,16]}]},{"pos":[5416,5450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5655,5660],"content":"Types","needQuote":true,"needEscape":true,"nodes":[{"content":"Types","pos":[0,5]}]},{"pos":[5959,5993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6113,6135],"content":"System.SystemException","needQuote":true,"needEscape":true,"nodes":[{"content":"System.SystemException","pos":[0,22]}]},{"pos":[6313,6360],"content":"ReflectionTypeLoadException(Type[],Exception[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionTypeLoadException(Type[],Exception[])","pos":[0,47]}]},{"pos":[6623,6627],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[6744,6753],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[7002,7056],"content":"ReflectionTypeLoadException(Type[],Exception[],String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionTypeLoadException(Type[],Exception[],String)","pos":[0,54]}]},{"pos":[7333,7337],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7454,7463],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[7587,7593],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7888,7937],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[8261,8278],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[8492,8508],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[8754,8770],"content":"LoaderExceptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LoaderExceptions","pos":[0,16]}]},{"pos":[8976,8985],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[9186,9191],"content":"Types","needQuote":true,"needEscape":true,"nodes":[{"content":"Types","pos":[0,5]}]},{"pos":[9370,9374],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ReflectionTypeLoadException\n  id: ReflectionTypeLoadException\n  children:\n  - System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[])\n  - System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[],System.String)\n  - System.Reflection.ReflectionTypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.ReflectionTypeLoadException.LoaderExceptions\n  - System.Reflection.ReflectionTypeLoadException.Types\n  langs:\n  - csharp\n  name: ReflectionTypeLoadException\n  nameWithType: ReflectionTypeLoadException\n  fullName: System.Reflection.ReflectionTypeLoadException\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class ReflectionTypeLoadException : SystemException\n  inheritance:\n  - System.Object\n  - System.Exception\n  - System.SystemException\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.Message\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[])\n  id: '#ctor(System.Type[],System.Exception[])'\n  parent: System.Reflection.ReflectionTypeLoadException\n  langs:\n  - csharp\n  name: ReflectionTypeLoadException(Type[],Exception[])\n  nameWithType: ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[])\n  fullName: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public ReflectionTypeLoadException (Type[] classes, Exception[] exceptions);\n    parameters:\n    - id: classes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: exceptions\n      type: System.Exception[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[],System.String)\n  id: '#ctor(System.Type[],System.Exception[],System.String)'\n  parent: System.Reflection.ReflectionTypeLoadException\n  langs:\n  - csharp\n  name: ReflectionTypeLoadException(Type[],Exception[],String)\n  nameWithType: ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[],String)\n  fullName: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[],String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public ReflectionTypeLoadException (Type[] classes, Exception[] exceptions, string message);\n    parameters:\n    - id: classes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: exceptions\n      type: System.Exception[]\n      description: Parameter description to be filled\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionTypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.ReflectionTypeLoadException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: ReflectionTypeLoadException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.ReflectionTypeLoadException.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionTypeLoadException.LoaderExceptions\n  id: LoaderExceptions\n  parent: System.Reflection.ReflectionTypeLoadException\n  langs:\n  - csharp\n  name: LoaderExceptions\n  nameWithType: ReflectionTypeLoadException.LoaderExceptions\n  fullName: System.Reflection.ReflectionTypeLoadException.LoaderExceptions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public Exception[] LoaderExceptions { get; }\n    return:\n      type: System.Exception[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionTypeLoadException.Types\n  id: Types\n  parent: System.Reflection.ReflectionTypeLoadException\n  langs:\n  - csharp\n  name: Types\n  nameWithType: ReflectionTypeLoadException.Types\n  fullName: System.Reflection.ReflectionTypeLoadException.Types\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public Type[] Types { get; }\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.SystemException\n  isExternal: false\n  name: System.SystemException\n- uid: System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[])\n  parent: System.Reflection.ReflectionTypeLoadException\n  isExternal: false\n  name: ReflectionTypeLoadException(Type[],Exception[])\n  nameWithType: ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[])\n  fullName: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception[]\n- uid: System.Reflection.ReflectionTypeLoadException.#ctor(System.Type[],System.Exception[],System.String)\n  parent: System.Reflection.ReflectionTypeLoadException\n  isExternal: false\n  name: ReflectionTypeLoadException(Type[],Exception[],String)\n  nameWithType: ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[],String)\n  fullName: System.Reflection.ReflectionTypeLoadException.ReflectionTypeLoadException(Type[],Exception[],String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ReflectionTypeLoadException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.ReflectionTypeLoadException\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: ReflectionTypeLoadException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.ReflectionTypeLoadException.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.ReflectionTypeLoadException.LoaderExceptions\n  parent: System.Reflection.ReflectionTypeLoadException\n  isExternal: false\n  name: LoaderExceptions\n  nameWithType: ReflectionTypeLoadException.LoaderExceptions\n  fullName: System.Reflection.ReflectionTypeLoadException.LoaderExceptions\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception[]\n- uid: System.Reflection.ReflectionTypeLoadException.Types\n  parent: System.Reflection.ReflectionTypeLoadException\n  isExternal: false\n  name: Types\n  nameWithType: ReflectionTypeLoadException.Types\n  fullName: System.Reflection.ReflectionTypeLoadException.Types\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n"}