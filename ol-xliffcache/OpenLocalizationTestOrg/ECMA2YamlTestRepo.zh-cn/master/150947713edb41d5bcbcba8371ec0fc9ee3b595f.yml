### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.Divide`3
  id: Divide`3
  children:
  - System.Activities.Expressions.Divide`3.#ctor
  - System.Activities.Expressions.Divide`3.CacheMetadata(System.Activities.CodeActivityMetadata)
  - System.Activities.Expressions.Divide`3.Execute(System.Activities.CodeActivityContext)
  - System.Activities.Expressions.Divide`3.Left
  - System.Activities.Expressions.Divide`3.Right
  langs:
  - csharp
  name: Divide<TLeft,TRight,TResult>
  nameWithType: Divide<TLeft,TRight,TResult>
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>
  type: Class
  syntax:
    content: 'public sealed class Divide<TLeft,TRight,TResult> : System.Activities.CodeActivity<TResult>'
    typeParameters:
    - id: TLeft
      description: Parameter description to be filled
    - id: TRight
      description: Parameter description to be filled
    - id: TResult
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.CodeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.CodeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.CodeActivity`1.Implementation
  - System.Activities.CodeActivity`1.ImplementationVersion
  - System.Activities.CodeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.Divide`3.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.Divide`3
  langs:
  - csharp
  name: Divide()
  nameWithType: Divide<TLeft,TRight,TResult>.Divide()
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Divide()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public Divide ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.Divide`3.CacheMetadata(System.Activities.CodeActivityMetadata)
  id: CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.Divide`3
  langs:
  - csharp
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: Divide<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void CacheMetadata (System.Activities.CodeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.CodeActivityMetadata
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.Divide`3.Execute(System.Activities.CodeActivityContext)
  id: Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.Divide`3
  langs:
  - csharp
  name: Execute(CodeActivityContext)
  nameWithType: Divide<TLeft,TRight,TResult>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Execute(CodeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override TResult Execute (System.Activities.CodeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.CodeActivityContext
      description: Parameter description to be filled
    return:
      type: TResult
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.Divide`3.Left
  id: Left
  parent: System.Activities.Expressions.Divide`3
  langs:
  - csharp
  name: Left
  nameWithType: Divide<TLeft,TRight,TResult>.Left
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Left
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<TLeft> Left { get; set; }
    return:
      type: System.Activities.InArgument{TLeft}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.Divide`3.Right
  id: Right
  parent: System.Activities.Expressions.Divide`3
  langs:
  - csharp
  name: Right
  nameWithType: Divide<TLeft,TRight,TResult>.Right
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Right
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<TRight> Right { get; set; }
    return:
      type: System.Activities.InArgument{TRight}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Activities.CodeActivity`1
  isExternal: false
  name: System.Activities.CodeActivity<TResult>
- uid: System.Activities.Expressions.Divide`3.#ctor
  parent: System.Activities.Expressions.Divide`3
  isExternal: false
  name: Divide()
  nameWithType: Divide<TLeft,TRight,TResult>.Divide()
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Divide()
- uid: System.Activities.Expressions.Divide`3.CacheMetadata(System.Activities.CodeActivityMetadata)
  parent: System.Activities.Expressions.Divide`3
  isExternal: false
  name: CacheMetadata(CodeActivityMetadata)
  nameWithType: Divide<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.CacheMetadata(CodeActivityMetadata)
- uid: System.Activities.CodeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: CodeActivityMetadata
  nameWithType: CodeActivityMetadata
  fullName: System.Activities.CodeActivityMetadata
- uid: System.Activities.Expressions.Divide`3.Execute(System.Activities.CodeActivityContext)
  parent: System.Activities.Expressions.Divide`3
  isExternal: false
  name: Execute(CodeActivityContext)
  nameWithType: Divide<TLeft,TRight,TResult>.Execute(CodeActivityContext)
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Execute(CodeActivityContext)
- uid: TResult
  parent: ''
  isExternal: true
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: System.Activities.CodeActivityContext
  parent: System.Activities
  isExternal: false
  name: CodeActivityContext
  nameWithType: CodeActivityContext
  fullName: System.Activities.CodeActivityContext
- uid: System.Activities.Expressions.Divide`3.Left
  parent: System.Activities.Expressions.Divide`3
  isExternal: false
  name: Left
  nameWithType: Divide<TLeft,TRight,TResult>.Left
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Left
- uid: System.Activities.InArgument{TLeft}
  parent: System.Activities
  isExternal: false
  name: InArgument<TLeft>
  nameWithType: InArgument<TLeft>
  fullName: System.Activities.InArgument<TLeft>
- uid: System.Activities.Expressions.Divide`3.Right
  parent: System.Activities.Expressions.Divide`3
  isExternal: false
  name: Right
  nameWithType: Divide<TLeft,TRight,TResult>.Right
  fullName: System.Activities.Expressions.Divide<TLeft,TRight,TResult>.Right
- uid: System.Activities.InArgument{TRight}
  parent: System.Activities
  isExternal: false
  name: InArgument<TRight>
  nameWithType: InArgument<TRight>
  fullName: System.Activities.InArgument<TRight>
