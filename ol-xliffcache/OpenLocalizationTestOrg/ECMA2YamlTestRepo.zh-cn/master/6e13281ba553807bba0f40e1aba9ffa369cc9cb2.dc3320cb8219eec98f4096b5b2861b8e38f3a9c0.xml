{"nodes":[{"pos":[1436,1445],"content":"SymMethod","needQuote":true,"needEscape":true,"nodes":[{"content":"SymMethod","pos":[0,9]}]},{"pos":[2593,2624],"content":"SymMethod(ISymUnmanagedMethod*)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymMethod(ISymUnmanagedMethod*)","pos":[0,31]}]},{"pos":[3098,3132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3331,3340],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[3903,3919],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[4264,4298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4561,4571],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[5027,5041],"content":"GetNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNamespace()","pos":[0,14]}]},{"pos":[5453,5487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5838,5876],"content":"GetOffset(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffset(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[6369,6403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6463,6497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6559,6593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6650,6684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6895,6910],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[7327,7361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7712,7750],"content":"GetRanges(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRanges(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[8245,8279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8339,8373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8435,8469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8528,8562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8791,8806],"content":"GetScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetScope(Int32)","pos":[0,15]}]},{"pos":[9189,9223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9311,9345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9814,9890],"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","pos":[0,76]}]},{"pos":[10493,10527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10628,10662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10725,10759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10824,10858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10924,10958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11026,11060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11439,11491],"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","pos":[0,52]}]},{"pos":[12023,12057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12120,12154],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12219,12253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12312,12346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12549,12558],"content":"RootScope","needQuote":true,"needEscape":true,"nodes":[{"content":"RootScope","pos":[0,9]}]},{"pos":[12937,12971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13190,13209],"content":"RootScopeInternal()","needQuote":true,"needEscape":true,"nodes":[{"content":"RootScopeInternal()","pos":[0,19]}]},{"pos":[13628,13662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13883,13901],"content":"SequencePointCount","needQuote":true,"needEscape":true,"nodes":[{"content":"SequencePointCount","pos":[0,18]}]},{"pos":[14236,14270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14465,14470],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[14835,14869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15011,15055],"content":"System.Diagnostics.SymbolStore.SymMethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Diagnostics.SymbolStore.SymMethodBase","pos":[0,44]}]},{"pos":[15250,15281],"content":"SymMethod(ISymUnmanagedMethod*)","needQuote":true,"needEscape":true,"nodes":[{"content":"SymMethod(ISymUnmanagedMethod*)","pos":[0,31]}]},{"pos":[15560,15569],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[15820,15836],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[16017,16024],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16212,16222],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[16464,16478],"content":"GetNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNamespace()","pos":[0,14]}]},{"pos":[16712,16728],"content":"ISymbolNamespace","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolNamespace","pos":[0,16]}]},{"pos":[17033,17071],"content":"GetOffset(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOffset(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[17294,17299],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17470,17485],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[17642,17647],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17760,17765],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[17954,17969],"content":"GetParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetParameters()","pos":[0,15]}]},{"pos":[18204,18219],"content":"ISymbolVariable","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolVariable","pos":[0,15]}]},{"pos":[18524,18562],"content":"GetRanges(ISymbolDocument,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRanges(ISymbolDocument,Int32,Int32)","pos":[0,38]}]},{"pos":[18785,18790],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18963,18978],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[19135,19140],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19253,19258],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19456,19471],"content":"GetScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetScope(Int32)","pos":[0,15]}]},{"pos":[19703,19715],"content":"ISymbolScope","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolScope","pos":[0,12]}]},{"pos":[19866,19871],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20189,20265],"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])","pos":[0,76]}]},{"pos":[20564,20569],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20742,20757],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[20916,20921],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21036,21041],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21156,21161],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21276,21281],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21556,21608],"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])","pos":[0,52]}]},{"pos":[21861,21868],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22043,22058],"content":"ISymbolDocument","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocument","pos":[0,15]}]},{"pos":[22217,22222],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22337,22342],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22529,22538],"content":"RootScope","needQuote":true,"needEscape":true,"nodes":[{"content":"RootScope","pos":[0,9]}]},{"pos":[22758,22770],"content":"ISymbolScope","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolScope","pos":[0,12]}]},{"pos":[23001,23020],"content":"RootScopeInternal()","needQuote":true,"needEscape":true,"nodes":[{"content":"RootScopeInternal()","pos":[0,19]}]},{"pos":[23260,23272],"content":"ISymbolScope","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolScope","pos":[0,12]}]},{"pos":[23504,23522],"content":"SequencePointCount","needQuote":true,"needEscape":true,"nodes":[{"content":"SequencePointCount","pos":[0,18]}]},{"pos":[23705,23710],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23891,23896],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[24107,24118],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymMethod\n  id: SymMethod\n  children:\n  - System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)\n  - System.Diagnostics.SymbolStore.SymMethod.Dispose\n  - System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)\n  - System.Diagnostics.SymbolStore.SymMethod.Finalize\n  - System.Diagnostics.SymbolStore.SymMethod.GetNamespace\n  - System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymMethod.GetParameters\n  - System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)\n  - System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.SymMethod.RootScope\n  - System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal\n  - System.Diagnostics.SymbolStore.SymMethod.SequencePointCount\n  - System.Diagnostics.SymbolStore.SymMethod.Token\n  langs:\n  - csharp\n  name: SymMethod\n  nameWithType: SymMethod\n  fullName: System.Diagnostics.SymbolStore.SymMethod\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SymMethod : System.Diagnostics.SymbolStore.SymMethodBase, IDisposable, System.Diagnostics.SymbolStore.ISymbolMethod\n  inheritance:\n  - System.Object\n  - System.Diagnostics.SymbolStore.SymMethodBase\n  implements:\n  - System.Diagnostics.SymbolStore.ISymbolMethod\n  - System.IDisposable\n  inheritedMembers:\n  - System.Diagnostics.SymbolStore.SymMethodBase.{dtor}\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)\n  id: '#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)'\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: SymMethod(ISymUnmanagedMethod*)\n  nameWithType: SymMethod.SymMethod(ISymUnmanagedMethod*)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.SymMethod(ISymUnmanagedMethod*)\n  type: Constructor\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public SymMethod (System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod* pMethod);\n    parameters:\n    - id: pMethod\n      type: System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose\n  id: Dispose\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SymMethod.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.SymbolStore.SymMethod.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SymMethod.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.SymbolStore.SymMethod.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.Finalize\n  id: Finalize\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: SymMethod.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Finalize()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: ~SymMethod ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetNamespace\n  id: GetNamespace\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetNamespace()\n  nameWithType: SymMethod.GetNamespace()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetNamespace()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolNamespace GetNamespace ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolNamespace\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetOffset(ISymbolDocument,Int32,Int32)\n  nameWithType: SymMethod.GetOffset(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetOffset(ISymbolDocument,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual int GetOffset (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: Parameter description to be filled\n    - id: line\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: column\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetParameters\n  id: GetParameters\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetParameters()\n  nameWithType: SymMethod.GetParameters()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetParameters()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolVariable[] GetParameters ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolVariable[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  id: GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetRanges(ISymbolDocument,Int32,Int32)\n  nameWithType: SymMethod.GetRanges(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetRanges(ISymbolDocument,Int32,Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual int[] GetRanges (System.Diagnostics.SymbolStore.ISymbolDocument document, int line, int column);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocument\n      description: Parameter description to be filled\n    - id: line\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: column\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)\n  id: GetScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetScope(Int32)\n  nameWithType: SymMethod.GetScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetScope(Int32)\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope GetScope (int offset);\n    parameters:\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  id: GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual void GetSequencePoints (int[] offsets, System.Diagnostics.SymbolStore.ISymbolDocument[] documents, int[] lines, int[] columns, int[] endLines, int[] endColumns);\n    parameters:\n    - id: offsets\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: documents\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: Parameter description to be filled\n    - id: lines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: columns\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endLines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endColumns\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  id: GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  nameWithType: SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual bool GetSourceStartEnd (System.Diagnostics.SymbolStore.ISymbolDocument[] docs, int[] lines, int[] columns);\n    parameters:\n    - id: docs\n      type: System.Diagnostics.SymbolStore.ISymbolDocument[]\n      description: Parameter description to be filled\n    - id: lines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: columns\n      type: System.Int32[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.RootScope\n  id: RootScope\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: RootScope\n  nameWithType: SymMethod.RootScope\n  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScope\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScope { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal\n  id: RootScopeInternal\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: RootScopeInternal()\n  nameWithType: SymMethod.RootScopeInternal()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal()\n  type: Method\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.ISymbolScope RootScopeInternal ();\n    parameters: []\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolScope\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount\n  id: SequencePointCount\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: SequencePointCount\n  nameWithType: SymMethod.SequencePointCount\n  fullName: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual int SequencePointCount { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.SymMethod.Token\n  id: Token\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  langs:\n  - csharp\n  name: Token\n  nameWithType: SymMethod.Token\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Token\n  type: Property\n  assemblies:\n  - ISymWrapper\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public virtual System.Diagnostics.SymbolStore.SymbolToken Token { get; }\n    return:\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.SymbolStore.SymMethodBase\n  isExternal: false\n  name: System.Diagnostics.SymbolStore.SymMethodBase\n- uid: System.Diagnostics.SymbolStore.SymMethod.#ctor(System.Diagnostics.SymbolStore.Private.ISymUnmanagedMethod*)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: SymMethod(ISymUnmanagedMethod*)\n  nameWithType: SymMethod.SymMethod(ISymUnmanagedMethod*)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.SymMethod(ISymUnmanagedMethod*)\n- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymMethod.Dispose()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose()\n- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose(System.Boolean)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymMethod.Dispose(Boolean)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.SymMethod.Finalize\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: Finalize()\n  nameWithType: SymMethod.Finalize()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Finalize()\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetNamespace\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetNamespace()\n  nameWithType: SymMethod.GetNamespace()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetNamespace()\n- uid: System.Diagnostics.SymbolStore.ISymbolNamespace\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolNamespace\n  nameWithType: ISymbolNamespace\n  fullName: System.Diagnostics.SymbolStore.ISymbolNamespace\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetOffset(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetOffset(ISymbolDocument,Int32,Int32)\n  nameWithType: SymMethod.GetOffset(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetOffset(ISymbolDocument,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetParameters\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetParameters()\n  nameWithType: SymMethod.GetParameters()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetParameters()\n- uid: System.Diagnostics.SymbolStore.ISymbolVariable\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolVariable\n  nameWithType: ISymbolVariable\n  fullName: System.Diagnostics.SymbolStore.ISymbolVariable[]\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetRanges(System.Diagnostics.SymbolStore.ISymbolDocument,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetRanges(ISymbolDocument,Int32,Int32)\n  nameWithType: SymMethod.GetRanges(ISymbolDocument,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetRanges(ISymbolDocument,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetScope(Int32)\n  nameWithType: SymMethod.GetScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetScope(Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(System.Int32[],System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSequencePoints(Int32[],ISymbolDocument[],Int32[],Int32[],Int32[],Int32[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(System.Diagnostics.SymbolStore.ISymbolDocument[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  nameWithType: SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.SymMethod.GetSourceStartEnd(ISymbolDocument[],Int32[],Int32[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.ISymbolDocument\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocument\n  nameWithType: ISymbolDocument\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocument[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.SymMethod.RootScope\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: RootScope\n  nameWithType: SymMethod.RootScope\n  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScope\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: RootScopeInternal()\n  nameWithType: SymMethod.RootScopeInternal()\n  fullName: System.Diagnostics.SymbolStore.SymMethod.RootScopeInternal()\n- uid: System.Diagnostics.SymbolStore.ISymbolScope\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolScope\n  nameWithType: ISymbolScope\n  fullName: System.Diagnostics.SymbolStore.ISymbolScope\n- uid: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: SequencePointCount\n  nameWithType: SymMethod.SequencePointCount\n  fullName: System.Diagnostics.SymbolStore.SymMethod.SequencePointCount\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymMethod.Token\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  name: Token\n  nameWithType: SymMethod.Token\n  fullName: System.Diagnostics.SymbolStore.SymMethod.Token\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.SymMethod.Dispose*\n  parent: System.Diagnostics.SymbolStore.SymMethod\n  isExternal: false\n  nameWithType: SymMethod.\n"}