{"nodes":[{"pos":[709,723],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[1197,1202],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[1545,1579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1800,1814],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2144,2178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2237,2271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2598,2620],"content":"Equals(ParameterToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ParameterToken)","pos":[0,22]}]},{"pos":[3012,3046],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3105,3139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3398,3411],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3733,3767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4122,4164],"content":"op_Equality(ParameterToken,ParameterToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ParameterToken,ParameterToken)","pos":[0,42]}]},{"pos":[4647,4681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4763,4797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4856,4890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5249,5293],"content":"op_Inequality(ParameterToken,ParameterToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ParameterToken,ParameterToken)","pos":[0,44]}]},{"pos":[5782,5816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5898,5932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5991,6025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6214,6219],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[6498,6532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6646,6662],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6790,6795],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6995,7009],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[7234,7248],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7427,7434],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7552,7558],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7775,7797],"content":"Equals(ParameterToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ParameterToken)","pos":[0,22]}]},{"pos":[7992,7999],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8157,8171],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[8386,8399],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8574,8579],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8837,8879],"content":"op_Equality(ParameterToken,ParameterToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ParameterToken,ParameterToken)","pos":[0,42]}]},{"pos":[9114,9121],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9279,9293],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[9481,9495],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[9789,9833],"content":"op_Inequality(ParameterToken,ParameterToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ParameterToken,ParameterToken)","pos":[0,44]}]},{"pos":[10072,10079],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10237,10251],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[10439,10453],"content":"ParameterToken","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterToken","pos":[0,14]}]},{"pos":[10662,10667],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[10826,10831],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.ParameterToken\n  id: ParameterToken\n  children:\n  - System.Reflection.Emit.ParameterToken.Empty\n  - System.Reflection.Emit.ParameterToken.Equals(System.Object)\n  - System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)\n  - System.Reflection.Emit.ParameterToken.GetHashCode\n  - System.Reflection.Emit.ParameterToken.op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  - System.Reflection.Emit.ParameterToken.op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  - System.Reflection.Emit.ParameterToken.Token\n  langs:\n  - csharp\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct ParameterToken\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.Empty\n  id: Empty\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: ParameterToken.Empty\n  fullName: System.Reflection.Emit.ParameterToken.Empty\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static readonly System.Reflection.Emit.ParameterToken Empty;\n    return:\n      type: System.Reflection.Emit.ParameterToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ParameterToken.Equals(Object)\n  fullName: System.Reflection.Emit.ParameterToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ParameterToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)\n  id: Equals(System.Reflection.Emit.ParameterToken)\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: Equals(ParameterToken)\n  nameWithType: ParameterToken.Equals(ParameterToken)\n  fullName: System.Reflection.Emit.ParameterToken.Equals(ParameterToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.ParameterToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.ParameterToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ParameterToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ParameterToken.GetHashCode()\n  fullName: System.Reflection.Emit.ParameterToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  id: op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: op_Equality(ParameterToken,ParameterToken)\n  nameWithType: ParameterToken.op_Equality(ParameterToken,ParameterToken)\n  fullName: System.Reflection.Emit.ParameterToken.op_Equality(ParameterToken,ParameterToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.ParameterToken a, System.Reflection.Emit.ParameterToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.ParameterToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.ParameterToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  id: op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: op_Inequality(ParameterToken,ParameterToken)\n  nameWithType: ParameterToken.op_Inequality(ParameterToken,ParameterToken)\n  fullName: System.Reflection.Emit.ParameterToken.op_Inequality(ParameterToken,ParameterToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.ParameterToken a, System.Reflection.Emit.ParameterToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.ParameterToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.ParameterToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ParameterToken.Token\n  id: Token\n  parent: System.Reflection.Emit.ParameterToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: ParameterToken.Token\n  fullName: System.Reflection.Emit.ParameterToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.ParameterToken.Empty\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: Empty\n  nameWithType: ParameterToken.Empty\n  fullName: System.Reflection.Emit.ParameterToken.Empty\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterToken.Equals(System.Object)\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ParameterToken.Equals(Object)\n  fullName: System.Reflection.Emit.ParameterToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.ParameterToken.Equals(System.Reflection.Emit.ParameterToken)\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: Equals(ParameterToken)\n  nameWithType: ParameterToken.Equals(ParameterToken)\n  fullName: System.Reflection.Emit.ParameterToken.Equals(ParameterToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterToken.GetHashCode\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ParameterToken.GetHashCode()\n  fullName: System.Reflection.Emit.ParameterToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ParameterToken.op_Equality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: op_Equality(ParameterToken,ParameterToken)\n  nameWithType: ParameterToken.op_Equality(ParameterToken,ParameterToken)\n  fullName: System.Reflection.Emit.ParameterToken.op_Equality(ParameterToken,ParameterToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterToken.op_Inequality(System.Reflection.Emit.ParameterToken,System.Reflection.Emit.ParameterToken)\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: op_Inequality(ParameterToken,ParameterToken)\n  nameWithType: ParameterToken.op_Inequality(ParameterToken,ParameterToken)\n  fullName: System.Reflection.Emit.ParameterToken.op_Inequality(ParameterToken,ParameterToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: ParameterToken\n  nameWithType: ParameterToken\n  fullName: System.Reflection.Emit.ParameterToken\n- uid: System.Reflection.Emit.ParameterToken.Token\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  name: Token\n  nameWithType: ParameterToken.Token\n  fullName: System.Reflection.Emit.ParameterToken.Token\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ParameterToken.Equals*\n  parent: System.Reflection.Emit.ParameterToken\n  isExternal: false\n  nameWithType: ParameterToken.\n"}