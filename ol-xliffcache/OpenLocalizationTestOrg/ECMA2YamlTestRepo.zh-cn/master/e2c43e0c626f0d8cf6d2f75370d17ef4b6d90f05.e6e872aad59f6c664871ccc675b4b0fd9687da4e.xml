{"nodes":[{"pos":[1322,1330],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[1824,1844],"content":"AddrOfPinnedObject()","needQuote":true,"needEscape":true,"nodes":[{"content":"AddrOfPinnedObject()","pos":[0,20]}]},{"pos":[2186,2220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2443,2456],"content":"Alloc(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Alloc(Object)","pos":[0,13]}]},{"pos":[2824,2858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2942,2976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3346,3372],"content":"Alloc(Object,GCHandleType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Alloc(Object,GCHandleType)","pos":[0,26]}]},{"pos":[3816,3850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3941,3975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4059,4093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4377,4391],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4721,4755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4814,4848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5039,5045],"content":"Free()","needQuote":true,"needEscape":true,"nodes":[{"content":"Free()","pos":[0,6]}]},{"pos":[5518,5536],"content":"FromIntPtr(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromIntPtr(IntPtr)","pos":[0,18]}]},{"pos":[5919,5953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6037,6071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6276,6289],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6615,6649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6854,6865],"content":"IsAllocated","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAllocated","pos":[0,11]}]},{"pos":[7169,7203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7570,7600],"content":"op_Equality(GCHandle,GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(GCHandle,GCHandle)","pos":[0,30]}]},{"pos":[8069,8103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8187,8221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8280,8314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8635,8654],"content":"op_Explicit(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Explicit(IntPtr)","pos":[0,19]}]},{"pos":[9042,9076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9160,9194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9515,9536],"content":"op_Explicit(GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Explicit(GCHandle)","pos":[0,21]}]},{"pos":[9954,9988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10046,10080],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10451,10483],"content":"op_Inequality(GCHandle,GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(GCHandle,GCHandle)","pos":[0,32]}]},{"pos":[10958,10992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11076,11110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11169,11203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11398,11404],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[11699,11733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12014,12032],"content":"ToIntPtr(GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToIntPtr(GCHandle)","pos":[0,18]}]},{"pos":[12439,12473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12531,12565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12679,12695],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[12840,12860],"content":"AddrOfPinnedObject()","needQuote":true,"needEscape":true,"nodes":[{"content":"AddrOfPinnedObject()","pos":[0,20]}]},{"pos":[13046,13052],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[13248,13261],"content":"Alloc(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Alloc(Object)","pos":[0,13]}]},{"pos":[13483,13491],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[13635,13641],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13881,13907],"content":"Alloc(Object,GCHandleType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Alloc(Object,GCHandleType)","pos":[0,26]}]},{"pos":[14155,14163],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[14307,14313],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14483,14495],"content":"GCHandleType","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandleType","pos":[0,12]}]},{"pos":[14728,14742],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14917,14924],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15042,15048],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15228,15234],"content":"Free()","needQuote":true,"needEscape":true,"nodes":[{"content":"Free()","pos":[0,6]}]},{"pos":[15477,15495],"content":"FromIntPtr(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromIntPtr(IntPtr)","pos":[0,18]}]},{"pos":[15727,15735],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[15879,15885],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[16072,16085],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16256,16261],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16446,16457],"content":"IsAllocated","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAllocated","pos":[0,11]}]},{"pos":[16626,16633],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16903,16933],"content":"op_Equality(GCHandle,GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(GCHandle,GCHandle)","pos":[0,30]}]},{"pos":[17140,17147],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17315,17323],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[17517,17525],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[17798,17817],"content":"op_Explicit(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Explicit(IntPtr)","pos":[0,19]}]},{"pos":[18051,18059],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[18203,18209],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[18454,18475],"content":"op_Explicit(GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Explicit(GCHandle)","pos":[0,21]}]},{"pos":[18663,18669],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[18835,18843],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[19141,19173],"content":"op_Inequality(GCHandle,GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(GCHandle,GCHandle)","pos":[0,32]}]},{"pos":[19384,19391],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19559,19567],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[19761,19769],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]},{"pos":[19979,19985],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[20143,20149],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[20374,20392],"content":"ToIntPtr(GCHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToIntPtr(GCHandle)","pos":[0,18]}]},{"pos":[20574,20580],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[20746,20754],"content":"GCHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"GCHandle","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.GCHandle\n  id: GCHandle\n  children:\n  - System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  - System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  - System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  - System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  - System.Runtime.InteropServices.GCHandle.Free\n  - System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  - System.Runtime.InteropServices.GCHandle.GetHashCode\n  - System.Runtime.InteropServices.GCHandle.IsAllocated\n  - System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  - System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  - System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  - System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  - System.Runtime.InteropServices.GCHandle.Target\n  - System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  langs:\n  - csharp\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct GCHandle\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  id: AddrOfPinnedObject\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: AddrOfPinnedObject()\n  nameWithType: GCHandle.AddrOfPinnedObject()\n  fullName: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public IntPtr AddrOfPinnedObject ();\n    parameters: []\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  id: Alloc(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Alloc(Object)\n  nameWithType: GCHandle.Alloc(Object)\n  fullName: System.Runtime.InteropServices.GCHandle.Alloc(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle Alloc (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n  overload: System.Runtime.InteropServices.GCHandle.Alloc*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  id: Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Alloc(Object,GCHandleType)\n  nameWithType: GCHandle.Alloc(Object,GCHandleType)\n  fullName: System.Runtime.InteropServices.GCHandle.Alloc(Object,GCHandleType)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle Alloc (object value, System.Runtime.InteropServices.GCHandleType type);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: type\n      type: System.Runtime.InteropServices.GCHandleType\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n  overload: System.Runtime.InteropServices.GCHandle.Alloc*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: GCHandle.Equals(Object)\n  fullName: System.Runtime.InteropServices.GCHandle.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.Free\n  id: Free\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Free()\n  nameWithType: GCHandle.Free()\n  fullName: System.Runtime.InteropServices.GCHandle.Free()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public void Free ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  id: FromIntPtr(System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: FromIntPtr(IntPtr)\n  nameWithType: GCHandle.FromIntPtr(IntPtr)\n  fullName: System.Runtime.InteropServices.GCHandle.FromIntPtr(IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle FromIntPtr (IntPtr value);\n    parameters:\n    - id: value\n      type: System.IntPtr\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.GetHashCode\n  id: GetHashCode\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: GCHandle.GetHashCode()\n  fullName: System.Runtime.InteropServices.GCHandle.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.IsAllocated\n  id: IsAllocated\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: IsAllocated\n  nameWithType: GCHandle.IsAllocated\n  fullName: System.Runtime.InteropServices.GCHandle.IsAllocated\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public bool IsAllocated { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  id: op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Equality(GCHandle,GCHandle)\n  nameWithType: GCHandle.op_Equality(GCHandle,GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Equality(GCHandle,GCHandle)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool op_Equality (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);\n    parameters:\n    - id: a\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n    - id: b\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  id: op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Explicit(IntPtr)\n  nameWithType: GCHandle.op_Explicit(IntPtr)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Explicit(IntPtr)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static System.Runtime.InteropServices.GCHandle op_Explicit (IntPtr value);\n    parameters:\n    - id: value\n      type: System.IntPtr\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  id: op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Explicit(GCHandle)\n  nameWithType: GCHandle.op_Explicit(GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Explicit(GCHandle)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static IntPtr op_Explicit (System.Runtime.InteropServices.GCHandle value);\n    parameters:\n    - id: value\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  id: op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: op_Inequality(GCHandle,GCHandle)\n  nameWithType: GCHandle.op_Inequality(GCHandle,GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Inequality(GCHandle,GCHandle)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static bool op_Inequality (System.Runtime.InteropServices.GCHandle a, System.Runtime.InteropServices.GCHandle b);\n    parameters:\n    - id: a\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n    - id: b\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.Target\n  id: Target\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: Target\n  nameWithType: GCHandle.Target\n  fullName: System.Runtime.InteropServices.GCHandle.Target\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public object Target { get; set; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  id: ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  langs:\n  - csharp\n  name: ToIntPtr(GCHandle)\n  nameWithType: GCHandle.ToIntPtr(GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.ToIntPtr(GCHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  syntax:\n    content: public static IntPtr ToIntPtr (System.Runtime.InteropServices.GCHandle value);\n    parameters:\n    - id: value\n      type: System.Runtime.InteropServices.GCHandle\n      description: Parameter description to be filled\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: AddrOfPinnedObject()\n  nameWithType: GCHandle.AddrOfPinnedObject()\n  fullName: System.Runtime.InteropServices.GCHandle.AddrOfPinnedObject()\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Alloc(Object)\n  nameWithType: GCHandle.Alloc(Object)\n  fullName: System.Runtime.InteropServices.GCHandle.Alloc(Object)\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.GCHandle.Alloc(System.Object,System.Runtime.InteropServices.GCHandleType)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Alloc(Object,GCHandleType)\n  nameWithType: GCHandle.Alloc(Object,GCHandleType)\n  fullName: System.Runtime.InteropServices.GCHandle.Alloc(Object,GCHandleType)\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.GCHandleType\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandleType\n  nameWithType: GCHandleType\n  fullName: System.Runtime.InteropServices.GCHandleType\n- uid: System.Runtime.InteropServices.GCHandle.Equals(System.Object)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: GCHandle.Equals(Object)\n  fullName: System.Runtime.InteropServices.GCHandle.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.GCHandle.Free\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Free()\n  nameWithType: GCHandle.Free()\n  fullName: System.Runtime.InteropServices.GCHandle.Free()\n- uid: System.Runtime.InteropServices.GCHandle.FromIntPtr(System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: FromIntPtr(IntPtr)\n  nameWithType: GCHandle.FromIntPtr(IntPtr)\n  fullName: System.Runtime.InteropServices.GCHandle.FromIntPtr(IntPtr)\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.GCHandle.GetHashCode\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: GCHandle.GetHashCode()\n  fullName: System.Runtime.InteropServices.GCHandle.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.GCHandle.IsAllocated\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: IsAllocated\n  nameWithType: GCHandle.IsAllocated\n  fullName: System.Runtime.InteropServices.GCHandle.IsAllocated\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.GCHandle.op_Equality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Equality(GCHandle,GCHandle)\n  nameWithType: GCHandle.op_Equality(GCHandle,GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Equality(GCHandle,GCHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.IntPtr to System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Explicit(IntPtr)\n  nameWithType: GCHandle.op_Explicit(IntPtr)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Explicit(IntPtr)\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.GCHandle.op_Explicit(System.Runtime.InteropServices.GCHandle to System.IntPtr)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Explicit(GCHandle)\n  nameWithType: GCHandle.op_Explicit(GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Explicit(GCHandle)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Runtime.InteropServices.GCHandle.op_Inequality(System.Runtime.InteropServices.GCHandle,System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: op_Inequality(GCHandle,GCHandle)\n  nameWithType: GCHandle.op_Inequality(GCHandle,GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.op_Inequality(GCHandle,GCHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Runtime.InteropServices.GCHandle.Target\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: Target\n  nameWithType: GCHandle.Target\n  fullName: System.Runtime.InteropServices.GCHandle.Target\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.InteropServices.GCHandle.ToIntPtr(System.Runtime.InteropServices.GCHandle)\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  name: ToIntPtr(GCHandle)\n  nameWithType: GCHandle.ToIntPtr(GCHandle)\n  fullName: System.Runtime.InteropServices.GCHandle.ToIntPtr(GCHandle)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Runtime.InteropServices.GCHandle\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: GCHandle\n  nameWithType: GCHandle\n  fullName: System.Runtime.InteropServices.GCHandle\n- uid: System.Runtime.InteropServices.GCHandle.Alloc*\n  parent: System.Runtime.InteropServices.GCHandle\n  isExternal: false\n  nameWithType: GCHandle.\n"}