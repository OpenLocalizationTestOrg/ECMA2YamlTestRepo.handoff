{"nodes":[{"pos":[616,629],"content":"ExpandSegment","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegment","pos":[0,13]}]},{"pos":[1495,1527],"content":"ExpandSegment(String,Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegment(String,Expression)","pos":[0,32]}]},{"pos":[1942,1976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2060,2094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2299,2315],"content":"ExpandedProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandedProperty","pos":[0,16]}]},{"pos":[2712,2746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2931,2937],"content":"Filter","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter","pos":[0,6]}]},{"pos":[3278,3312],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3503,3512],"content":"HasFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"HasFilter","pos":[0,9]}]},{"pos":[3812,3846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4055,4073],"content":"MaxResultsExpected","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxResultsExpected","pos":[0,18]}]},{"pos":[4397,4431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4612,4616],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[4902,4936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5287,5328],"content":"PathHasFilter(IEnumerable<ph id=\"ph1\">&lt;ExpandSegment&gt;</ph>)","needQuote":true,"needEscape":true,"source":"PathHasFilter(IEnumerable<ExpandSegment>)"},{"pos":[5854,5888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5947,5981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6092,6105],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6277,6309],"content":"ExpandSegment(String,Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegment(String,Expression)","pos":[0,32]}]},{"pos":[6519,6525],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6679,6689],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[6896,6912],"content":"ExpandedProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandedProperty","pos":[0,16]}]},{"pos":[7148,7164],"content":"ResourceProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ResourceProperty","pos":[0,16]}]},{"pos":[7380,7386],"content":"Filter","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter","pos":[0,6]}]},{"pos":[7582,7592],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]},{"pos":[7792,7801],"content":"HasFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"HasFilter","pos":[0,9]}]},{"pos":[7966,7973],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8159,8177],"content":"MaxResultsExpected","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxResultsExpected","pos":[0,18]}]},{"pos":[8358,8363],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8531,8535],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[8689,8695],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8950,8991],"content":"PathHasFilter(IEnumerable<ph id=\"ph1\">&lt;ExpandSegment&gt;</ph>)","needQuote":true,"needEscape":true,"source":"PathHasFilter(IEnumerable<ExpandSegment>)"},{"pos":[9220,9227],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9426,9452],"content":"IEnumerable<ph id=\"ph1\">&lt;ExpandSegment&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<ExpandSegment>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.ExpandSegment\n  id: ExpandSegment\n  children:\n  - System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)\n  - System.Data.Services.ExpandSegment.ExpandedProperty\n  - System.Data.Services.ExpandSegment.Filter\n  - System.Data.Services.ExpandSegment.HasFilter\n  - System.Data.Services.ExpandSegment.MaxResultsExpected\n  - System.Data.Services.ExpandSegment.Name\n  - System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  langs:\n  - csharp\n  name: ExpandSegment\n  nameWithType: ExpandSegment\n  fullName: System.Data.Services.ExpandSegment\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"ExpandSegment ({name},Filter={filter})]\")]\n\n      public class ExpandSegment\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)\n  id: '#ctor(System.String,System.Linq.Expressions.Expression)'\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: ExpandSegment(String,Expression)\n  nameWithType: ExpandSegment.ExpandSegment(String,Expression)\n  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public ExpandSegment (string name, System.Linq.Expressions.Expression filter);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: filter\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.ExpandedProperty\n  id: ExpandedProperty\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: ExpandedProperty\n  nameWithType: ExpandSegment.ExpandedProperty\n  fullName: System.Data.Services.ExpandSegment.ExpandedProperty\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public System.Data.Services.Providers.ResourceProperty ExpandedProperty { get; }\n    return:\n      type: System.Data.Services.Providers.ResourceProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.Filter\n  id: Filter\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: Filter\n  nameWithType: ExpandSegment.Filter\n  fullName: System.Data.Services.ExpandSegment.Filter\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public System.Linq.Expressions.Expression Filter { get; }\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.HasFilter\n  id: HasFilter\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: HasFilter\n  nameWithType: ExpandSegment.HasFilter\n  fullName: System.Data.Services.ExpandSegment.HasFilter\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public bool HasFilter { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.MaxResultsExpected\n  id: MaxResultsExpected\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: MaxResultsExpected\n  nameWithType: ExpandSegment.MaxResultsExpected\n  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public int MaxResultsExpected { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.Name\n  id: Name\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: Name\n  nameWithType: ExpandSegment.Name\n  fullName: System.Data.Services.ExpandSegment.Name\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  id: PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  parent: System.Data.Services.ExpandSegment\n  langs:\n  - csharp\n  name: PathHasFilter(IEnumerable<ExpandSegment>)\n  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n  type: Method\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public static bool PathHasFilter (System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment> path);\n    parameters:\n    - id: path\n      type: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Services.ExpandSegment.#ctor(System.String,System.Linq.Expressions.Expression)\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: ExpandSegment(String,Expression)\n  nameWithType: ExpandSegment.ExpandSegment(String,Expression)\n  fullName: System.Data.Services.ExpandSegment.ExpandSegment(String,Expression)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Data.Services.ExpandSegment.ExpandedProperty\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: ExpandedProperty\n  nameWithType: ExpandSegment.ExpandedProperty\n  fullName: System.Data.Services.ExpandSegment.ExpandedProperty\n- uid: System.Data.Services.Providers.ResourceProperty\n  parent: System.Data.Services.Providers\n  isExternal: false\n  name: ResourceProperty\n  nameWithType: ResourceProperty\n  fullName: System.Data.Services.Providers.ResourceProperty\n- uid: System.Data.Services.ExpandSegment.Filter\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: Filter\n  nameWithType: ExpandSegment.Filter\n  fullName: System.Data.Services.ExpandSegment.Filter\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Data.Services.ExpandSegment.HasFilter\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: HasFilter\n  nameWithType: ExpandSegment.HasFilter\n  fullName: System.Data.Services.ExpandSegment.HasFilter\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Services.ExpandSegment.MaxResultsExpected\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: MaxResultsExpected\n  nameWithType: ExpandSegment.MaxResultsExpected\n  fullName: System.Data.Services.ExpandSegment.MaxResultsExpected\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Services.ExpandSegment.Name\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: Name\n  nameWithType: ExpandSegment.Name\n  fullName: System.Data.Services.ExpandSegment.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Services.ExpandSegment.PathHasFilter(System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment})\n  parent: System.Data.Services.ExpandSegment\n  isExternal: false\n  name: PathHasFilter(IEnumerable<ExpandSegment>)\n  nameWithType: ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n  fullName: System.Data.Services.ExpandSegment.PathHasFilter(IEnumerable<ExpandSegment>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable{System.Data.Services.ExpandSegment}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<ExpandSegment>\n  nameWithType: IEnumerable<ExpandSegment>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Services.ExpandSegment>\n"}