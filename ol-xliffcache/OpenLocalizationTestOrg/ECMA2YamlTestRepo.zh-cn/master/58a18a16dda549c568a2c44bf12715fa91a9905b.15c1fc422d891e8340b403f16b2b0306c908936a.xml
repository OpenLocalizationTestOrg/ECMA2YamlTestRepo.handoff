{"nodes":[{"pos":[657,682],"content":"InkCanvasGestureEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"InkCanvasGestureEventArgs","pos":[0,25]}]},{"pos":[2025,2106],"content":"InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<ph id=\"ph1\">&lt;GestureRecognitionResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)"},{"pos":[2787,2821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2973,3007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3222,3228],"content":"Cancel","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel","pos":[0,6]}]},{"pos":[3555,3589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3848,3878],"content":"GetGestureRecognitionResults()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGestureRecognitionResults()","pos":[0,30]}]},{"pos":[4452,4486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4787,4822],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[5294,5328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5398,5432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5649,5656],"content":"Strokes","needQuote":true,"needEscape":true,"nodes":[{"content":"Strokes","pos":[0,7]}]},{"pos":[6033,6067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6195,6225],"content":"System.Windows.RoutedEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.RoutedEventArgs","pos":[0,30]}]},{"pos":[6498,6579],"content":"InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<ph id=\"ph1\">&lt;GestureRecognitionResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)"},{"pos":[6948,6964],"content":"StrokeCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeCollection","pos":[0,16]}]},{"pos":[7202,7239],"content":"IEnumerable<ph id=\"ph1\">&lt;GestureRecognitionResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<GestureRecognitionResult>"},{"pos":[7542,7548],"content":"Cancel","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel","pos":[0,6]}]},{"pos":[7734,7741],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7967,7997],"content":"GetGestureRecognitionResults()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetGestureRecognitionResults()","pos":[0,30]}]},{"pos":[8335,8379],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;GestureRecognitionResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<GestureRecognitionResult>"},{"pos":[8743,8778],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[9023,9031],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[9151,9157],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9360,9367],"content":"Strokes","needQuote":true,"needEscape":true,"nodes":[{"content":"Strokes","pos":[0,7]}]},{"pos":[9588,9604],"content":"StrokeCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeCollection","pos":[0,16]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs\n  id: InkCanvasGestureEventArgs\n  children:\n  - System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})\n  - System.Windows.Controls.InkCanvasGestureEventArgs.Cancel\n  - System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults\n  - System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Controls.InkCanvasGestureEventArgs.Strokes\n  langs:\n  - csharp\n  name: InkCanvasGestureEventArgs\n  nameWithType: InkCanvasGestureEventArgs\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs\n  type: Class\n  syntax:\n    content: 'public class InkCanvasGestureEventArgs : System.Windows.RoutedEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})\n  id: '#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})'\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  langs:\n  - csharp\n  name: InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)\n  nameWithType: InkCanvasGestureEventArgs.InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  syntax:\n    content: public InkCanvasGestureEventArgs (System.Windows.Ink.StrokeCollection strokes, System.Collections.Generic.IEnumerable<System.Windows.Ink.GestureRecognitionResult> gestureRecognitionResults);\n    parameters:\n    - id: strokes\n      type: System.Windows.Ink.StrokeCollection\n      description: Parameter description to be filled\n    - id: gestureRecognitionResults\n      type: System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.Cancel\n  id: Cancel\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  langs:\n  - csharp\n  name: Cancel\n  nameWithType: InkCanvasGestureEventArgs.Cancel\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.Cancel\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  syntax:\n    content: public bool Cancel { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults\n  id: GetGestureRecognitionResults\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  langs:\n  - csharp\n  name: GetGestureRecognitionResults()\n  nameWithType: InkCanvasGestureEventArgs.GetGestureRecognitionResults()\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult> GetGestureRecognitionResults ();\n    parameters: []\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.GestureRecognitionResult}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: InkCanvasGestureEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: genericTarget\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.Strokes\n  id: Strokes\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  langs:\n  - csharp\n  name: Strokes\n  nameWithType: InkCanvasGestureEventArgs.Strokes\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.Strokes\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Controls\n  syntax:\n    content: public System.Windows.Ink.StrokeCollection Strokes { get; }\n    return:\n      type: System.Windows.Ink.StrokeCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.RoutedEventArgs\n  isExternal: false\n  name: System.Windows.RoutedEventArgs\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.#ctor(System.Windows.Ink.StrokeCollection,System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult})\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  isExternal: false\n  name: InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)\n  nameWithType: InkCanvasGestureEventArgs.InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.InkCanvasGestureEventArgs(StrokeCollection,IEnumerable<GestureRecognitionResult>)\n- uid: System.Windows.Ink.StrokeCollection\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Ink.GestureRecognitionResult}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<GestureRecognitionResult>\n  nameWithType: IEnumerable<GestureRecognitionResult>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Ink.GestureRecognitionResult>\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.Cancel\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  isExternal: false\n  name: Cancel\n  nameWithType: InkCanvasGestureEventArgs.Cancel\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.Cancel\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  isExternal: false\n  name: GetGestureRecognitionResults()\n  nameWithType: InkCanvasGestureEventArgs.GetGestureRecognitionResults()\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.GetGestureRecognitionResults()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Windows.Ink.GestureRecognitionResult}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<GestureRecognitionResult>\n  nameWithType: ReadOnlyCollection<GestureRecognitionResult>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Windows.Ink.GestureRecognitionResult>\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: InkCanvasGestureEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Controls.InkCanvasGestureEventArgs.Strokes\n  parent: System.Windows.Controls.InkCanvasGestureEventArgs\n  isExternal: false\n  name: Strokes\n  nameWithType: InkCanvasGestureEventArgs.Strokes\n  fullName: System.Windows.Controls.InkCanvasGestureEventArgs.Strokes\n- uid: System.Windows.Ink.StrokeCollection\n  parent: System.Windows.Ink\n  isExternal: false\n  name: StrokeCollection\n  nameWithType: StrokeCollection\n  fullName: System.Windows.Ink.StrokeCollection\n"}