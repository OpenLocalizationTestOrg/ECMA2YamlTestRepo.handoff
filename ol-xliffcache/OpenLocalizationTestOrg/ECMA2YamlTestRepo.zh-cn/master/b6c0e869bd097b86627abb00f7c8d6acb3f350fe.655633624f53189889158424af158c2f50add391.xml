{"nodes":[{"pos":[3383,3426],"content":"ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator<TValue>"},{"pos":[3794,3828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4494,4531],"content":"ConstContainerBidirectionalIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator()","pos":[0,37]}]},{"pos":[5351,5423],"content":"ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)","pos":[0,72]}]},{"pos":[6106,6140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6527,6594],"content":"ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)","pos":[0,67]}]},{"pos":[7257,7291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7632,7682],"content":"ConstContainerBidirectionalIterator(INode<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator(INode<TValue>)"},{"pos":[8269,8303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8558,8565],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8966,9000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9263,9274],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[9687,9721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10122,10167],"content":"equal_to(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ConstContainerBidirectionalIterator)","pos":[0,45]}]},{"pos":[10769,10803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10862,10896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11352,11384],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[11936,11970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12029,12063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12409,12415],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[13156,13202],"content":"op_Assign(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ConstContainerBidirectionalIterator)","pos":[0,46]}]},{"pos":[13873,13907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14020,14054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14447,14488],"content":"op_Assign(ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ContainerBidirectionalIterator)","pos":[0,41]}]},{"pos":[15139,15173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15286,15320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15735,15792],"content":"op_Decrement(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstContainerBidirectionalIterator<TValue>)"},{"pos":[16480,16514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16622,16656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17097,17160],"content":"op_Decrement(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)"},{"pos":[17869,17903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17962,17996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18104,18138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18545,18593],"content":"op_Equality(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConstContainerBidirectionalIterator)","pos":[0,48]}]},{"pos":[19206,19240],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19299,19333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19702,19737],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[20292,20326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20385,20419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20686,20697],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[21207,21241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21656,21713],"content":"op_Increment(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstContainerBidirectionalIterator<TValue>)"},{"pos":[22401,22435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22543,22577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23018,23081],"content":"op_Increment(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)"},{"pos":[23790,23824],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23883,23917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24025,24059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24470,24520],"content":"op_Inequality(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConstContainerBidirectionalIterator)","pos":[0,50]}]},{"pos":[25139,25173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25232,25266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25639,25676],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[26237,26271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26330,26364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26785,26840],"content":"op_MemberSelection(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ConstContainerBidirectionalIterator)","pos":[0,55]}]},{"pos":[27481,27515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27567,27601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28028,28086],"content":"op_PointerDereference(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ConstContainerBidirectionalIterator)","pos":[0,58]}]},{"pos":[28736,28770],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28822,28856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29109,29115],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[29708,29715],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[30115,30149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30260,30273],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[30467,30504],"content":"ConstContainerBidirectionalIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator()","pos":[0,37]}]},{"pos":[30993,31065],"content":"ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)","pos":[0,72]}]},{"pos":[31507,31542],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[31934,32001],"content":"ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)","pos":[0,67]}]},{"pos":[32428,32458],"content":"ContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerBidirectionalIterator","pos":[0,30]}]},{"pos":[32817,32867],"content":"ConstContainerBidirectionalIterator(INode<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator(INode<TValue>)"},{"pos":[33238,33251],"content":"INode<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"INode<TValue>"},{"pos":[33534,33541],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[33773,33779],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34026,34037],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[34277,34283],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34599,34644],"content":"equal_to(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ConstContainerBidirectionalIterator)","pos":[0,45]}]},{"pos":[34953,34960],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35158,35193],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[35574,35606],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[35889,35896],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36076,36098],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[36398,36404],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[36835,36881],"content":"op_Assign(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ConstContainerBidirectionalIterator)","pos":[0,46]}]},{"pos":[37271,37306],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[37586,37621],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[38017,38058],"content":"op_Assign(ContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ContainerBidirectionalIterator)","pos":[0,41]}]},{"pos":[38438,38473],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[38748,38778],"content":"ContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerBidirectionalIterator","pos":[0,30]}]},{"pos":[39175,39232],"content":"op_Decrement(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstContainerBidirectionalIterator<TValue>)"},{"pos":[39647,39690],"content":"ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator<TValue>"},{"pos":[40126,40189],"content":"op_Decrement(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)"},{"pos":[40616,40659],"content":"ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator<TValue>"},{"pos":[40874,40879],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41196,41244],"content":"op_Equality(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConstContainerBidirectionalIterator)","pos":[0,48]}]},{"pos":[41559,41566],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41764,41799],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[42183,42218],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[42507,42514],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42694,42716],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[43023,43034],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[43344,43374],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[43771,43828],"content":"op_Increment(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstContainerBidirectionalIterator<TValue>)"},{"pos":[44243,44286],"content":"ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator<TValue>"},{"pos":[44722,44785],"content":"op_Increment(ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)"},{"pos":[45212,45255],"content":"ConstContainerBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstContainerBidirectionalIterator<TValue>"},{"pos":[45470,45475],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45794,45844],"content":"op_Inequality(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConstContainerBidirectionalIterator)","pos":[0,50]}]},{"pos":[46163,46170],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46368,46403],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[46789,46826],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[47119,47126],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47306,47328],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[47712,47767],"content":"op_MemberSelection(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ConstContainerBidirectionalIterator)","pos":[0,55]}]},{"pos":[48175,48210],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[48623,48681],"content":"op_PointerDereference(ConstContainerBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ConstContainerBidirectionalIterator)","pos":[0,58]}]},{"pos":[49095,49130],"content":"ConstContainerBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstContainerBidirectionalIterator","pos":[0,35]}]},{"pos":[49456,49462],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[49819,49826],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[50059,50066],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  id: ConstContainerBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ConstContainerBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstContainerBidirectionalIterator(INode<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstContainerBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _Node);\n    parameters:\n    - id: _Node\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: ConstContainerBidirectionalIterator(INode<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.ConstContainerBidirectionalIterator(INode<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.container()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(ConstContainerBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Assign(ContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerBidirectionalIterator\n  nameWithType: ContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Decrement(ConstContainerBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(ConstContainerBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Increment(ConstContainerBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstContainerBidirectionalIterator<TValue>\n  nameWithType: ConstContainerBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(ConstContainerBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_MemberSelection(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference(ConstContainerBidirectionalIterator)\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.op_PointerDereference(ConstContainerBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstContainerBidirectionalIterator\n  nameWithType: ConstContainerBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator<TValue>.valid()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1\n  isExternal: false\n  nameWithType: ConstContainerBidirectionalIterator<TValue>.\n"}