### YamlMime:ManagedReference
items:
- uid: System.AddIn.Pipeline.ContractHandle
  id: ContractHandle
  children:
  - System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)
  - System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)
  - System.AddIn.Pipeline.ContractHandle.Contract
  - System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)
  - System.AddIn.Pipeline.ContractHandle.Dispose
  - System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)
  - System.AddIn.Pipeline.ContractHandle.Finalize
  langs:
  - csharp
  name: ContractHandle
  nameWithType: ContractHandle
  fullName: System.AddIn.Pipeline.ContractHandle
  type: Class
  syntax:
    content: 'public class ContractHandle : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)
  id: '#ctor(System.AddIn.Contract.IContract)'
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: ContractHandle(IContract)
  nameWithType: ContractHandle.ContractHandle(IContract)
  fullName: System.AddIn.Pipeline.ContractHandle.ContractHandle(IContract)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public ContractHandle (System.AddIn.Contract.IContract contract);
    parameters:
    - id: contract
      type: System.AddIn.Contract.IContract
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)
  id: AppDomainOwner(System.AppDomain)
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: AppDomainOwner(AppDomain)
  nameWithType: ContractHandle.AppDomainOwner(AppDomain)
  fullName: System.AddIn.Pipeline.ContractHandle.AppDomainOwner(AppDomain)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public static System.AddIn.Contract.IContract AppDomainOwner (AppDomain domain);
    parameters:
    - id: domain
      type: System.AppDomain
      description: Parameter description to be filled
    return:
      type: System.AddIn.Contract.IContract
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.Contract
  id: Contract
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: Contract
  nameWithType: ContractHandle.Contract
  fullName: System.AddIn.Pipeline.ContractHandle.Contract
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public System.AddIn.Contract.IContract Contract { get; }
    return:
      type: System.AddIn.Contract.IContract
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)
  id: ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: ContractOwnsAppDomain(IContract,AppDomain)
  nameWithType: ContractHandle.ContractOwnsAppDomain(IContract,AppDomain)
  fullName: System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(IContract,AppDomain)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public static bool ContractOwnsAppDomain (System.AddIn.Contract.IContract contract, AppDomain domain);
    parameters:
    - id: contract
      type: System.AddIn.Contract.IContract
      description: Parameter description to be filled
    - id: domain
      type: System.AppDomain
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.Dispose
  id: Dispose
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: Dispose()
  nameWithType: ContractHandle.Dispose()
  fullName: System.AddIn.Pipeline.ContractHandle.Dispose()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.AddIn.Pipeline.ContractHandle.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ContractHandle.Dispose(Boolean)
  fullName: System.AddIn.Pipeline.ContractHandle.Dispose(Boolean)
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: Parameter description to be filled
  overload: System.AddIn.Pipeline.ContractHandle.Dispose*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.AddIn.Pipeline.ContractHandle.Finalize
  id: Finalize
  parent: System.AddIn.Pipeline.ContractHandle
  langs:
  - csharp
  name: Finalize()
  nameWithType: ContractHandle.Finalize()
  fullName: System.AddIn.Pipeline.ContractHandle.Finalize()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Pipeline
  syntax:
    content: ~ContractHandle ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.AddIn.Pipeline.ContractHandle.#ctor(System.AddIn.Contract.IContract)
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: ContractHandle(IContract)
  nameWithType: ContractHandle.ContractHandle(IContract)
  fullName: System.AddIn.Pipeline.ContractHandle.ContractHandle(IContract)
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.AddIn.Pipeline.ContractHandle.AppDomainOwner(System.AppDomain)
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: AppDomainOwner(AppDomain)
  nameWithType: ContractHandle.AppDomainOwner(AppDomain)
  fullName: System.AddIn.Pipeline.ContractHandle.AppDomainOwner(AppDomain)
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Pipeline.ContractHandle.Contract
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: Contract
  nameWithType: ContractHandle.Contract
  fullName: System.AddIn.Pipeline.ContractHandle.Contract
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(System.AddIn.Contract.IContract,System.AppDomain)
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: ContractOwnsAppDomain(IContract,AppDomain)
  nameWithType: ContractHandle.ContractOwnsAppDomain(IContract,AppDomain)
  fullName: System.AddIn.Pipeline.ContractHandle.ContractOwnsAppDomain(IContract,AppDomain)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
- uid: System.AppDomain
  parent: System
  isExternal: false
  name: AppDomain
  nameWithType: AppDomain
  fullName: System.AppDomain
- uid: System.AddIn.Pipeline.ContractHandle.Dispose
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: Dispose()
  nameWithType: ContractHandle.Dispose()
  fullName: System.AddIn.Pipeline.ContractHandle.Dispose()
- uid: System.AddIn.Pipeline.ContractHandle.Dispose(System.Boolean)
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ContractHandle.Dispose(Boolean)
  fullName: System.AddIn.Pipeline.ContractHandle.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Pipeline.ContractHandle.Finalize
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  name: Finalize()
  nameWithType: ContractHandle.Finalize()
  fullName: System.AddIn.Pipeline.ContractHandle.Finalize()
- uid: System.AddIn.Pipeline.ContractHandle.Dispose*
  parent: System.AddIn.Pipeline.ContractHandle
  isExternal: false
  nameWithType: ContractHandle.
