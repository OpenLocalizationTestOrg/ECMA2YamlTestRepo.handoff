{"nodes":[{"pos":[6898,6903],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[7853,7868],"content":"AsReadOnly(T[])","needQuote":true,"needEscape":true,"nodes":[{"content":"AsReadOnly(T[])","pos":[0,15]}]},{"pos":[8194,8228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8324,8358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8567,8593],"content":"BinarySearch(Array,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Object)","pos":[0,26]}]},{"pos":[8916,8950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9012,9046],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9103,9137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9443,9479],"content":"BinarySearch(Array,Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Object,IComparer)","pos":[0,36]}]},{"pos":[9861,9895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9957,9991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10071,10105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10162,10196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10496,10534],"content":"BinarySearch(Array,Int32,Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Int32,Int32,Object)","pos":[0,38]}]},{"pos":[10904,10938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10999,11033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11095,11129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11191,11225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11282,11316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11674,11722],"content":"BinarySearch(Array,Int32,Int32,Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Int32,Int32,Object,IComparer)","pos":[0,48]}]},{"pos":[12151,12185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12246,12280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12342,12376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12438,12472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12552,12586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12643,12677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12897,12916],"content":"BinarySearch(T[],T)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(T[],T)","pos":[0,19]}]},{"pos":[13212,13246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13296,13330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13387,13421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13722,13754],"content":"BinarySearch(T[],T,IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"BinarySearch(T[],T,IComparer<T>)"},{"pos":[14126,14160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14210,14244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14334,14368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14425,14459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14734,14765],"content":"BinarySearch(T[],Int32,Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(T[],Int32,Int32,T)","pos":[0,31]}]},{"pos":[15108,15142],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15203,15237],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15299,15333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15383,15417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15474,15508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15861,15905],"content":"BinarySearch(T[],Int32,Int32,T,IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"BinarySearch(T[],Int32,Int32,T,IComparer<T>)"},{"pos":[16324,16358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16419,16453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16515,16549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16599,16633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16723,16757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16814,16848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17109,17133],"content":"Clear(Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear(Array,Int32,Int32)","pos":[0,24]}]},{"pos":[17455,17489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17550,17584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17646,17680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17819,17826],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[18075,18109],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18400,18446],"content":"ConstrainedCopy(Array,Int32,Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstrainedCopy(Array,Int32,Array,Int32,Int32)","pos":[0,46]}]},{"pos":[18886,18920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18987,19021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19093,19127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19199,19233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19295,19329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19536,19582],"content":"ConvertAll(TInput[],Converter<TInput,TOutput>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertAll(TInput[],Converter&lt;TInput,TOutput&gt;)","pos":[0,46],"source":"ConvertAll(TInput[],Converter<TInput,TOutput>)"}]},{"pos":[19987,20021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20092,20126],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20180,20214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20431,20454],"content":"Copy(Array,Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Array,Int32)","pos":[0,23]}]},{"pos":[20798,20832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20904,20938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21000,21034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21282,21305],"content":"Copy(Array,Array,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Array,Int64)","pos":[0,23]}]},{"pos":[21650,21684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21756,21790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21852,21886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22186,22221],"content":"Copy(Array,Int32,Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Int32,Array,Int32,Int32)","pos":[0,35]}]},{"pos":[22628,22662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22729,22763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22835,22869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22941,22975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23037,23071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23371,23406],"content":"Copy(Array,Int64,Array,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Int64,Array,Int64,Int64)","pos":[0,35]}]},{"pos":[23816,23850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23917,23951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24023,24057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24129,24163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24225,24259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24485,24504],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[24798,24832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24893,24927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25155,25174],"content":"CopyTo(Array,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int64)","pos":[0,19]}]},{"pos":[25469,25503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25564,25598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25840,25866],"content":"CreateInstance(Type,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32)","pos":[0,26]}]},{"pos":[26201,26235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26297,26331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26388,26422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26676,26704],"content":"CreateInstance(Type,Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32[])","pos":[0,28]}]},{"pos":[27046,27080],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27145,27179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27236,27270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27524,27552],"content":"CreateInstance(Type,Int64[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int64[])","pos":[0,28]}]},{"pos":[27895,27929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27994,28028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28085,28119],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28395,28427],"content":"CreateInstance(Type,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32,Int32)","pos":[0,32]}]},{"pos":[28788,28822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28885,28919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28982,29016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29073,29107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29391,29427],"content":"CreateInstance(Type,Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32[],Int32[])","pos":[0,36]}]},{"pos":[29804,29838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29903,29937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30006,30040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30097,30131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30433,30471],"content":"CreateInstance(Type,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32,Int32,Int32)","pos":[0,38]}]},{"pos":[30857,30891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30954,30988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31051,31085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31148,31182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31239,31273],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31459,31466],"content":"Empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[31712,31746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31945,31969],"content":"Exists(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Exists(T[],Predicate<T>)"},{"pos":[32281,32315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32382,32416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32475,32509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32704,32726],"content":"Find(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Find(T[],Predicate<T>)"},{"pos":[33029,33063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33130,33164],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33210,33244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33445,33470],"content":"FindAll(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindAll(T[],Predicate<T>)"},{"pos":[33784,33818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33885,33919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33967,34001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34206,34233],"content":"FindIndex(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindIndex(T[],Predicate<T>)"},{"pos":[34553,34587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34654,34688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34745,34779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35049,35082],"content":"FindIndex(T[],Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindIndex(T[],Int32,Predicate<T>)"},{"pos":[35430,35464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35530,35564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35631,35665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35722,35756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36052,36091],"content":"FindIndex(T[],Int32,Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindIndex(T[],Int32,Int32,Predicate<T>)"},{"pos":[36462,36496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36562,36596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36657,36691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36758,36792],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36849,36883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37125,37151],"content":"FindLast(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLast(T[],Predicate<T>)"},{"pos":[37466,37500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37567,37601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37647,37681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37894,37925],"content":"FindLastIndex(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLastIndex(T[],Predicate<T>)"},{"pos":[38257,38291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38358,38392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38449,38483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38765,38802],"content":"FindLastIndex(T[],Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLastIndex(T[],Int32,Predicate<T>)"},{"pos":[39162,39196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39262,39296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39363,39397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39454,39488],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39796,39839],"content":"FindLastIndex(T[],Int32,Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLastIndex(T[],Int32,Int32,Predicate<T>)"},{"pos":[40222,40256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40322,40356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40417,40451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40518,40552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40609,40643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40881,40903],"content":"ForEach(T[],Action<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(T[],Action<T>)"},{"pos":[41210,41244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41309,41343],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41498,41513],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[41827,41861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42036,42052],"content":"GetLength(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLength(Int32)","pos":[0,16]}]},{"pos":[42337,42371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42428,42462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42645,42665],"content":"GetLongLength(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLongLength(Int32)","pos":[0,20]}]},{"pos":[42963,42997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43054,43088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43271,43291],"content":"GetLowerBound(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLowerBound(Int32)","pos":[0,20]}]},{"pos":[43588,43622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43679,43713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43896,43916],"content":"GetUpperBound(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetUpperBound(Int32)","pos":[0,20]}]},{"pos":[44213,44247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44304,44338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44511,44526],"content":"GetValue(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32)","pos":[0,15]}]},{"pos":[44803,44837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44895,44929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45141,45158],"content":"GetValue(Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32[])","pos":[0,17]}]},{"pos":[45447,45481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45539,45573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45781,45796],"content":"GetValue(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64)","pos":[0,15]}]},{"pos":[46074,46108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46166,46200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46412,46429],"content":"GetValue(Int64[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64[])","pos":[0,17]}]},{"pos":[46719,46753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46811,46845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47079,47100],"content":"GetValue(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32,Int32)","pos":[0,21]}]},{"pos":[47403,47437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47499,47533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47591,47625],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47859,47880],"content":"GetValue(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64,Int64)","pos":[0,21]}]},{"pos":[48185,48219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48281,48315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48373,48407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48667,48694],"content":"GetValue(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32,Int32,Int32)","pos":[0,27]}]},{"pos":[49021,49055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49117,49151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49213,49247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49305,49339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49599,49626],"content":"GetValue(Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64,Int64,Int64)","pos":[0,27]}]},{"pos":[49956,49990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50052,50086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50148,50182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50240,50274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50508,50529],"content":"IndexOf(Array,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Array,Object)","pos":[0,21]}]},{"pos":[50837,50871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50933,50967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51024,51058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51317,51344],"content":"IndexOf(Array,Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Array,Object,Int32)","pos":[0,27]}]},{"pos":[51680,51714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51776,51810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51876,51910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51967,52001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52286,52319],"content":"IndexOf(Array,Object,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Array,Object,Int32,Int32)","pos":[0,33]}]},{"pos":[52678,52712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52774,52808],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52874,52908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52969,53003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53060,53094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53299,53313],"content":"IndexOf(T[],T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T[],T)","pos":[0,14]}]},{"pos":[53594,53628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53678,53712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53769,53803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54037,54057],"content":"IndexOf(T[],T,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T[],T,Int32)","pos":[0,20]}]},{"pos":[54366,54400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54450,54484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54550,54584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54641,54675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54935,54961],"content":"IndexOf(T[],T,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T[],T,Int32,Int32)","pos":[0,26]}]},{"pos":[55293,55327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55377,55411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55477,55511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55572,55606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55663,55697],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55883,55895],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[56250,56261],"content":"IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[56511,56545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56694,56704],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[56951,56985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57142,57156],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[57415,57449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57656,57681],"content":"LastIndexOf(Array,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(Array,Object)","pos":[0,25]}]},{"pos":[58001,58035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58097,58131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58188,58222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58493,58524],"content":"LastIndexOf(Array,Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(Array,Object,Int32)","pos":[0,31]}]},{"pos":[58872,58906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58968,59002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59068,59102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59159,59193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59490,59527],"content":"LastIndexOf(Array,Object,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(Array,Object,Int32,Int32)","pos":[0,37]}]},{"pos":[59898,59932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59994,60028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60094,60128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60189,60223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60280,60314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60531,60549],"content":"LastIndexOf(T[],T)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(T[],T)","pos":[0,18]}]},{"pos":[60842,60876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60926,60960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61017,61051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61297,61321],"content":"LastIndexOf(T[],T,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(T[],T,Int32)","pos":[0,24]}]},{"pos":[61642,61676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61726,61760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61826,61860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61917,61951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62223,62253],"content":"LastIndexOf(T[],T,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(T[],T,Int32,Int32)","pos":[0,30]}]},{"pos":[62597,62631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62681,62715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62781,62815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62876,62910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62967,63001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63183,63189],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[63421,63455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63604,63614],"content":"LongLength","needQuote":true,"needEscape":true,"nodes":[{"content":"LongLength","pos":[0,10]}]},{"pos":[63859,63893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64030,64034],"content":"Rank","needQuote":true,"needEscape":true,"nodes":[{"content":"Rank","pos":[0,4]}]},{"pos":[64260,64294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64483,64500],"content":"Resize(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Resize(T[],Int32)","pos":[0,17]}]},{"pos":[64795,64829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64892,64926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65097,65111],"content":"Reverse(Array)","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse(Array)","pos":[0,14]}]},{"pos":[65392,65426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65683,65709],"content":"Reverse(Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse(Array,Int32,Int32)","pos":[0,26]}]},{"pos":[66037,66071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66132,66166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66228,66262],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66497,66519],"content":"SetValue(Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32)","pos":[0,22]}]},{"pos":[66823,66857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66918,66952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67192,67216],"content":"SetValue(Object,Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32[])","pos":[0,24]}]},{"pos":[67528,67562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67627,67661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67897,67919],"content":"SetValue(Object,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64)","pos":[0,22]}]},{"pos":[68224,68258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68319,68353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68593,68617],"content":"SetValue(Object,Int64[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64[])","pos":[0,24]}]},{"pos":[68930,68964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69029,69063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69325,69353],"content":"SetValue(Object,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32,Int32)","pos":[0,28]}]},{"pos":[69682,69716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69778,69812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69874,69908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70170,70198],"content":"SetValue(Object,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64,Int64)","pos":[0,28]}]},{"pos":[70529,70563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70625,70659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70721,70755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71043,71077],"content":"SetValue(Object,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32,Int32,Int32)","pos":[0,34]}]},{"pos":[71430,71464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71526,71560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71622,71656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71718,71752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72040,72074],"content":"SetValue(Object,Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64,Int64,Int64)","pos":[0,34]}]},{"pos":[72430,72464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72526,72560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72622,72656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72718,72752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72952,72963],"content":"Sort(Array)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array)","pos":[0,11]}]},{"pos":[73235,73269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73491,73508],"content":"Sort(Array,Array)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array)","pos":[0,17]}]},{"pos":[73803,73837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73898,73932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74186,74207],"content":"Sort(Array,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,IComparer)","pos":[0,21]}]},{"pos":[74538,74572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74652,74686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74966,74993],"content":"Sort(Array,Array,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array,IComparer)","pos":[0,27]}]},{"pos":[75347,75381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75442,75476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75556,75590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75838,75861],"content":"Sort(Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Int32,Int32)","pos":[0,23]}]},{"pos":[76180,76214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76275,76309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76371,76405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76679,76708],"content":"Sort(Array,Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array,Int32,Int32)","pos":[0,29]}]},{"pos":[77050,77084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77145,77179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77240,77274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77336,77370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77676,77709],"content":"Sort(Array,Int32,Int32,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Int32,Int32,IComparer)","pos":[0,33]}]},{"pos":[78087,78121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78182,78216],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78278,78312],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78392,78426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78758,78797],"content":"Sort(Array,Array,Int32,Int32,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array,Int32,Int32,IComparer)","pos":[0,39]}]},{"pos":[79198,79232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79293,79327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79388,79422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79484,79518],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79598,79632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79820,79829],"content":"Sort(T[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(T[])","pos":[0,9]}]},{"pos":[80089,80123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80392,80414],"content":"Sort(T[],IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(T[],IComparer<T>)"},{"pos":[80750,80784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80874,80908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81139,81162],"content":"Sort(T[],Comparison<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(T[],Comparison<T>)"},{"pos":[81476,81510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81583,81617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81860,81881],"content":"Sort(T[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(T[],Int32,Int32)","pos":[0,21]}]},{"pos":[82188,82222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82283,82317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82379,82413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82734,82768],"content":"Sort(T[],Int32,Int32,IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(T[],Int32,Int32,IComparer<T>)"},{"pos":[83151,83185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83246,83280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83342,83376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83466,83500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83703,83724],"content":"Sort(TKey[],TValue[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(TKey[],TValue[])","pos":[0,21]}]},{"pos":[84038,84072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84129,84163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84460,84497],"content":"Sort(TKey[],TValue[],IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(TKey[],TValue[],IComparer<TKey>)"},{"pos":[84896,84930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84987,85021],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85115,85149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85414,85447],"content":"Sort(TKey[],TValue[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(TKey[],TValue[],Int32,Int32)","pos":[0,33]}]},{"pos":[85808,85842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85899,85933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85994,86028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86090,86124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86473,86522],"content":"Sort(TKey[],TValue[],Int32,Int32,IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)"},{"pos":[86968,87002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87059,87093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87154,87188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87250,87284],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87378,87412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87601,87609],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[87851,87885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88100,88136],"content":"System.Collections.ICollection.Count","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.Count","pos":[0,36]}]},{"pos":[88451,88485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88714,88750],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[89064,89098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89155,89189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89392,89424],"content":"System.Collections.IList.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Clear()","pos":[0,32]}]},{"pos":[89901,89942],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[90272,90306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90365,90399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90636,90676],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[91002,91036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91093,91127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91388,91433],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[91779,91813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91875,91909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92138,92174],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[92521,92555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92613,92647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92882,92921],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[93245,93279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93516,93556],"content":"System.Collections.IList.RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.RemoveAt(Int32)","pos":[0,40]}]},{"pos":[93880,93914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94245,94313],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[94752,94786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94866,94900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94957,94991],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95330,95402],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[95854,95888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95976,96010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96069,96103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96424,96494],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[96958,96992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97049,97083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97290,97318],"content":"TrueForAll(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TrueForAll(T[],Predicate<T>)"},{"pos":[97642,97676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97743,97777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97836,97870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97981,97994],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[98087,98102],"content":"AsReadOnly(T[])","needQuote":true,"needEscape":true,"nodes":[{"content":"AsReadOnly(T[])","pos":[0,15]}]},{"pos":[98310,98331],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"},{"pos":[98484,98485],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[98632,98658],"content":"BinarySearch(Array,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Object)","pos":[0,26]}]},{"pos":[98825,98830],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[98943,98948],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[99062,99068],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99259,99295],"content":"BinarySearch(Array,Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Object,IComparer)","pos":[0,36]}]},{"pos":[99482,99487],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[99600,99605],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[99719,99725],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[99868,99877],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[100083,100121],"content":"BinarySearch(Array,Int32,Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Int32,Int32,Object)","pos":[0,38]}]},{"pos":[100312,100317],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[100430,100435],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[100548,100553],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[100666,100671],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[100785,100791],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101008,101056],"content":"BinarySearch(Array,Int32,Int32,Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(Array,Int32,Int32,Object,IComparer)","pos":[0,48]}]},{"pos":[101267,101272],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[101385,101390],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[101503,101508],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[101621,101626],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[101740,101746],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101889,101898],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[102064,102083],"content":"BinarySearch(T[],T)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(T[],T)","pos":[0,19]}]},{"pos":[102236,102241],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102338,102339],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[102423,102424],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[102594,102626],"content":"BinarySearch(T[],T,IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"BinarySearch(T[],T,IComparer<T>)"},{"pos":[102805,102810],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102907,102908],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[102992,102993],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[103137,103149],"content":"IComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<T>"},{"pos":[103355,103386],"content":"BinarySearch(T[],Int32,Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinarySearch(T[],Int32,Int32,T)","pos":[0,31]}]},{"pos":[103563,103568],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103665,103666],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[103766,103771],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103884,103889],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103986,103987],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[104183,104227],"content":"BinarySearch(T[],Int32,Int32,T,IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"BinarySearch(T[],Int32,Int32,T,IComparer<T>)"},{"pos":[104430,104435],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104532,104533],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[104633,104638],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104751,104756],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[104853,104854],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[104998,105010],"content":"IComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<T>"},{"pos":[105209,105233],"content":"Clear(Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear(Array,Int32,Int32)","pos":[0,24]}]},{"pos":[105396,105401],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[105514,105519],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[105632,105637],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[105762,105769],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[105899,105905],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[106108,106154],"content":"ConstrainedCopy(Array,Int32,Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstrainedCopy(Array,Int32,Array,Int32,Int32)","pos":[0,46]}]},{"pos":[106361,106366],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[106479,106484],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[106597,106602],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[106715,106720],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[106833,106838],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[106997,107043],"content":"ConvertAll(TInput[],Converter<TInput,TOutput>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertAll(TInput[],Converter&lt;TInput,TOutput&gt;)","pos":[0,46],"source":"ConvertAll(TInput[],Converter<TInput,TOutput>)"}]},{"pos":[107240,107247],"content":"TOutput","needQuote":true,"needEscape":true,"nodes":[{"content":"TOutput","pos":[0,7]}]},{"pos":[107348,107354],"content":"TInput","needQuote":true,"needEscape":true,"nodes":[{"content":"TInput","pos":[0,6]}]},{"pos":[107470,107495],"content":"Converter<TInput,TOutput>","needQuote":true,"needEscape":true,"nodes":[{"content":"Converter&lt;TInput,TOutput&gt;","pos":[0,25],"source":"Converter<TInput,TOutput>"}]},{"pos":[107699,107722],"content":"Copy(Array,Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Array,Int32)","pos":[0,23]}]},{"pos":[107883,107888],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[108001,108006],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[108119,108124],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[108288,108311],"content":"Copy(Array,Array,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Array,Int64)","pos":[0,23]}]},{"pos":[108472,108477],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[108590,108595],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[108708,108713],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[108903,108938],"content":"Copy(Array,Int32,Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Int32,Array,Int32,Int32)","pos":[0,35]}]},{"pos":[109123,109128],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[109241,109246],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109359,109364],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[109477,109482],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109595,109600],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[109790,109825],"content":"Copy(Array,Int64,Array,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(Array,Int64,Array,Int64,Int64)","pos":[0,35]}]},{"pos":[110010,110015],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[110128,110133],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[110246,110251],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[110364,110369],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[110482,110487],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[110640,110659],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[110812,110817],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[110930,110935],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[111088,111107],"content":"CopyTo(Array,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int64)","pos":[0,19]}]},{"pos":[111260,111265],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[111378,111383],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[111543,111569],"content":"CreateInstance(Type,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32)","pos":[0,26]}]},{"pos":[111736,111741],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[111853,111857],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[111968,111973],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[112135,112163],"content":"CreateInstance(Type,Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32[])","pos":[0,28]}]},{"pos":[112334,112339],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[112451,112455],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[112566,112571],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[112735,112763],"content":"CreateInstance(Type,Int64[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int64[])","pos":[0,28]}]},{"pos":[112934,112939],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[113051,113055],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[113166,113171],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[113346,113378],"content":"CreateInstance(Type,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32,Int32)","pos":[0,32]}]},{"pos":[113557,113562],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[113674,113678],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[113789,113794],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[113907,113912],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[114089,114125],"content":"CreateInstance(Type,Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32[],Int32[])","pos":[0,36]}]},{"pos":[114312,114317],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[114429,114433],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[114544,114549],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[114664,114669],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[114857,114895],"content":"CreateInstance(Type,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(Type,Int32,Int32,Int32)","pos":[0,38]}]},{"pos":[115086,115091],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[115203,115207],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[115318,115323],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[115436,115441],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[115554,115559],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[115687,115694],"content":"Empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty()","pos":[0,7]}]},{"pos":[115807,115808],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[115950,115974],"content":"Exists(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Exists(T[],Predicate<T>)"},{"pos":[116139,116146],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[116247,116248],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[116354,116366],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[116533,116555],"content":"Find(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Find(T[],Predicate<T>)"},{"pos":[116698,116699],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[116781,116782],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[116888,116900],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[117070,117095],"content":"FindAll(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindAll(T[],Predicate<T>)"},{"pos":[117244,117245],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[117329,117330],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[117436,117448],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[117620,117647],"content":"FindIndex(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindIndex(T[],Predicate<T>)"},{"pos":[117816,117821],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[117918,117919],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[118025,118037],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[118222,118255],"content":"FindIndex(T[],Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindIndex(T[],Int32,Predicate<T>)"},{"pos":[118436,118441],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[118538,118539],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[118639,118644],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[118763,118775],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[118973,119012],"content":"FindIndex(T[],Int32,Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindIndex(T[],Int32,Int32,Predicate<T>)"},{"pos":[119205,119210],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[119307,119308],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[119408,119413],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[119526,119531],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[119650,119662],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[119833,119859],"content":"FindLast(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLast(T[],Predicate<T>)"},{"pos":[120010,120011],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[120093,120094],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[120200,120212],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[120388,120419],"content":"FindLastIndex(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLastIndex(T[],Predicate<T>)"},{"pos":[120596,120601],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[120698,120699],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[120805,120817],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[121006,121043],"content":"FindLastIndex(T[],Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLastIndex(T[],Int32,Predicate<T>)"},{"pos":[121232,121237],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[121334,121335],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[121435,121440],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[121559,121571],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[121773,121816],"content":"FindLastIndex(T[],Int32,Int32,Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"FindLastIndex(T[],Int32,Int32,Predicate<T>)"},{"pos":[122017,122022],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[122119,122120],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[122220,122225],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[122338,122343],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[122462,122474],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[122641,122663],"content":"ForEach(T[],Action<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(T[],Action<T>)"},{"pos":[122806,122807],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[122910,122919],"content":"Action<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<T>"},{"pos":[123060,123075],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[123250,123261],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[123428,123444],"content":"GetLength(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLength(Int32)","pos":[0,16]}]},{"pos":[123591,123596],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[123709,123714],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[123861,123881],"content":"GetLongLength(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLongLength(Int32)","pos":[0,20]}]},{"pos":[124036,124041],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[124154,124159],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[124306,124326],"content":"GetLowerBound(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLowerBound(Int32)","pos":[0,20]}]},{"pos":[124481,124486],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[124599,124604],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[124751,124771],"content":"GetUpperBound(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetUpperBound(Int32)","pos":[0,20]}]},{"pos":[124926,124931],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[125044,125049],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[125191,125206],"content":"GetValue(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32)","pos":[0,15]}]},{"pos":[125352,125358],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[125473,125478],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[125622,125639],"content":"GetValue(Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32[])","pos":[0,17]}]},{"pos":[125789,125795],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[125910,125915],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[126059,126074],"content":"GetValue(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64)","pos":[0,15]}]},{"pos":[126220,126226],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[126341,126346],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[126490,126507],"content":"GetValue(Int64[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64[])","pos":[0,17]}]},{"pos":[126657,126663],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[126778,126783],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[126940,126961],"content":"GetValue(Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32,Int32)","pos":[0,21]}]},{"pos":[127119,127125],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[127240,127245],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[127358,127363],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[127518,127539],"content":"GetValue(Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64,Int64)","pos":[0,21]}]},{"pos":[127697,127703],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[127818,127823],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[127936,127941],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[128109,128136],"content":"GetValue(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int32,Int32,Int32)","pos":[0,27]}]},{"pos":[128306,128312],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[128427,128432],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[128545,128550],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[128663,128668],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[128836,128863],"content":"GetValue(Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetValue(Int64,Int64,Int64)","pos":[0,27]}]},{"pos":[129033,129039],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[129154,129159],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[129272,129277],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[129390,129395],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[129550,129571],"content":"IndexOf(Array,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Array,Object)","pos":[0,21]}]},{"pos":[129728,129733],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[129846,129851],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[129965,129971],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[130141,130168],"content":"IndexOf(Array,Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Array,Object,Int32)","pos":[0,27]}]},{"pos":[130337,130342],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[130455,130460],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[130574,130580],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[130695,130700],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[130881,130914],"content":"IndexOf(Array,Object,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Array,Object,Int32,Int32)","pos":[0,33]}]},{"pos":[131095,131100],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[131213,131218],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[131332,131338],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[131453,131458],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[131571,131576],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[131717,131731],"content":"IndexOf(T[],T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T[],T)","pos":[0,14]}]},{"pos":[131874,131879],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[131976,131977],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132061,132062],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132201,132221],"content":"IndexOf(T[],T,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T[],T,Int32)","pos":[0,20]}]},{"pos":[132376,132381],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[132478,132479],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132563,132564],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[132662,132667],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[132834,132860],"content":"IndexOf(T[],T,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T[],T,Int32,Int32)","pos":[0,26]}]},{"pos":[133027,133032],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[133129,133130],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[133214,133215],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[133313,133318],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[133431,133436],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[133566,133578],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[133735,133746],"content":"IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[133885,133892],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[134026,134036],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[134173,134180],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[134318,134332],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[134477,134484],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[134647,134672],"content":"LastIndexOf(Array,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(Array,Object)","pos":[0,25]}]},{"pos":[134837,134842],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[134955,134960],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[135074,135080],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[135254,135285],"content":"LastIndexOf(Array,Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(Array,Object,Int32)","pos":[0,31]}]},{"pos":[135462,135467],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[135580,135585],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[135699,135705],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[135820,135825],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[136010,136047],"content":"LastIndexOf(Array,Object,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(Array,Object,Int32,Int32)","pos":[0,37]}]},{"pos":[136236,136241],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[136354,136359],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[136473,136479],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[136594,136599],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[136712,136717],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[136862,136880],"content":"LastIndexOf(T[],T)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(T[],T)","pos":[0,18]}]},{"pos":[137031,137036],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[137133,137134],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[137218,137219],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[137362,137386],"content":"LastIndexOf(T[],T,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(T[],T,Int32)","pos":[0,24]}]},{"pos":[137549,137554],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[137651,137652],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[137736,137737],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[137835,137840],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138011,138041],"content":"LastIndexOf(T[],T,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"LastIndexOf(T[],T,Int32,Int32)","pos":[0,30]}]},{"pos":[138216,138221],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138318,138319],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[138403,138404],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[138502,138507],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138620,138625],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[138751,138757],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[138884,138889],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[139019,139029],"content":"LongLength","needQuote":true,"needEscape":true,"nodes":[{"content":"LongLength","pos":[0,10]}]},{"pos":[139164,139169],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[139293,139297],"content":"Rank","needQuote":true,"needEscape":true,"nodes":[{"content":"Rank","pos":[0,4]}]},{"pos":[139420,139425],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[139575,139592],"content":"Resize(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Resize(T[],Int32)","pos":[0,17]}]},{"pos":[139725,139726],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[139826,139831],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[139972,139986],"content":"Reverse(Array)","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse(Array)","pos":[0,14]}]},{"pos":[140129,140134],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[140301,140327],"content":"Reverse(Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Reverse(Array,Int32,Int32)","pos":[0,26]}]},{"pos":[140494,140499],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[140612,140617],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[140730,140735],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[140891,140913],"content":"SetValue(Object,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32)","pos":[0,22]}]},{"pos":[141073,141079],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[141194,141199],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[141357,141381],"content":"SetValue(Object,Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32[])","pos":[0,24]}]},{"pos":[141545,141551],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[141666,141671],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[141829,141851],"content":"SetValue(Object,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64)","pos":[0,22]}]},{"pos":[142011,142017],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[142132,142137],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[142295,142319],"content":"SetValue(Object,Int64[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64[])","pos":[0,24]}]},{"pos":[142483,142489],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[142604,142609],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[142780,142808],"content":"SetValue(Object,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32,Int32)","pos":[0,28]}]},{"pos":[142980,142986],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[143101,143106],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[143219,143224],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[143393,143421],"content":"SetValue(Object,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64,Int64)","pos":[0,28]}]},{"pos":[143593,143599],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[143714,143719],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[143832,143837],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[144019,144053],"content":"SetValue(Object,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int32,Int32,Int32)","pos":[0,34]}]},{"pos":[144237,144243],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[144358,144363],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[144476,144481],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[144594,144599],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[144781,144815],"content":"SetValue(Object,Int64,Int64,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetValue(Object,Int64,Int64,Int64)","pos":[0,34]}]},{"pos":[144999,145005],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[145120,145125],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[145238,145243],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[145356,145361],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[145499,145510],"content":"Sort(Array)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array)","pos":[0,11]}]},{"pos":[145647,145652],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[145803,145820],"content":"Sort(Array,Array)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array)","pos":[0,17]}]},{"pos":[145969,145974],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[146087,146092],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[146259,146280],"content":"Sort(Array,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,IComparer)","pos":[0,21]}]},{"pos":[146437,146442],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[146583,146592],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[146792,146819],"content":"Sort(Array,Array,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array,IComparer)","pos":[0,27]}]},{"pos":[146988,146993],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[147106,147111],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[147252,147261],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[147445,147468],"content":"Sort(Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Int32,Int32)","pos":[0,23]}]},{"pos":[147629,147634],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[147747,147752],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[147865,147870],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148047,148076],"content":"Sort(Array,Array,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array,Int32,Int32)","pos":[0,29]}]},{"pos":[148249,148254],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[148367,148372],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[148485,148490],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148603,148608],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[148801,148834],"content":"Sort(Array,Int32,Int32,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Int32,Int32,IComparer)","pos":[0,33]}]},{"pos":[149015,149020],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[149133,149138],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[149251,149256],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[149397,149406],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[149632,149671],"content":"Sort(Array,Array,Int32,Int32,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(Array,Array,Int32,Int32,IComparer)","pos":[0,39]}]},{"pos":[149864,149869],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[149982,149987],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[150100,150105],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[150218,150223],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[150364,150373],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[150527,150536],"content":"Sort(T[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(T[])","pos":[0,9]}]},{"pos":[150653,150654],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[150814,150836],"content":"Sort(T[],IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(T[],IComparer<T>)"},{"pos":[150979,150980],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[151126,151138],"content":"IComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<T>"},{"pos":[151326,151349],"content":"Sort(T[],Comparison<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(T[],Comparison<T>)"},{"pos":[151494,151495],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[151602,151615],"content":"Comparison<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Comparison<T>"},{"pos":[151791,151812],"content":"Sort(T[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(T[],Int32,Int32)","pos":[0,21]}]},{"pos":[151953,151954],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[152054,152059],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152172,152177],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152376,152410],"content":"Sort(T[],Int32,Int32,IComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(T[],Int32,Int32,IComparer<T>)"},{"pos":[152577,152578],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[152678,152683],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152796,152801],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152960,152972],"content":"IComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<T>"},{"pos":[153146,153167],"content":"Sort(TKey[],TValue[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(TKey[],TValue[])","pos":[0,21]}]},{"pos":[153311,153315],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[153410,153416],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[153595,153632],"content":"Sort(TKey[],TValue[],IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(TKey[],TValue[],IComparer<TKey>)"},{"pos":[153808,153812],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[153907,153913],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[154073,154088],"content":"IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<TKey>"},{"pos":[154294,154327],"content":"Sort(TKey[],TValue[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Sort(TKey[],TValue[],Int32,Int32)","pos":[0,33]}]},{"pos":[154495,154499],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[154594,154600],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[154710,154715],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[154828,154833],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[155041,155090],"content":"Sort(TKey[],TValue[],Int32,Int32,IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)"},{"pos":[155290,155294],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[155389,155395],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[155505,155510],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[155623,155628],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[155791,155806],"content":"IComparer<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"IComparer<TKey>"},{"pos":[155974,155982],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[156114,156120],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[156278,156314],"content":"System.Collections.ICollection.Count","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.Count","pos":[0,36]}]},{"pos":[156501,156506],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[156669,156705],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[156892,156897],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[157011,157017],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157169,157201],"content":"System.Collections.IList.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Clear()","pos":[0,32]}]},{"pos":[157435,157476],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[157675,157682],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[157800,157806],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157975,158015],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[158210,158215],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[158329,158335],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[158516,158561],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[158766,158771],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[158885,158891],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159056,159092],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[159280,159286],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159401,159406],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[159572,159611],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[159805,159811],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159980,160020],"content":"System.Collections.IList.RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.RemoveAt(Int32)","pos":[0,40]}]},{"pos":[160215,160220],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[160434,160502],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[160753,160758],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[160872,160878],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161021,161030],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[161268,161340],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[161601,161608],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[161726,161732],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161883,161900],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[162145,162215],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[162470,162475],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[162624,162641],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[162836,162864],"content":"TrueForAll(T[],Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"TrueForAll(T[],Predicate<T>)"},{"pos":[163037,163044],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[163145,163146],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[163252,163264],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Array\n  id: Array\n  children:\n  - System.Array.AsReadOnly``1(``0[])\n  - System.Array.BinarySearch(System.Array,System.Object)\n  - System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)\n  - System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)\n  - System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)\n  - System.Array.BinarySearch``1(``0[],``0)\n  - System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer`1)\n  - System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)\n  - System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer`1)\n  - System.Array.Clear(System.Array,System.Int32,System.Int32)\n  - System.Array.Clone\n  - System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  - System.Array.ConvertAll``2(``0[],System.Converter`2)\n  - System.Array.Copy(System.Array,System.Array,System.Int32)\n  - System.Array.Copy(System.Array,System.Array,System.Int64)\n  - System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  - System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)\n  - System.Array.CopyTo(System.Array,System.Int32)\n  - System.Array.CopyTo(System.Array,System.Int64)\n  - System.Array.CreateInstance(System.Type,System.Int32)\n  - System.Array.CreateInstance(System.Type,System.Int32[])\n  - System.Array.CreateInstance(System.Type,System.Int64[])\n  - System.Array.CreateInstance(System.Type,System.Int32,System.Int32)\n  - System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])\n  - System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)\n  - System.Array.Empty``1\n  - System.Array.Exists``1(``0[],System.Predicate`1)\n  - System.Array.Find``1(``0[],System.Predicate`1)\n  - System.Array.FindAll``1(``0[],System.Predicate`1)\n  - System.Array.FindIndex``1(``0[],System.Predicate`1)\n  - System.Array.FindIndex``1(``0[],System.Int32,System.Predicate`1)\n  - System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  - System.Array.FindLast``1(``0[],System.Predicate`1)\n  - System.Array.FindLastIndex``1(``0[],System.Predicate`1)\n  - System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate`1)\n  - System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  - System.Array.ForEach``1(``0[],System.Action`1)\n  - System.Array.GetEnumerator\n  - System.Array.GetLength(System.Int32)\n  - System.Array.GetLongLength(System.Int32)\n  - System.Array.GetLowerBound(System.Int32)\n  - System.Array.GetUpperBound(System.Int32)\n  - System.Array.GetValue(System.Int32)\n  - System.Array.GetValue(System.Int32[])\n  - System.Array.GetValue(System.Int64)\n  - System.Array.GetValue(System.Int64[])\n  - System.Array.GetValue(System.Int32,System.Int32)\n  - System.Array.GetValue(System.Int64,System.Int64)\n  - System.Array.GetValue(System.Int32,System.Int32,System.Int32)\n  - System.Array.GetValue(System.Int64,System.Int64,System.Int64)\n  - System.Array.IndexOf(System.Array,System.Object)\n  - System.Array.IndexOf(System.Array,System.Object,System.Int32)\n  - System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  - System.Array.IndexOf``1(``0[],``0)\n  - System.Array.IndexOf``1(``0[],``0,System.Int32)\n  - System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)\n  - System.Array.Initialize\n  - System.Array.IsFixedSize\n  - System.Array.IsReadOnly\n  - System.Array.IsSynchronized\n  - System.Array.LastIndexOf(System.Array,System.Object)\n  - System.Array.LastIndexOf(System.Array,System.Object,System.Int32)\n  - System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  - System.Array.LastIndexOf``1(``0[],``0)\n  - System.Array.LastIndexOf``1(``0[],``0,System.Int32)\n  - System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)\n  - System.Array.Length\n  - System.Array.LongLength\n  - System.Array.Rank\n  - System.Array.Resize``1(``0[]@,System.Int32)\n  - System.Array.Reverse(System.Array)\n  - System.Array.Reverse(System.Array,System.Int32,System.Int32)\n  - System.Array.SetValue(System.Object,System.Int32)\n  - System.Array.SetValue(System.Object,System.Int32[])\n  - System.Array.SetValue(System.Object,System.Int64)\n  - System.Array.SetValue(System.Object,System.Int64[])\n  - System.Array.SetValue(System.Object,System.Int32,System.Int32)\n  - System.Array.SetValue(System.Object,System.Int64,System.Int64)\n  - System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)\n  - System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)\n  - System.Array.Sort(System.Array)\n  - System.Array.Sort(System.Array,System.Array)\n  - System.Array.Sort(System.Array,System.Collections.IComparer)\n  - System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)\n  - System.Array.Sort(System.Array,System.Int32,System.Int32)\n  - System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)\n  - System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  - System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  - System.Array.Sort``1(``0[])\n  - System.Array.Sort``1(``0[],System.Collections.Generic.IComparer`1)\n  - System.Array.Sort``1(``0[],System.Comparison`1)\n  - System.Array.Sort``1(``0[],System.Int32,System.Int32)\n  - System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1)\n  - System.Array.Sort``2(``0[],``1[])\n  - System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})\n  - System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)\n  - System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})\n  - System.Array.SyncRoot\n  - System.Array.System#Collections#ICollection#Count\n  - System.Array.System#Collections#IList#Add(System.Object)\n  - System.Array.System#Collections#IList#Clear\n  - System.Array.System#Collections#IList#Contains(System.Object)\n  - System.Array.System#Collections#IList#IndexOf(System.Object)\n  - System.Array.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Array.System#Collections#IList#Item(System.Int32)\n  - System.Array.System#Collections#IList#Remove(System.Object)\n  - System.Array.System#Collections#IList#RemoveAt(System.Int32)\n  - System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.Array.TrueForAll``1(``0[],System.Predicate`1)\n  langs:\n  - csharp\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Array : ICloneable, System.Collections.IList, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.AsReadOnly``1(``0[])\n  id: AsReadOnly``1(``0[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: AsReadOnly(T[])\n  nameWithType: Array.AsReadOnly(T[])\n  fullName: System.Array.AsReadOnly(T[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static System.Collections.ObjectModel.ReadOnlyCollection<T> AsReadOnly<T> (T[] array);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch(System.Array,System.Object)\n  id: BinarySearch(System.Array,System.Object)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(Array,Object)\n  nameWithType: Array.BinarySearch(Array,Object)\n  fullName: System.Array.BinarySearch(Array,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch (Array array, object value);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)\n  id: BinarySearch(System.Array,System.Object,System.Collections.IComparer)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(Array,Object,IComparer)\n  nameWithType: Array.BinarySearch(Array,Object,IComparer)\n  fullName: System.Array.BinarySearch(Array,Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch (Array array, object value, System.Collections.IComparer comparer);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)\n  id: BinarySearch(System.Array,System.Int32,System.Int32,System.Object)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(Array,Int32,Int32,Object)\n  nameWithType: Array.BinarySearch(Array,Int32,Int32,Object)\n  fullName: System.Array.BinarySearch(Array,Int32,Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch (Array array, int index, int length, object value);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)\n  id: BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(Array,Int32,Int32,Object,IComparer)\n  nameWithType: Array.BinarySearch(Array,Int32,Int32,Object,IComparer)\n  fullName: System.Array.BinarySearch(Array,Int32,Int32,Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch (Array array, int index, int length, object value, System.Collections.IComparer comparer);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch``1(``0[],``0)\n  id: BinarySearch``1(``0[],``0)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(T[],T)\n  nameWithType: Array.BinarySearch(T[],T)\n  fullName: System.Array.BinarySearch(T[],T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch<T> (T[] array, T value);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer`1)\n  id: BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(T[],T,IComparer<T>)\n  nameWithType: Array.BinarySearch(T[],T,IComparer<T>)\n  fullName: System.Array.BinarySearch(T[],T,IComparer<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch<T> (T[] array, T value, System.Collections.Generic.IComparer<T> comparer);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)\n  id: BinarySearch``1(``0[],System.Int32,System.Int32,``0)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(T[],Int32,Int32,T)\n  nameWithType: Array.BinarySearch(T[],Int32,Int32,T)\n  fullName: System.Array.BinarySearch(T[],Int32,Int32,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch<T> (T[] array, int index, int length, T value);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer`1)\n  id: BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: BinarySearch(T[],Int32,Int32,T,IComparer<T>)\n  nameWithType: Array.BinarySearch(T[],Int32,Int32,T,IComparer<T>)\n  fullName: System.Array.BinarySearch(T[],Int32,Int32,T,IComparer<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int BinarySearch<T> (T[] array, int index, int length, T value, System.Collections.Generic.IComparer<T> comparer);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.BinarySearch<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Clear(System.Array,System.Int32,System.Int32)\n  id: Clear(System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Clear(Array,Int32,Int32)\n  nameWithType: Array.Clear(Array,Int32,Int32)\n  fullName: System.Array.Clear(Array,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Clear (Array array, int index, int length);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Clone\n  id: Clone\n  parent: System.Array\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Array.Clone()\n  fullName: System.Array.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  id: ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: ConstrainedCopy(Array,Int32,Array,Int32,Int32)\n  nameWithType: Array.ConstrainedCopy(Array,Int32,Array,Int32,Int32)\n  fullName: System.Array.ConstrainedCopy(Array,Int32,Array,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void ConstrainedCopy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);\n    parameters:\n    - id: sourceArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: sourceIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: destinationArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: destinationIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.ConvertAll``2(``0[],System.Converter`2)\n  id: ConvertAll``2(``0[],System.Converter`2)\n  parent: System.Array\n  langs:\n  - csharp\n  name: ConvertAll(TInput[],Converter<TInput,TOutput>)\n  nameWithType: Array.ConvertAll(TInput[],Converter<TInput,TOutput>)\n  fullName: System.Array.ConvertAll(TInput[],Converter<TInput,TOutput>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static TOutput[] ConvertAll<TInput,TOutput> (TInput[] array, Converter<TInput,TOutput> converter);\n    parameters:\n    - id: array\n      type: TInput[]\n      description: Parameter description to be filled\n    - id: converter\n      type: System.Converter`2\n      description: Parameter description to be filled\n    return:\n      type: TOutput[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Copy(System.Array,System.Array,System.Int32)\n  id: Copy(System.Array,System.Array,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Copy(Array,Array,Int32)\n  nameWithType: Array.Copy(Array,Array,Int32)\n  fullName: System.Array.Copy(Array,Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Copy (Array sourceArray, Array destinationArray, int length);\n    parameters:\n    - id: sourceArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: destinationArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Copy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Copy(System.Array,System.Array,System.Int64)\n  id: Copy(System.Array,System.Array,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Copy(Array,Array,Int64)\n  nameWithType: Array.Copy(Array,Array,Int64)\n  fullName: System.Array.Copy(Array,Array,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Copy (Array sourceArray, Array destinationArray, long length);\n    parameters:\n    - id: sourceArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: destinationArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Array.Copy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  id: Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Copy(Array,Int32,Array,Int32,Int32)\n  nameWithType: Array.Copy(Array,Int32,Array,Int32,Int32)\n  fullName: System.Array.Copy(Array,Int32,Array,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Copy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);\n    parameters:\n    - id: sourceArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: sourceIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: destinationArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: destinationIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Copy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)\n  id: Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Copy(Array,Int64,Array,Int64,Int64)\n  nameWithType: Array.Copy(Array,Int64,Array,Int64,Int64)\n  fullName: System.Array.Copy(Array,Int64,Array,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Copy (Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length);\n    parameters:\n    - id: sourceArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: sourceIndex\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: destinationArray\n      type: System.Array\n      description: Parameter description to be filled\n    - id: destinationIndex\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Array.Copy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: Array.CopyTo(Array,Int32)\n  fullName: System.Array.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CopyTo(System.Array,System.Int64)\n  id: CopyTo(System.Array,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: CopyTo(Array,Int64)\n  nameWithType: Array.CopyTo(Array,Int64)\n  fullName: System.Array.CopyTo(Array,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void CopyTo (Array array, long index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Array.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CreateInstance(System.Type,System.Int32)\n  id: CreateInstance(System.Type,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: CreateInstance(Type,Int32)\n  nameWithType: Array.CreateInstance(Type,Int32)\n  fullName: System.Array.CreateInstance(Type,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Array CreateInstance (Type elementType, int length);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CreateInstance(System.Type,System.Int32[])\n  id: CreateInstance(System.Type,System.Int32[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: CreateInstance(Type,Int32[])\n  nameWithType: Array.CreateInstance(Type,Int32[])\n  fullName: System.Array.CreateInstance(Type,Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Array CreateInstance (Type elementType, int[] lengths);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: lengths\n      type: System.Int32[]\n      description: Parameter description to be filled\n    return:\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CreateInstance(System.Type,System.Int64[])\n  id: CreateInstance(System.Type,System.Int64[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: CreateInstance(Type,Int64[])\n  nameWithType: Array.CreateInstance(Type,Int64[])\n  fullName: System.Array.CreateInstance(Type,Int64[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Array CreateInstance (Type elementType, long[] lengths);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: lengths\n      type: System.Int64[]\n      description: Parameter description to be filled\n    return:\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CreateInstance(System.Type,System.Int32,System.Int32)\n  id: CreateInstance(System.Type,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: CreateInstance(Type,Int32,Int32)\n  nameWithType: Array.CreateInstance(Type,Int32,Int32)\n  fullName: System.Array.CreateInstance(Type,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Array CreateInstance (Type elementType, int length1, int length2);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: length1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length2\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])\n  id: CreateInstance(System.Type,System.Int32[],System.Int32[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: CreateInstance(Type,Int32[],Int32[])\n  nameWithType: Array.CreateInstance(Type,Int32[],Int32[])\n  fullName: System.Array.CreateInstance(Type,Int32[],Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Array CreateInstance (Type elementType, int[] lengths, int[] lowerBounds);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: lengths\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: lowerBounds\n      type: System.Int32[]\n      description: Parameter description to be filled\n    return:\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)\n  id: CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: CreateInstance(Type,Int32,Int32,Int32)\n  nameWithType: Array.CreateInstance(Type,Int32,Int32,Int32)\n  fullName: System.Array.CreateInstance(Type,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Array CreateInstance (Type elementType, int length1, int length2, int length3);\n    parameters:\n    - id: elementType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: length1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length3\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Empty``1\n  id: Empty``1\n  parent: System.Array\n  langs:\n  - csharp\n  name: Empty()\n  nameWithType: Array.Empty()\n  fullName: System.Array.Empty()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static T[] Empty<T> ();\n    parameters: []\n    return:\n      type: T[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Exists``1(``0[],System.Predicate`1)\n  id: Exists``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Exists(T[],Predicate<T>)\n  nameWithType: Array.Exists(T[],Predicate<T>)\n  fullName: System.Array.Exists(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool Exists<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Find``1(``0[],System.Predicate`1)\n  id: Find``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Find(T[],Predicate<T>)\n  nameWithType: Array.Find(T[],Predicate<T>)\n  fullName: System.Array.Find(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static T Find<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindAll``1(``0[],System.Predicate`1)\n  id: FindAll``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindAll(T[],Predicate<T>)\n  nameWithType: Array.FindAll(T[],Predicate<T>)\n  fullName: System.Array.FindAll(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static T[] FindAll<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: T[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindIndex``1(``0[],System.Predicate`1)\n  id: FindIndex``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindIndex(T[],Predicate<T>)\n  nameWithType: Array.FindIndex(T[],Predicate<T>)\n  fullName: System.Array.FindIndex(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int FindIndex<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.FindIndex<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindIndex``1(``0[],System.Int32,System.Predicate`1)\n  id: FindIndex``1(``0[],System.Int32,System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindIndex(T[],Int32,Predicate<T>)\n  nameWithType: Array.FindIndex(T[],Int32,Predicate<T>)\n  fullName: System.Array.FindIndex(T[],Int32,Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int FindIndex<T> (T[] array, int startIndex, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.FindIndex<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  id: FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindIndex(T[],Int32,Int32,Predicate<T>)\n  nameWithType: Array.FindIndex(T[],Int32,Int32,Predicate<T>)\n  fullName: System.Array.FindIndex(T[],Int32,Int32,Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int FindIndex<T> (T[] array, int startIndex, int count, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.FindIndex<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindLast``1(``0[],System.Predicate`1)\n  id: FindLast``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindLast(T[],Predicate<T>)\n  nameWithType: Array.FindLast(T[],Predicate<T>)\n  fullName: System.Array.FindLast(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static T FindLast<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindLastIndex``1(``0[],System.Predicate`1)\n  id: FindLastIndex``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindLastIndex(T[],Predicate<T>)\n  nameWithType: Array.FindLastIndex(T[],Predicate<T>)\n  fullName: System.Array.FindLastIndex(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int FindLastIndex<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.FindLastIndex<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate`1)\n  id: FindLastIndex``1(``0[],System.Int32,System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindLastIndex(T[],Int32,Predicate<T>)\n  nameWithType: Array.FindLastIndex(T[],Int32,Predicate<T>)\n  fullName: System.Array.FindLastIndex(T[],Int32,Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int FindLastIndex<T> (T[] array, int startIndex, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.FindLastIndex<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  id: FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: FindLastIndex(T[],Int32,Int32,Predicate<T>)\n  nameWithType: Array.FindLastIndex(T[],Int32,Int32,Predicate<T>)\n  fullName: System.Array.FindLastIndex(T[],Int32,Int32,Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int FindLastIndex<T> (T[] array, int startIndex, int count, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.FindLastIndex<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.ForEach``1(``0[],System.Action`1)\n  id: ForEach``1(``0[],System.Action`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: ForEach(T[],Action<T>)\n  nameWithType: Array.ForEach(T[],Action<T>)\n  fullName: System.Array.ForEach(T[],Action<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void ForEach<T> (T[] array, Action<T> action);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: action\n      type: System.Action`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetEnumerator\n  id: GetEnumerator\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Array.GetEnumerator()\n  fullName: System.Array.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetLength(System.Int32)\n  id: GetLength(System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetLength(Int32)\n  nameWithType: Array.GetLength(Int32)\n  fullName: System.Array.GetLength(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int GetLength (int dimension);\n    parameters:\n    - id: dimension\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetLongLength(System.Int32)\n  id: GetLongLength(System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetLongLength(Int32)\n  nameWithType: Array.GetLongLength(Int32)\n  fullName: System.Array.GetLongLength(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long GetLongLength (int dimension);\n    parameters:\n    - id: dimension\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetLowerBound(System.Int32)\n  id: GetLowerBound(System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetLowerBound(Int32)\n  nameWithType: Array.GetLowerBound(Int32)\n  fullName: System.Array.GetLowerBound(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int GetLowerBound (int dimension);\n    parameters:\n    - id: dimension\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetUpperBound(System.Int32)\n  id: GetUpperBound(System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetUpperBound(Int32)\n  nameWithType: Array.GetUpperBound(Int32)\n  fullName: System.Array.GetUpperBound(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int GetUpperBound (int dimension);\n    parameters:\n    - id: dimension\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int32)\n  id: GetValue(System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int32)\n  nameWithType: Array.GetValue(Int32)\n  fullName: System.Array.GetValue(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int32[])\n  id: GetValue(System.Int32[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int32[])\n  nameWithType: Array.GetValue(Int32[])\n  fullName: System.Array.GetValue(Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (int[] indices);\n    parameters:\n    - id: indices\n      type: System.Int32[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int64)\n  id: GetValue(System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int64)\n  nameWithType: Array.GetValue(Int64)\n  fullName: System.Array.GetValue(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (long index);\n    parameters:\n    - id: index\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int64[])\n  id: GetValue(System.Int64[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int64[])\n  nameWithType: Array.GetValue(Int64[])\n  fullName: System.Array.GetValue(Int64[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (long[] indices);\n    parameters:\n    - id: indices\n      type: System.Int64[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int32,System.Int32)\n  id: GetValue(System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int32,Int32)\n  nameWithType: Array.GetValue(Int32,Int32)\n  fullName: System.Array.GetValue(Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (int index1, int index2);\n    parameters:\n    - id: index1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int64,System.Int64)\n  id: GetValue(System.Int64,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int64,Int64)\n  nameWithType: Array.GetValue(Int64,Int64)\n  fullName: System.Array.GetValue(Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (long index1, long index2);\n    parameters:\n    - id: index1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int32,System.Int32,System.Int32)\n  id: GetValue(System.Int32,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int32,Int32,Int32)\n  nameWithType: Array.GetValue(Int32,Int32,Int32)\n  fullName: System.Array.GetValue(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (int index1, int index2, int index3);\n    parameters:\n    - id: index1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: index3\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.GetValue(System.Int64,System.Int64,System.Int64)\n  id: GetValue(System.Int64,System.Int64,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: GetValue(Int64,Int64,Int64)\n  nameWithType: Array.GetValue(Int64,Int64,Int64)\n  fullName: System.Array.GetValue(Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetValue (long index1, long index2, long index3);\n    parameters:\n    - id: index1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: index3\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.Array.GetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IndexOf(System.Array,System.Object)\n  id: IndexOf(System.Array,System.Object)\n  parent: System.Array\n  langs:\n  - csharp\n  name: IndexOf(Array,Object)\n  nameWithType: Array.IndexOf(Array,Object)\n  fullName: System.Array.IndexOf(Array,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int IndexOf (Array array, object value);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.IndexOf*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IndexOf(System.Array,System.Object,System.Int32)\n  id: IndexOf(System.Array,System.Object,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: IndexOf(Array,Object,Int32)\n  nameWithType: Array.IndexOf(Array,Object,Int32)\n  fullName: System.Array.IndexOf(Array,Object,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int IndexOf (Array array, object value, int startIndex);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.IndexOf*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  id: IndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: IndexOf(Array,Object,Int32,Int32)\n  nameWithType: Array.IndexOf(Array,Object,Int32,Int32)\n  fullName: System.Array.IndexOf(Array,Object,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int IndexOf (Array array, object value, int startIndex, int count);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.IndexOf*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IndexOf``1(``0[],``0)\n  id: IndexOf``1(``0[],``0)\n  parent: System.Array\n  langs:\n  - csharp\n  name: IndexOf(T[],T)\n  nameWithType: Array.IndexOf(T[],T)\n  fullName: System.Array.IndexOf(T[],T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int IndexOf<T> (T[] array, T value);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.IndexOf<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IndexOf``1(``0[],``0,System.Int32)\n  id: IndexOf``1(``0[],``0,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: IndexOf(T[],T,Int32)\n  nameWithType: Array.IndexOf(T[],T,Int32)\n  fullName: System.Array.IndexOf(T[],T,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int IndexOf<T> (T[] array, T value, int startIndex);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.IndexOf<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)\n  id: IndexOf``1(``0[],``0,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: IndexOf(T[],T,Int32,Int32)\n  nameWithType: Array.IndexOf(T[],T,Int32,Int32)\n  fullName: System.Array.IndexOf(T[],T,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int IndexOf<T> (T[] array, T value, int startIndex, int count);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.IndexOf<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Initialize\n  id: Initialize\n  parent: System.Array\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: Array.Initialize()\n  fullName: System.Array.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void Initialize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IsFixedSize\n  id: IsFixedSize\n  parent: System.Array\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: Array.IsFixedSize\n  fullName: System.Array.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IsReadOnly\n  id: IsReadOnly\n  parent: System.Array\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: Array.IsReadOnly\n  fullName: System.Array.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.IsSynchronized\n  id: IsSynchronized\n  parent: System.Array\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: Array.IsSynchronized\n  fullName: System.Array.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LastIndexOf(System.Array,System.Object)\n  id: LastIndexOf(System.Array,System.Object)\n  parent: System.Array\n  langs:\n  - csharp\n  name: LastIndexOf(Array,Object)\n  nameWithType: Array.LastIndexOf(Array,Object)\n  fullName: System.Array.LastIndexOf(Array,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int LastIndexOf (Array array, object value);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.LastIndexOf*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LastIndexOf(System.Array,System.Object,System.Int32)\n  id: LastIndexOf(System.Array,System.Object,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: LastIndexOf(Array,Object,Int32)\n  nameWithType: Array.LastIndexOf(Array,Object,Int32)\n  fullName: System.Array.LastIndexOf(Array,Object,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int LastIndexOf (Array array, object value, int startIndex);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.LastIndexOf*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  id: LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: LastIndexOf(Array,Object,Int32,Int32)\n  nameWithType: Array.LastIndexOf(Array,Object,Int32,Int32)\n  fullName: System.Array.LastIndexOf(Array,Object,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int LastIndexOf (Array array, object value, int startIndex, int count);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.LastIndexOf*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LastIndexOf``1(``0[],``0)\n  id: LastIndexOf``1(``0[],``0)\n  parent: System.Array\n  langs:\n  - csharp\n  name: LastIndexOf(T[],T)\n  nameWithType: Array.LastIndexOf(T[],T)\n  fullName: System.Array.LastIndexOf(T[],T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int LastIndexOf<T> (T[] array, T value);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.LastIndexOf<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LastIndexOf``1(``0[],``0,System.Int32)\n  id: LastIndexOf``1(``0[],``0,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: LastIndexOf(T[],T,Int32)\n  nameWithType: Array.LastIndexOf(T[],T,Int32)\n  fullName: System.Array.LastIndexOf(T[],T,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int LastIndexOf<T> (T[] array, T value, int startIndex);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.LastIndexOf<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)\n  id: LastIndexOf``1(``0[],``0,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: LastIndexOf(T[],T,Int32,Int32)\n  nameWithType: Array.LastIndexOf(T[],T,Int32,Int32)\n  fullName: System.Array.LastIndexOf(T[],T,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int LastIndexOf<T> (T[] array, T value, int startIndex, int count);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    - id: startIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.LastIndexOf<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Length\n  id: Length\n  parent: System.Array\n  langs:\n  - csharp\n  name: Length\n  nameWithType: Array.Length\n  fullName: System.Array.Length\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Length { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.LongLength\n  id: LongLength\n  parent: System.Array\n  langs:\n  - csharp\n  name: LongLength\n  nameWithType: Array.LongLength\n  fullName: System.Array.LongLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long LongLength { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Rank\n  id: Rank\n  parent: System.Array\n  langs:\n  - csharp\n  name: Rank\n  nameWithType: Array.Rank\n  fullName: System.Array.Rank\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Rank { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Resize``1(``0[]@,System.Int32)\n  id: Resize``1(``0[]@,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Resize(T[],Int32)\n  nameWithType: Array.Resize(T[],Int32)\n  fullName: System.Array.Resize(T[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Resize<T> (ref T[] array, int newSize);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: newSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Reverse(System.Array)\n  id: Reverse(System.Array)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Reverse(Array)\n  nameWithType: Array.Reverse(Array)\n  fullName: System.Array.Reverse(Array)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Reverse (Array array);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.Reverse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Reverse(System.Array,System.Int32,System.Int32)\n  id: Reverse(System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Reverse(Array,Int32,Int32)\n  nameWithType: Array.Reverse(Array,Int32,Int32)\n  fullName: System.Array.Reverse(Array,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Reverse (Array array, int index, int length);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Reverse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int32)\n  id: SetValue(System.Object,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int32)\n  nameWithType: Array.SetValue(Object,Int32)\n  fullName: System.Array.SetValue(Object,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, int index);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int32[])\n  id: SetValue(System.Object,System.Int32[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int32[])\n  nameWithType: Array.SetValue(Object,Int32[])\n  fullName: System.Array.SetValue(Object,Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, int[] indices);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: indices\n      type: System.Int32[]\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int64)\n  id: SetValue(System.Object,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int64)\n  nameWithType: Array.SetValue(Object,Int64)\n  fullName: System.Array.SetValue(Object,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, long index);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int64[])\n  id: SetValue(System.Object,System.Int64[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int64[])\n  nameWithType: Array.SetValue(Object,Int64[])\n  fullName: System.Array.SetValue(Object,Int64[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, long[] indices);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: indices\n      type: System.Int64[]\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int32,System.Int32)\n  id: SetValue(System.Object,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int32,Int32)\n  nameWithType: Array.SetValue(Object,Int32,Int32)\n  fullName: System.Array.SetValue(Object,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, int index1, int index2);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: index1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int64,System.Int64)\n  id: SetValue(System.Object,System.Int64,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int64,Int64)\n  nameWithType: Array.SetValue(Object,Int64,Int64)\n  fullName: System.Array.SetValue(Object,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, long index1, long index2);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: index1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)\n  id: SetValue(System.Object,System.Int32,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int32,Int32,Int32)\n  nameWithType: Array.SetValue(Object,Int32,Int32,Int32)\n  fullName: System.Array.SetValue(Object,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, int index1, int index2, int index3);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: index1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: index3\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)\n  id: SetValue(System.Object,System.Int64,System.Int64,System.Int64)\n  parent: System.Array\n  langs:\n  - csharp\n  name: SetValue(Object,Int64,Int64,Int64)\n  nameWithType: Array.SetValue(Object,Int64,Int64,Int64)\n  fullName: System.Array.SetValue(Object,Int64,Int64,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetValue (object value, long index1, long index2, long index3);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: index1\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: index2\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: index3\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Array.SetValue*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array)\n  id: Sort(System.Array)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array)\n  nameWithType: Array.Sort(Array)\n  fullName: System.Array.Sort(Array)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array array);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Array)\n  id: Sort(System.Array,System.Array)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,Array)\n  nameWithType: Array.Sort(Array,Array)\n  fullName: System.Array.Sort(Array,Array)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array keys, Array items);\n    parameters:\n    - id: keys\n      type: System.Array\n      description: Parameter description to be filled\n    - id: items\n      type: System.Array\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Collections.IComparer)\n  id: Sort(System.Array,System.Collections.IComparer)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,IComparer)\n  nameWithType: Array.Sort(Array,IComparer)\n  fullName: System.Array.Sort(Array,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array array, System.Collections.IComparer comparer);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)\n  id: Sort(System.Array,System.Array,System.Collections.IComparer)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,Array,IComparer)\n  nameWithType: Array.Sort(Array,Array,IComparer)\n  fullName: System.Array.Sort(Array,Array,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array keys, Array items, System.Collections.IComparer comparer);\n    parameters:\n    - id: keys\n      type: System.Array\n      description: Parameter description to be filled\n    - id: items\n      type: System.Array\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Int32,System.Int32)\n  id: Sort(System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,Int32,Int32)\n  nameWithType: Array.Sort(Array,Int32,Int32)\n  fullName: System.Array.Sort(Array,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array array, int index, int length);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)\n  id: Sort(System.Array,System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,Array,Int32,Int32)\n  nameWithType: Array.Sort(Array,Array,Int32,Int32)\n  fullName: System.Array.Sort(Array,Array,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array keys, Array items, int index, int length);\n    parameters:\n    - id: keys\n      type: System.Array\n      description: Parameter description to be filled\n    - id: items\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  id: Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,Int32,Int32,IComparer)\n  nameWithType: Array.Sort(Array,Int32,Int32,IComparer)\n  fullName: System.Array.Sort(Array,Int32,Int32,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array array, int index, int length, System.Collections.IComparer comparer);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  id: Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(Array,Array,Int32,Int32,IComparer)\n  nameWithType: Array.Sort(Array,Array,Int32,Int32,IComparer)\n  fullName: System.Array.Sort(Array,Array,Int32,Int32,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort (Array keys, Array items, int index, int length, System.Collections.IComparer comparer);\n    parameters:\n    - id: keys\n      type: System.Array\n      description: Parameter description to be filled\n    - id: items\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n  overload: System.Array.Sort*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``1(``0[])\n  id: Sort``1(``0[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(T[])\n  nameWithType: Array.Sort(T[])\n  fullName: System.Array.Sort(T[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<T> (T[] array);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n  overload: System.Array.Sort<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``1(``0[],System.Collections.Generic.IComparer`1)\n  id: Sort``1(``0[],System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(T[],IComparer<T>)\n  nameWithType: Array.Sort(T[],IComparer<T>)\n  fullName: System.Array.Sort(T[],IComparer<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<T> (T[] array, System.Collections.Generic.IComparer<T> comparer);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer`1\n      description: Parameter description to be filled\n  overload: System.Array.Sort<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``1(``0[],System.Comparison`1)\n  id: Sort``1(``0[],System.Comparison`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(T[],Comparison<T>)\n  nameWithType: Array.Sort(T[],Comparison<T>)\n  fullName: System.Array.Sort(T[],Comparison<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<T> (T[] array, Comparison<T> comparison);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: comparison\n      type: System.Comparison`1\n      description: Parameter description to be filled\n  overload: System.Array.Sort<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``1(``0[],System.Int32,System.Int32)\n  id: Sort``1(``0[],System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(T[],Int32,Int32)\n  nameWithType: Array.Sort(T[],Int32,Int32)\n  fullName: System.Array.Sort(T[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<T> (T[] array, int index, int length);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Sort<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1)\n  id: Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(T[],Int32,Int32,IComparer<T>)\n  nameWithType: Array.Sort(T[],Int32,Int32,IComparer<T>)\n  fullName: System.Array.Sort(T[],Int32,Int32,IComparer<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<T> (T[] array, int index, int length, System.Collections.Generic.IComparer<T> comparer);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer`1\n      description: Parameter description to be filled\n  overload: System.Array.Sort<T>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``2(``0[],``1[])\n  id: Sort``2(``0[],``1[])\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(TKey[],TValue[])\n  nameWithType: Array.Sort(TKey[],TValue[])\n  fullName: System.Array.Sort(TKey[],TValue[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<TKey,TValue> (TKey[] keys, TValue[] items);\n    parameters:\n    - id: keys\n      type: TKey[]\n      description: Parameter description to be filled\n    - id: items\n      type: TValue[]\n      description: Parameter description to be filled\n  overload: System.Array.Sort<TKey,TValue>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})\n  id: Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(TKey[],TValue[],IComparer<TKey>)\n  nameWithType: Array.Sort(TKey[],TValue[],IComparer<TKey>)\n  fullName: System.Array.Sort(TKey[],TValue[],IComparer<TKey>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<TKey,TValue> (TKey[] keys, TValue[] items, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: keys\n      type: TKey[]\n      description: Parameter description to be filled\n    - id: items\n      type: TValue[]\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: Parameter description to be filled\n  overload: System.Array.Sort<TKey,TValue>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)\n  id: Sort``2(``0[],``1[],System.Int32,System.Int32)\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(TKey[],TValue[],Int32,Int32)\n  nameWithType: Array.Sort(TKey[],TValue[],Int32,Int32)\n  fullName: System.Array.Sort(TKey[],TValue[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<TKey,TValue> (TKey[] keys, TValue[] items, int index, int length);\n    parameters:\n    - id: keys\n      type: TKey[]\n      description: Parameter description to be filled\n    - id: items\n      type: TValue[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Array.Sort<TKey,TValue>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})\n  id: Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})\n  parent: System.Array\n  langs:\n  - csharp\n  name: Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)\n  nameWithType: Array.Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)\n  fullName: System.Array.Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Sort<TKey,TValue> (TKey[] keys, TValue[] items, int index, int length, System.Collections.Generic.IComparer<TKey> comparer);\n    parameters:\n    - id: keys\n      type: TKey[]\n      description: Parameter description to be filled\n    - id: items\n      type: TValue[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: length\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IComparer{TKey}\n      description: Parameter description to be filled\n  overload: System.Array.Sort<TKey,TValue>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.SyncRoot\n  id: SyncRoot\n  parent: System.Array\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: Array.SyncRoot\n  fullName: System.Array.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#ICollection#Count\n  id: System#Collections#ICollection#Count\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.ICollection.Count\n  nameWithType: Array.System.Collections.ICollection.Count\n  fullName: System.Array.System.Collections.ICollection.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int System.Collections.ICollection.Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: Array.System.Collections.IList.Add(Object)\n  fullName: System.Array.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: Array.System.Collections.IList.Clear()\n  fullName: System.Array.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: Array.System.Collections.IList.Contains(Object)\n  fullName: System.Array.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: Array.System.Collections.IList.IndexOf(Object)\n  fullName: System.Array.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: Array.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Array.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: Array.System.Collections.IList.Item(Int32)\n  fullName: System.Array.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: Array.System.Collections.IList.Remove(Object)\n  fullName: System.Array.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: Array.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Array.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: Array.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.Array.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: Array.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.Array.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.Array\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Array.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.Array.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Array.TrueForAll``1(``0[],System.Predicate`1)\n  id: TrueForAll``1(``0[],System.Predicate`1)\n  parent: System.Array\n  langs:\n  - csharp\n  name: TrueForAll(T[],Predicate<T>)\n  nameWithType: Array.TrueForAll(T[],Predicate<T>)\n  fullName: System.Array.TrueForAll(T[],Predicate<T>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool TrueForAll<T> (T[] array, Predicate<T> match);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Array.AsReadOnly``1(``0[])\n  parent: System.Array\n  isExternal: false\n  name: AsReadOnly(T[])\n  nameWithType: Array.AsReadOnly(T[])\n  fullName: System.Array.AsReadOnly(T[])\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Array.BinarySearch(System.Array,System.Object)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(Array,Object)\n  nameWithType: Array.BinarySearch(Array,Object)\n  fullName: System.Array.BinarySearch(Array,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(Array,Object,IComparer)\n  nameWithType: Array.BinarySearch(Array,Object,IComparer)\n  fullName: System.Array.BinarySearch(Array,Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(Array,Int32,Int32,Object)\n  nameWithType: Array.BinarySearch(Array,Int32,Int32,Object)\n  fullName: System.Array.BinarySearch(Array,Int32,Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(Array,Int32,Int32,Object,IComparer)\n  nameWithType: Array.BinarySearch(Array,Int32,Int32,Object,IComparer)\n  fullName: System.Array.BinarySearch(Array,Int32,Int32,Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.BinarySearch``1(``0[],``0)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(T[],T)\n  nameWithType: Array.BinarySearch(T[],T)\n  fullName: System.Array.BinarySearch(T[],T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(T[],T,IComparer<T>)\n  nameWithType: Array.BinarySearch(T[],T,IComparer<T>)\n  fullName: System.Array.BinarySearch(T[],T,IComparer<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.IComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(T[],Int32,Int32,T)\n  nameWithType: Array.BinarySearch(T[],Int32,Int32,T)\n  fullName: System.Array.BinarySearch(T[],Int32,Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  isExternal: false\n  name: BinarySearch(T[],Int32,Int32,T,IComparer<T>)\n  nameWithType: Array.BinarySearch(T[],Int32,Int32,T,IComparer<T>)\n  fullName: System.Array.BinarySearch(T[],Int32,Int32,T,IComparer<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.IComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Array.Clear(System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Clear(Array,Int32,Int32)\n  nameWithType: Array.Clear(Array,Int32,Int32)\n  fullName: System.Array.Clear(Array,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Clone\n  parent: System.Array\n  isExternal: false\n  name: Clone()\n  nameWithType: Array.Clone()\n  fullName: System.Array.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: ConstrainedCopy(Array,Int32,Array,Int32,Int32)\n  nameWithType: Array.ConstrainedCopy(Array,Int32,Array,Int32,Int32)\n  fullName: System.Array.ConstrainedCopy(Array,Int32,Array,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.ConvertAll``2(``0[],System.Converter`2)\n  parent: System.Array\n  isExternal: false\n  name: ConvertAll(TInput[],Converter<TInput,TOutput>)\n  nameWithType: Array.ConvertAll(TInput[],Converter<TInput,TOutput>)\n  fullName: System.Array.ConvertAll(TInput[],Converter<TInput,TOutput>)\n- uid: TOutput\n  parent: ''\n  isExternal: true\n  name: TOutput\n  nameWithType: TOutput\n  fullName: TOutput[]\n- uid: TInput\n  parent: ''\n  isExternal: true\n  name: TInput\n  nameWithType: TInput\n  fullName: TInput[]\n- uid: System.Converter`2\n  parent: System\n  isExternal: false\n  name: Converter<TInput,TOutput>\n  nameWithType: Converter<TInput,TOutput>\n  fullName: System.Converter<TInput,TOutput>\n- uid: System.Array.Copy(System.Array,System.Array,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Copy(Array,Array,Int32)\n  nameWithType: Array.Copy(Array,Array,Int32)\n  fullName: System.Array.Copy(Array,Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Copy(System.Array,System.Array,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: Copy(Array,Array,Int64)\n  nameWithType: Array.Copy(Array,Array,Int64)\n  fullName: System.Array.Copy(Array,Array,Int64)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Copy(Array,Int32,Array,Int32,Int32)\n  nameWithType: Array.Copy(Array,Int32,Array,Int32,Int32)\n  fullName: System.Array.Copy(Array,Int32,Array,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: Copy(Array,Int64,Array,Int64,Int64)\n  nameWithType: Array.Copy(Array,Int64,Array,Int64,Int64)\n  fullName: System.Array.Copy(Array,Int64,Array,Int64,Int64)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.CopyTo(System.Array,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: Array.CopyTo(Array,Int32)\n  fullName: System.Array.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.CopyTo(System.Array,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: CopyTo(Array,Int64)\n  nameWithType: Array.CopyTo(Array,Int64)\n  fullName: System.Array.CopyTo(Array,Int64)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.CreateInstance(System.Type,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: CreateInstance(Type,Int32)\n  nameWithType: Array.CreateInstance(Type,Int32)\n  fullName: System.Array.CreateInstance(Type,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.CreateInstance(System.Type,System.Int32[])\n  parent: System.Array\n  isExternal: false\n  name: CreateInstance(Type,Int32[])\n  nameWithType: Array.CreateInstance(Type,Int32[])\n  fullName: System.Array.CreateInstance(Type,Int32[])\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Array.CreateInstance(System.Type,System.Int64[])\n  parent: System.Array\n  isExternal: false\n  name: CreateInstance(Type,Int64[])\n  nameWithType: Array.CreateInstance(Type,Int64[])\n  fullName: System.Array.CreateInstance(Type,Int64[])\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64[]\n- uid: System.Array.CreateInstance(System.Type,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: CreateInstance(Type,Int32,Int32)\n  nameWithType: Array.CreateInstance(Type,Int32,Int32)\n  fullName: System.Array.CreateInstance(Type,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])\n  parent: System.Array\n  isExternal: false\n  name: CreateInstance(Type,Int32[],Int32[])\n  nameWithType: Array.CreateInstance(Type,Int32[],Int32[])\n  fullName: System.Array.CreateInstance(Type,Int32[],Int32[])\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: CreateInstance(Type,Int32,Int32,Int32)\n  nameWithType: Array.CreateInstance(Type,Int32,Int32,Int32)\n  fullName: System.Array.CreateInstance(Type,Int32,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Empty``1\n  parent: System.Array\n  isExternal: false\n  name: Empty()\n  nameWithType: Array.Empty()\n  fullName: System.Array.Empty()\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Array.Exists``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: Exists(T[],Predicate<T>)\n  nameWithType: Array.Exists(T[],Predicate<T>)\n  fullName: System.Array.Exists(T[],Predicate<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.Find``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: Find(T[],Predicate<T>)\n  nameWithType: Array.Find(T[],Predicate<T>)\n  fullName: System.Array.Find(T[],Predicate<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindAll``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindAll(T[],Predicate<T>)\n  nameWithType: Array.FindAll(T[],Predicate<T>)\n  fullName: System.Array.FindAll(T[],Predicate<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindIndex``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindIndex(T[],Predicate<T>)\n  nameWithType: Array.FindIndex(T[],Predicate<T>)\n  fullName: System.Array.FindIndex(T[],Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindIndex``1(``0[],System.Int32,System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindIndex(T[],Int32,Predicate<T>)\n  nameWithType: Array.FindIndex(T[],Int32,Predicate<T>)\n  fullName: System.Array.FindIndex(T[],Int32,Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindIndex(T[],Int32,Int32,Predicate<T>)\n  nameWithType: Array.FindIndex(T[],Int32,Int32,Predicate<T>)\n  fullName: System.Array.FindIndex(T[],Int32,Int32,Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindLast``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindLast(T[],Predicate<T>)\n  nameWithType: Array.FindLast(T[],Predicate<T>)\n  fullName: System.Array.FindLast(T[],Predicate<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindLastIndex``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindLastIndex(T[],Predicate<T>)\n  nameWithType: Array.FindLastIndex(T[],Predicate<T>)\n  fullName: System.Array.FindLastIndex(T[],Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindLastIndex(T[],Int32,Predicate<T>)\n  nameWithType: Array.FindLastIndex(T[],Int32,Predicate<T>)\n  fullName: System.Array.FindLastIndex(T[],Int32,Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: FindLastIndex(T[],Int32,Int32,Predicate<T>)\n  nameWithType: Array.FindLastIndex(T[],Int32,Int32,Predicate<T>)\n  fullName: System.Array.FindLastIndex(T[],Int32,Int32,Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.ForEach``1(``0[],System.Action`1)\n  parent: System.Array\n  isExternal: false\n  name: ForEach(T[],Action<T>)\n  nameWithType: Array.ForEach(T[],Action<T>)\n  fullName: System.Array.ForEach(T[],Action<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Action`1\n  parent: System\n  isExternal: false\n  name: Action<T>\n  nameWithType: Action<T>\n  fullName: System.Action<T>\n- uid: System.Array.GetEnumerator\n  parent: System.Array\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Array.GetEnumerator()\n  fullName: System.Array.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Array.GetLength(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetLength(Int32)\n  nameWithType: Array.GetLength(Int32)\n  fullName: System.Array.GetLength(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetLongLength(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetLongLength(Int32)\n  nameWithType: Array.GetLongLength(Int32)\n  fullName: System.Array.GetLongLength(Int32)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetLowerBound(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetLowerBound(Int32)\n  nameWithType: Array.GetLowerBound(Int32)\n  fullName: System.Array.GetLowerBound(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetUpperBound(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetUpperBound(Int32)\n  nameWithType: Array.GetUpperBound(Int32)\n  fullName: System.Array.GetUpperBound(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetValue(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int32)\n  nameWithType: Array.GetValue(Int32)\n  fullName: System.Array.GetValue(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetValue(System.Int32[])\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int32[])\n  nameWithType: Array.GetValue(Int32[])\n  fullName: System.Array.GetValue(Int32[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Array.GetValue(System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int64)\n  nameWithType: Array.GetValue(Int64)\n  fullName: System.Array.GetValue(Int64)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.GetValue(System.Int64[])\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int64[])\n  nameWithType: Array.GetValue(Int64[])\n  fullName: System.Array.GetValue(Int64[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64[]\n- uid: System.Array.GetValue(System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int32,Int32)\n  nameWithType: Array.GetValue(Int32,Int32)\n  fullName: System.Array.GetValue(Int32,Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetValue(System.Int64,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int64,Int64)\n  nameWithType: Array.GetValue(Int64,Int64)\n  fullName: System.Array.GetValue(Int64,Int64)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.GetValue(System.Int32,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int32,Int32,Int32)\n  nameWithType: Array.GetValue(Int32,Int32,Int32)\n  fullName: System.Array.GetValue(Int32,Int32,Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.GetValue(System.Int64,System.Int64,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: GetValue(Int64,Int64,Int64)\n  nameWithType: Array.GetValue(Int64,Int64,Int64)\n  fullName: System.Array.GetValue(Int64,Int64,Int64)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.IndexOf(System.Array,System.Object)\n  parent: System.Array\n  isExternal: false\n  name: IndexOf(Array,Object)\n  nameWithType: Array.IndexOf(Array,Object)\n  fullName: System.Array.IndexOf(Array,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.IndexOf(System.Array,System.Object,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: IndexOf(Array,Object,Int32)\n  nameWithType: Array.IndexOf(Array,Object,Int32)\n  fullName: System.Array.IndexOf(Array,Object,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: IndexOf(Array,Object,Int32,Int32)\n  nameWithType: Array.IndexOf(Array,Object,Int32,Int32)\n  fullName: System.Array.IndexOf(Array,Object,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.IndexOf``1(``0[],``0)\n  parent: System.Array\n  isExternal: false\n  name: IndexOf(T[],T)\n  nameWithType: Array.IndexOf(T[],T)\n  fullName: System.Array.IndexOf(T[],T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Array.IndexOf``1(``0[],``0,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: IndexOf(T[],T,Int32)\n  nameWithType: Array.IndexOf(T[],T,Int32)\n  fullName: System.Array.IndexOf(T[],T,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: IndexOf(T[],T,Int32,Int32)\n  nameWithType: Array.IndexOf(T[],T,Int32,Int32)\n  fullName: System.Array.IndexOf(T[],T,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Initialize\n  parent: System.Array\n  isExternal: false\n  name: Initialize()\n  nameWithType: Array.Initialize()\n  fullName: System.Array.Initialize()\n- uid: System.Array.IsFixedSize\n  parent: System.Array\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: Array.IsFixedSize\n  fullName: System.Array.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Array.IsReadOnly\n  parent: System.Array\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Array.IsReadOnly\n  fullName: System.Array.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Array.IsSynchronized\n  parent: System.Array\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: Array.IsSynchronized\n  fullName: System.Array.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Array.LastIndexOf(System.Array,System.Object)\n  parent: System.Array\n  isExternal: false\n  name: LastIndexOf(Array,Object)\n  nameWithType: Array.LastIndexOf(Array,Object)\n  fullName: System.Array.LastIndexOf(Array,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.LastIndexOf(System.Array,System.Object,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: LastIndexOf(Array,Object,Int32)\n  nameWithType: Array.LastIndexOf(Array,Object,Int32)\n  fullName: System.Array.LastIndexOf(Array,Object,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: LastIndexOf(Array,Object,Int32,Int32)\n  nameWithType: Array.LastIndexOf(Array,Object,Int32,Int32)\n  fullName: System.Array.LastIndexOf(Array,Object,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.LastIndexOf``1(``0[],``0)\n  parent: System.Array\n  isExternal: false\n  name: LastIndexOf(T[],T)\n  nameWithType: Array.LastIndexOf(T[],T)\n  fullName: System.Array.LastIndexOf(T[],T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Array.LastIndexOf``1(``0[],``0,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: LastIndexOf(T[],T,Int32)\n  nameWithType: Array.LastIndexOf(T[],T,Int32)\n  fullName: System.Array.LastIndexOf(T[],T,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: LastIndexOf(T[],T,Int32,Int32)\n  nameWithType: Array.LastIndexOf(T[],T,Int32,Int32)\n  fullName: System.Array.LastIndexOf(T[],T,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Length\n  parent: System.Array\n  isExternal: false\n  name: Length\n  nameWithType: Array.Length\n  fullName: System.Array.Length\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.LongLength\n  parent: System.Array\n  isExternal: false\n  name: LongLength\n  nameWithType: Array.LongLength\n  fullName: System.Array.LongLength\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.Rank\n  parent: System.Array\n  isExternal: false\n  name: Rank\n  nameWithType: Array.Rank\n  fullName: System.Array.Rank\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Resize``1(``0[]@,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Resize(T[],Int32)\n  nameWithType: Array.Resize(T[],Int32)\n  fullName: System.Array.Resize(T[],Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Reverse(System.Array)\n  parent: System.Array\n  isExternal: false\n  name: Reverse(Array)\n  nameWithType: Array.Reverse(Array)\n  fullName: System.Array.Reverse(Array)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array.Reverse(System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Reverse(Array,Int32,Int32)\n  nameWithType: Array.Reverse(Array,Int32,Int32)\n  fullName: System.Array.Reverse(Array,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.SetValue(System.Object,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int32)\n  nameWithType: Array.SetValue(Object,Int32)\n  fullName: System.Array.SetValue(Object,Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.SetValue(System.Object,System.Int32[])\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int32[])\n  nameWithType: Array.SetValue(Object,Int32[])\n  fullName: System.Array.SetValue(Object,Int32[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Array.SetValue(System.Object,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int64)\n  nameWithType: Array.SetValue(Object,Int64)\n  fullName: System.Array.SetValue(Object,Int64)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.SetValue(System.Object,System.Int64[])\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int64[])\n  nameWithType: Array.SetValue(Object,Int64[])\n  fullName: System.Array.SetValue(Object,Int64[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64[]\n- uid: System.Array.SetValue(System.Object,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int32,Int32)\n  nameWithType: Array.SetValue(Object,Int32,Int32)\n  fullName: System.Array.SetValue(Object,Int32,Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.SetValue(System.Object,System.Int64,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int64,Int64)\n  nameWithType: Array.SetValue(Object,Int64,Int64)\n  fullName: System.Array.SetValue(Object,Int64,Int64)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int32,Int32,Int32)\n  nameWithType: Array.SetValue(Object,Int32,Int32,Int32)\n  fullName: System.Array.SetValue(Object,Int32,Int32,Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)\n  parent: System.Array\n  isExternal: false\n  name: SetValue(Object,Int64,Int64,Int64)\n  nameWithType: Array.SetValue(Object,Int64,Int64,Int64)\n  fullName: System.Array.SetValue(Object,Int64,Int64,Int64)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Array.Sort(System.Array)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array)\n  nameWithType: Array.Sort(Array)\n  fullName: System.Array.Sort(Array)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array.Sort(System.Array,System.Array)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,Array)\n  nameWithType: Array.Sort(Array,Array)\n  fullName: System.Array.Sort(Array,Array)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array.Sort(System.Array,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,IComparer)\n  nameWithType: Array.Sort(Array,IComparer)\n  fullName: System.Array.Sort(Array,IComparer)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,Array,IComparer)\n  nameWithType: Array.Sort(Array,Array,IComparer)\n  fullName: System.Array.Sort(Array,Array,IComparer)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.Sort(System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,Int32,Int32)\n  nameWithType: Array.Sort(Array,Int32,Int32)\n  fullName: System.Array.Sort(Array,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,Array,Int32,Int32)\n  nameWithType: Array.Sort(Array,Array,Int32,Int32)\n  fullName: System.Array.Sort(Array,Array,Int32,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,Int32,Int32,IComparer)\n  nameWithType: Array.Sort(Array,Int32,Int32,IComparer)\n  fullName: System.Array.Sort(Array,Int32,Int32,IComparer)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: Sort(Array,Array,Int32,Int32,IComparer)\n  nameWithType: Array.Sort(Array,Array,Int32,Int32,IComparer)\n  fullName: System.Array.Sort(Array,Array,Int32,Int32,IComparer)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.Sort``1(``0[])\n  parent: System.Array\n  isExternal: false\n  name: Sort(T[])\n  nameWithType: Array.Sort(T[])\n  fullName: System.Array.Sort(T[])\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Array.Sort``1(``0[],System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  isExternal: false\n  name: Sort(T[],IComparer<T>)\n  nameWithType: Array.Sort(T[],IComparer<T>)\n  fullName: System.Array.Sort(T[],IComparer<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Collections.Generic.IComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Array.Sort``1(``0[],System.Comparison`1)\n  parent: System.Array\n  isExternal: false\n  name: Sort(T[],Comparison<T>)\n  nameWithType: Array.Sort(T[],Comparison<T>)\n  fullName: System.Array.Sort(T[],Comparison<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Comparison`1\n  parent: System\n  isExternal: false\n  name: Comparison<T>\n  nameWithType: Comparison<T>\n  fullName: System.Comparison<T>\n- uid: System.Array.Sort``1(``0[],System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Sort(T[],Int32,Int32)\n  nameWithType: Array.Sort(T[],Int32,Int32)\n  fullName: System.Array.Sort(T[],Int32,Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer`1)\n  parent: System.Array\n  isExternal: false\n  name: Sort(T[],Int32,Int32,IComparer<T>)\n  nameWithType: Array.Sort(T[],Int32,Int32,IComparer<T>)\n  fullName: System.Array.Sort(T[],Int32,Int32,IComparer<T>)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<T>\n  nameWithType: IComparer<T>\n  fullName: System.Collections.Generic.IComparer<T>\n- uid: System.Array.Sort``2(``0[],``1[])\n  parent: System.Array\n  isExternal: false\n  name: Sort(TKey[],TValue[])\n  nameWithType: Array.Sort(TKey[],TValue[])\n  fullName: System.Array.Sort(TKey[],TValue[])\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey[]\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n- uid: System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})\n  parent: System.Array\n  isExternal: false\n  name: Sort(TKey[],TValue[],IComparer<TKey>)\n  nameWithType: Array.Sort(TKey[],TValue[],IComparer<TKey>)\n  fullName: System.Array.Sort(TKey[],TValue[],IComparer<TKey>)\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey[]\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n- uid: System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: Sort(TKey[],TValue[],Int32,Int32)\n  nameWithType: Array.Sort(TKey[],TValue[],Int32,Int32)\n  fullName: System.Array.Sort(TKey[],TValue[],Int32,Int32)\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey[]\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})\n  parent: System.Array\n  isExternal: false\n  name: Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)\n  nameWithType: Array.Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)\n  fullName: System.Array.Sort(TKey[],TValue[],Int32,Int32,IComparer<TKey>)\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey[]\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.IComparer{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IComparer<TKey>\n  nameWithType: IComparer<TKey>\n  fullName: System.Collections.Generic.IComparer<TKey>\n- uid: System.Array.SyncRoot\n  parent: System.Array\n  isExternal: false\n  name: SyncRoot\n  nameWithType: Array.SyncRoot\n  fullName: System.Array.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.System#Collections#ICollection#Count\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.ICollection.Count\n  nameWithType: Array.System.Collections.ICollection.Count\n  fullName: System.Array.System.Collections.ICollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.System#Collections#IList#Add(System.Object)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: Array.System.Collections.IList.Add(Object)\n  fullName: System.Array.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.System#Collections#IList#Clear\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: Array.System.Collections.IList.Clear()\n  fullName: System.Array.System.Collections.IList.Clear()\n- uid: System.Array.System#Collections#IList#Contains(System.Object)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: Array.System.Collections.IList.Contains(Object)\n  fullName: System.Array.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: Array.System.Collections.IList.IndexOf(Object)\n  fullName: System.Array.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: Array.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Array.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.System#Collections#IList#Item(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: Array.System.Collections.IList.Item(Int32)\n  fullName: System.Array.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.System#Collections#IList#Remove(System.Object)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: Array.System.Collections.IList.Remove(Object)\n  fullName: System.Array.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Array.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: Array.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Array.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: Array.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.Array.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: Array.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.Array.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.Array\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: Array.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.Array.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.Array.TrueForAll``1(``0[],System.Predicate`1)\n  parent: System.Array\n  isExternal: false\n  name: TrueForAll(T[],Predicate<T>)\n  nameWithType: Array.TrueForAll(T[],Predicate<T>)\n  fullName: System.Array.TrueForAll(T[],Predicate<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Array.BinarySearch*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.BinarySearch<T>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.Copy*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.CopyTo*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.CreateInstance*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.FindIndex<T>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.FindLastIndex<T>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.GetValue*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.IndexOf*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.IndexOf<T>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.LastIndexOf*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.LastIndexOf<T>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.Reverse*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.SetValue*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.Sort*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.Sort<T>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n- uid: System.Array.Sort<TKey,TValue>*\n  parent: System.Array\n  isExternal: false\n  nameWithType: Array.\n"}