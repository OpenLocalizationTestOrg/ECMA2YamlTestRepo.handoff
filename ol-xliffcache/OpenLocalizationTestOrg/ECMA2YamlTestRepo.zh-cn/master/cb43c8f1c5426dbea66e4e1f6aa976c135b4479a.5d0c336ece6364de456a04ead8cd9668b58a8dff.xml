{"nodes":[{"pos":[610,650],"content":"ReadOnlyMetadataCollection<ph id=\"ph1\">&lt;T&gt;</ph>+Enumerator","needQuote":true,"needEscape":true,"source":"ReadOnlyMetadataCollection<T>+Enumerator"},{"pos":[999,1033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1394,1401],"content":"Current","needQuote":true,"needEscape":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[1739,1773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2020,2029],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[2589,2599],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[2972,3006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3249,3256],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[3884,3922],"content":"System.Collections.IEnumerator.Current","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerator.Current","pos":[0,38]}]},{"pos":[4363,4397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4511,4527],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[4711,4718],"content":"Current","needQuote":true,"needEscape":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[4919,4920],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[5136,5145],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[5485,5495],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[5720,5727],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5960,5967],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[6333,6371],"content":"System.Collections.IEnumerator.Current","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerator.Current","pos":[0,38]}]},{"pos":[6651,6657],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  id: ReadOnlyMetadataCollection`1+Enumerator\n  children:\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Current\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Dispose\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.MoveNext\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Reset\n  - System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.System#Collections#IEnumerator#Current\n  langs:\n  - csharp\n  name: ReadOnlyMetadataCollection<T>+Enumerator\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator\n  type: Struct\n  syntax:\n    content: 'public struct ReadOnlyMetadataCollection<T>.Enumerator : System.Collections.Generic.IEnumerator<T> where T : MetadataItem'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.Generic.IEnumerator<T>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Current\n  id: Current\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  langs:\n  - csharp\n  name: Current\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.Current\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.Current\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: public T Current { get; }\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Dispose\n  id: Dispose\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.Dispose()\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.Dispose()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.MoveNext\n  id: MoveNext\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.MoveNext()\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.MoveNext()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: public bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Reset\n  id: Reset\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.Reset()\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.Reset()\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: public void Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.System#Collections#IEnumerator#Current\n  id: System#Collections#IEnumerator#Current\n  isEii: true\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  langs:\n  - csharp\n  name: System.Collections.IEnumerator.Current\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.System.Collections.IEnumerator.Current\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Metadata.Edm\n  syntax:\n    content: object System.Collections.IEnumerator.Current { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Current\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  isExternal: false\n  name: Current\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.Current\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.Current\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Dispose\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  isExternal: false\n  name: Dispose()\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.Dispose()\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.Dispose()\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.MoveNext\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  isExternal: false\n  name: MoveNext()\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.MoveNext()\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.Reset\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  isExternal: false\n  name: Reset()\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.Reset()\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.Reset()\n- uid: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator.System#Collections#IEnumerator#Current\n  parent: System.Data.Metadata.Edm.ReadOnlyMetadataCollection`1+Enumerator\n  isExternal: false\n  name: System.Collections.IEnumerator.Current\n  nameWithType: ReadOnlyMetadataCollection<T>+Enumerator.System.Collections.IEnumerator.Current\n  fullName: System.Data.Metadata.Edm.ReadOnlyMetadataCollection<T>+Enumerator.System.Collections.IEnumerator.Current\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}