{"nodes":[{"pos":[768,788],"content":"CompositionException","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException","pos":[0,20]}]},{"pos":[2182,2204],"content":"CompositionException()","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException()","pos":[0,22]}]},{"pos":[2956,3007],"content":"CompositionException(IEnumerable<ph id=\"ph1\">&lt;CompositionError&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CompositionException(IEnumerable<CompositionError>)"},{"pos":[3642,3676],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3931,3959],"content":"CompositionException(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException(String)","pos":[0,28]}]},{"pos":[4389,4423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4712,4750],"content":"CompositionException(String,Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException(String,Exception)","pos":[0,38]}]},{"pos":[5226,5260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5334,5368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5593,5599],"content":"Errors","needQuote":true,"needEscape":true,"nodes":[{"content":"Errors","pos":[0,6]}]},{"pos":[6127,6161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6388,6395],"content":"Message","needQuote":true,"needEscape":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[6752,6786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7019,7029],"content":"RootCauses","needQuote":true,"needEscape":true,"nodes":[{"content":"RootCauses","pos":[0,10]}]},{"pos":[7494,7528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7642,7658],"content":"System.Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Exception","pos":[0,16]}]},{"pos":[7820,7842],"content":"CompositionException()","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException()","pos":[0,22]}]},{"pos":[8246,8297],"content":"CompositionException(IEnumerable<ph id=\"ph1\">&lt;CompositionError&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CompositionException(IEnumerable<CompositionError>)"},{"pos":[8669,8698],"content":"IEnumerable<ph id=\"ph1\">&lt;CompositionError&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CompositionError>"},{"pos":[9024,9052],"content":"CompositionException(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException(String)","pos":[0,28]}]},{"pos":[9281,9287],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9530,9568],"content":"CompositionException(String,Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompositionException(String,Exception)","pos":[0,38]}]},{"pos":[9817,9823],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9942,9951],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[10169,10175],"content":"Errors","needQuote":true,"needEscape":true,"nodes":[{"content":"Errors","pos":[0,6]}]},{"pos":[10472,10508],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;CompositionError&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<CompositionError>"},{"pos":[10839,10846],"content":"Message","needQuote":true,"needEscape":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[11033,11039],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11255,11265],"content":"RootCauses","needQuote":true,"needEscape":true,"nodes":[{"content":"RootCauses","pos":[0,10]}]},{"pos":[11536,11565],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;Exception&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<Exception>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.CompositionException\n  id: CompositionException\n  children:\n  - System.ComponentModel.Composition.CompositionException.#ctor\n  - System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})\n  - System.ComponentModel.Composition.CompositionException.#ctor(System.String)\n  - System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)\n  - System.ComponentModel.Composition.CompositionException.Errors\n  - System.ComponentModel.Composition.CompositionException.Message\n  - System.ComponentModel.Composition.CompositionException.RootCauses\n  langs:\n  - csharp\n  name: CompositionException\n  nameWithType: CompositionException\n  fullName: System.ComponentModel.Composition.CompositionException\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"{Message}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.ComponentModel.Composition.CompositionExceptionDebuggerProxy))]\n\n      public class CompositionException : Exception\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.#ctor\n  id: '#ctor'\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: CompositionException()\n  nameWithType: CompositionException.CompositionException()\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException()\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public CompositionException ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})'\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: CompositionException(IEnumerable<CompositionError>)\n  nameWithType: CompositionException.CompositionException(IEnumerable<CompositionError>)\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException(IEnumerable<CompositionError>)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public CompositionException (System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.CompositionError> errors);\n    parameters:\n    - id: errors\n      type: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: CompositionException(String)\n  nameWithType: CompositionException.CompositionException(String)\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException(String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public CompositionException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: CompositionException(String,Exception)\n  nameWithType: CompositionException.CompositionException(String,Exception)\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public CompositionException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n    - id: innerException\n      type: System.Exception\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.Errors\n  id: Errors\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: Errors\n  nameWithType: CompositionException.Errors\n  fullName: System.ComponentModel.Composition.CompositionException.Errors\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.CompositionError> Errors { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.CompositionError}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.Message\n  id: Message\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: CompositionException.Message\n  fullName: System.ComponentModel.Composition.CompositionException.Message\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ComponentModel.Composition.CompositionException.RootCauses\n  id: RootCauses\n  parent: System.ComponentModel.Composition.CompositionException\n  langs:\n  - csharp\n  name: RootCauses\n  nameWithType: CompositionException.RootCauses\n  fullName: System.ComponentModel.Composition.CompositionException.RootCauses\n  type: Property\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<Exception> RootCauses { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Exception\n  isExternal: false\n  name: System.Exception\n- uid: System.ComponentModel.Composition.CompositionException.#ctor\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: CompositionException()\n  nameWithType: CompositionException.CompositionException()\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException()\n- uid: System.ComponentModel.Composition.CompositionException.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError})\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: CompositionException(IEnumerable<CompositionError>)\n  nameWithType: CompositionException.CompositionException(IEnumerable<CompositionError>)\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException(IEnumerable<CompositionError>)\n- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.CompositionError}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CompositionError>\n  nameWithType: IEnumerable<CompositionError>\n  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.CompositionError>\n- uid: System.ComponentModel.Composition.CompositionException.#ctor(System.String)\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: CompositionException(String)\n  nameWithType: CompositionException.CompositionException(String)\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.CompositionException.#ctor(System.String,System.Exception)\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: CompositionException(String,Exception)\n  nameWithType: CompositionException.CompositionException(String,Exception)\n  fullName: System.ComponentModel.Composition.CompositionException.CompositionException(String,Exception)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ComponentModel.Composition.CompositionException.Errors\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: Errors\n  nameWithType: CompositionException.Errors\n  fullName: System.ComponentModel.Composition.CompositionException.Errors\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.ComponentModel.Composition.CompositionError}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<CompositionError>\n  nameWithType: ReadOnlyCollection<CompositionError>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.ComponentModel.Composition.CompositionError>\n- uid: System.ComponentModel.Composition.CompositionException.Message\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: Message\n  nameWithType: CompositionException.Message\n  fullName: System.ComponentModel.Composition.CompositionException.Message\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.Composition.CompositionException.RootCauses\n  parent: System.ComponentModel.Composition.CompositionException\n  isExternal: false\n  name: RootCauses\n  nameWithType: CompositionException.RootCauses\n  fullName: System.ComponentModel.Composition.CompositionException.RootCauses\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Exception}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<Exception>\n  nameWithType: ReadOnlyCollection<Exception>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Exception>\n"}