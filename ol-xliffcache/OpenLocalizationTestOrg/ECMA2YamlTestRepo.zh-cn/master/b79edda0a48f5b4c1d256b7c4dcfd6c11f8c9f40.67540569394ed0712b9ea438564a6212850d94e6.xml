{"nodes":[{"pos":[718,747],"content":"CanExecuteChangedEventManager","needQuote":true,"needEscape":true,"nodes":[{"content":"CanExecuteChangedEventManager","pos":[0,29]}]},{"pos":[1426,1470],"content":"AddHandler(ICommand,EventHandler<ph id=\"ph1\">&lt;EventArgs&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AddHandler(ICommand,EventHandler<EventArgs>)"},{"pos":[1974,2008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2096,2130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2433,2461],"content":"Purge(Object,Object,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Purge(Object,Object,Boolean)","pos":[0,28]}]},{"pos":[2889,2923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2984,3018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3084,3118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3177,3211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3580,3627],"content":"RemoveHandler(ICommand,EventHandler<ph id=\"ph1\">&lt;EventArgs&gt;</ph>)","needQuote":true,"needEscape":true,"source":"RemoveHandler(ICommand,EventHandler<EventArgs>)"},{"pos":[4140,4174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4262,4296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4559,4581],"content":"StartListening(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartListening(Object)","pos":[0,22]}]},{"pos":[4978,5012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5273,5294],"content":"StopListening(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StopListening(Object)","pos":[0,21]}]},{"pos":[5688,5722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5851,5882],"content":"System.Windows.WeakEventManager","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.WeakEventManager","pos":[0,31]}]},{"pos":[6110,6154],"content":"AddHandler(ICommand,EventHandler<ph id=\"ph1\">&lt;EventArgs&gt;</ph>)","needQuote":true,"needEscape":true,"source":"AddHandler(ICommand,EventHandler<EventArgs>)"},{"pos":[6449,6457],"content":"ICommand","needQuote":true,"needEscape":true,"nodes":[{"content":"ICommand","pos":[0,8]}]},{"pos":[6615,6638],"content":"EventHandler<ph id=\"ph1\">&lt;EventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<EventArgs>"},{"pos":[6926,6954],"content":"Purge(Object,Object,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Purge(Object,Object,Boolean)","pos":[0,28]}]},{"pos":[7189,7196],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7314,7320],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7436,7442],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7559,7566],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7848,7895],"content":"RemoveHandler(ICommand,EventHandler<ph id=\"ph1\">&lt;EventArgs&gt;</ph>)","needQuote":true,"needEscape":true,"source":"RemoveHandler(ICommand,EventHandler<EventArgs>)"},{"pos":[8196,8204],"content":"ICommand","needQuote":true,"needEscape":true,"nodes":[{"content":"ICommand","pos":[0,8]}]},{"pos":[8362,8385],"content":"EventHandler<ph id=\"ph1\">&lt;EventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<EventArgs>"},{"pos":[8653,8675],"content":"StartListening(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartListening(Object)","pos":[0,22]}]},{"pos":[8897,8903],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9129,9150],"content":"StopListening(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StopListening(Object)","pos":[0,21]}]},{"pos":[9370,9376],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.CanExecuteChangedEventManager\n  id: CanExecuteChangedEventManager\n  children:\n  - System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  - System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  - System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  - System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  - System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  langs:\n  - csharp\n  name: CanExecuteChangedEventManager\n  nameWithType: CanExecuteChangedEventManager\n  fullName: System.Windows.Input.CanExecuteChangedEventManager\n  type: Class\n  syntax:\n    content: 'public class CanExecuteChangedEventManager : System.Windows.WeakEventManager'\n  inheritance:\n  - System.Windows.WeakEventManager\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  id: AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: AddHandler(ICommand,EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public static void AddHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.Input.ICommand\n      description: Parameter description to be filled\n    - id: handler\n      type: System.EventHandler{System.EventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  id: Purge(System.Object,System.Object,System.Boolean)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: Purge(Object,Object,Boolean)\n  nameWithType: CanExecuteChangedEventManager.Purge(Object,Object,Boolean)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge(Object,Object,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override bool Purge (object source, object data, bool purgeAll);\n    parameters:\n    - id: source\n      type: System.Object\n      description: Parameter description to be filled\n    - id: data\n      type: System.Object\n      description: Parameter description to be filled\n    - id: purgeAll\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  id: RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: RemoveHandler(ICommand,EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public static void RemoveHandler (System.Windows.Input.ICommand source, EventHandler<EventArgs> handler);\n    parameters:\n    - id: source\n      type: System.Windows.Input.ICommand\n      description: Parameter description to be filled\n    - id: handler\n      type: System.EventHandler{System.EventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  id: StartListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: StartListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StartListening(Object)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void StartListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  id: StopListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  langs:\n  - csharp\n  name: StopListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StopListening(Object)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void StopListening (object source);\n    parameters:\n    - id: source\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.WeakEventManager\n  isExternal: false\n  name: System.Windows.WeakEventManager\n- uid: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: AddHandler(ICommand,EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.AddHandler(ICommand,EventHandler<EventArgs>)\n- uid: System.Windows.Input.ICommand\n  parent: System.Windows.Input\n  isExternal: true\n  name: ICommand\n  nameWithType: ICommand\n  fullName: System.Windows.Input.ICommand\n- uid: System.EventHandler{System.EventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventArgs>\n  nameWithType: EventHandler<EventArgs>\n  fullName: System.EventHandler<System.EventArgs>\n- uid: System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: Purge(Object,Object,Boolean)\n  nameWithType: CanExecuteChangedEventManager.Purge(Object,Object,Boolean)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.Purge(Object,Object,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: RemoveHandler(ICommand,EventHandler<EventArgs>)\n  nameWithType: CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(ICommand,EventHandler<EventArgs>)\n- uid: System.Windows.Input.ICommand\n  parent: System.Windows.Input\n  isExternal: true\n  name: ICommand\n  nameWithType: ICommand\n  fullName: System.Windows.Input.ICommand\n- uid: System.EventHandler{System.EventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventArgs>\n  nameWithType: EventHandler<EventArgs>\n  fullName: System.EventHandler<System.EventArgs>\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: StartListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StartListening(Object)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.StartListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)\n  parent: System.Windows.Input.CanExecuteChangedEventManager\n  isExternal: false\n  name: StopListening(Object)\n  nameWithType: CanExecuteChangedEventManager.StopListening(Object)\n  fullName: System.Windows.Input.CanExecuteChangedEventManager.StopListening(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}