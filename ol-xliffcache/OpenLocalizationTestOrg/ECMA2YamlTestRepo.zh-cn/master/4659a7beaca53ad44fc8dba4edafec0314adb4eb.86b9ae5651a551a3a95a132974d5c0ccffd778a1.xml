{"nodes":[{"pos":[958,973],"content":"EventLogWatcher","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher","pos":[0,15]}]},{"pos":[1831,1861],"content":"EventLogWatcher(EventLogQuery)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(EventLogQuery)","pos":[0,30]}]},{"pos":[2343,2377],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2624,2647],"content":"EventLogWatcher(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(String)","pos":[0,23]}]},{"pos":[3026,3060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3475,3519],"content":"EventLogWatcher(EventLogQuery,EventBookmark)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(EventLogQuery,EventBookmark)","pos":[0,44]}]},{"pos":[4088,4122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4222,4256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4701,4753],"content":"EventLogWatcher(EventLogQuery,EventBookmark,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(EventLogQuery,EventBookmark,Boolean)","pos":[0,52]}]},{"pos":[5363,5397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5497,5531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5607,5641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5860,5869],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6466,6482],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6859,6893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7184,7191],"content":"Enabled","needQuote":true,"needEscape":true,"nodes":[{"content":"Enabled","pos":[0,7]}]},{"pos":[7513,7547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7788,7806],"content":"EventRecordWritten","needQuote":true,"needEscape":true,"nodes":[{"content":"EventRecordWritten","pos":[0,18]}]},{"pos":[8292,8326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8437,8450],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[8654,8684],"content":"EventLogWatcher(EventLogQuery)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(EventLogQuery)","pos":[0,30]}]},{"pos":[8971,8984],"content":"EventLogQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery","pos":[0,13]}]},{"pos":[9244,9267],"content":"EventLogWatcher(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(String)","pos":[0,23]}]},{"pos":[9477,9483],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9785,9829],"content":"EventLogWatcher(EventLogQuery,EventBookmark)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(EventLogQuery,EventBookmark)","pos":[0,44]}]},{"pos":[10144,10157],"content":"EventLogQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery","pos":[0,13]}]},{"pos":[10378,10391],"content":"EventBookmark","needQuote":true,"needEscape":true,"nodes":[{"content":"EventBookmark","pos":[0,13]}]},{"pos":[10750,10802],"content":"EventLogWatcher(EventLogQuery,EventBookmark,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogWatcher(EventLogQuery,EventBookmark,Boolean)","pos":[0,52]}]},{"pos":[11133,11146],"content":"EventLogQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery","pos":[0,13]}]},{"pos":[11367,11380],"content":"EventBookmark","needQuote":true,"needEscape":true,"nodes":[{"content":"EventBookmark","pos":[0,13]}]},{"pos":[11539,11546],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11753,11762],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[12049,12065],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[12262,12269],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12476,12483],"content":"Enabled","needQuote":true,"needEscape":true,"nodes":[{"content":"Enabled","pos":[0,7]}]},{"pos":[12662,12669],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12887,12905],"content":"EventRecordWritten","needQuote":true,"needEscape":true,"nodes":[{"content":"EventRecordWritten","pos":[0,18]}]},{"pos":[13175,13216],"content":"EventHandler<ph id=\"ph1\">&lt;EventRecordWrittenEventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<EventRecordWrittenEventArgs>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  id: EventLogWatcher\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled\n  - System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\n  langs:\n  - csharp\n  name: EventLogWatcher\n  nameWithType: EventLogWatcher\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  type: Class\n  syntax:\n    content: 'public class EventLogWatcher : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)\n  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: EventLogWatcher(EventLogQuery)\n  nameWithType: EventLogWatcher.EventLogWatcher(EventLogQuery)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(EventLogQuery)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery);\n    parameters:\n    - id: eventQuery\n      type: System.Diagnostics.Eventing.Reader.EventLogQuery\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: EventLogWatcher(String)\n  nameWithType: EventLogWatcher.EventLogWatcher(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogWatcher (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)\n  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: EventLogWatcher(EventLogQuery,EventBookmark)\n  nameWithType: EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark);\n    parameters:\n    - id: eventQuery\n      type: System.Diagnostics.Eventing.Reader.EventLogQuery\n      description: Parameter description to be filled\n    - id: bookmark\n      type: System.Diagnostics.Eventing.Reader.EventBookmark\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)\n  id: '#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: EventLogWatcher(EventLogQuery,EventBookmark,Boolean)\n  nameWithType: EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark,Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark,Boolean)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogWatcher (System.Diagnostics.Eventing.Reader.EventLogQuery eventQuery, System.Diagnostics.Eventing.Reader.EventBookmark bookmark, bool readExistingEvents);\n    parameters:\n    - id: eventQuery\n      type: System.Diagnostics.Eventing.Reader.EventLogQuery\n      description: Parameter description to be filled\n    - id: bookmark\n      type: System.Diagnostics.Eventing.Reader.EventBookmark\n      description: Parameter description to be filled\n    - id: readExistingEvents\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventLogWatcher.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventLogWatcher.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled\n  id: Enabled\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: EventLogWatcher.Enabled\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\n  id: EventRecordWritten\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  langs:\n  - csharp\n  name: EventRecordWritten\n  nameWithType: EventLogWatcher.EventRecordWritten\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\n  type: Event\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public event EventHandler<System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs> EventRecordWritten;\n    return:\n      type: System.EventHandler{System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery)\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: EventLogWatcher(EventLogQuery)\n  nameWithType: EventLogWatcher.EventLogWatcher(EventLogQuery)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(EventLogQuery)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: EventLogWatcher(String)\n  nameWithType: EventLogWatcher.EventLogWatcher(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark)\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: EventLogWatcher(EventLogQuery,EventBookmark)\n  nameWithType: EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n- uid: System.Diagnostics.Eventing.Reader.EventBookmark\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventBookmark\n  nameWithType: EventBookmark\n  fullName: System.Diagnostics.Eventing.Reader.EventBookmark\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.#ctor(System.Diagnostics.Eventing.Reader.EventLogQuery,System.Diagnostics.Eventing.Reader.EventBookmark,System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: EventLogWatcher(EventLogQuery,EventBookmark,Boolean)\n  nameWithType: EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark,Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventLogWatcher(EventLogQuery,EventBookmark,Boolean)\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n- uid: System.Diagnostics.Eventing.Reader.EventBookmark\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventBookmark\n  nameWithType: EventBookmark\n  fullName: System.Diagnostics.Eventing.Reader.EventBookmark\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventLogWatcher.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose()\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventLogWatcher.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: Enabled\n  nameWithType: EventLogWatcher.Enabled\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  name: EventRecordWritten\n  nameWithType: EventLogWatcher.EventRecordWritten\n  fullName: System.Diagnostics.Eventing.Reader.EventLogWatcher.EventRecordWritten\n- uid: System.EventHandler{System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<EventRecordWrittenEventArgs>\n  nameWithType: EventHandler<EventRecordWrittenEventArgs>\n  fullName: System.EventHandler<System.Diagnostics.Eventing.Reader.EventRecordWrittenEventArgs>\n- uid: System.Diagnostics.Eventing.Reader.EventLogWatcher.Dispose*\n  parent: System.Diagnostics.Eventing.Reader.EventLogWatcher\n  isExternal: false\n  nameWithType: EventLogWatcher.\n"}