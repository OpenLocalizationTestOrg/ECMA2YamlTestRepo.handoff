{"nodes":[{"pos":[3400,3441],"content":"ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator<TValue>"},{"pos":[3803,3837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4499,4534],"content":"ConstReverseBidirectionalIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator()","pos":[0,35]}]},{"pos":[5336,5404],"content":"ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)","pos":[0,68]}]},{"pos":[6069,6103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6474,6539],"content":"ConstReverseBidirectionalIterator(IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)"},{"pos":[7184,7218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7597,7660],"content":"ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)","pos":[0,63]}]},{"pos":[8303,8337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8586,8592],"content":"base()","needQuote":true,"needEscape":true,"nodes":[{"content":"base()","pos":[0,6]}]},{"pos":[9079,9113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9364,9371],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[9768,9802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10061,10072],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[10481,10515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10908,10951],"content":"equal_to(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ConstReverseBidirectionalIterator)","pos":[0,43]}]},{"pos":[11541,11575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11634,11668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12118,12150],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[12698,12732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12791,12825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13165,13171],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[13900,13944],"content":"op_Assign(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ConstReverseBidirectionalIterator)","pos":[0,44]}]},{"pos":[14601,14635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14746,14780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15165,15204],"content":"op_Assign(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ReverseBidirectionalIterator)","pos":[0,39]}]},{"pos":[15841,15875],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15986,16020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16427,16482],"content":"op_Decrement(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseBidirectionalIterator<TValue>)"},{"pos":[17158,17192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17300,17334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17767,17828],"content":"op_Decrement(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[18525,18559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18618,18652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18760,18794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19193,19239],"content":"op_Equality(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConstReverseBidirectionalIterator)","pos":[0,46]}]},{"pos":[19840,19874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19933,19967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20332,20367],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[20918,20952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21011,21045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21308,21319],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[21825,21859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22266,22321],"content":"op_Increment(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseBidirectionalIterator<TValue>)"},{"pos":[22997,23031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23139,23173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23606,23667],"content":"op_Increment(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[24364,24398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24457,24491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24599,24633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25036,25084],"content":"op_Inequality(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConstReverseBidirectionalIterator)","pos":[0,48]}]},{"pos":[25691,25725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25784,25818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26187,26224],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[26781,26815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26874,26908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27321,27374],"content":"op_MemberSelection(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ConstReverseBidirectionalIterator)","pos":[0,53]}]},{"pos":[28003,28037],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28089,28123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28542,28598],"content":"op_PointerDereference(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ConstReverseBidirectionalIterator)","pos":[0,56]}]},{"pos":[29236,29270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29322,29356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29605,29611],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[30196,30203],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[30599,30633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30744,30757],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[30947,30982],"content":"ConstReverseBidirectionalIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator()","pos":[0,35]}]},{"pos":[31457,31525],"content":"ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)","pos":[0,68]}]},{"pos":[31953,31986],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[32364,32429],"content":"ConstReverseBidirectionalIterator(IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)"},{"pos":[32843,32873],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[33249,33312],"content":"ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)","pos":[0,63]}]},{"pos":[33725,33753],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[34061,34067],"content":"base()","needQuote":true,"needEscape":true,"nodes":[{"content":"base()","pos":[0,6]}]},{"pos":[34363,34393],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[34706,34713],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[34941,34947],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35190,35201],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[35437,35443],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35753,35796],"content":"equal_to(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ConstReverseBidirectionalIterator)","pos":[0,43]}]},{"pos":[36097,36104],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36300,36333],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[36706,36738],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[37017,37024],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37204,37226],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[37522,37528],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[37949,37993],"content":"op_Assign(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ConstReverseBidirectionalIterator)","pos":[0,44]}]},{"pos":[38373,38406],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[38680,38713],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[39099,39138],"content":"op_Assign(ReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ReverseBidirectionalIterator)","pos":[0,39]}]},{"pos":[39508,39541],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[39810,39838],"content":"ReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseBidirectionalIterator","pos":[0,28]}]},{"pos":[40225,40280],"content":"op_Decrement(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseBidirectionalIterator<TValue>)"},{"pos":[40685,40726],"content":"ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator<TValue>"},{"pos":[41152,41213],"content":"op_Decrement(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[41630,41671],"content":"ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator<TValue>"},{"pos":[41882,41887],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42198,42244],"content":"op_Equality(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ConstReverseBidirectionalIterator)","pos":[0,46]}]},{"pos":[42551,42558],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42754,42787],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[43163,43198],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[43483,43490],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43670,43692],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[43995,44006],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[44312,44342],"content":"IBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IBidirectionalIterator<TValue>"},{"pos":[44733,44788],"content":"op_Increment(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseBidirectionalIterator<TValue>)"},{"pos":[45193,45234],"content":"ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator<TValue>"},{"pos":[45660,45721],"content":"op_Increment(ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)"},{"pos":[46138,46179],"content":"ConstReverseBidirectionalIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ConstReverseBidirectionalIterator<TValue>"},{"pos":[46390,46395],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46708,46756],"content":"op_Inequality(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ConstReverseBidirectionalIterator)","pos":[0,48]}]},{"pos":[47067,47074],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47270,47303],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[47681,47718],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[48007,48014],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[48194,48216],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[48594,48647],"content":"op_MemberSelection(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ConstReverseBidirectionalIterator)","pos":[0,53]}]},{"pos":[49045,49078],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[49481,49537],"content":"op_PointerDereference(ConstReverseBidirectionalIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ConstReverseBidirectionalIterator)","pos":[0,56]}]},{"pos":[49941,49974],"content":"ConstReverseBidirectionalIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstReverseBidirectionalIterator","pos":[0,33]}]},{"pos":[50292,50298],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[50647,50654],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[50883,50890],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  id: ConstReverseBidirectionalIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid\n  langs:\n  - csharp\n  name: ConstReverseBidirectionalIterator<TValue>\n  nameWithType: ConstReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ConstReverseBidirectionalIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstReverseBidirectionalIterator()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseBidirectionalIterator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ConstReverseBidirectionalIterator (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Iter);\n    parameters:\n    - id: _Iter\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base\n  id: base\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: base()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.base()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> base ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.equal_to(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.equal_to(ConstReverseBidirectionalIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Assign(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Assign(ConstReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstReverseBidirectionalIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Equality(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Equality(ConstReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstReverseBidirectionalIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Inequality(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Inequality(ConstReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_MemberSelection(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_MemberSelection(ConstReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_PointerDereference(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_PointerDereference(ConstReverseBidirectionalIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: ConstReverseBidirectionalIterator()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ConstReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(IBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.ConstReverseBidirectionalIterator(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: base()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.base()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.base()\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.container()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.equal_to(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.equal_to(ConstReverseBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Assign(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Assign(ConstReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Assign(ReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Assign(ReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ReverseBidirectionalIterator\n  nameWithType: ReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ConstReverseBidirectionalIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseBidirectionalIterator<TValue>\n  nameWithType: ConstReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Decrement(ConstReverseBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseBidirectionalIterator<TValue>\n  nameWithType: ConstReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Equality(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Equality(ConstReverseBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IBidirectionalIterator<TValue>\n  nameWithType: IBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ConstReverseBidirectionalIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseBidirectionalIterator<TValue>\n  nameWithType: ConstReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Increment(ConstReverseBidirectionalIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ConstReverseBidirectionalIterator<TValue>\n  nameWithType: ConstReverseBidirectionalIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Inequality(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Inequality(ConstReverseBidirectionalIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_MemberSelection(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_MemberSelection(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_MemberSelection(ConstReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: op_PointerDereference(ConstReverseBidirectionalIterator)\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.op_PointerDereference(ConstReverseBidirectionalIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.op_PointerDereference(ConstReverseBidirectionalIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ConstReverseBidirectionalIterator\n  nameWithType: ConstReverseBidirectionalIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator<TValue>.valid()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1\n  isExternal: false\n  nameWithType: ConstReverseBidirectionalIterator<TValue>.\n"}