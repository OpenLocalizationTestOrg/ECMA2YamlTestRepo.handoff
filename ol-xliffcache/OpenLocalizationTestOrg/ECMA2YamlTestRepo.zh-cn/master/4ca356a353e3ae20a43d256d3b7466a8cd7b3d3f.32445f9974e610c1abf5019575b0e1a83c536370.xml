{"nodes":[{"pos":[719,743],"content":"RC2CryptoServiceProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"RC2CryptoServiceProvider","pos":[0,24]}]},{"pos":[3388,3414],"content":"RC2CryptoServiceProvider()","needQuote":true,"needEscape":true,"nodes":[{"content":"RC2CryptoServiceProvider()","pos":[0,26]}]},{"pos":[4041,4071],"content":"CreateDecryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDecryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[4535,4569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4631,4665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4755,4789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5088,5118],"content":"CreateEncryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateEncryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[5582,5616],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5678,5712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5802,5836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6079,6095],"content":"EffectiveKeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"EffectiveKeySize","pos":[0,16]}]},{"pos":[6453,6487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6718,6730],"content":"GenerateIV()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateIV()","pos":[0,12]}]},{"pos":[7258,7271],"content":"GenerateKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey()","pos":[0,13]}]},{"pos":[7794,7801],"content":"UseSalt","needQuote":true,"needEscape":true,"nodes":[{"content":"UseSalt","pos":[0,7]}]},{"pos":[8126,8160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8290,8322],"content":"System.Security.Cryptography.RC2","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.RC2","pos":[0,32]}]},{"pos":[8482,8508],"content":"RC2CryptoServiceProvider()","needQuote":true,"needEscape":true,"nodes":[{"content":"RC2CryptoServiceProvider()","pos":[0,26]}]},{"pos":[8868,8898],"content":"CreateDecryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDecryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[9188,9204],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[9360,9364],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9476,9480],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9726,9756],"content":"CreateEncryptor(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateEncryptor(Byte[],Byte[])","pos":[0,30]}]},{"pos":[10046,10062],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[10218,10222],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10334,10338],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10556,10572],"content":"EffectiveKeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"EffectiveKeySize","pos":[0,16]}]},{"pos":[10779,10784],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10996,11008],"content":"GenerateIV()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateIV()","pos":[0,12]}]},{"pos":[11307,11320],"content":"GenerateKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenerateKey()","pos":[0,13]}]},{"pos":[11617,11624],"content":"UseSalt","needQuote":true,"needEscape":true,"nodes":[{"content":"UseSalt","pos":[0,7]}]},{"pos":[11815,11822],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider\n  id: RC2CryptoServiceProvider\n  children:\n  - System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  - System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  langs:\n  - csharp\n  name: RC2CryptoServiceProvider\n  nameWithType: RC2CryptoServiceProvider\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RC2CryptoServiceProvider : System.Security.Cryptography.RC2\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.RC2\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.RC2.Create\n  - System.Security.Cryptography.RC2.Create(System.String)\n  - System.Security.Cryptography.RC2.EffectiveKeySizeValue\n  - System.Security.Cryptography.RC2.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: RC2CryptoServiceProvider()\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RC2CryptoServiceProvider ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbIV\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rgbIV\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  id: EffectiveKeySize\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int EffectiveKeySize { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: RC2CryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: RC2CryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  id: UseSalt\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  langs:\n  - csharp\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool UseSalt { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.RC2\n  isExternal: false\n  name: System.Security.Cryptography.RC2\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: RC2CryptoServiceProvider()\n  nameWithType: RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.RC2CryptoServiceProvider()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateDecryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[],Byte[])\n  nameWithType: RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.CreateEncryptor(Byte[],Byte[])\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: EffectiveKeySize\n  nameWithType: RC2CryptoServiceProvider.EffectiveKeySize\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.EffectiveKeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: RC2CryptoServiceProvider.GenerateIV()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: RC2CryptoServiceProvider.GenerateKey()\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n  parent: System.Security.Cryptography.RC2CryptoServiceProvider\n  isExternal: false\n  name: UseSalt\n  nameWithType: RC2CryptoServiceProvider.UseSalt\n  fullName: System.Security.Cryptography.RC2CryptoServiceProvider.UseSalt\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}