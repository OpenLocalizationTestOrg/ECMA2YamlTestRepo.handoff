{"nodes":[{"pos":[968,988],"content":"MinMaxParagraphWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinMaxParagraphWidth","pos":[0,20]}]},{"pos":[1647,1661],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2037,2071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2130,2164],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2586,2614],"content":"Equals(MinMaxParagraphWidth)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(MinMaxParagraphWidth)","pos":[0,28]}]},{"pos":[3106,3140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3199,3233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3549,3562],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3930,3964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4197,4205],"content":"MaxWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxWidth","pos":[0,8]}]},{"pos":[4543,4577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4810,4818],"content":"MinWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinWidth","pos":[0,8]}]},{"pos":[5156,5190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5659,5713],"content":"op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)","pos":[0,54]}]},{"pos":[6333,6367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6472,6506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6565,6599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7072,7128],"content":"op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)","pos":[0,56]}]},{"pos":[7754,7788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7893,7927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7986,8020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8134,8150],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[8332,8346],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8550,8557],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8675,8681],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8955,8983],"content":"Equals(MinMaxParagraphWidth)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(MinMaxParagraphWidth)","pos":[0,28]}]},{"pos":[9215,9222],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9412,9432],"content":"MinMaxParagraphWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinMaxParagraphWidth","pos":[0,20]}]},{"pos":[9710,9723],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9923,9928],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10144,10152],"content":"MaxWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxWidth","pos":[0,8]}]},{"pos":[10343,10349],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[10567,10575],"content":"MinWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinWidth","pos":[0,8]}]},{"pos":[10766,10772],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[11108,11162],"content":"op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)","pos":[0,54]}]},{"pos":[11446,11453],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11643,11663],"content":"MinMaxParagraphWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinMaxParagraphWidth","pos":[0,20]}]},{"pos":[11908,11928],"content":"MinMaxParagraphWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinMaxParagraphWidth","pos":[0,20]}]},{"pos":[12323,12379],"content":"op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)","pos":[0,56]}]},{"pos":[12667,12674],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12864,12884],"content":"MinMaxParagraphWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinMaxParagraphWidth","pos":[0,20]}]},{"pos":[13129,13149],"content":"MinMaxParagraphWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"MinMaxParagraphWidth","pos":[0,20]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  id: MinMaxParagraphWidth\n  children:\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  - System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  langs:\n  - csharp\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  type: Struct\n  syntax:\n    content: 'public struct MinMaxParagraphWidth : IEquatable<System.Windows.Media.TextFormatting.MinMaxParagraphWidth>'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.Media.TextFormatting.MinMaxParagraphWidth>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MinMaxParagraphWidth.Equals(Object)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  id: Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: Equals(MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public bool Equals (System.Windows.Media.TextFormatting.MinMaxParagraphWidth value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MinMaxParagraphWidth.GetHashCode()\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  id: MaxWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: MaxWidth\n  nameWithType: MinMaxParagraphWidth.MaxWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public double MaxWidth { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  id: MinWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: MinWidth\n  nameWithType: MinMaxParagraphWidth.MinWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public double MinWidth { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  id: op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  id: op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  langs:\n  - csharp\n  name: op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.TextFormatting\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);\n    parameters:\n    - id: left\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MinMaxParagraphWidth.Equals(Object)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: Equals(MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(MinMaxParagraphWidth)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MinMaxParagraphWidth.GetHashCode()\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: MaxWidth\n  nameWithType: MinMaxParagraphWidth.MaxWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: MinWidth\n  nameWithType: MinMaxParagraphWidth.MinWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  name: op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  nameWithType: MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(MinMaxParagraphWidth,MinMaxParagraphWidth)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  parent: System.Windows.Media.TextFormatting\n  isExternal: false\n  name: MinMaxParagraphWidth\n  nameWithType: MinMaxParagraphWidth\n  fullName: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n- uid: System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals*\n  parent: System.Windows.Media.TextFormatting.MinMaxParagraphWidth\n  isExternal: false\n  nameWithType: MinMaxParagraphWidth.\n"}