{"nodes":[{"pos":[618,634],"content":"DomainCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainCollection","pos":[0,16]}]},{"pos":[2030,2046],"content":"Contains(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Domain)","pos":[0,16]}]},{"pos":[2510,2544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2603,2637],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2996,3018],"content":"CopyTo(Domain[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Domain[],Int32)","pos":[0,22]}]},{"pos":[3509,3543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3604,3638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3969,3984],"content":"IndexOf(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Domain)","pos":[0,15]}]},{"pos":[4444,4478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4535,4569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4824,4835],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[5256,5290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5382,5416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5555,5596],"content":"System.Collections.ReadOnlyCollectionBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ReadOnlyCollectionBase","pos":[0,41]}]},{"pos":[5816,5832],"content":"Contains(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Domain)","pos":[0,16]}]},{"pos":[6037,6044],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6230,6236],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[6552,6574],"content":"CopyTo(Domain[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Domain[],Int32)","pos":[0,22]}]},{"pos":[6858,6864],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[7015,7020],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7286,7301],"content":"IndexOf(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Domain)","pos":[0,15]}]},{"pos":[7502,7507],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7689,7695],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[7959,7970],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[8232,8238],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[8387,8392],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection\n  id: DomainCollection\n  children:\n  - System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)\n  - System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)\n  - System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)\n  - System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)\n  langs:\n  - csharp\n  name: DomainCollection\n  nameWithType: DomainCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection\n  type: Class\n  syntax:\n    content: 'public class DomainCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)\n  id: Contains(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  langs:\n  - csharp\n  name: Contains(Domain)\n  nameWithType: DomainCollection.Contains(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(Domain)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public bool Contains (System.DirectoryServices.ActiveDirectory.Domain domain);\n    parameters:\n    - id: domain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)\n  id: CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  langs:\n  - csharp\n  name: CopyTo(Domain[],Int32)\n  nameWithType: DomainCollection.CopyTo(Domain[],Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(Domain[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void CopyTo (System.DirectoryServices.ActiveDirectory.Domain[] domains, int index);\n    parameters:\n    - id: domains\n      type: System.DirectoryServices.ActiveDirectory.Domain[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)\n  id: IndexOf(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  langs:\n  - csharp\n  name: IndexOf(Domain)\n  nameWithType: DomainCollection.IndexOf(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(Domain)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public int IndexOf (System.DirectoryServices.ActiveDirectory.Domain domain);\n    parameters:\n    - id: domain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DomainCollection.Item(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Domain this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  isExternal: false\n  name: Contains(Domain)\n  nameWithType: DomainCollection.Contains(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.Contains(Domain)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(System.DirectoryServices.ActiveDirectory.Domain[],System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  isExternal: false\n  name: CopyTo(Domain[],Int32)\n  nameWithType: DomainCollection.CopyTo(Domain[],Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.CopyTo(Domain[],Int32)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  isExternal: false\n  name: IndexOf(Domain)\n  nameWithType: DomainCollection.IndexOf(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.IndexOf(Domain)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection.Item(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.DomainCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DomainCollection.Item(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection.Item(Int32)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}