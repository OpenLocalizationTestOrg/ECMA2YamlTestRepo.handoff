{"nodes":[{"pos":[998,1027],"content":"ValueTuple<T1,T2,T3,T4,T5,T6>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;","pos":[0,29],"source":"ValueTuple<T1,T2,T3,T4,T5,T6>"}]},{"pos":[1443,1477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1510,1544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1577,1611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1644,1678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1711,1745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1778,1812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2306,2335],"content":"ValueTuple(T1,T2,T3,T4,T5,T6)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4,T5,T6)","pos":[0,29]}]},{"pos":[2727,2761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2812,2846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2897,2931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2982,3016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3067,3101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3152,3186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3389,3429],"content":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;)","pos":[0,40],"source":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)"}]},{"pos":[3835,3869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3926,3960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4145,4159],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4487,4521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4580,4614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4851,4888],"content":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;)","pos":[0,37],"source":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)"}]},{"pos":[5286,5320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5379,5413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5618,5631],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5951,5985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6138,6143],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[6398,6432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6585,6590],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[6845,6879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7032,7037],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[7292,7326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7479,7484],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[7739,7773],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7926,7931],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[8186,8220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8373,8378],"content":"Item6","needQuote":true,"needEscape":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[8633,8667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9012,9080],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[9567,9601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9681,9715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9772,9806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10159,10231],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[10731,10765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10853,10887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10946,10980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11315,11385],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[11897,11931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11988,12022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12265,12301],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[12675,12709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12766,12800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12959,12969],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13284,13318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13432,13448],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[13559,13588],"content":"ValueTuple(T1,T2,T3,T4,T5,T6)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4,T5,T6)","pos":[0,29]}]},{"pos":[13794,13796],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[13881,13883],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[13968,13970],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[14055,14057],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[14142,14144],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[14229,14231],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[14382,14422],"content":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;)","pos":[0,40],"source":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)"}]},{"pos":[14665,14670],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14790,14819],"content":"ValueTuple<T1,T2,T3,T4,T5,T6>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;","pos":[0,29],"source":"ValueTuple<T1,T2,T3,T4,T5,T6>"}]},{"pos":[15022,15036],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15229,15236],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15354,15360],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15523,15560],"content":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;)","pos":[0,37],"source":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)"}]},{"pos":[15799,15806],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15930,15959],"content":"ValueTuple<T1,T2,T3,T4,T5,T6>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6&gt;","pos":[0,29],"source":"ValueTuple<T1,T2,T3,T4,T5,T6>"}]},{"pos":[16152,16165],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16354,16359],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16498,16503],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[16661,16663],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[16789,16794],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[16952,16954],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[17080,17085],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[17243,17245],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[17371,17376],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[17534,17536],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[17662,17667],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[17825,17827],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[17953,17958],"content":"Item6","needQuote":true,"needEscape":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[18116,18118],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[18333,18401],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[18700,18705],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18819,18825],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18968,18977],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[19229,19301],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[19610,19617],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19735,19741],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[19892,19909],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[20168,20238],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[20541,20546],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20695,20712],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[20925,20961],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[21196,21201],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21315,21321],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21465,21475],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[21659,21665],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`6\n  id: ValueTuple`6\n  children:\n  - System.ValueTuple`6.#ctor(`0,`1,`2,`3,`4,`5)\n  - System.ValueTuple`6.CompareTo(System.ValueTuple`6)\n  - System.ValueTuple`6.Equals(System.Object)\n  - System.ValueTuple`6.Equals(System.ValueTuple`6)\n  - System.ValueTuple`6.GetHashCode\n  - System.ValueTuple`6.Item1\n  - System.ValueTuple`6.Item2\n  - System.ValueTuple`6.Item3\n  - System.ValueTuple`6.Item4\n  - System.ValueTuple`6.Item5\n  - System.ValueTuple`6.Item6\n  - System.ValueTuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`6.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`6.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3,T4,T5,T6>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1,T2,T3,T4,T5,T6> : IComparable, IComparable<ValueTuple<T1,T2,T3,T4,T5,T6>>, IEquatable<ValueTuple<T1,T2,T3,T4,T5,T6>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n    - id: T3\n      description: Parameter description to be filled\n    - id: T4\n      description: Parameter description to be filled\n    - id: T5\n      description: Parameter description to be filled\n    - id: T6\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1,T2,T3,T4,T5,T6>>\n  - System.IEquatable<System.ValueTuple<T1,T2,T3,T4,T5,T6>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.#ctor(`0,`1,`2,`3,`4,`5)\n  id: '#ctor(`0,`1,`2,`3,`4,`5)'\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: ValueTuple(T1,T2,T3,T4,T5,T6)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.ValueTuple(T1,T2,T3,T4,T5,T6)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.ValueTuple(T1,T2,T3,T4,T5,T6)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    - id: item6\n      type: T6\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.CompareTo(System.ValueTuple`6)\n  id: CompareTo(System.ValueTuple`6)\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2,T3,T4,T5,T6> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`6\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`6.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Equals(System.ValueTuple`6)\n  id: Equals(System.ValueTuple`6)\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2,T3,T4,T5,T6> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`6\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`6.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Item1\n  id: Item1\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Item2\n  id: Item2\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item2\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Item3\n  id: Item3\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item3\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T3 Item3;\n    return:\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Item4\n  id: Item4\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item4\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T4 Item4;\n    return:\n      type: T4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Item5\n  id: Item5\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item5\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item5\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T5 Item5;\n    return:\n      type: T5\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.Item6\n  id: Item6\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: Item6\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item6\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item6\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T6 Item6;\n    return:\n      type: T6\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`6.ToString\n  id: ToString\n  parent: System.ValueTuple`6\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`6.#ctor(`0,`1,`2,`3,`4,`5)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: ValueTuple(T1,T2,T3,T4,T5,T6)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.ValueTuple(T1,T2,T3,T4,T5,T6)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.ValueTuple(T1,T2,T3,T4,T5,T6)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: System.ValueTuple`6.CompareTo(System.ValueTuple`6)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`6\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>\n- uid: System.ValueTuple`6.Equals(System.Object)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`6.Equals(System.ValueTuple`6)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`6\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>\n- uid: System.ValueTuple`6.GetHashCode\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`6.Item1\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`6.Item2\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`6.Item3\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item3\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple`6.Item4\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item4\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.ValueTuple`6.Item5\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item5\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item5\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: System.ValueTuple`6.Item6\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: Item6\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.Item6\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.Item6\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: System.ValueTuple`6.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`6.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`6.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`6.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`6.ToString\n  parent: System.ValueTuple`6\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`6.Equals*\n  parent: System.ValueTuple`6\n  isExternal: false\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6>.\n"}