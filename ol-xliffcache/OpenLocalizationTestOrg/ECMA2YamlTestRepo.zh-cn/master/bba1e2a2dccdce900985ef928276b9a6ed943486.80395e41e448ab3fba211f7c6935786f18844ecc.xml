{"nodes":[{"pos":[607,620],"content":"EventLogQuery","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery","pos":[0,13]}]},{"pos":[1450,1480],"content":"EventLogQuery(String,PathType)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery(String,PathType)","pos":[0,30]}]},{"pos":[1921,1955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2050,2084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2443,2480],"content":"EventLogQuery(String,PathType,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery(String,PathType,String)","pos":[0,37]}]},{"pos":[2949,2983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3078,3112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3174,3208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3441,3457],"content":"ReverseDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseDirection","pos":[0,16]}]},{"pos":[3802,3836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4051,4058],"content":"Session","needQuote":true,"needEscape":true,"nodes":[{"content":"Session","pos":[0,7]}]},{"pos":[4458,4492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4731,4750],"content":"TolerateQueryErrors","needQuote":true,"needEscape":true,"nodes":[{"content":"TolerateQueryErrors","pos":[0,19]}]},{"pos":[5104,5138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5249,5262],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5471,5501],"content":"EventLogQuery(String,PathType)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery(String,PathType)","pos":[0,30]}]},{"pos":[5721,5727],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[5901,5909],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[6213,6250],"content":"EventLogQuery(String,PathType,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogQuery(String,PathType,String)","pos":[0,37]}]},{"pos":[6484,6490],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[6664,6672],"content":"PathType","needQuote":true,"needEscape":true,"nodes":[{"content":"PathType","pos":[0,8]}]},{"pos":[6820,6826],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[7036,7052],"content":"ReverseDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReverseDirection","pos":[0,16]}]},{"pos":[7245,7252],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7455,7462],"content":"Session","needQuote":true,"needEscape":true,"nodes":[{"content":"Session","pos":[0,7]}]},{"pos":[7701,7716],"content":"EventLogSession","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession","pos":[0,15]}]},{"pos":[7975,7994],"content":"TolerateQueryErrors","needQuote":true,"needEscape":true,"nodes":[{"content":"TolerateQueryErrors","pos":[0,19]}]},{"pos":[8193,8200],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery\n  id: EventLogQuery\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  - System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  langs:\n  - csharp\n  name: EventLogQuery\n  nameWithType: EventLogQuery\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery\n  type: Class\n  syntax:\n    content: public class EventLogQuery\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: EventLogQuery(String,PathType)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: EventLogQuery(String,PathType,String)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType,String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogQuery (string path, System.Diagnostics.Eventing.Reader.PathType pathType, string query);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n    - id: pathType\n      type: System.Diagnostics.Eventing.Reader.PathType\n      description: Parameter description to be filled\n    - id: query\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  id: ReverseDirection\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public bool ReverseDirection { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  id: Session\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogSession Session { get; set; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogSession\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  id: TolerateQueryErrors\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  langs:\n  - csharp\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public bool TolerateQueryErrors { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType)\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery(String,PathType)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.#ctor(System.String,System.Diagnostics.Eventing.Reader.PathType,System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: EventLogQuery(String,PathType,String)\n  nameWithType: EventLogQuery.EventLogQuery(String,PathType,String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.EventLogQuery(String,PathType,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.PathType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: PathType\n  nameWithType: PathType\n  fullName: System.Diagnostics.Eventing.Reader.PathType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: ReverseDirection\n  nameWithType: EventLogQuery.ReverseDirection\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.ReverseDirection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: Session\n  nameWithType: EventLogQuery.Session\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.Session\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n  parent: System.Diagnostics.Eventing.Reader.EventLogQuery\n  isExternal: false\n  name: TolerateQueryErrors\n  nameWithType: EventLogQuery.TolerateQueryErrors\n  fullName: System.Diagnostics.Eventing.Reader.EventLogQuery.TolerateQueryErrors\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}