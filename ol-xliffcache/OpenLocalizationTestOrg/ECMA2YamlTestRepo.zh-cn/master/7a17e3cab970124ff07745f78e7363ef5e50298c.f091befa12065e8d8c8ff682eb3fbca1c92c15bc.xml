{"nodes":[{"pos":[752,776],"content":"RNGCryptoServiceProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider","pos":[0,24]}]},{"pos":[2013,2039],"content":"RNGCryptoServiceProvider()","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider()","pos":[0,26]}]},{"pos":[2620,2652],"content":"RNGCryptoServiceProvider(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider(Byte[])","pos":[0,32]}]},{"pos":[3059,3093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3404,3443],"content":"RNGCryptoServiceProvider(CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider(CspParameters)","pos":[0,39]}]},{"pos":[3941,3975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4228,4260],"content":"RNGCryptoServiceProvider(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider(String)","pos":[0,32]}]},{"pos":[4667,4701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4958,4974],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5355,5389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5646,5662],"content":"GetBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Byte[])","pos":[0,16]}]},{"pos":[6032,6066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6337,6360],"content":"GetNonZeroBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNonZeroBytes(Byte[])","pos":[0,23]}]},{"pos":[6751,6785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6933,6983],"content":"System.Security.Cryptography.RandomNumberGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.RandomNumberGenerator","pos":[0,50]}]},{"pos":[7143,7169],"content":"RNGCryptoServiceProvider()","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider()","pos":[0,26]}]},{"pos":[7505,7537],"content":"RNGCryptoServiceProvider(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider(Byte[])","pos":[0,32]}]},{"pos":[7775,7779],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[8030,8069],"content":"RNGCryptoServiceProvider(CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider(CspParameters)","pos":[0,39]}]},{"pos":[8374,8387],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[8647,8679],"content":"RNGCryptoServiceProvider(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"RNGCryptoServiceProvider(String)","pos":[0,32]}]},{"pos":[8919,8925],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9152,9168],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[9377,9384],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9613,9629],"content":"GetBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Byte[])","pos":[0,16]}]},{"pos":[9835,9839],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10071,10094],"content":"GetNonZeroBytes(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNonZeroBytes(Byte[])","pos":[0,23]}]},{"pos":[10314,10318],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider\n  id: RNGCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])\n  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)\n  - System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])\n  - System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])\n  langs:\n  - csharp\n  name: RNGCryptoServiceProvider\n  nameWithType: RNGCryptoServiceProvider\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RNGCryptoServiceProvider : System.Security.Cryptography.RandomNumberGenerator\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.RandomNumberGenerator\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.RandomNumberGenerator.Create\n  - System.Security.Cryptography.RandomNumberGenerator.Create(System.String)\n  - System.Security.Cryptography.RandomNumberGenerator.Dispose\n  - System.Security.Cryptography.RandomNumberGenerator.GetBytes(System.Byte[],System.Int32,System.Int32)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: RNGCryptoServiceProvider()\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider()\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RNGCryptoServiceProvider ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: RNGCryptoServiceProvider(Byte[])\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RNGCryptoServiceProvider (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: RNGCryptoServiceProvider(CspParameters)\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RNGCryptoServiceProvider (System.Security.Cryptography.CspParameters cspParams);\n    parameters:\n    - id: cspParams\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: RNGCryptoServiceProvider(String)\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RNGCryptoServiceProvider (string str);\n    parameters:\n    - id: str\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RNGCryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])\n  id: GetBytes(System.Byte[])\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: GetBytes(Byte[])\n  nameWithType: RNGCryptoServiceProvider.GetBytes(Byte[])\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GetBytes (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])\n  id: GetNonZeroBytes(System.Byte[])\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  langs:\n  - csharp\n  name: GetNonZeroBytes(Byte[])\n  nameWithType: RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void GetNonZeroBytes (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.RandomNumberGenerator\n  isExternal: false\n  name: System.Security.Cryptography.RandomNumberGenerator\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: RNGCryptoServiceProvider()\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider()\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider()\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Byte[])\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: RNGCryptoServiceProvider(Byte[])\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: RNGCryptoServiceProvider(CspParameters)\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(CspParameters)\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.#ctor(System.String)\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: RNGCryptoServiceProvider(String)\n  nameWithType: RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.RNGCryptoServiceProvider(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RNGCryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(System.Byte[])\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: GetBytes(Byte[])\n  nameWithType: RNGCryptoServiceProvider.GetBytes(Byte[])\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetBytes(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(System.Byte[])\n  parent: System.Security.Cryptography.RNGCryptoServiceProvider\n  isExternal: false\n  name: GetNonZeroBytes(Byte[])\n  nameWithType: RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])\n  fullName: System.Security.Cryptography.RNGCryptoServiceProvider.GetNonZeroBytes(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n"}