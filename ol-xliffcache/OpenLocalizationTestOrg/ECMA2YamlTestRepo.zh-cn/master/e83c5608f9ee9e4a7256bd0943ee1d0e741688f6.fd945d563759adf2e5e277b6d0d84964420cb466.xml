{"nodes":[{"pos":[22741,22760],"content":"DbExpressionBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBuilder","pos":[0,19]}]},{"pos":[23728,23763],"content":"Aggregate(EdmFunction,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Aggregate(EdmFunction,DbExpression)","pos":[0,35]}]},{"pos":[24380,24414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24510,24544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24640,24674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25119,25162],"content":"AggregateDistinct(EdmFunction,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"AggregateDistinct(EdmFunction,DbExpression)","pos":[0,43]}]},{"pos":[25803,25837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25933,25967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26063,26097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26646,26695],"content":"All(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"All(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,49],"source":"All(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[27401,27435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27590,27624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27723,27757],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28291,28328],"content":"All(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"All(DbExpressionBinding,DbExpression)","pos":[0,37]}]},{"pos":[28971,29005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29102,29136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29235,29269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29789,29819],"content":"And(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"And(DbExpression,DbExpression)","pos":[0,30]}]},{"pos":[30421,30455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30548,30582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30674,30708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31051,31068],"content":"Any(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Any(DbExpression)","pos":[0,17]}]},{"pos":[31593,31627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31716,31750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32386,32435],"content":"Any(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Any(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,49],"source":"Any(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[33141,33175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33330,33364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33463,33497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34031,34068],"content":"Any(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Any(DbExpressionBinding,DbExpression)","pos":[0,37]}]},{"pos":[34711,34745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34842,34876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34975,35009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35463,35485],"content":"As(DbAggregate,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"As(DbAggregate,String)","pos":[0,22]}]},{"pos":[36076,36110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36172,36206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36349,36383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36838,36861],"content":"As(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"As(DbExpression,String)","pos":[0,23]}]},{"pos":[37457,37491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37553,37587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37731,37765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38196,38214],"content":"Bind(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Bind(DbExpression)","pos":[0,18]}]},{"pos":[38747,38781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38877,38911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39288,39315],"content":"BindAs(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"BindAs(DbExpression,String)","pos":[0,27]}]},{"pos":[39884,39918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39982,40016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40112,40146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40829,40899],"content":"Case(IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;DbExpression&gt;</ph>,DbExpression)","needQuote":true,"needEscape":true,"source":"Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)"},{"pos":[41791,41825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41968,42002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42104,42138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42231,42265],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42684,42714],"content":"CastTo(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"CastTo(DbExpression,TypeUsage)","pos":[0,30]}]},{"pos":[43319,43353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43437,43471],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43564,43598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43887,43903],"content":"Constant(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[44363,44397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44494,44528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44981,45007],"content":"Constant(TypeUsage,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Constant(TypeUsage,Object)","pos":[0,26]}]},{"pos":[45569,45603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45665,45699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45796,45830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46427,46473],"content":"CreateRef(EntitySet,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CreateRef(EntitySet,IEnumerable<DbExpression>)"},{"pos":[47147,47181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47318,47352],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47444,47478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48000,48035],"content":"CreateRef(EntitySet,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateRef(EntitySet,DbExpression[])","pos":[0,35]}]},{"pos":[48649,48683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48782,48816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48908,48942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49612,49669],"content":"CreateRef(EntitySet,EntityType,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)"},{"pos":[50413,50447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50536,50570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50707,50741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50833,50867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51461,51507],"content":"CreateRef(EntitySet,EntityType,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateRef(EntitySet,EntityType,DbExpression[])","pos":[0,46]}]},{"pos":[52191,52225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52314,52348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52447,52481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52573,52607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53373,53450],"content":"CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CrossApply(DbExpression,Func&lt;DbExpression,KeyValuePair&lt;String,DbExpression&gt;&gt;)","pos":[0,77],"source":"CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)"}]},{"pos":[54258,54292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54498,54532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54626,54660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55229,55280],"content":"CrossApply(DbExpressionBinding,DbExpressionBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"CrossApply(DbExpressionBinding,DbExpressionBinding)","pos":[0,51]}]},{"pos":[55956,55990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56090,56124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56218,56252],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56793,56836],"content":"CrossJoin(IEnumerable<ph id=\"ph1\">&lt;DbExpressionBinding&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CrossJoin(IEnumerable<DbExpressionBinding>)"},{"pos":[57517,57551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57649,57683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58030,58049],"content":"Deref(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Deref(DbExpression)","pos":[0,19]}]},{"pos":[58589,58623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58717,58751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59104,59126],"content":"Distinct(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Distinct(DbExpression)","pos":[0,22]}]},{"pos":[59678,59712],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59809,59843],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60282,60315],"content":"Divide(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Divide(DbExpression,DbExpression)","pos":[0,33]}]},{"pos":[60933,60967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61060,61094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61193,61227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61578,61599],"content":"Element(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Element(DbExpression)","pos":[0,21]}]},{"pos":[62147,62181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62277,62311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62748,62780],"content":"Equal(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equal(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[63395,63429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63522,63556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63655,63689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64128,64161],"content":"Except(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Except(DbExpression,DbExpression)","pos":[0,33]}]},{"pos":[64775,64809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64902,64936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65031,65065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65414,65434],"content":"Exists(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exists(DbExpression)","pos":[0,20]}]},{"pos":[65972,66006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66095,66129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66385,66390],"content":"False","needQuote":false,"needEscape":true,"nodes":[{"content":"False","pos":[0,5]}]},{"pos":[66840,66874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67327,67367],"content":"Filter(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter(DbExpressionBinding,DbExpression)","pos":[0,40]}]},{"pos":[68015,68049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68146,68180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68275,68309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69058,69143],"content":"FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"FullOuterJoin(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression,DbExpression&gt;)","pos":[0,85],"source":"FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)"}]},{"pos":[70022,70056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70149,70183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70387,70421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70514,70548],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71216,71283],"content":"FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","pos":[0,67]}]},{"pos":[72051,72085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72185,72219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72320,72354],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72447,72481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72939,72965],"content":"GetEntityRef(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEntityRef(DbExpression)","pos":[0,26]}]},{"pos":[73530,73564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73662,73696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74051,74074],"content":"GetRefKey(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRefKey(DbExpression)","pos":[0,23]}]},{"pos":[74627,74661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74756,74790],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75239,75277],"content":"GreaterThan(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GreaterThan(DbExpression,DbExpression)","pos":[0,38]}]},{"pos":[75910,75944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76037,76071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76170,76204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76667,76712],"content":"GreaterThanOrEqual(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GreaterThanOrEqual(DbExpression,DbExpression)","pos":[0,45]}]},{"pos":[77366,77400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77493,77527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77626,77660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78015,78038],"content":"GroupBind(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBind(DbExpression)","pos":[0,23]}]},{"pos":[78591,78625],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78726,78760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79175,79214],"content":"GroupBindAs(DbExpression,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBindAs(DbExpression,String,String)","pos":[0,39]}]},{"pos":[79838,79872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79936,79970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80039,80073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80174,80208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81141,81267],"content":"GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBy(DbGroupExpressionBinding,IEnumerable&lt;KeyValuePair&lt;String,DbExpression&gt;&gt;,IEnumerable&lt;KeyValuePair&lt;String,DbAggregate&gt;&gt;)","pos":[0,126],"source":"GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)"}]},{"pos":[82326,82360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82547,82581],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82773,82807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82903,82937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83678,83759],"content":"InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"InnerJoin(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression,DbExpression&gt;)","pos":[0,81],"source":"InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)"}]},{"pos":[84626,84660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84753,84787],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84991,85025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85118,85152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85808,85871],"content":"InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","pos":[0,63]}]},{"pos":[86627,86661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86761,86795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86896,86930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87023,87057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87595,87631],"content":"Intersect(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(DbExpression,DbExpression)","pos":[0,36]}]},{"pos":[88257,88291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88384,88418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88516,88550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89061,89103],"content":"Invoke(DbLambda,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Invoke(DbLambda,IEnumerable<DbExpression>)"},{"pos":[89775,89809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89946,89980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90075,90109],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90634,90665],"content":"Invoke(DbLambda,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(DbLambda,DbExpression[])","pos":[0,31]}]},{"pos":[91277,91311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91410,91444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91539,91573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92166,92211],"content":"Invoke(EdmFunction,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Invoke(EdmFunction,IEnumerable<DbExpression>)"},{"pos":[92887,92921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93058,93092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93189,93223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93740,93774],"content":"Invoke(EdmFunction,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(EdmFunction,DbExpression[])","pos":[0,34]}]},{"pos":[94390,94424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94523,94557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94654,94688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95129,95150],"content":"IsEmpty(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty(DbExpression)","pos":[0,21]}]},{"pos":[95698,95732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95828,95862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96211,96231],"content":"IsNull(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsNull(DbExpression)","pos":[0,20]}]},{"pos":[96775,96809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96904,96938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97353,97381],"content":"IsOf(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsOf(DbExpression,TypeUsage)","pos":[0,28]}]},{"pos":[97978,98012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98094,98128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98221,98255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98678,98710],"content":"IsOfOnly(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsOfOnly(DbExpression,TypeUsage)","pos":[0,32]}]},{"pos":[99319,99353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99435,99469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99562,99596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100443,100538],"content":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Join(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,95],"source":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)"}]},{"pos":[101486,101520],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101613,101647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101801,101835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101989,102023],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102116,102150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103217,103354],"content":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Join(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression,TSelector&gt;)","pos":[0,137],"source":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)"}]},{"pos":[104516,104550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[104643,104677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[104831,104865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105019,105053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105217,105251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105347,105381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105932,105995],"content":"Lambda(DbExpression,IEnumerable<ph id=\"ph1\">&lt;DbVariableReferenceExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)"},{"pos":[106715,106749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106903,106937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107022,107056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107621,107673],"content":"Lambda(DbExpression,DbVariableReferenceExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Lambda(DbExpression,DbVariableReferenceExpression[])","pos":[0,52]}]},{"pos":[108333,108367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108483,108517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108602,108636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109475,109560],"content":"LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"LeftOuterJoin(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression,DbExpression&gt;)","pos":[0,85],"source":"LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)"}]},{"pos":[110439,110473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110566,110600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110804,110838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110931,110965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111633,111700],"content":"LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","pos":[0,67]}]},{"pos":[112468,112502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112602,112636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112737,112771],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112864,112898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113438,113473],"content":"LessThan(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"LessThan(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[114097,114131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114224,114258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114357,114391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114848,114890],"content":"LessThanOrEqual(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"LessThanOrEqual(DbExpression,DbExpression)","pos":[0,42]}]},{"pos":[115535,115569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115662,115696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115795,115829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116264,116295],"content":"Like(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Like(DbExpression,DbExpression)","pos":[0,31]}]},{"pos":[116911,116945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117040,117074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117167,117201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117814,117858],"content":"Like(DbExpression,DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Like(DbExpression,DbExpression,DbExpression)","pos":[0,44]}]},{"pos":[118553,118587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118682,118716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118810,118844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118937,118971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119496,119528],"content":"Limit(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Limit(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[120146,120180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120273,120307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120401,120435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120872,120904],"content":"Minus(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Minus(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[121519,121553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121646,121680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121779,121813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122252,122285],"content":"Modulo(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Modulo(DbExpression,DbExpression)","pos":[0,33]}]},{"pos":[122903,122937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123030,123064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123163,123197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123640,123675],"content":"Multiply(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiply(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[124299,124333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124426,124460],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124559,124593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125134,125200],"content":"Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)","pos":[0,66]}]},{"pos":[125972,126006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126103,126137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126232,126266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126377,126411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126996,127049],"content":"Navigate(RelationshipType,String,String,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigate(RelationshipType,String,String,DbExpression)","pos":[0,53]}]},{"pos":[127760,127794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127862,127896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127962,127996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128096,128130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128241,128275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128716,128736],"content":"Negate(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Negate(DbExpression)","pos":[0,20]}]},{"pos":[129284,129318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129417,129451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129944,129984],"content":"New(TypeUsage,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"New(TypeUsage,IEnumerable<DbExpression>)"},{"pos":[130654,130688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130825,130859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130959,130993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[131497,131526],"content":"New(TypeUsage,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"New(TypeUsage,DbExpression[])","pos":[0,29]}]},{"pos":[132136,132170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132269,132303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132403,132437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[132965,133005],"content":"NewCollection(IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"NewCollection(IEnumerable<DbExpression>)"},{"pos":[133676,133710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[133810,133844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[134306,134335],"content":"NewCollection(DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"NewCollection(DbExpression[])","pos":[0,29]}]},{"pos":[134908,134942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135042,135076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[135526,135555],"content":"NewEmptyCollection(TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"NewEmptyCollection(TypeUsage)","pos":[0,29]}]},{"pos":[136126,136160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136260,136294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[136831,136885],"content":"NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"NewRow(IEnumerable&lt;KeyValuePair&lt;String,DbExpression&gt;&gt;)","pos":[0,54],"source":"NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)"}]},{"pos":[137688,137722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[137822,137856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138199,138216],"content":"Not(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Not(DbExpression)","pos":[0,17]}]},{"pos":[138748,138782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[138874,138908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[139351,139386],"content":"NotEqual(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"NotEqual(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[140010,140044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140137,140171],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140270,140304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[140629,140644],"content":"Null(TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"Null(TypeUsage)","pos":[0,15]}]},{"pos":[141154,141188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[141281,141315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[141734,141764],"content":"OfType(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"OfType(DbExpression,TypeUsage)","pos":[0,30]}]},{"pos":[142369,142403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[142485,142519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[142614,142648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[143075,143109],"content":"OfTypeOnly(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"OfTypeOnly(DbExpression,TypeUsage)","pos":[0,34]}]},{"pos":[143726,143760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[143842,143876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[143971,144005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[144436,144465],"content":"Or(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Or(DbExpression,DbExpression)","pos":[0,29]}]},{"pos":[145063,145097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[145190,145224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[145315,145349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[145906,145959],"content":"OrderBy(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderBy(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,53],"source":"OrderBy(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[146669,146703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[146856,146890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[146983,147017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[147693,147753],"content":"OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderBy(DbExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,60],"source":"OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[148495,148529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[148682,148716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[148782,148816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[148909,148943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[149611,149674],"content":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderByDescending(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,63],"source":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[150414,150448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[150601,150635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[150728,150762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[151468,151538],"content":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderByDescending(DbExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,70],"source":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[152310,152344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[152497,152531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[152597,152631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[152724,152758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[153532,153609],"content":"OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"OuterApply(DbExpression,Func&lt;DbExpression,KeyValuePair&lt;String,DbExpression&gt;&gt;)","pos":[0,77],"source":"OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)"}]},{"pos":[154417,154451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[154657,154691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[154785,154819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[155388,155439],"content":"OuterApply(DbExpressionBinding,DbExpressionBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"OuterApply(DbExpressionBinding,DbExpressionBinding)","pos":[0,51]}]},{"pos":[156115,156149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[156249,156283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[156377,156411],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[156868,156895],"content":"Parameter(TypeUsage,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter(TypeUsage,String)","pos":[0,27]}]},{"pos":[157453,157487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[157548,157582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[157689,157723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[158158,158189],"content":"Plus(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Plus(DbExpression,DbExpression)","pos":[0,31]}]},{"pos":[158801,158835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[158928,158962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[159061,159095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[159550,159591],"content":"Project(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Project(DbExpressionBinding,DbExpression)","pos":[0,41]}]},{"pos":[160244,160278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[160376,160410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[160506,160540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[160967,161001],"content":"Property(DbExpression,EdmProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,EdmProperty)","pos":[0,34]}]},{"pos":[161632,161666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[161762,161796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[161893,161927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[162460,162501],"content":"Property(DbExpression,NavigationProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,NavigationProperty)","pos":[0,41]}]},{"pos":[163155,163189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[163294,163328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[163425,163459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[163998,164042],"content":"Property(DbExpression,RelationshipEndMember)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,RelationshipEndMember)","pos":[0,44]}]},{"pos":[164702,164736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[164841,164875],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[164972,165006],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[165479,165508],"content":"Property(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,String)","pos":[0,29]}]},{"pos":[166095,166129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[166198,166232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[166329,166363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[166882,166916],"content":"RefFromKey(EntitySet,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"RefFromKey(EntitySet,DbExpression)","pos":[0,34]}]},{"pos":[167524,167558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[167652,167686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[167778,167812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[168405,168450],"content":"RefFromKey(EntitySet,DbExpression,EntityType)","needQuote":true,"needEscape":true,"nodes":[{"content":"RefFromKey(EntitySet,DbExpression,EntityType)","pos":[0,45]}]},{"pos":[169128,169162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169256,169290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169379,169413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169505,169539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[169966,169985],"content":"Scan(EntitySetBase)","needQuote":true,"needEscape":true,"nodes":[{"content":"Scan(EntitySetBase)","pos":[0,19]}]},{"pos":[170513,170547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[170640,170674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[171153,171204],"content":"Select(DbExpression,Func<DbExpression,TProjection>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Select(DbExpression,Func&lt;DbExpression,TProjection&gt;)","pos":[0,51],"source":"Select(DbExpression,Func<DbExpression,TProjection>)"}]},{"pos":[171895,171929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[172052,172086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[172182,172216],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[172779,172835],"content":"SelectMany(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectMany(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,56],"source":"SelectMany(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[173555,173589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[173740,173774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[173870,173904],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[174687,174785],"content":"SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectMany(DbExpression,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression,TSelector&gt;)","pos":[0,98],"source":"SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)"}]},{"pos":[175716,175750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[175901,175935],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176099,176133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176229,176263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[176706,176741],"content":"Skip(DbSortExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Skip(DbSortExpression,DbExpression)","pos":[0,35]}]},{"pos":[177371,177405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[177498,177532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[177625,177659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[178366,178430],"content":"Skip(DbExpressionBinding,IEnumerable<ph id=\"ph1\">&lt;DbSortClause&gt;</ph>,DbExpression)","needQuote":true,"needEscape":true,"source":"Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)"},{"pos":[179214,179248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[179385,179419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[179512,179546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[179639,179673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[180290,180341],"content":"Sort(DbExpressionBinding,IEnumerable<ph id=\"ph1\">&lt;DbSortClause&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(DbExpressionBinding,IEnumerable<DbSortClause>)"},{"pos":[181047,181081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[181218,181252],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[181345,181379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[181814,181845],"content":"Take(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Take(DbExpression,DbExpression)","pos":[0,31]}]},{"pos":[182460,182494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[182587,182621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[182715,182749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[183312,183368],"content":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenBy(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,56],"source":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[184091,184125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[184278,184312],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[184405,184439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[185120,185183],"content":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenBy(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,63],"source":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[185938,185972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[186125,186159],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[186225,186259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[186352,186386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[187059,187125],"content":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenByDescending(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,66],"source":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[187878,187912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[188065,188099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[188192,188226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[188937,189010],"content":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenByDescending(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,73],"source":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[189795,189829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[189982,190016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[190082,190116],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[190209,190243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[190704,190730],"content":"ToSortClause(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClause(DbExpression)","pos":[0,26]}]},{"pos":[191276,191310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[191399,191433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[191918,191951],"content":"ToSortClause(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClause(DbExpression,String)","pos":[0,33]}]},{"pos":[192529,192563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[192629,192663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[192752,192786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[193263,193299],"content":"ToSortClauseDescending(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClauseDescending(DbExpression)","pos":[0,36]}]},{"pos":[193875,193909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[193998,194032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[194547,194590],"content":"ToSortClauseDescending(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClauseDescending(DbExpression,String)","pos":[0,43]}]},{"pos":[195198,195232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[195298,195332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[195421,195455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[195982,196013],"content":"TreatAs(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"TreatAs(DbExpression,TypeUsage)","pos":[0,31]}]},{"pos":[196625,196659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[196746,196780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[196874,196908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[197162,197166],"content":"True","needQuote":false,"needEscape":true,"nodes":[{"content":"True","pos":[0,4]}]},{"pos":[197613,197647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[198004,198028],"content":"UnaryMinus(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnaryMinus(DbExpression)","pos":[0,24]}]},{"pos":[198588,198622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[198721,198755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[199192,199224],"content":"Union(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[199829,199863],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[199956,199990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[200079,200113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[200556,200591],"content":"UnionAll(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnionAll(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[201213,201247],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[201340,201374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[201471,201505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[201866,201892],"content":"Variable(TypeUsage,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Variable(TypeUsage,String)","pos":[0,26]}]},{"pos":[202446,202480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[202541,202575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[202681,202715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[203268,203319],"content":"Where(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Where(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,51],"source":"Where(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[204027,204061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[204216,204250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[204345,204379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[204490,204503],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[204783,204818],"content":"Aggregate(EdmFunction,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Aggregate(EdmFunction,DbExpression)","pos":[0,35]}]},{"pos":[205138,205157],"content":"DbFunctionAggregate","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFunctionAggregate","pos":[0,19]}]},{"pos":[205365,205376],"content":"EdmFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"EdmFunction","pos":[0,11]}]},{"pos":[205576,205588],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[205962,206005],"content":"AggregateDistinct(EdmFunction,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"AggregateDistinct(EdmFunction,DbExpression)","pos":[0,43]}]},{"pos":[206341,206360],"content":"DbFunctionAggregate","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFunctionAggregate","pos":[0,19]}]},{"pos":[206568,206579],"content":"EdmFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"EdmFunction","pos":[0,11]}]},{"pos":[206779,206791],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[207217,207266],"content":"All(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"All(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,49],"source":"All(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[207617,207639],"content":"DbQuantifierExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbQuantifierExpression","pos":[0,22]}]},{"pos":[207868,207880],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[208121,208152],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[208604,208641],"content":"All(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"All(DbExpressionBinding,DbExpression)","pos":[0,37]}]},{"pos":[208968,208990],"content":"DbQuantifierExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbQuantifierExpression","pos":[0,22]}]},{"pos":[209226,209245],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[209468,209480],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[209848,209878],"content":"And(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"And(DbExpression,DbExpression)","pos":[0,30]}]},{"pos":[210184,210199],"content":"DbAndExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbAndExpression","pos":[0,15]}]},{"pos":[210414,210426],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[210635,210647],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[210970,210987],"content":"Any(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Any(DbExpression)","pos":[0,17]}]},{"pos":[211264,211276],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[211485,211497],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[211923,211972],"content":"Any(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Any(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,49],"source":"Any(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[212323,212345],"content":"DbQuantifierExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbQuantifierExpression","pos":[0,22]}]},{"pos":[212574,212586],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[212827,212858],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[213310,213347],"content":"Any(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Any(DbExpressionBinding,DbExpression)","pos":[0,37]}]},{"pos":[213674,213696],"content":"DbQuantifierExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbQuantifierExpression","pos":[0,22]}]},{"pos":[213932,213951],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[214174,214186],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[214521,214543],"content":"As(DbAggregate,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"As(DbAggregate,String)","pos":[0,22]}]},{"pos":[214879,214911],"content":"KeyValuePair<String,DbAggregate>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,DbAggregate&gt;","pos":[0,32],"source":"KeyValuePair<String,DbAggregate>"}]},{"pos":[215193,215204],"content":"DbAggregate","needQuote":true,"needEscape":true,"nodes":[{"content":"DbAggregate","pos":[0,11]}]},{"pos":[215355,215361],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[215660,215683],"content":"As(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"As(DbExpression,String)","pos":[0,23]}]},{"pos":[216022,216055],"content":"KeyValuePair<String,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,DbExpression&gt;","pos":[0,33],"source":"KeyValuePair<String,DbExpression>"}]},{"pos":[216340,216352],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[216505,216511],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[216798,216816],"content":"Bind(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Bind(DbExpression)","pos":[0,18]}]},{"pos":[217102,217121],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[217344,217356],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[217696,217723],"content":"BindAs(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"BindAs(DbExpression,String)","pos":[0,27]}]},{"pos":[218027,218046],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[218269,218281],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[218434,218440],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[218896,218966],"content":"Case(IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>,IEnumerable<ph id=\"ph2\">&lt;DbExpression&gt;</ph>,DbExpression)","needQuote":true,"needEscape":true,"source":"Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)"},{"pos":[219353,219369],"content":"DbCaseExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbCaseExpression","pos":[0,16]}]},{"pos":[219621,219646],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[219943,219968],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[220230,220242],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[220603,220633],"content":"CastTo(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"CastTo(DbExpression,TypeUsage)","pos":[0,30]}]},{"pos":[220940,220956],"content":"DbCastExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbCastExpression","pos":[0,16]}]},{"pos":[221173,221185],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[221377,221386],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[221669,221685],"content":"Constant(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Constant(Object)","pos":[0,16]}]},{"pos":[221968,221988],"content":"DbConstantExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbConstantExpression","pos":[0,20]}]},{"pos":[222157,222163],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[222458,222484],"content":"Constant(TypeUsage,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Constant(TypeUsage,Object)","pos":[0,26]}]},{"pos":[222787,222807],"content":"DbConstantExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbConstantExpression","pos":[0,20]}]},{"pos":[223015,223024],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[223164,223170],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[223537,223583],"content":"CreateRef(EntitySet,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CreateRef(EntitySet,IEnumerable<DbExpression>)"},{"pos":[223921,223936],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[224134,224143],"content":"EntitySet","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySet","pos":[0,9]}]},{"pos":[224374,224399],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[224818,224853],"content":"CreateRef(EntitySet,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateRef(EntitySet,DbExpression[])","pos":[0,35]}]},{"pos":[225169,225184],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[225382,225391],"content":"EntitySet","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySet","pos":[0,9]}]},{"pos":[225587,225599],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[226041,226098],"content":"CreateRef(EntitySet,EntityType,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)"},{"pos":[226458,226473],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[226671,226680],"content":"EntitySet","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySet","pos":[0,9]}]},{"pos":[226860,226870],"content":"EntityType","needQuote":true,"needEscape":true,"nodes":[{"content":"EntityType","pos":[0,10]}]},{"pos":[227103,227128],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[227583,227629],"content":"CreateRef(EntitySet,EntityType,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateRef(EntitySet,EntityType,DbExpression[])","pos":[0,46]}]},{"pos":[227967,227982],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[228180,228189],"content":"EntitySet","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySet","pos":[0,9]}]},{"pos":[228369,228379],"content":"EntityType","needQuote":true,"needEscape":true,"nodes":[{"content":"EntityType","pos":[0,10]}]},{"pos":[228577,228589],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[229079,229156],"content":"CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CrossApply(DbExpression,Func&lt;DbExpression,KeyValuePair&lt;String,DbExpression&gt;&gt;)","pos":[0,77],"source":"CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)"}]},{"pos":[229558,229575],"content":"DbApplyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbApplyExpression","pos":[0,17]}]},{"pos":[229794,229806],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[230102,230154],"content":"Func<DbExpression,KeyValuePair<String,DbExpression>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,KeyValuePair&lt;String,DbExpression&gt;&gt;","pos":[0,52],"source":"Func<DbExpression,KeyValuePair<String,DbExpression>>"}]},{"pos":[230696,230747],"content":"CrossApply(DbExpressionBinding,DbExpressionBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"CrossApply(DbExpressionBinding,DbExpressionBinding)","pos":[0,51]}]},{"pos":[231097,231114],"content":"DbApplyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbApplyExpression","pos":[0,17]}]},{"pos":[231340,231359],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[231589,231608],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[231997,232040],"content":"CrossJoin(IEnumerable<ph id=\"ph1\">&lt;DbExpressionBinding&gt;</ph>)","needQuote":true,"needEscape":true,"source":"CrossJoin(IEnumerable<DbExpressionBinding>)"},{"pos":[232378,232399],"content":"DbCrossJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbCrossJoinExpression","pos":[0,21]}]},{"pos":[232668,232700],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpressionBinding&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpressionBinding>"},{"pos":[233092,233111],"content":"Deref(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Deref(DbExpression)","pos":[0,19]}]},{"pos":[233397,233414],"content":"DbDerefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbDerefExpression","pos":[0,17]}]},{"pos":[233633,233645],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[233973,233995],"content":"Distinct(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Distinct(DbExpression)","pos":[0,22]}]},{"pos":[234290,234310],"content":"DbDistinctExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbDistinctExpression","pos":[0,20]}]},{"pos":[234535,234547],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[234918,234951],"content":"Divide(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Divide(DbExpression,DbExpression)","pos":[0,33]}]},{"pos":[235270,235292],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[235521,235533],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[235742,235754],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[236081,236102],"content":"Element(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Element(DbExpression)","pos":[0,21]}]},{"pos":[236394,236413],"content":"DbElementExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbElementExpression","pos":[0,19]}]},{"pos":[236636,236648],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[237018,237050],"content":"Equal(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equal(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[237367,237389],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[237618,237630],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[237839,237851],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[238222,238255],"content":"Except(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Except(DbExpression,DbExpression)","pos":[0,33]}]},{"pos":[238570,238588],"content":"DbExceptExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExceptExpression","pos":[0,18]}]},{"pos":[238809,238821],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[239030,239042],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[239368,239388],"content":"Exists(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Exists(DbExpression)","pos":[0,20]}]},{"pos":[239671,239683],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[239892,239904],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[240183,240188],"content":"False","needQuote":false,"needEscape":true,"nodes":[{"content":"False","pos":[0,5]}]},{"pos":[240450,240470],"content":"DbConstantExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbConstantExpression","pos":[0,20]}]},{"pos":[240864,240904],"content":"Filter(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Filter(DbExpressionBinding,DbExpression)","pos":[0,40]}]},{"pos":[241233,241251],"content":"DbFilterExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFilterExpression","pos":[0,18]}]},{"pos":[241479,241498],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[241721,241733],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[242259,242344],"content":"FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"FullOuterJoin(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression,DbExpression&gt;)","pos":[0,85],"source":"FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)"}]},{"pos":[242761,242777],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[242994,243006],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[243215,243227],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[243513,243557],"content":"Func<DbExpression,DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression,DbExpression&gt;","pos":[0,44],"source":"Func<DbExpression,DbExpression,DbExpression>"}]},{"pos":[244129,244196],"content":"FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","pos":[0,67]}]},{"pos":[244577,244593],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[244817,244836],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[245066,245085],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[245308,245320],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[245652,245678],"content":"GetEntityRef(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEntityRef(DbExpression)","pos":[0,26]}]},{"pos":[245982,246003],"content":"DbEntityRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbEntityRefExpression","pos":[0,21]}]},{"pos":[246230,246242],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[246571,246594],"content":"GetRefKey(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRefKey(DbExpression)","pos":[0,23]}]},{"pos":[246889,246907],"content":"DbRefKeyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefKeyExpression","pos":[0,18]}]},{"pos":[247128,247140],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[247516,247554],"content":"GreaterThan(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GreaterThan(DbExpression,DbExpression)","pos":[0,38]}]},{"pos":[247883,247905],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[248134,248146],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[248355,248367],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[248750,248795],"content":"GreaterThanOrEqual(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GreaterThanOrEqual(DbExpression,DbExpression)","pos":[0,45]}]},{"pos":[249138,249160],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[249389,249401],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[249610,249622],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[249951,249974],"content":"GroupBind(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBind(DbExpression)","pos":[0,23]}]},{"pos":[250275,250299],"content":"DbGroupExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupExpressionBinding","pos":[0,24]}]},{"pos":[250532,250544],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[250903,250942],"content":"GroupBindAs(DbExpression,String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBindAs(DbExpression,String,String)","pos":[0,39]}]},{"pos":[251275,251299],"content":"DbGroupExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupExpressionBinding","pos":[0,24]}]},{"pos":[251532,251544],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[251697,251703],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[251819,251825],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[252406,252532],"content":"GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"GroupBy(DbGroupExpressionBinding,IEnumerable&lt;KeyValuePair&lt;String,DbExpression&gt;&gt;,IEnumerable&lt;KeyValuePair&lt;String,DbAggregate&gt;&gt;)","pos":[0,126],"source":"GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)"}]},{"pos":[253034,253053],"content":"DbGroupByExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupByExpression","pos":[0,19]}]},{"pos":[253288,253312],"content":"DbGroupExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupExpressionBinding","pos":[0,24]}]},{"pos":[253635,253681],"content":"IEnumerable<KeyValuePair<String,DbExpression>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;String,DbExpression&gt;&gt;","pos":[0,46],"source":"IEnumerable<KeyValuePair<String,DbExpression>>"}]},{"pos":[254108,254153],"content":"IEnumerable<KeyValuePair<String,DbAggregate>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;String,DbAggregate&gt;&gt;","pos":[0,45],"source":"IEnumerable<KeyValuePair<String,DbAggregate>>"}]},{"pos":[254802,254883],"content":"InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"InnerJoin(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression,DbExpression&gt;)","pos":[0,81],"source":"InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)"}]},{"pos":[255292,255308],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[255525,255537],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[255746,255758],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[256044,256088],"content":"Func<DbExpression,DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression,DbExpression&gt;","pos":[0,44],"source":"Func<DbExpression,DbExpression,DbExpression>"}]},{"pos":[256656,256719],"content":"InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","pos":[0,63]}]},{"pos":[257092,257108],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[257332,257351],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[257581,257600],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[257823,257835],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[258209,258245],"content":"Intersect(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(DbExpression,DbExpression)","pos":[0,36]}]},{"pos":[258569,258590],"content":"DbIntersectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIntersectExpression","pos":[0,21]}]},{"pos":[258817,258829],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[259038,259050],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[259457,259499],"content":"Invoke(DbLambda,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Invoke(DbLambda,IEnumerable<DbExpression>)"},{"pos":[259832,259850],"content":"DbLambdaExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambdaExpression","pos":[0,18]}]},{"pos":[260067,260075],"content":"DbLambda","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambda","pos":[0,8]}]},{"pos":[260311,260336],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[260758,260789],"content":"Invoke(DbLambda,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(DbLambda,DbExpression[])","pos":[0,31]}]},{"pos":[261100,261118],"content":"DbLambdaExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambdaExpression","pos":[0,18]}]},{"pos":[261335,261343],"content":"DbLambda","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambda","pos":[0,8]}]},{"pos":[261544,261556],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[261961,262006],"content":"Invoke(EdmFunction,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Invoke(EdmFunction,IEnumerable<DbExpression>)"},{"pos":[262347,262367],"content":"DbFunctionExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFunctionExpression","pos":[0,20]}]},{"pos":[262577,262588],"content":"EdmFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"EdmFunction","pos":[0,11]}]},{"pos":[262823,262848],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[263266,263300],"content":"Invoke(EdmFunction,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(EdmFunction,DbExpression[])","pos":[0,34]}]},{"pos":[263619,263639],"content":"DbFunctionExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFunctionExpression","pos":[0,20]}]},{"pos":[263849,263860],"content":"EdmFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"EdmFunction","pos":[0,11]}]},{"pos":[264060,264072],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[264401,264422],"content":"IsEmpty(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty(DbExpression)","pos":[0,21]}]},{"pos":[264714,264733],"content":"DbIsEmptyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsEmptyExpression","pos":[0,19]}]},{"pos":[264956,264968],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[265294,265314],"content":"IsNull(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsNull(DbExpression)","pos":[0,20]}]},{"pos":[265603,265621],"content":"DbIsNullExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsNullExpression","pos":[0,18]}]},{"pos":[265842,265854],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[266213,266241],"content":"IsOf(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsOf(DbExpression,TypeUsage)","pos":[0,28]}]},{"pos":[266544,266560],"content":"DbIsOfExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsOfExpression","pos":[0,16]}]},{"pos":[266777,266789],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[266981,266990],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[267340,267372],"content":"IsOfOnly(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsOfOnly(DbExpression,TypeUsage)","pos":[0,32]}]},{"pos":[267683,267699],"content":"DbIsOfExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbIsOfExpression","pos":[0,16]}]},{"pos":[267916,267928],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[268120,268129],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[268691,268786],"content":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Join(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,95],"source":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)"}]},{"pos":[269223,269239],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[269456,269468],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[269677,269689],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[269930,269961],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[270279,270310],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[271072,271209],"content":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Join(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression,TSelector&gt;)","pos":[0,137],"source":"Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)"}]},{"pos":[271733,271752],"content":"DbProjectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbProjectExpression","pos":[0,19]}]},{"pos":[271975,271987],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[272196,272208],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[272449,272480],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[272798,272829],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[273157,273198],"content":"Func<DbExpression,DbExpression,TSelector>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression,TSelector&gt;","pos":[0,41],"source":"Func<DbExpression,DbExpression,TSelector>"}]},{"pos":[273722,273785],"content":"Lambda(DbExpression,IEnumerable<ph id=\"ph1\">&lt;DbVariableReferenceExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)"},{"pos":[274150,274158],"content":"DbLambda","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambda","pos":[0,8]}]},{"pos":[274359,274371],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[274632,274674],"content":"IEnumerable<ph id=\"ph1\">&lt;DbVariableReferenceExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbVariableReferenceExpression>"},{"pos":[275150,275202],"content":"Lambda(DbExpression,DbVariableReferenceExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Lambda(DbExpression,DbVariableReferenceExpression[])","pos":[0,52]}]},{"pos":[275545,275553],"content":"DbLambda","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLambda","pos":[0,8]}]},{"pos":[275754,275766],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[275992,276021],"content":"DbVariableReferenceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbVariableReferenceExpression","pos":[0,29]}]},{"pos":[276583,276668],"content":"LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"LeftOuterJoin(DbExpression,DbExpression,Func&lt;DbExpression,DbExpression,DbExpression&gt;)","pos":[0,85],"source":"LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)"}]},{"pos":[277085,277101],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[277318,277330],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[277539,277551],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[277837,277881],"content":"Func<DbExpression,DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression,DbExpression&gt;","pos":[0,44],"source":"Func<DbExpression,DbExpression,DbExpression>"}]},{"pos":[278453,278520],"content":"LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)","pos":[0,67]}]},{"pos":[278901,278917],"content":"DbJoinExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbJoinExpression","pos":[0,16]}]},{"pos":[279141,279160],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[279390,279409],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[279632,279644],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[280017,280052],"content":"LessThan(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"LessThan(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[280375,280397],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[280626,280638],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[280847,280859],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[281239,281281],"content":"LessThanOrEqual(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"LessThanOrEqual(DbExpression,DbExpression)","pos":[0,42]}]},{"pos":[281618,281640],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[281869,281881],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[282090,282102],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[282471,282502],"content":"Like(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Like(DbExpression,DbExpression)","pos":[0,31]}]},{"pos":[282811,282827],"content":"DbLikeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLikeExpression","pos":[0,16]}]},{"pos":[283044,283056],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[283265,283277],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[283691,283735],"content":"Like(DbExpression,DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Like(DbExpression,DbExpression,DbExpression)","pos":[0,44]}]},{"pos":[284070,284086],"content":"DbLikeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLikeExpression","pos":[0,16]}]},{"pos":[284303,284315],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[284524,284536],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[284745,284757],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[285127,285159],"content":"Limit(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Limit(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[285471,285488],"content":"DbLimitExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLimitExpression","pos":[0,17]}]},{"pos":[285707,285719],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[285928,285940],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[286310,286342],"content":"Minus(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Minus(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[286659,286681],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[286910,286922],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[287131,287143],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[287514,287547],"content":"Modulo(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Modulo(DbExpression,DbExpression)","pos":[0,33]}]},{"pos":[287866,287888],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[288117,288129],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[288338,288350],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[288723,288758],"content":"Multiply(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiply(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[289081,289103],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[289332,289344],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[289553,289565],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[289987,290053],"content":"Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)","pos":[0,66]}]},{"pos":[290450,290484],"content":"DbRelationshipNavigationExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRelationshipNavigationExpression","pos":[0,34]}]},{"pos":[290737,290749],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[290953,290974],"content":"RelationshipEndMember","needQuote":true,"needEscape":true,"nodes":[{"content":"RelationshipEndMember","pos":[0,21]}]},{"pos":[291189,291210],"content":"RelationshipEndMember","needQuote":true,"needEscape":true,"nodes":[{"content":"RelationshipEndMember","pos":[0,21]}]},{"pos":[291619,291672],"content":"Navigate(RelationshipType,String,String,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Navigate(RelationshipType,String,String,DbExpression)","pos":[0,53]}]},{"pos":[292043,292077],"content":"DbRelationshipNavigationExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRelationshipNavigationExpression","pos":[0,34]}]},{"pos":[292320,292336],"content":"RelationshipType","needQuote":true,"needEscape":true,"nodes":[{"content":"RelationshipType","pos":[0,16]}]},{"pos":[292490,292496],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[292612,292618],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[292790,292802],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[293128,293148],"content":"Negate(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Negate(DbExpression)","pos":[0,20]}]},{"pos":[293441,293463],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[293692,293704],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[294102,294142],"content":"New(TypeUsage,IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"New(TypeUsage,IEnumerable<DbExpression>)"},{"pos":[294476,294499],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[294713,294722],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[294953,294978],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[295391,295420],"content":"New(TypeUsage,DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"New(TypeUsage,DbExpression[])","pos":[0,29]}]},{"pos":[295732,295755],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[295969,295978],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[296174,296186],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[296560,296600],"content":"NewCollection(IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>)","needQuote":true,"needEscape":true,"source":"NewCollection(IEnumerable<DbExpression>)"},{"pos":[296934,296957],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[297223,297248],"content":"IEnumerable<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbExpression>"},{"pos":[297635,297664],"content":"NewCollection(DbExpression[])","needQuote":true,"needEscape":true,"nodes":[{"content":"NewCollection(DbExpression[])","pos":[0,29]}]},{"pos":[297976,297999],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[298230,298242],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[298572,298601],"content":"NewEmptyCollection(TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"NewEmptyCollection(TypeUsage)","pos":[0,29]}]},{"pos":[298913,298936],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[299150,299159],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[299566,299620],"content":"NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"NewRow(IEnumerable&lt;KeyValuePair&lt;String,DbExpression&gt;&gt;)","pos":[0,54],"source":"NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)"}]},{"pos":[299982,300005],"content":"DbNewInstanceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNewInstanceExpression","pos":[0,23]}]},{"pos":[300326,300372],"content":"IEnumerable<KeyValuePair<String,DbExpression>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerable&lt;KeyValuePair&lt;String,DbExpression&gt;&gt;","pos":[0,46],"source":"IEnumerable<KeyValuePair<String,DbExpression>>"}]},{"pos":[300824,300841],"content":"Not(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Not(DbExpression)","pos":[0,17]}]},{"pos":[301121,301136],"content":"DbNotExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNotExpression","pos":[0,15]}]},{"pos":[301351,301363],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[301736,301771],"content":"NotEqual(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"NotEqual(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[302094,302116],"content":"DbComparisonExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbComparisonExpression","pos":[0,22]}]},{"pos":[302345,302357],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[302566,302578],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[302892,302907],"content":"Null(TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"Null(TypeUsage)","pos":[0,15]}]},{"pos":[303184,303200],"content":"DbNullExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbNullExpression","pos":[0,16]}]},{"pos":[303400,303409],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[303757,303787],"content":"OfType(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"OfType(DbExpression,TypeUsage)","pos":[0,30]}]},{"pos":[304096,304114],"content":"DbOfTypeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbOfTypeExpression","pos":[0,18]}]},{"pos":[304335,304347],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[304539,304548],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[304900,304934],"content":"OfTypeOnly(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"OfTypeOnly(DbExpression,TypeUsage)","pos":[0,34]}]},{"pos":[305251,305269],"content":"DbOfTypeExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbOfTypeExpression","pos":[0,18]}]},{"pos":[305490,305502],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[305694,305703],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[306057,306086],"content":"Or(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Or(DbExpression,DbExpression)","pos":[0,29]}]},{"pos":[306389,306403],"content":"DbOrExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbOrExpression","pos":[0,14]}]},{"pos":[306616,306628],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[306837,306849],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[307279,307332],"content":"OrderBy(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderBy(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,53],"source":"OrderBy(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[307685,307701],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[307918,307930],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[308171,308202],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[308723,308783],"content":"OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderBy(DbExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,60],"source":"OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[309150,309166],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[309383,309395],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[309636,309667],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[309897,309903],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[310306,310369],"content":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderByDescending(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,63],"source":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[310742,310758],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[310975,310987],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[311228,311259],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[311790,311860],"content":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OrderByDescending(DbExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,70],"source":"OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[312247,312263],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[312480,312492],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[312733,312764],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[312994,313000],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[313451,313528],"content":"OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)","needQuote":true,"needEscape":true,"nodes":[{"content":"OuterApply(DbExpression,Func&lt;DbExpression,KeyValuePair&lt;String,DbExpression&gt;&gt;)","pos":[0,77],"source":"OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)"}]},{"pos":[313930,313947],"content":"DbApplyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbApplyExpression","pos":[0,17]}]},{"pos":[314166,314178],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[314474,314526],"content":"Func<DbExpression,KeyValuePair<String,DbExpression>>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,KeyValuePair&lt;String,DbExpression&gt;&gt;","pos":[0,52],"source":"Func<DbExpression,KeyValuePair<String,DbExpression>>"}]},{"pos":[315068,315119],"content":"OuterApply(DbExpressionBinding,DbExpressionBinding)","needQuote":true,"needEscape":true,"nodes":[{"content":"OuterApply(DbExpressionBinding,DbExpressionBinding)","pos":[0,51]}]},{"pos":[315469,315486],"content":"DbApplyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbApplyExpression","pos":[0,17]}]},{"pos":[315712,315731],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[315961,315980],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[316327,316354],"content":"Parameter(TypeUsage,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter(TypeUsage,String)","pos":[0,27]}]},{"pos":[316669,316699],"content":"DbParameterReferenceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbParameterReferenceExpression","pos":[0,30]}]},{"pos":[316927,316936],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[317076,317082],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[317414,317445],"content":"Plus(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Plus(DbExpression,DbExpression)","pos":[0,31]}]},{"pos":[317760,317782],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[318011,318023],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[318232,318244],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[318623,318664],"content":"Project(DbExpressionBinding,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Project(DbExpressionBinding,DbExpression)","pos":[0,41]}]},{"pos":[318996,319015],"content":"DbProjectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbProjectExpression","pos":[0,19]}]},{"pos":[319245,319264],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[319487,319499],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[319864,319898],"content":"Property(DbExpression,EdmProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,EdmProperty)","pos":[0,34]}]},{"pos":[320217,320237],"content":"DbPropertyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbPropertyExpression","pos":[0,20]}]},{"pos":[320462,320474],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[320668,320679],"content":"EdmProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"EdmProperty","pos":[0,11]}]},{"pos":[321042,321083],"content":"Property(DbExpression,NavigationProperty)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,NavigationProperty)","pos":[0,41]}]},{"pos":[321416,321436],"content":"DbPropertyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbPropertyExpression","pos":[0,20]}]},{"pos":[321661,321673],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[321874,321892],"content":"NavigationProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"NavigationProperty","pos":[0,18]}]},{"pos":[322272,322316],"content":"Property(DbExpression,RelationshipEndMember)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,RelationshipEndMember)","pos":[0,44]}]},{"pos":[322655,322675],"content":"DbPropertyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbPropertyExpression","pos":[0,20]}]},{"pos":[322900,322912],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[323116,323137],"content":"RelationshipEndMember","needQuote":true,"needEscape":true,"nodes":[{"content":"RelationshipEndMember","pos":[0,21]}]},{"pos":[323490,323519],"content":"Property(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Property(DbExpression,String)","pos":[0,29]}]},{"pos":[323828,323848],"content":"DbPropertyExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbPropertyExpression","pos":[0,20]}]},{"pos":[324073,324085],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[324238,324244],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[324572,324606],"content":"RefFromKey(EntitySet,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"RefFromKey(EntitySet,DbExpression)","pos":[0,34]}]},{"pos":[324920,324935],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[325133,325142],"content":"EntitySet","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySet","pos":[0,9]}]},{"pos":[325338,325350],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[325751,325796],"content":"RefFromKey(EntitySet,DbExpression,EntityType)","needQuote":true,"needEscape":true,"nodes":[{"content":"RefFromKey(EntitySet,DbExpression,EntityType)","pos":[0,45]}]},{"pos":[326132,326147],"content":"DbRefExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbRefExpression","pos":[0,15]}]},{"pos":[326345,326354],"content":"EntitySet","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySet","pos":[0,9]}]},{"pos":[326550,326562],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[326755,326765],"content":"EntityType","needQuote":true,"needEscape":true,"nodes":[{"content":"EntityType","pos":[0,10]}]},{"pos":[327072,327091],"content":"Scan(EntitySetBase)","needQuote":true,"needEscape":true,"nodes":[{"content":"Scan(EntitySetBase)","pos":[0,19]}]},{"pos":[327376,327392],"content":"DbScanExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbScanExpression","pos":[0,16]}]},{"pos":[327596,327609],"content":"EntitySetBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EntitySetBase","pos":[0,13]}]},{"pos":[327995,328046],"content":"Select(DbExpression,Func<DbExpression,TProjection>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Select(DbExpression,Func&lt;DbExpression,TProjection&gt;)","pos":[0,51],"source":"Select(DbExpression,Func<DbExpression,TProjection>)"}]},{"pos":[328398,328417],"content":"DbProjectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbProjectExpression","pos":[0,19]}]},{"pos":[328640,328652],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[328860,328890],"content":"Func<DbExpression,TProjection>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,TProjection&gt;","pos":[0,30],"source":"Func<DbExpression,TProjection>"}]},{"pos":[329366,329422],"content":"SelectMany(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectMany(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,56],"source":"SelectMany(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[329784,329803],"content":"DbProjectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbProjectExpression","pos":[0,19]}]},{"pos":[330026,330038],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[330279,330310],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[330930,331028],"content":"SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectMany(DbExpression,Func&lt;DbExpression,DbExpression&gt;,Func&lt;DbExpression,DbExpression,TSelector&gt;)","pos":[0,98],"source":"SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)"}]},{"pos":[331474,331493],"content":"DbProjectExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbProjectExpression","pos":[0,19]}]},{"pos":[331716,331728],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[331969,332000],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[332328,332369],"content":"Func<DbExpression,DbExpression,TSelector>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression,TSelector&gt;","pos":[0,41],"source":"Func<DbExpression,DbExpression,TSelector>"}]},{"pos":[332839,332874],"content":"Skip(DbSortExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Skip(DbSortExpression,DbExpression)","pos":[0,35]}]},{"pos":[333191,333207],"content":"DbSkipExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSkipExpression","pos":[0,16]}]},{"pos":[333428,333444],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[333661,333673],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[334134,334198],"content":"Skip(DbExpressionBinding,IEnumerable<ph id=\"ph1\">&lt;DbSortClause&gt;</ph>,DbExpression)","needQuote":true,"needEscape":true,"source":"Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)"},{"pos":[334573,334589],"content":"DbSkipExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSkipExpression","pos":[0,16]}]},{"pos":[334813,334832],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[335090,335115],"content":"IEnumerable<ph id=\"ph1\">&lt;DbSortClause&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbSortClause>"},{"pos":[335377,335389],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[335805,335856],"content":"Sort(DbExpressionBinding,IEnumerable<ph id=\"ph1\">&lt;DbSortClause&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Sort(DbExpressionBinding,IEnumerable<DbSortClause>)"},{"pos":[336205,336221],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[336445,336464],"content":"DbExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionBinding","pos":[0,19]}]},{"pos":[336722,336747],"content":"IEnumerable<ph id=\"ph1\">&lt;DbSortClause&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<DbSortClause>"},{"pos":[337169,337200],"content":"Take(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Take(DbExpression,DbExpression)","pos":[0,31]}]},{"pos":[337510,337527],"content":"DbLimitExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbLimitExpression","pos":[0,17]}]},{"pos":[337746,337758],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[337967,337979],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[338412,338468],"content":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenBy(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,56],"source":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[338827,338843],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[339064,339080],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[339329,339360],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[339884,339947],"content":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenBy(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,63],"source":"ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[340320,340336],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[340557,340573],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[340822,340853],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[341083,341089],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[341495,341561],"content":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenByDescending(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,66],"source":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[341940,341956],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[342177,342193],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[342442,342473],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[343007,343080],"content":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThenByDescending(DbSortExpression,Func&lt;DbExpression,DbExpression&gt;,String)","pos":[0,73],"source":"ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)"}]},{"pos":[343473,343489],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[343710,343726],"content":"DbSortExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortExpression","pos":[0,16]}]},{"pos":[343975,344006],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]},{"pos":[344236,344242],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[344537,344563],"content":"ToSortClause(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClause(DbExpression)","pos":[0,26]}]},{"pos":[344858,344870],"content":"DbSortClause","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortClause","pos":[0,12]}]},{"pos":[345079,345091],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[345437,345470],"content":"ToSortClause(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClause(DbExpression,String)","pos":[0,33]}]},{"pos":[345779,345791],"content":"DbSortClause","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortClause","pos":[0,12]}]},{"pos":[346000,346012],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[346165,346171],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[346476,346512],"content":"ToSortClauseDescending(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClauseDescending(DbExpression)","pos":[0,36]}]},{"pos":[346827,346839],"content":"DbSortClause","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortClause","pos":[0,12]}]},{"pos":[347048,347060],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[347416,347459],"content":"ToSortClauseDescending(DbExpression,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToSortClauseDescending(DbExpression,String)","pos":[0,43]}]},{"pos":[347788,347800],"content":"DbSortClause","needQuote":true,"needEscape":true,"nodes":[{"content":"DbSortClause","pos":[0,12]}]},{"pos":[348009,348021],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[348174,348180],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[348505,348536],"content":"TreatAs(DbExpression,TypeUsage)","needQuote":true,"needEscape":true,"nodes":[{"content":"TreatAs(DbExpression,TypeUsage)","pos":[0,31]}]},{"pos":[348846,348863],"content":"DbTreatExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbTreatExpression","pos":[0,17]}]},{"pos":[349082,349094],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[349286,349295],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[349560,349564],"content":"True","needQuote":false,"needEscape":true,"nodes":[{"content":"True","pos":[0,4]}]},{"pos":[349824,349844],"content":"DbConstantExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbConstantExpression","pos":[0,20]}]},{"pos":[350190,350214],"content":"UnaryMinus(DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnaryMinus(DbExpression)","pos":[0,24]}]},{"pos":[350515,350537],"content":"DbArithmeticExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbArithmeticExpression","pos":[0,22]}]},{"pos":[350766,350778],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[351148,351180],"content":"Union(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(DbExpression,DbExpression)","pos":[0,32]}]},{"pos":[351487,351499],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[351708,351720],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[351929,351941],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[352314,352349],"content":"UnionAll(DbExpression,DbExpression)","needQuote":true,"needEscape":true,"nodes":[{"content":"UnionAll(DbExpression,DbExpression)","pos":[0,35]}]},{"pos":[352670,352690],"content":"DbUnionAllExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbUnionAllExpression","pos":[0,20]}]},{"pos":[352915,352927],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[353136,353148],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[353480,353506],"content":"Variable(TypeUsage,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Variable(TypeUsage,String)","pos":[0,26]}]},{"pos":[353818,353847],"content":"DbVariableReferenceExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbVariableReferenceExpression","pos":[0,29]}]},{"pos":[354073,354082],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]},{"pos":[354222,354228],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[354619,354670],"content":"Where(DbExpression,Func<DbExpression,DbExpression>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Where(DbExpression,Func&lt;DbExpression,DbExpression&gt;)","pos":[0,51],"source":"Where(DbExpression,Func<DbExpression,DbExpression>)"}]},{"pos":[355021,355039],"content":"DbFilterExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbFilterExpression","pos":[0,18]}]},{"pos":[355260,355272],"content":"DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpression","pos":[0,12]}]},{"pos":[355513,355544],"content":"Func<DbExpression,DbExpression>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;DbExpression,DbExpression&gt;","pos":[0,31],"source":"Func<DbExpression,DbExpression>"}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  id: DbExpressionBuilder\n  children:\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  langs:\n  - csharp\n  name: DbExpressionBuilder\n  nameWithType: DbExpressionBuilder\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  type: Class\n  syntax:\n    content: public static class DbExpressionBuilder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  id: Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Aggregate(EdmFunction,DbExpression)\n  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: Parameter description to be filled\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionAggregate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  id: AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: AggregateDistinct(EdmFunction,DbExpression)\n  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: Parameter description to be filled\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionAggregate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: All(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  id: All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: All(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: And(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbAndExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)\n  id: Any(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Any(DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Any(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  id: Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Any(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbQuantifierExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)\n  id: As(System.Data.Common.CommandTrees.DbAggregate@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: As(DbAggregate,String)\n  nameWithType: DbExpressionBuilder.As(DbAggregate,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate> As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);\n    parameters:\n    - id: value\n      type: System.Data.Common.CommandTrees.DbAggregate\n      description: Parameter description to be filled\n    - id: alias\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  id: As(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: As(DbExpression,String)\n  nameWithType: DbExpressionBuilder.As(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> As (this System.Data.Common.CommandTrees.DbExpression value, string alias);\n    parameters:\n    - id: value\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: alias\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)\n  id: Bind(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Bind(DbExpression)\n  nameWithType: DbExpressionBuilder.Bind(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  id: BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: BindAs(DbExpression,String)\n  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: varName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  id: Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)\n  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> whenExpressions, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);\n    parameters:\n    - id: whenExpressions\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: thenExpressions\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: elseExpression\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbCaseExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  id: CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CastTo(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: toType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbCastExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  id: Constant(System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Constant(Object)\n  nameWithType: DbExpressionBuilder.Constant(Object)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)\n  id: Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Constant(TypeUsage,Object)\n  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);\n    parameters:\n    - id: constantType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: Parameter description to be filled\n    - id: keyValues\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet,DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression[] keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: Parameter description to be filled\n    - id: keyValues\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: Parameter description to be filled\n    - id: entityType\n      type: System.Data.Metadata.Edm.EntityType\n      description: Parameter description to be filled\n    - id: keyValues\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CreateRef(EntitySet,EntityType,DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Data.Common.CommandTrees.DbExpression[] keyValues);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: Parameter description to be filled\n    - id: entityType\n      type: System.Data.Metadata.Edm.EntityType\n      description: Parameter description to be filled\n    - id: keyValues\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  id: CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  id: CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CrossApply(DbExpressionBinding,DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: apply\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  id: CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: CrossJoin(IEnumerable<DbExpressionBinding>)\n  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding> inputs);\n    parameters:\n    - id: inputs\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbCrossJoinExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)\n  id: Deref(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Deref(DbExpression)\n  nameWithType: DbExpressionBuilder.Deref(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbDerefExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)\n  id: Distinct(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Distinct(DbExpression)\n  nameWithType: DbExpressionBuilder.Distinct(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbDistinctExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Divide(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)\n  id: Element(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Element(DbExpression)\n  nameWithType: DbExpressionBuilder.Element(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbElementExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Equal(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Except(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExceptExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)\n  id: Exists(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Exists(DbExpression)\n  nameWithType: DbExpressionBuilder.Exists(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  id: \"False\"\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: \"False\"\n  nameWithType: DbExpressionBuilder.False\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  id: Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Filter(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: joinCondition\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: joinCondition\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)\n  id: GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GetEntityRef(DbExpression)\n  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbEntityRefExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)\n  id: GetRefKey(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GetRefKey(DbExpression)\n  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefKeyExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GreaterThan(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GreaterThanOrEqual(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)\n  id: GroupBind(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GroupBind(DbExpression)\n  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)\n  id: GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GroupBindAs(DbExpression,String,String)\n  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: varName\n      type: System.String\n      description: Parameter description to be filled\n    - id: groupVarName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  id: GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)\n  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> keys, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate>> aggregates);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: Parameter description to be filled\n    - id: keys\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: Parameter description to be filled\n    - id: aggregates\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupByExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: joinCondition\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: joinCondition\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Intersect(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbIntersectExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(DbLambda,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);\n    parameters:\n    - id: lambda\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])\n  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(DbLambda,DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Data.Common.CommandTrees.DbExpression[] arguments);\n    parameters:\n    - id: lambda\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLambdaExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(EdmFunction,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])\n  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Invoke(EdmFunction,DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression[] arguments);\n    parameters:\n    - id: function\n      type: System.Data.Metadata.Edm.EdmFunction\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbFunctionExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)\n  id: IsEmpty(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsEmpty(DbExpression)\n  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbIsEmptyExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)\n  id: IsNull(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsNull(DbExpression)\n  nameWithType: DbExpressionBuilder.IsNull(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbIsNullExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  id: IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsOf(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  id: IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: IsOfOnly(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbIsOfExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey);\n    parameters:\n    - id: outer\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: inner\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: outerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: innerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  id: Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression Join<TSelector> (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);\n    parameters:\n    - id: outer\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: inner\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: outerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: innerKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> variables);\n    parameters:\n    - id: body\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: variables\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Lambda(DbExpression,DbVariableReferenceExpression[])\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);\n    parameters:\n    - id: body\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: variables\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLambda\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: joinCondition\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: joinCondition\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbJoinExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LessThan(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: LessThanOrEqual(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Like(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: pattern\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Like(DbExpression,DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: pattern\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: escape\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLikeExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Limit(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Minus(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Modulo(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Multiply(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  id: Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);\n    parameters:\n    - id: navigateFrom\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: fromEnd\n      type: System.Data.Metadata.Edm.RelationshipEndMember\n      description: Parameter description to be filled\n    - id: toEnd\n      type: System.Data.Metadata.Edm.RelationshipEndMember\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  id: Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Navigate(RelationshipType,String,String,DbExpression)\n  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.RelationshipType\n      description: Parameter description to be filled\n    - id: fromEndName\n      type: System.String\n      description: Parameter description to be filled\n    - id: toEndName\n      type: System.String\n      description: Parameter description to be filled\n    - id: navigateFrom\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)\n  id: Negate(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Negate(DbExpression)\n  nameWithType: DbExpressionBuilder.Negate(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: New(TypeUsage,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);\n    parameters:\n    - id: instanceType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])\n  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: New(TypeUsage,DbExpression[])\n  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Data.Common.CommandTrees.DbExpression[] arguments);\n    parameters:\n    - id: instanceType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    - id: arguments\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  id: NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewCollection(IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> elements);\n    parameters:\n    - id: elements\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  id: NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewCollection(DbExpression[])\n  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Data.Common.CommandTrees.DbExpression[] elements);\n    parameters:\n    - id: elements\n      type: System.Data.Common.CommandTrees.DbExpression[]\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)\n  id: NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewEmptyCollection(TypeUsage)\n  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);\n    parameters:\n    - id: collectionType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  id: NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> columnValues);\n    parameters:\n    - id: columnValues\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNewInstanceExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)\n  id: Not(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Not(DbExpression)\n  nameWithType: DbExpressionBuilder.Not(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNotExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: NotEqual(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbComparisonExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)\n  id: Null(System.Data.Metadata.Edm.TypeUsage@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Null(TypeUsage)\n  nameWithType: DbExpressionBuilder.Null(TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);\n    parameters:\n    - id: nullType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbNullExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  id: OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OfType(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  id: OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OfTypeOnly(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbOfTypeExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Or(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbOrExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: collation\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: collation\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  id: OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  id: OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: OuterApply(DbExpressionBinding,DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: apply\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbApplyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  id: Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Parameter(TypeUsage,String)\n  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Plus(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  id: Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Project(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: projection\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)\n  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression,EdmProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: propertyMetadata\n      type: System.Data.Metadata.Edm.EdmProperty\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)\n  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression,NavigationProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: navigationProperty\n      type: System.Data.Metadata.Edm.NavigationProperty\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)\n  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression,RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: relationshipEnd\n      type: System.Data.Metadata.Edm.RelationshipEndMember\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Property(DbExpression,String)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);\n    parameters:\n    - id: instance\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: propertyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbPropertyExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)\n  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: RefFromKey(EntitySet,DbExpression)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: Parameter description to be filled\n    - id: keyRow\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: RefFromKey(EntitySet,DbExpression,EntityType)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);\n    parameters:\n    - id: entitySet\n      type: System.Data.Metadata.Edm.EntitySet\n      description: Parameter description to be filled\n    - id: keyRow\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: entityType\n      type: System.Data.Metadata.Edm.EntityType\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbRefExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)\n  id: Scan(System.Data.Metadata.Edm.EntitySetBase@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Scan(EntitySetBase)\n  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);\n    parameters:\n    - id: targetSet\n      type: System.Data.Metadata.Edm.EntitySetBase\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbScanExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  id: Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Select(DbExpression,Func<DbExpression,TProjection>)\n  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression Select<TProjection> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,TProjection> projection);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: projection\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  id: SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany<TSelector> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: apply\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: selector\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbProjectExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Skip(DbSortExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  id: Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: sortOrder\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n      description: Parameter description to be filled\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSkipExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  id: Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)\n  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder);\n    parameters:\n    - id: input\n      type: System.Data.Common.CommandTrees.DbExpressionBinding\n      description: Parameter description to be filled\n    - id: sortOrder\n      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Take(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: count\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbLimitExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: collation\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n    - id: sortKey\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    - id: collation\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortExpression\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)\n  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClause(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClause(DbExpression,String)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: collation\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)\n  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClauseDescending(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: ToSortClauseDescending(DbExpression,String)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);\n    parameters:\n    - id: key\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: collation\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbSortClause\n      description: Parameter description to be filled\n  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  id: TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: TreatAs(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: treatType\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbTreatExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  id: \"True\"\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: \"True\"\n  nameWithType: DbExpressionBuilder.True\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbConstantExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)\n  id: UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: UnaryMinus(DbExpression)\n  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);\n    parameters:\n    - id: argument\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbArithmeticExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Union(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  id: UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: UnionAll(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);\n    parameters:\n    - id: left\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: right\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbUnionAllExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  id: Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Variable(TypeUsage,String)\n  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);\n    parameters:\n    - id: type\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  id: Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  langs:\n  - csharp\n  name: Where(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees.ExpressionBuilder\n  syntax:\n    content: public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);\n    parameters:\n    - id: source\n      type: System.Data.Common.CommandTrees.DbExpression\n      description: Parameter description to be filled\n    - id: predicate\n      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Common.CommandTrees.DbFilterExpression\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Aggregate(EdmFunction,DbExpression)\n  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionAggregate\n  nameWithType: DbFunctionAggregate\n  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: AggregateDistinct(EdmFunction,DbExpression)\n  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbFunctionAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionAggregate\n  nameWithType: DbFunctionAggregate\n  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: All(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: All(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: And(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbAndExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAndExpression\n  nameWithType: DbAndExpression\n  fullName: System.Data.Common.CommandTrees.DbAndExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Any(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbQuantifierExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbQuantifierExpression\n  nameWithType: DbQuantifierExpression\n  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As(DbAggregate,String)\n  nameWithType: DbExpressionBuilder.As(DbAggregate,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbAggregate>\n  nameWithType: KeyValuePair<String,DbAggregate>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>\n- uid: System.Data.Common.CommandTrees.DbAggregate\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbAggregate\n  nameWithType: DbAggregate\n  fullName: System.Data.Common.CommandTrees.DbAggregate\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: As(DbExpression,String)\n  nameWithType: DbExpressionBuilder.As(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,DbExpression>\n  nameWithType: KeyValuePair<String,DbExpression>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Bind(DbExpression)\n  nameWithType: DbExpressionBuilder.Bind(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: BindAs(DbExpression,String)\n  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)\n  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbCaseExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCaseExpression\n  nameWithType: DbCaseExpression\n  fullName: System.Data.Common.CommandTrees.DbCaseExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CastTo(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbCastExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCastExpression\n  nameWithType: DbCastExpression\n  fullName: System.Data.Common.CommandTrees.DbCastExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Constant(Object)\n  nameWithType: DbExpressionBuilder.Constant(Object)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Constant(TypeUsage,Object)\n  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet,DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Metadata.Edm.EntityType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntityType\n  nameWithType: EntityType\n  fullName: System.Data.Metadata.Edm.EntityType\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CreateRef(EntitySet,EntityType,DbExpression[])\n  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Metadata.Edm.EntityType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntityType\n  nameWithType: EntityType\n  fullName: System.Data.Metadata.Edm.EntityType\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,KeyValuePair<String,DbExpression>>\n  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossApply(DbExpressionBinding,DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: CrossJoin(IEnumerable<DbExpressionBinding>)\n  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)\n- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbCrossJoinExpression\n  nameWithType: DbCrossJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpressionBinding>\n  nameWithType: IEnumerable<DbExpressionBinding>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Deref(DbExpression)\n  nameWithType: DbExpressionBuilder.Deref(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbDerefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDerefExpression\n  nameWithType: DbDerefExpression\n  fullName: System.Data.Common.CommandTrees.DbDerefExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Distinct(DbExpression)\n  nameWithType: DbExpressionBuilder.Distinct(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbDistinctExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbDistinctExpression\n  nameWithType: DbDistinctExpression\n  fullName: System.Data.Common.CommandTrees.DbDistinctExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Divide(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Element(DbExpression)\n  nameWithType: DbExpressionBuilder.Element(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbElementExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbElementExpression\n  nameWithType: DbElementExpression\n  fullName: System.Data.Common.CommandTrees.DbElementExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Equal(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Except(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExceptExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExceptExpression\n  nameWithType: DbExceptExpression\n  fullName: System.Data.Common.CommandTrees.DbExceptExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Exists(DbExpression)\n  nameWithType: DbExpressionBuilder.Exists(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"False\"\n  nameWithType: DbExpressionBuilder.False\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Filter(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbFilterExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFilterExpression\n  nameWithType: DbFilterExpression\n  fullName: System.Data.Common.CommandTrees.DbFilterExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetEntityRef(DbExpression)\n  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbEntityRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbEntityRefExpression\n  nameWithType: DbEntityRefExpression\n  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GetRefKey(DbExpression)\n  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbRefKeyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefKeyExpression\n  nameWithType: DbRefKeyExpression\n  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThan(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GreaterThanOrEqual(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBind(DbExpression)\n  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBindAs(DbExpression,String,String)\n  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)\n  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,DbExpression>>\n  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,DbAggregate>>\n  nameWithType: IEnumerable<KeyValuePair<String,DbAggregate>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Intersect(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbIntersectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIntersectExpression\n  nameWithType: DbIntersectExpression\n  fullName: System.Data.Common.CommandTrees.DbIntersectExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(DbLambda,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbLambdaExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambdaExpression\n  nameWithType: DbLambdaExpression\n  fullName: System.Data.Common.CommandTrees.DbLambdaExpression\n- uid: System.Data.Common.CommandTrees.DbLambda\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambda\n  nameWithType: DbLambda\n  fullName: System.Data.Common.CommandTrees.DbLambda\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(DbLambda,DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbLambdaExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambdaExpression\n  nameWithType: DbLambdaExpression\n  fullName: System.Data.Common.CommandTrees.DbLambdaExpression\n- uid: System.Data.Common.CommandTrees.DbLambda\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambda\n  nameWithType: DbLambda\n  fullName: System.Data.Common.CommandTrees.DbLambda\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(EdmFunction,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Invoke(EdmFunction,DbExpression[])\n  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbFunctionExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFunctionExpression\n  nameWithType: DbFunctionExpression\n  fullName: System.Data.Common.CommandTrees.DbFunctionExpression\n- uid: System.Data.Metadata.Edm.EdmFunction\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmFunction\n  nameWithType: EdmFunction\n  fullName: System.Data.Metadata.Edm.EdmFunction\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsEmpty(DbExpression)\n  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsEmptyExpression\n  nameWithType: DbIsEmptyExpression\n  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsNull(DbExpression)\n  nameWithType: DbExpressionBuilder.IsNull(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbIsNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsNullExpression\n  nameWithType: DbIsNullExpression\n  fullName: System.Data.Common.CommandTrees.DbIsNullExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOf(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbIsOfExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsOfExpression\n  nameWithType: DbIsOfExpression\n  fullName: System.Data.Common.CommandTrees.DbIsOfExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: IsOfOnly(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbIsOfExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbIsOfExpression\n  nameWithType: DbIsOfExpression\n  fullName: System.Data.Common.CommandTrees.DbIsOfExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression,TSelector>\n  nameWithType: Func<DbExpression,DbExpression,TSelector>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)\n- uid: System.Data.Common.CommandTrees.DbLambda\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambda\n  nameWithType: DbLambda\n  fullName: System.Data.Common.CommandTrees.DbLambda\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbVariableReferenceExpression>\n  nameWithType: IEnumerable<DbVariableReferenceExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Lambda(DbExpression,DbVariableReferenceExpression[])\n  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])\n- uid: System.Data.Common.CommandTrees.DbLambda\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLambda\n  nameWithType: DbLambda\n  fullName: System.Data.Common.CommandTrees.DbLambda\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbVariableReferenceExpression\n  nameWithType: DbVariableReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbJoinExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbJoinExpression\n  nameWithType: DbJoinExpression\n  fullName: System.Data.Common.CommandTrees.DbJoinExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThan(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: LessThanOrEqual(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Like(DbExpression,DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbLikeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLikeExpression\n  nameWithType: DbLikeExpression\n  fullName: System.Data.Common.CommandTrees.DbLikeExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Limit(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Minus(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Modulo(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Multiply(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)\n- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRelationshipNavigationExpression\n  nameWithType: DbRelationshipNavigationExpression\n  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.RelationshipEndMember\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: RelationshipEndMember\n  nameWithType: RelationshipEndMember\n  fullName: System.Data.Metadata.Edm.RelationshipEndMember\n- uid: System.Data.Metadata.Edm.RelationshipEndMember\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: RelationshipEndMember\n  nameWithType: RelationshipEndMember\n  fullName: System.Data.Metadata.Edm.RelationshipEndMember\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Navigate(RelationshipType,String,String,DbExpression)\n  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRelationshipNavigationExpression\n  nameWithType: DbRelationshipNavigationExpression\n  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression\n- uid: System.Data.Metadata.Edm.RelationshipType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: RelationshipType\n  nameWithType: RelationshipType\n  fullName: System.Data.Metadata.Edm.RelationshipType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Negate(DbExpression)\n  nameWithType: DbExpressionBuilder.Negate(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: New(TypeUsage,IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: New(TypeUsage,DbExpression[])\n  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewCollection(IEnumerable<DbExpression>)\n  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbExpression>\n  nameWithType: IEnumerable<DbExpression>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewCollection(DbExpression[])\n  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression[]\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewEmptyCollection(TypeUsage)\n  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNewInstanceExpression\n  nameWithType: DbNewInstanceExpression\n  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,DbExpression>>\n  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Not(DbExpression)\n  nameWithType: DbExpressionBuilder.Not(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbNotExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNotExpression\n  nameWithType: DbNotExpression\n  fullName: System.Data.Common.CommandTrees.DbNotExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: NotEqual(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbComparisonExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbComparisonExpression\n  nameWithType: DbComparisonExpression\n  fullName: System.Data.Common.CommandTrees.DbComparisonExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Null(TypeUsage)\n  nameWithType: DbExpressionBuilder.Null(TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbNullExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbNullExpression\n  nameWithType: DbNullExpression\n  fullName: System.Data.Common.CommandTrees.DbNullExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfType(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbOfTypeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOfTypeExpression\n  nameWithType: DbOfTypeExpression\n  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OfTypeOnly(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbOfTypeExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOfTypeExpression\n  nameWithType: DbOfTypeExpression\n  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Or(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbOrExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbOrExpression\n  nameWithType: DbOrExpression\n  fullName: System.Data.Common.CommandTrees.DbOrExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,KeyValuePair<String,DbExpression>>\n  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: OuterApply(DbExpressionBinding,DbExpressionBinding)\n  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)\n- uid: System.Data.Common.CommandTrees.DbApplyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbApplyExpression\n  nameWithType: DbApplyExpression\n  fullName: System.Data.Common.CommandTrees.DbApplyExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Parameter(TypeUsage,String)\n  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)\n- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbParameterReferenceExpression\n  nameWithType: DbParameterReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Plus(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Project(DbExpressionBinding,DbExpression)\n  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression,EdmProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.EdmProperty\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EdmProperty\n  nameWithType: EdmProperty\n  fullName: System.Data.Metadata.Edm.EdmProperty\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression,NavigationProperty)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.NavigationProperty\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: NavigationProperty\n  nameWithType: NavigationProperty\n  fullName: System.Data.Metadata.Edm.NavigationProperty\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression,RelationshipEndMember)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.RelationshipEndMember\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: RelationshipEndMember\n  nameWithType: RelationshipEndMember\n  fullName: System.Data.Metadata.Edm.RelationshipEndMember\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Property(DbExpression,String)\n  nameWithType: DbExpressionBuilder.Property(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)\n- uid: System.Data.Common.CommandTrees.DbPropertyExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbPropertyExpression\n  nameWithType: DbPropertyExpression\n  fullName: System.Data.Common.CommandTrees.DbPropertyExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: RefFromKey(EntitySet,DbExpression)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: RefFromKey(EntitySet,DbExpression,EntityType)\n  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)\n- uid: System.Data.Common.CommandTrees.DbRefExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbRefExpression\n  nameWithType: DbRefExpression\n  fullName: System.Data.Common.CommandTrees.DbRefExpression\n- uid: System.Data.Metadata.Edm.EntitySet\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySet\n  nameWithType: EntitySet\n  fullName: System.Data.Metadata.Edm.EntitySet\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.EntityType\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntityType\n  nameWithType: EntityType\n  fullName: System.Data.Metadata.Edm.EntityType\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Scan(EntitySetBase)\n  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)\n- uid: System.Data.Common.CommandTrees.DbScanExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbScanExpression\n  nameWithType: DbScanExpression\n  fullName: System.Data.Common.CommandTrees.DbScanExpression\n- uid: System.Data.Metadata.Edm.EntitySetBase\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: EntitySetBase\n  nameWithType: EntitySetBase\n  fullName: System.Data.Metadata.Edm.EntitySetBase\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Select(DbExpression,Func<DbExpression,TProjection>)\n  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,TProjection>\n  nameWithType: Func<DbExpression,TProjection>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,TProjection>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)\n- uid: System.Data.Common.CommandTrees.DbProjectExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbProjectExpression\n  nameWithType: DbProjectExpression\n  fullName: System.Data.Common.CommandTrees.DbProjectExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression,TSelector>\n  nameWithType: Func<DbExpression,DbExpression,TSelector>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Skip(DbSortExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)\n  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbSkipExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSkipExpression\n  nameWithType: DbSkipExpression\n  fullName: System.Data.Common.CommandTrees.DbSkipExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbSortClause>\n  nameWithType: IEnumerable<DbSortClause>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)\n  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionBinding\n  nameWithType: DbExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbExpressionBinding\n- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DbSortClause>\n  nameWithType: IEnumerable<DbSortClause>\n  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Take(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbLimitExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbLimitExpression\n  nameWithType: DbLimitExpression\n  fullName: System.Data.Common.CommandTrees.DbLimitExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Data.Common.CommandTrees.DbSortExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortExpression\n  nameWithType: DbSortExpression\n  fullName: System.Data.Common.CommandTrees.DbSortExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbSortClause\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortClause\n  nameWithType: DbSortClause\n  fullName: System.Data.Common.CommandTrees.DbSortClause\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClause(DbExpression,String)\n  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)\n- uid: System.Data.Common.CommandTrees.DbSortClause\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortClause\n  nameWithType: DbSortClause\n  fullName: System.Data.Common.CommandTrees.DbSortClause\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending(DbExpression)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbSortClause\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortClause\n  nameWithType: DbSortClause\n  fullName: System.Data.Common.CommandTrees.DbSortClause\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: ToSortClauseDescending(DbExpression,String)\n  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)\n- uid: System.Data.Common.CommandTrees.DbSortClause\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbSortClause\n  nameWithType: DbSortClause\n  fullName: System.Data.Common.CommandTrees.DbSortClause\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: TreatAs(DbExpression,TypeUsage)\n  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)\n- uid: System.Data.Common.CommandTrees.DbTreatExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbTreatExpression\n  nameWithType: DbTreatExpression\n  fullName: System.Data.Common.CommandTrees.DbTreatExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: \"True\"\n  nameWithType: DbExpressionBuilder.True\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True\n- uid: System.Data.Common.CommandTrees.DbConstantExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbConstantExpression\n  nameWithType: DbConstantExpression\n  fullName: System.Data.Common.CommandTrees.DbConstantExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnaryMinus(DbExpression)\n  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)\n- uid: System.Data.Common.CommandTrees.DbArithmeticExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbArithmeticExpression\n  nameWithType: DbArithmeticExpression\n  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Union(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: UnionAll(DbExpression,DbExpression)\n  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)\n- uid: System.Data.Common.CommandTrees.DbUnionAllExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbUnionAllExpression\n  nameWithType: DbUnionAllExpression\n  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Variable(TypeUsage,String)\n  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)\n- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbVariableReferenceExpression\n  nameWithType: DbVariableReferenceExpression\n  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  name: Where(DbExpression,Func<DbExpression,DbExpression>)\n  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)\n  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)\n- uid: System.Data.Common.CommandTrees.DbFilterExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbFilterExpression\n  nameWithType: DbFilterExpression\n  fullName: System.Data.Common.CommandTrees.DbFilterExpression\n- uid: System.Data.Common.CommandTrees.DbExpression\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpression\n  nameWithType: DbExpression\n  fullName: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}\n  parent: System\n  isExternal: true\n  name: Func<DbExpression,DbExpression>\n  nameWithType: Func<DbExpression,DbExpression>\n  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*\n  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder\n  isExternal: false\n  nameWithType: DbExpressionBuilder.\n"}