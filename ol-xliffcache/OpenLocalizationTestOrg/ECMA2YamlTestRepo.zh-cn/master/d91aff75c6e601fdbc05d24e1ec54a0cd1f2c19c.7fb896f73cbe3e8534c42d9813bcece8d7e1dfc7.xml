{"nodes":[{"pos":[885,912],"content":"RSAOAEPKeyExchangeFormatter","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAOAEPKeyExchangeFormatter","pos":[0,27]}]},{"pos":[1868,1897],"content":"RSAOAEPKeyExchangeFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAOAEPKeyExchangeFormatter()","pos":[0,29]}]},{"pos":[2569,2617],"content":"RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)","pos":[0,48]}]},{"pos":[3142,3176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3457,3482],"content":"CreateKeyExchange(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[])","pos":[0,25]}]},{"pos":[3893,3927],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3985,4019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4412,4442],"content":"CreateKeyExchange(Byte[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[],Type)","pos":[0,30]}]},{"pos":[4880,4914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4979,5013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5071,5105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5428,5437],"content":"Parameter","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[5775,5809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6046,6056],"content":"Parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[6401,6435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6658,6661],"content":"Rng","needQuote":true,"needEscape":true,"nodes":[{"content":"Rng","pos":[0,3]}]},{"pos":[7062,7096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7425,7452],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[7923,7957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8114,8173],"content":"System.Security.Cryptography.AsymmetricKeyExchangeFormatter","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.AsymmetricKeyExchangeFormatter","pos":[0,59]}]},{"pos":[8339,8368],"content":"RSAOAEPKeyExchangeFormatter()","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAOAEPKeyExchangeFormatter()","pos":[0,29]}]},{"pos":[8757,8805],"content":"RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)","pos":[0,48]}]},{"pos":[9140,9159],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]},{"pos":[9449,9474],"content":"CreateKeyExchange(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[])","pos":[0,25]}]},{"pos":[9704,9708],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9820,9824],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10076,10106],"content":"CreateKeyExchange(Byte[],Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateKeyExchange(Byte[],Type)","pos":[0,30]}]},{"pos":[10346,10350],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10462,10466],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10578,10582],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[10797,10806],"content":"Parameter","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter","pos":[0,9]}]},{"pos":[11004,11008],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11226,11236],"content":"Parameters","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameters","pos":[0,10]}]},{"pos":[11438,11444],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11657,11660],"content":"Rng","needQuote":true,"needEscape":true,"nodes":[{"content":"Rng","pos":[0,3]}]},{"pos":[11907,11928],"content":"RandomNumberGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"RandomNumberGenerator","pos":[0,21]}]},{"pos":[12246,12273],"content":"SetKey(AsymmetricAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetKey(AsymmetricAlgorithm)","pos":[0,27]}]},{"pos":[12566,12585],"content":"AsymmetricAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AsymmetricAlgorithm","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  id: RSAOAEPKeyExchangeFormatter\n  children:\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng\n  - System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  langs:\n  - csharp\n  name: RSAOAEPKeyExchangeFormatter\n  nameWithType: RSAOAEPKeyExchangeFormatter\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class RSAOAEPKeyExchangeFormatter : System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: RSAOAEPKeyExchangeFormatter()\n  nameWithType: RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter()\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSAOAEPKeyExchangeFormatter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSAOAEPKeyExchangeFormatter (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  id: CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[])\n  nameWithType: RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] CreateKeyExchange (byte[] rgbData);\n    parameters:\n    - id: rgbData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  id: CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] CreateKeyExchange (byte[] rgbData, Type symAlgType);\n    parameters:\n    - id: rgbData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: symAlgType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter\n  id: Parameter\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: Parameter\n  nameWithType: RSAOAEPKeyExchangeFormatter.Parameter\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Parameter { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters\n  id: Parameters\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: Parameters\n  nameWithType: RSAOAEPKeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string Parameters { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng\n  id: Rng\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: Rng\n  nameWithType: RSAOAEPKeyExchangeFormatter.Rng\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.RandomNumberGenerator Rng { get; set; }\n    return:\n      type: System.Security.Cryptography.RandomNumberGenerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  langs:\n  - csharp\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);\n    parameters:\n    - id: key\n      type: System.Security.Cryptography.AsymmetricAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n  isExternal: false\n  name: System.Security.Cryptography.AsymmetricKeyExchangeFormatter\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: RSAOAEPKeyExchangeFormatter()\n  nameWithType: RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter()\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter()\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.RSAOAEPKeyExchangeFormatter(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[])\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[])\n  nameWithType: RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[])\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(System.Byte[],System.Type)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: CreateKeyExchange(Byte[],Type)\n  nameWithType: RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange(Byte[],Type)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: Parameter\n  nameWithType: RSAOAEPKeyExchangeFormatter.Parameter\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameter\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: Parameters\n  nameWithType: RSAOAEPKeyExchangeFormatter.Parameters\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Parameters\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: Rng\n  nameWithType: RSAOAEPKeyExchangeFormatter.Rng\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.Rng\n- uid: System.Security.Cryptography.RandomNumberGenerator\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RandomNumberGenerator\n  nameWithType: RandomNumberGenerator\n  fullName: System.Security.Cryptography.RandomNumberGenerator\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  name: SetKey(AsymmetricAlgorithm)\n  nameWithType: RSAOAEPKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n  fullName: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.SetKey(AsymmetricAlgorithm)\n- uid: System.Security.Cryptography.AsymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: AsymmetricAlgorithm\n  nameWithType: AsymmetricAlgorithm\n  fullName: System.Security.Cryptography.AsymmetricAlgorithm\n- uid: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter.CreateKeyExchange*\n  parent: System.Security.Cryptography.RSAOAEPKeyExchangeFormatter\n  isExternal: false\n  nameWithType: RSAOAEPKeyExchangeFormatter.\n"}