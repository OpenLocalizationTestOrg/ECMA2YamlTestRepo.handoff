{"nodes":[{"pos":[2247,2252],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[2958,2959],"content":"A","needQuote":true,"needEscape":true,"nodes":[{"content":"A","pos":[0,1]}]},{"pos":[3217,3251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3524,3540],"content":"Add(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Color,Color)","pos":[0,16]}]},{"pos":[3951,3985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4061,4095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4166,4200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4483,4504],"content":"AreClose(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"AreClose(Color,Color)","pos":[0,21]}]},{"pos":[4908,4942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5018,5052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5111,5145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5304,5305],"content":"B","needQuote":true,"needEscape":true,"nodes":[{"content":"B","pos":[0,1]}]},{"pos":[5563,5597],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5764,5771],"content":"Clamp()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clamp()","pos":[0,7]}]},{"pos":[6177,6189],"content":"ColorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ColorContext","pos":[0,12]}]},{"pos":[6526,6560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6759,6773],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7085,7119],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7178,7212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7484,7497],"content":"Equals(Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Color)","pos":[0,13]}]},{"pos":[7839,7873],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7932,7966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8292,8311],"content":"Equals(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Color,Color)","pos":[0,19]}]},{"pos":[8709,8743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8819,8853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8912,8946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9264,9293],"content":"FromArgb(Byte,Byte,Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromArgb(Byte,Byte,Byte,Byte)","pos":[0,29]}]},{"pos":[9677,9711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9767,9801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9857,9891],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9947,9981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10052,10086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10349,10381],"content":"FromAValues(Single,Single[],Uri)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAValues(Single,Single[],Uri)","pos":[0,32]}]},{"pos":[10785,10819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10884,10918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10982,11016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11087,11121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11366,11389],"content":"FromRgb(Byte,Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromRgb(Byte,Byte,Byte)","pos":[0,23]}]},{"pos":[11752,11786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11842,11876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11932,11966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12037,12071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12360,12398],"content":"FromScRgb(Single,Single,Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromScRgb(Single,Single,Single,Single)","pos":[0,38]}]},{"pos":[12807,12841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12899,12933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12991,13025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13083,13117],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13188,13222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13455,13479],"content":"FromValues(Single[],Uri)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromValues(Single[],Uri)","pos":[0,24]}]},{"pos":[13864,13898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13962,13996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14067,14101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14260,14261],"content":"G","needQuote":true,"needEscape":true,"nodes":[{"content":"G","pos":[0,1]}]},{"pos":[14519,14553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14732,14745],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15053,15087],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15284,15306],"content":"GetNativeColorValues()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNativeColorValues()","pos":[0,22]}]},{"pos":[15639,15673],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15930,15952],"content":"Multiply(Color,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiply(Color,Single)","pos":[0,22]}]},{"pos":[16362,16396],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16464,16498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16569,16603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16892,16916],"content":"op_Addition(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Addition(Color,Color)","pos":[0,24]}]},{"pos":[17353,17387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17463,17497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17568,17602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17891,17915],"content":"op_Equality(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Color,Color)","pos":[0,24]}]},{"pos":[18330,18364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18440,18474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18533,18567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18860,18886],"content":"op_Inequality(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Color,Color)","pos":[0,26]}]},{"pos":[19307,19341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19417,19451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19510,19544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19807,19832],"content":"op_Multiply(Color,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Multiply(Color,Single)","pos":[0,25]}]},{"pos":[20253,20287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20355,20389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20460,20494],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20789,20816],"content":"op_Subtraction(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Subtraction(Color,Color)","pos":[0,27]}]},{"pos":[21262,21296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21372,21406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21477,21511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21670,21671],"content":"R","needQuote":true,"needEscape":true,"nodes":[{"content":"R","pos":[0,1]}]},{"pos":[21929,21963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22126,22129],"content":"ScA","needQuote":true,"needEscape":true,"nodes":[{"content":"ScA","pos":[0,3]}]},{"pos":[22396,22430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22593,22596],"content":"ScB","needQuote":true,"needEscape":true,"nodes":[{"content":"ScB","pos":[0,3]}]},{"pos":[22863,22897],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23060,23063],"content":"ScG","needQuote":true,"needEscape":true,"nodes":[{"content":"ScG","pos":[0,3]}]},{"pos":[23330,23364],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23527,23530],"content":"ScR","needQuote":true,"needEscape":true,"nodes":[{"content":"ScR","pos":[0,3]}]},{"pos":[23797,23831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24114,24135],"content":"Subtract(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtract(Color,Color)","pos":[0,21]}]},{"pos":[24561,24595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24671,24705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24776,24810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25113,25165],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[25590,25624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25698,25732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25790,25824],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25997,26007],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[26310,26344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26614,26639],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[27000,27034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27092,27126],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27289,27305],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[27407,27408],"content":"A","needQuote":true,"needEscape":true,"nodes":[{"content":"A","pos":[0,1]}]},{"pos":[27538,27542],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27746,27762],"content":"Add(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Color,Color)","pos":[0,16]}]},{"pos":[27951,27956],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[28111,28116],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[28271,28276],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[28501,28522],"content":"AreClose(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"AreClose(Color,Color)","pos":[0,21]}]},{"pos":[28695,28702],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28847,28852],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[29007,29012],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[29175,29176],"content":"B","needQuote":true,"needEscape":true,"nodes":[{"content":"B","pos":[0,1]}]},{"pos":[29306,29310],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29461,29468],"content":"Clamp()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clamp()","pos":[0,7]}]},{"pos":[29658,29670],"content":"ColorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ColorContext","pos":[0,12]}]},{"pos":[29858,29870],"content":"ColorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ColorContext","pos":[0,12]}]},{"pos":[30067,30081],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[30240,30247],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30365,30371],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30555,30568],"content":"Equals(Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Color)","pos":[0,13]}]},{"pos":[30725,30732],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30877,30882],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[31105,31124],"content":"Equals(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Color,Color)","pos":[0,19]}]},{"pos":[31293,31300],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31445,31450],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[31605,31610],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[31829,31858],"content":"FromArgb(Byte,Byte,Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromArgb(Byte,Byte,Byte,Byte)","pos":[0,29]}]},{"pos":[32073,32078],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[32204,32208],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32318,32322],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32432,32436],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32546,32550],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[32749,32781],"content":"FromAValues(Single,Single[],Uri)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAValues(Single,Single[],Uri)","pos":[0,32]}]},{"pos":[33002,33007],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[33135,33141],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[33257,33263],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[33377,33380],"content":"Uri","needQuote":true,"needEscape":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[33568,33591],"content":"FromRgb(Byte,Byte,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromRgb(Byte,Byte,Byte)","pos":[0,23]}]},{"pos":[33794,33799],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[33925,33929],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34039,34043],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34153,34157],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34369,34407],"content":"FromScRgb(Single,Single,Single,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromScRgb(Single,Single,Single,Single)","pos":[0,38]}]},{"pos":[34640,34645],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[34773,34779],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[34895,34901],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[35017,35023],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[35139,35145],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[35333,35357],"content":"FromValues(Single[],Uri)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromValues(Single[],Uri)","pos":[0,24]}]},{"pos":[35562,35567],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[35695,35701],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[35815,35818],"content":"Uri","needQuote":true,"needEscape":true,"nodes":[{"content":"Uri","pos":[0,3]}]},{"pos":[35963,35964],"content":"G","needQuote":true,"needEscape":true,"nodes":[{"content":"G","pos":[0,1]}]},{"pos":[36094,36098],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[36255,36268],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[36423,36428],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36596,36618],"content":"GetNativeColorValues()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetNativeColorValues()","pos":[0,22]}]},{"pos":[36792,36798],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[37000,37022],"content":"Multiply(Color,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Multiply(Color,Single)","pos":[0,22]}]},{"pos":[37223,37228],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[37383,37388],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[37516,37522],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[37738,37762],"content":"op_Addition(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Addition(Color,Color)","pos":[0,24]}]},{"pos":[37967,37972],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[38127,38132],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[38287,38292],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[38520,38544],"content":"op_Equality(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Color,Color)","pos":[0,24]}]},{"pos":[38723,38730],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38875,38880],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[39035,39040],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[39270,39296],"content":"op_Inequality(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Color,Color)","pos":[0,26]}]},{"pos":[39479,39486],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39631,39636],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[39791,39796],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[40011,40036],"content":"op_Multiply(Color,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Multiply(Color,Single)","pos":[0,25]}]},{"pos":[40243,40248],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[40403,40408],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[40536,40542],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[40761,40788],"content":"op_Subtraction(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Subtraction(Color,Color)","pos":[0,27]}]},{"pos":[40999,41004],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[41159,41164],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[41319,41324],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[41487,41488],"content":"R","needQuote":true,"needEscape":true,"nodes":[{"content":"R","pos":[0,1]}]},{"pos":[41618,41622],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[41771,41774],"content":"ScA","needQuote":true,"needEscape":true,"nodes":[{"content":"ScA","pos":[0,3]}]},{"pos":[41910,41916],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[42069,42072],"content":"ScB","needQuote":true,"needEscape":true,"nodes":[{"content":"ScB","pos":[0,3]}]},{"pos":[42208,42214],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[42367,42370],"content":"ScG","needQuote":true,"needEscape":true,"nodes":[{"content":"ScG","pos":[0,3]}]},{"pos":[42506,42512],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[42665,42668],"content":"ScR","needQuote":true,"needEscape":true,"nodes":[{"content":"ScR","pos":[0,3]}]},{"pos":[42804,42810],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[43023,43044],"content":"Subtract(Color,Color)","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtract(Color,Color)","pos":[0,21]}]},{"pos":[43243,43248],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[43403,43408],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[43563,43568],"content":"Color","needQuote":true,"needEscape":true,"nodes":[{"content":"Color","pos":[0,5]}]},{"pos":[43796,43848],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[44082,44088],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44204,44210],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44335,44350],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[44526,44536],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[44686,44692],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44874,44899],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[45079,45085],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45210,45225],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Color\n  id: Color\n  children:\n  - System.Windows.Media.Color.A\n  - System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.B\n  - System.Windows.Media.Color.Clamp\n  - System.Windows.Media.Color.ColorContext\n  - System.Windows.Media.Color.Equals(System.Object)\n  - System.Windows.Media.Color.Equals(System.Windows.Media.Color)\n  - System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  - System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)\n  - System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)\n  - System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)\n  - System.Windows.Media.Color.FromValues(System.Single[],System.Uri)\n  - System.Windows.Media.Color.G\n  - System.Windows.Media.Color.GetHashCode\n  - System.Windows.Media.Color.GetNativeColorValues\n  - System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)\n  - System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)\n  - System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.R\n  - System.Windows.Media.Color.ScA\n  - System.Windows.Media.Color.ScB\n  - System.Windows.Media.Color.ScG\n  - System.Windows.Media.Color.ScR\n  - System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)\n  - System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Color.ToString\n  - System.Windows.Media.Color.ToString(System.IFormatProvider)\n  langs:\n  - csharp\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.ColorConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      public struct Color : IEquatable<System.Windows.Media.Color>, IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable<System.Windows.Media.Color>\n  - System.IFormattable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.A\n  id: A\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: A\n  nameWithType: Color.A\n  fullName: System.Windows.Media.Color.A\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public byte A { get; set; }\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: Add(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Add(Color,Color)\n  nameWithType: Color.Add(Color,Color)\n  fullName: System.Windows.Media.Color.Add(Color,Color)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color Add (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: AreClose(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: AreClose(Color,Color)\n  nameWithType: Color.AreClose(Color,Color)\n  fullName: System.Windows.Media.Color.AreClose(Color,Color)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool AreClose (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.B\n  id: B\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: B\n  nameWithType: Color.B\n  fullName: System.Windows.Media.Color.B\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public byte B { get; set; }\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Clamp\n  id: Clamp\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Clamp()\n  nameWithType: Color.Clamp()\n  fullName: System.Windows.Media.Color.Clamp()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clamp ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ColorContext\n  id: ColorContext\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ColorContext\n  nameWithType: Color.ColorContext\n  fullName: System.Windows.Media.Color.ColorContext\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.ColorContext ColorContext { get; }\n    return:\n      type: System.Windows.Media.ColorContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Color.Equals(Object)\n  fullName: System.Windows.Media.Color.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Color.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color)\n  id: Equals(System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Equals(Color)\n  nameWithType: Color.Equals(Color)\n  fullName: System.Windows.Media.Color.Equals(Color)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Equals (System.Windows.Media.Color color);\n    parameters:\n    - id: color\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Color.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: Equals(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Equals(Color,Color)\n  nameWithType: Color.Equals(Color,Color)\n  fullName: System.Windows.Media.Color.Equals(Color,Color)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool Equals (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Color.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  id: FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: FromArgb(Byte,Byte,Byte,Byte)\n  nameWithType: Color.FromArgb(Byte,Byte,Byte,Byte)\n  fullName: System.Windows.Media.Color.FromArgb(Byte,Byte,Byte,Byte)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color FromArgb (byte a, byte r, byte g, byte b);\n    parameters:\n    - id: a\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: r\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: g\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: b\n      type: System.Byte\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)\n  id: FromAValues(System.Single,System.Single[],System.Uri)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: FromAValues(Single,Single[],Uri)\n  nameWithType: Color.FromAValues(Single,Single[],Uri)\n  fullName: System.Windows.Media.Color.FromAValues(Single,Single[],Uri)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color FromAValues (float a, float[] values, Uri profileUri);\n    parameters:\n    - id: a\n      type: System.Single\n      description: Parameter description to be filled\n    - id: values\n      type: System.Single[]\n      description: Parameter description to be filled\n    - id: profileUri\n      type: System.Uri\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)\n  id: FromRgb(System.Byte,System.Byte,System.Byte)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: FromRgb(Byte,Byte,Byte)\n  nameWithType: Color.FromRgb(Byte,Byte,Byte)\n  fullName: System.Windows.Media.Color.FromRgb(Byte,Byte,Byte)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color FromRgb (byte r, byte g, byte b);\n    parameters:\n    - id: r\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: g\n      type: System.Byte\n      description: Parameter description to be filled\n    - id: b\n      type: System.Byte\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)\n  id: FromScRgb(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: FromScRgb(Single,Single,Single,Single)\n  nameWithType: Color.FromScRgb(Single,Single,Single,Single)\n  fullName: System.Windows.Media.Color.FromScRgb(Single,Single,Single,Single)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color FromScRgb (float a, float r, float g, float b);\n    parameters:\n    - id: a\n      type: System.Single\n      description: Parameter description to be filled\n    - id: r\n      type: System.Single\n      description: Parameter description to be filled\n    - id: g\n      type: System.Single\n      description: Parameter description to be filled\n    - id: b\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.FromValues(System.Single[],System.Uri)\n  id: FromValues(System.Single[],System.Uri)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: FromValues(Single[],Uri)\n  nameWithType: Color.FromValues(Single[],Uri)\n  fullName: System.Windows.Media.Color.FromValues(Single[],Uri)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color FromValues (float[] values, Uri profileUri);\n    parameters:\n    - id: values\n      type: System.Single[]\n      description: Parameter description to be filled\n    - id: profileUri\n      type: System.Uri\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.G\n  id: G\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: G\n  nameWithType: Color.G\n  fullName: System.Windows.Media.Color.G\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public byte G { get; set; }\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Color.GetHashCode()\n  fullName: System.Windows.Media.Color.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.GetNativeColorValues\n  id: GetNativeColorValues\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: GetNativeColorValues()\n  nameWithType: Color.GetNativeColorValues()\n  fullName: System.Windows.Media.Color.GetNativeColorValues()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public float[] GetNativeColorValues ();\n    parameters: []\n    return:\n      type: System.Single[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)\n  id: Multiply(System.Windows.Media.Color,System.Single)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Multiply(Color,Single)\n  nameWithType: Color.Multiply(Color,Single)\n  fullName: System.Windows.Media.Color.Multiply(Color,Single)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color Multiply (System.Windows.Media.Color color, float coefficient);\n    parameters:\n    - id: color\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: coefficient\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: op_Addition(Color,Color)\n  nameWithType: Color.op_Addition(Color,Color)\n  fullName: System.Windows.Media.Color.op_Addition(Color,Color)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color op_Addition (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: op_Equality(Color,Color)\n  nameWithType: Color.op_Equality(Color,Color)\n  fullName: System.Windows.Media.Color.op_Equality(Color,Color)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool op_Equality (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: op_Inequality(Color,Color)\n  nameWithType: Color.op_Inequality(Color,Color)\n  fullName: System.Windows.Media.Color.op_Inequality(Color,Color)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static bool op_Inequality (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)\n  id: op_Multiply(System.Windows.Media.Color,System.Single)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: op_Multiply(Color,Single)\n  nameWithType: Color.op_Multiply(Color,Single)\n  fullName: System.Windows.Media.Color.op_Multiply(Color,Single)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color op_Multiply (System.Windows.Media.Color color, float coefficient);\n    parameters:\n    - id: color\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: coefficient\n      type: System.Single\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: op_Subtraction(Color,Color)\n  nameWithType: Color.op_Subtraction(Color,Color)\n  fullName: System.Windows.Media.Color.op_Subtraction(Color,Color)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color op_Subtraction (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.R\n  id: R\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: R\n  nameWithType: Color.R\n  fullName: System.Windows.Media.Color.R\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public byte R { get; set; }\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ScA\n  id: ScA\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ScA\n  nameWithType: Color.ScA\n  fullName: System.Windows.Media.Color.ScA\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public float ScA { get; set; }\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ScB\n  id: ScB\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ScB\n  nameWithType: Color.ScB\n  fullName: System.Windows.Media.Color.ScB\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public float ScB { get; set; }\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ScG\n  id: ScG\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ScG\n  nameWithType: Color.ScG\n  fullName: System.Windows.Media.Color.ScG\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public float ScG { get; set; }\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ScR\n  id: ScR\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ScR\n  nameWithType: Color.ScR\n  fullName: System.Windows.Media.Color.ScR\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public float ScR { get; set; }\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)\n  id: Subtract(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: Subtract(Color,Color)\n  nameWithType: Color.Subtract(Color,Color)\n  fullName: System.Windows.Media.Color.Subtract(Color,Color)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Color Subtract (System.Windows.Media.Color color1, System.Windows.Media.Color color2);\n    parameters:\n    - id: color1\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    - id: color2\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Color\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Color.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Color.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ToString\n  id: ToString\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Color.ToString()\n  fullName: System.Windows.Media.Color.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Color.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Color.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Color\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Color.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Color.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Color.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.Media.Color.A\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: A\n  nameWithType: Color.A\n  fullName: System.Windows.Media.Color.A\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Windows.Media.Color.Add(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Add(Color,Color)\n  nameWithType: Color.Add(Color,Color)\n  fullName: System.Windows.Media.Color.Add(Color,Color)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.AreClose(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: AreClose(Color,Color)\n  nameWithType: Color.AreClose(Color,Color)\n  fullName: System.Windows.Media.Color.AreClose(Color,Color)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.B\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: B\n  nameWithType: Color.B\n  fullName: System.Windows.Media.Color.B\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Windows.Media.Color.Clamp\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Clamp()\n  nameWithType: Color.Clamp()\n  fullName: System.Windows.Media.Color.Clamp()\n- uid: System.Windows.Media.Color.ColorContext\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ColorContext\n  nameWithType: Color.ColorContext\n  fullName: System.Windows.Media.Color.ColorContext\n- uid: System.Windows.Media.ColorContext\n  parent: System.Windows.Media\n  isExternal: false\n  name: ColorContext\n  nameWithType: ColorContext\n  fullName: System.Windows.Media.ColorContext\n- uid: System.Windows.Media.Color.Equals(System.Object)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Color.Equals(Object)\n  fullName: System.Windows.Media.Color.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Equals(Color)\n  nameWithType: Color.Equals(Color)\n  fullName: System.Windows.Media.Color.Equals(Color)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.Equals(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Equals(Color,Color)\n  nameWithType: Color.Equals(Color,Color)\n  fullName: System.Windows.Media.Color.Equals(Color,Color)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: FromArgb(Byte,Byte,Byte,Byte)\n  nameWithType: Color.FromArgb(Byte,Byte,Byte,Byte)\n  fullName: System.Windows.Media.Color.FromArgb(Byte,Byte,Byte,Byte)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Windows.Media.Color.FromAValues(System.Single,System.Single[],System.Uri)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: FromAValues(Single,Single[],Uri)\n  nameWithType: Color.FromAValues(Single,Single[],Uri)\n  fullName: System.Windows.Media.Color.FromAValues(Single,Single[],Uri)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single[]\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Windows.Media.Color.FromRgb(System.Byte,System.Byte,System.Byte)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: FromRgb(Byte,Byte,Byte)\n  nameWithType: Color.FromRgb(Byte,Byte,Byte)\n  fullName: System.Windows.Media.Color.FromRgb(Byte,Byte,Byte)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Windows.Media.Color.FromScRgb(System.Single,System.Single,System.Single,System.Single)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: FromScRgb(Single,Single,Single,Single)\n  nameWithType: Color.FromScRgb(Single,Single,Single,Single)\n  fullName: System.Windows.Media.Color.FromScRgb(Single,Single,Single,Single)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.FromValues(System.Single[],System.Uri)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: FromValues(Single[],Uri)\n  nameWithType: Color.FromValues(Single[],Uri)\n  fullName: System.Windows.Media.Color.FromValues(Single[],Uri)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single[]\n- uid: System.Uri\n  parent: System\n  isExternal: true\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Windows.Media.Color.G\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: G\n  nameWithType: Color.G\n  fullName: System.Windows.Media.Color.G\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Windows.Media.Color.GetHashCode\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Color.GetHashCode()\n  fullName: System.Windows.Media.Color.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Color.GetNativeColorValues\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: GetNativeColorValues()\n  nameWithType: Color.GetNativeColorValues()\n  fullName: System.Windows.Media.Color.GetNativeColorValues()\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single[]\n- uid: System.Windows.Media.Color.Multiply(System.Windows.Media.Color,System.Single)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Multiply(Color,Single)\n  nameWithType: Color.Multiply(Color,Single)\n  fullName: System.Windows.Media.Color.Multiply(Color,Single)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.op_Addition(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: op_Addition(Color,Color)\n  nameWithType: Color.op_Addition(Color,Color)\n  fullName: System.Windows.Media.Color.op_Addition(Color,Color)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.op_Equality(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: op_Equality(Color,Color)\n  nameWithType: Color.op_Equality(Color,Color)\n  fullName: System.Windows.Media.Color.op_Equality(Color,Color)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.op_Inequality(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: op_Inequality(Color,Color)\n  nameWithType: Color.op_Inequality(Color,Color)\n  fullName: System.Windows.Media.Color.op_Inequality(Color,Color)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.op_Multiply(System.Windows.Media.Color,System.Single)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: op_Multiply(Color,Single)\n  nameWithType: Color.op_Multiply(Color,Single)\n  fullName: System.Windows.Media.Color.op_Multiply(Color,Single)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.op_Subtraction(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: op_Subtraction(Color,Color)\n  nameWithType: Color.op_Subtraction(Color,Color)\n  fullName: System.Windows.Media.Color.op_Subtraction(Color,Color)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.R\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: R\n  nameWithType: Color.R\n  fullName: System.Windows.Media.Color.R\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Windows.Media.Color.ScA\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ScA\n  nameWithType: Color.ScA\n  fullName: System.Windows.Media.Color.ScA\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.ScB\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ScB\n  nameWithType: Color.ScB\n  fullName: System.Windows.Media.Color.ScB\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.ScG\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ScG\n  nameWithType: Color.ScG\n  fullName: System.Windows.Media.Color.ScG\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.ScR\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ScR\n  nameWithType: Color.ScR\n  fullName: System.Windows.Media.Color.ScR\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Media.Color.Subtract(System.Windows.Media.Color,System.Windows.Media.Color)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: Subtract(Color,Color)\n  nameWithType: Color.Subtract(Color,Color)\n  fullName: System.Windows.Media.Color.Subtract(Color,Color)\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color\n  parent: System.Windows.Media\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Windows.Media.Color\n- uid: System.Windows.Media.Color.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Color.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Color.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Color.ToString\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ToString()\n  nameWithType: Color.ToString()\n  fullName: System.Windows.Media.Color.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Color.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Color\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Color.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Color.ToString(IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Color.Equals*\n  parent: System.Windows.Media.Color\n  isExternal: false\n  nameWithType: Color.\n- uid: System.Windows.Media.Color.ToString*\n  parent: System.Windows.Media.Color\n  isExternal: false\n  nameWithType: Color.\n"}