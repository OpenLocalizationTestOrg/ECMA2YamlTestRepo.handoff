{"nodes":[{"pos":[3145,3161],"content":"DoubleCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection","pos":[0,16]}]},{"pos":[4246,4264],"content":"DoubleCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection()","pos":[0,18]}]},{"pos":[4845,4882],"content":"DoubleCollection(IEnumerable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DoubleCollection(IEnumerable<Double>)"},{"pos":[5361,5395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5614,5637],"content":"DoubleCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection(Int32)","pos":[0,23]}]},{"pos":[6000,6034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6249,6260],"content":"Add(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Double)","pos":[0,11]}]},{"pos":[6584,6618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6807,6814],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[7250,7257],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[7619,7653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7902,7922],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[8313,8347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8560,8579],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[8977,9011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9284,9316],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[9743,9777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10002,10018],"content":"Contains(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Double)","pos":[0,16]}]},{"pos":[10357,10391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10450,10484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10735,10757],"content":"CopyTo(Double[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Double[],Int32)","pos":[0,22]}]},{"pos":[11121,11155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11216,11250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11439,11444],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[11731,11765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11980,12000],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[12387,12421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12682,12708],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[13117,13151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13436,13474],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[13919,13953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14158,14173],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[14581,14615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14838,14853],"content":"IndexOf(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Double)","pos":[0,15]}]},{"pos":[15188,15222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15279,15313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15560,15580],"content":"Insert(Int32,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Double)","pos":[0,20]}]},{"pos":[15935,15969],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16031,16065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16280,16291],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[16628,16662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16720,16754],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16973,16986],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[17358,17392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17474,17508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17729,17743],"content":"Remove(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Double)","pos":[0,14]}]},{"pos":[18076,18110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18169,18203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18426,18441],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[18774,18808],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19129,19167],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[19575,19609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19936,19976],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[20450,20484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20805,20855],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[21274,21308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21369,21403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21686,21731],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[22134,22168],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22439,22478],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[22864,22898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23179,23225],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[23664,23698],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23977,24013],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[24385,24419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24476,24510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24799,24840],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[25228,25262],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25321,25355],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25642,25682],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[26066,26100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26157,26191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26502,26547],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[26951,26985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27047,27081],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27346,27382],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[27758,27792],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28055,28090],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[28463,28497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28776,28812],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[29217,29251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29309,29343],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29628,29667],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[30049,30083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30408,30460],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[30907,30941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31015,31049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31107,31141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31336,31346],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31671,31705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32008,32033],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[32416,32450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32508,32542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32724,32748],"content":"System.Windows.Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Freezable","pos":[0,24]}]},{"pos":[32876,32894],"content":"DoubleCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection()","pos":[0,18]}]},{"pos":[33198,33235],"content":"DoubleCollection(IEnumerable<ph id=\"ph1\">&lt;Double&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DoubleCollection(IEnumerable<Double>)"},{"pos":[33521,33540],"content":"IEnumerable<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Double>"},{"pos":[33784,33807],"content":"DoubleCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection(Int32)","pos":[0,23]}]},{"pos":[34004,34009],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34197,34208],"content":"Add(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Double)","pos":[0,11]}]},{"pos":[34382,34388],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[34565,34572],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[34799,34806],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[35010,35026],"content":"DoubleCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection","pos":[0,16]}]},{"pos":[35267,35287],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[35497,35506],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[35709,35728],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[35956,35972],"content":"DoubleCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection","pos":[0,16]}]},{"pos":[36225,36257],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[36491,36500],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36709,36725],"content":"Contains(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Double)","pos":[0,16]}]},{"pos":[36910,36917],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37035,37041],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[37249,37271],"content":"CopyTo(Double[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Double[],Int32)","pos":[0,22]}]},{"pos":[37467,37473],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[37590,37595],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37770,37775],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[37936,37941],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38129,38149],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[38359,38368],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[38595,38621],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[38843,38852],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39091,39129],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[39375,39384],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39583,39598],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[39829,39856],"content":"DoubleCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection+Enumerator","pos":[0,27]}]},{"pos":[40106,40121],"content":"IndexOf(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Double)","pos":[0,15]}]},{"pos":[40302,40307],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40421,40427],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[40633,40653],"content":"Insert(Int32,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Double)","pos":[0,20]}]},{"pos":[40844,40849],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40963,40969],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[41159,41170],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[41344,41350],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[41465,41470],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41660,41673],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[41889,41905],"content":"DoubleCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DoubleCollection","pos":[0,16]}]},{"pos":[42055,42061],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42254,42268],"content":"Remove(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Double)","pos":[0,14]}]},{"pos":[42449,42456],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42574,42580],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[42774,42789],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[42970,42975],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43209,43247],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[43476,43483],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43724,43764],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[44056,44075],"content":"IEnumerator<ph id=\"ph1\">&lt;Double&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<Double>"},{"pos":[44364,44414],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[44665,44670],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[44783,44788],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45003,45048],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[45291,45298],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45511,45550],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[45780,45786],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46002,46048],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[46321,46332],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[46569,46605],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[46828,46833],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46947,46953],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47173,47214],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[47449,47456],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47574,47580],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47799,47839],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[48070,48075],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48189,48195],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48426,48471],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[48712,48717],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48831,48837],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49045,49081],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[49306,49313],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49522,49557],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[49780,49787],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50004,50040],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[50264,50270],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50385,50390],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[50606,50645],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[50875,50881],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51119,51171],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[51427,51433],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51549,51555],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51680,51695],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[51893,51903],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[52075,52081],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52285,52310],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[52512,52518],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52643,52658],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.DoubleCollection\n  id: DoubleCollection\n  children:\n  - System.Windows.Media.DoubleCollection.#ctor\n  - System.Windows.Media.DoubleCollection.#ctor(System.Collections.Generic.IEnumerable{System.Double})\n  - System.Windows.Media.DoubleCollection.#ctor(System.Int32)\n  - System.Windows.Media.DoubleCollection.Add(System.Double)\n  - System.Windows.Media.DoubleCollection.Clear\n  - System.Windows.Media.DoubleCollection.Clone\n  - System.Windows.Media.DoubleCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.DoubleCollection.CloneCurrentValue\n  - System.Windows.Media.DoubleCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.DoubleCollection.Contains(System.Double)\n  - System.Windows.Media.DoubleCollection.CopyTo(System.Double[],System.Int32)\n  - System.Windows.Media.DoubleCollection.Count\n  - System.Windows.Media.DoubleCollection.CreateInstanceCore\n  - System.Windows.Media.DoubleCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.DoubleCollection.GetEnumerator\n  - System.Windows.Media.DoubleCollection.IndexOf(System.Double)\n  - System.Windows.Media.DoubleCollection.Insert(System.Int32,System.Double)\n  - System.Windows.Media.DoubleCollection.Item(System.Int32)\n  - System.Windows.Media.DoubleCollection.Parse(System.String)\n  - System.Windows.Media.DoubleCollection.Remove(System.Double)\n  - System.Windows.Media.DoubleCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.DoubleCollection.System#Collections#Generic#ICollection{System#Double}#IsReadOnly\n  - System.Windows.Media.DoubleCollection.System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator\n  - System.Windows.Media.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.DoubleCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.DoubleCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.DoubleCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.DoubleCollection.System#Collections#IList#Remove(System.Object)\n  - System.Windows.Media.DoubleCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.DoubleCollection.ToString\n  - System.Windows.Media.DoubleCollection.ToString(System.IFormatProvider)\n  langs:\n  - csharp\n  name: DoubleCollection\n  nameWithType: DoubleCollection\n  fullName: System.Windows.Media.DoubleCollection\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.DoubleCollectionConverter))]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.DoubleCollectionValueSerializer))]\n\n      public sealed class DoubleCollection : System.Windows.Freezable, IFormattable, System.Collections.Generic.ICollection<double>, System.Collections.Generic.IEnumerable<double>, System.Collections.Generic.IList<double>, System.Collections.IList\n  inheritance:\n  - System.Windows.Freezable\n  implements:\n  - System.Collections.Generic.ICollection<System.Double>\n  - System.Collections.Generic.IEnumerable<System.Double>\n  - System.Collections.Generic.IList<System.Double>\n  - System.Collections.IList\n  - System.IFormattable\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: DoubleCollection()\n  nameWithType: DoubleCollection.DoubleCollection()\n  fullName: System.Windows.Media.DoubleCollection.DoubleCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public DoubleCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.#ctor(System.Collections.Generic.IEnumerable{System.Double})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Double})'\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: DoubleCollection(IEnumerable<Double>)\n  nameWithType: DoubleCollection.DoubleCollection(IEnumerable<Double>)\n  fullName: System.Windows.Media.DoubleCollection.DoubleCollection(IEnumerable<Double>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public DoubleCollection (System.Collections.Generic.IEnumerable<double> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: DoubleCollection(Int32)\n  nameWithType: DoubleCollection.DoubleCollection(Int32)\n  fullName: System.Windows.Media.DoubleCollection.DoubleCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public DoubleCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Add(System.Double)\n  id: Add(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Add(Double)\n  nameWithType: DoubleCollection.Add(Double)\n  fullName: System.Windows.Media.DoubleCollection.Add(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: DoubleCollection.Clear()\n  fullName: System.Windows.Media.DoubleCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: DoubleCollection.Clone()\n  fullName: System.Windows.Media.DoubleCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.DoubleCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.DoubleCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: DoubleCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: DoubleCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.DoubleCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.DoubleCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.DoubleCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: DoubleCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Contains(System.Double)\n  id: Contains(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Contains(Double)\n  nameWithType: DoubleCollection.Contains(Double)\n  fullName: System.Windows.Media.DoubleCollection.Contains(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.CopyTo(System.Double[],System.Int32)\n  id: CopyTo(System.Double[],System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: CopyTo(Double[],Int32)\n  nameWithType: DoubleCollection.CopyTo(Double[],Int32)\n  fullName: System.Windows.Media.DoubleCollection.CopyTo(Double[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (double[] array, int index);\n    parameters:\n    - id: array\n      type: System.Double[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Count\n  id: Count\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: DoubleCollection.Count\n  fullName: System.Windows.Media.DoubleCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: DoubleCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.DoubleCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: DoubleCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: DoubleCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: DoubleCollection.GetEnumerator()\n  fullName: System.Windows.Media.DoubleCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.DoubleCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.DoubleCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.IndexOf(System.Double)\n  id: IndexOf(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: IndexOf(Double)\n  nameWithType: DoubleCollection.IndexOf(Double)\n  fullName: System.Windows.Media.DoubleCollection.IndexOf(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Insert(System.Int32,System.Double)\n  id: Insert(System.Int32,System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Insert(Int32,Double)\n  nameWithType: DoubleCollection.Insert(Int32,Double)\n  fullName: System.Windows.Media.DoubleCollection.Insert(Int32,Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, double value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: DoubleCollection.Item(Int32)\n  fullName: System.Windows.Media.DoubleCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: DoubleCollection.Parse(String)\n  fullName: System.Windows.Media.DoubleCollection.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.DoubleCollection Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.DoubleCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.Remove(System.Double)\n  id: Remove(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: Remove(Double)\n  nameWithType: DoubleCollection.Remove(Double)\n  fullName: System.Windows.Media.DoubleCollection.Remove(Double)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: DoubleCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.DoubleCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#Generic#ICollection{System#Double}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Double}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: DoubleCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Double>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: DoubleCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.Generic.IEnumerator<double> IEnumerable<double>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Double}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: DoubleCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DoubleCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DoubleCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: DoubleCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: DoubleCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: DoubleCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: DoubleCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: DoubleCollection.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.DoubleCollection.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.ToString\n  id: ToString\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DoubleCollection.ToString()\n  fullName: System.Windows.Media.DoubleCollection.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.DoubleCollection.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.DoubleCollection.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.DoubleCollection\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: DoubleCollection.ToString(IFormatProvider)\n  fullName: System.Windows.Media.DoubleCollection.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.DoubleCollection.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Freezable\n  isExternal: false\n  name: System.Windows.Freezable\n- uid: System.Windows.Media.DoubleCollection.#ctor\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: DoubleCollection()\n  nameWithType: DoubleCollection.DoubleCollection()\n  fullName: System.Windows.Media.DoubleCollection.DoubleCollection()\n- uid: System.Windows.Media.DoubleCollection.#ctor(System.Collections.Generic.IEnumerable{System.Double})\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: DoubleCollection(IEnumerable<Double>)\n  nameWithType: DoubleCollection.DoubleCollection(IEnumerable<Double>)\n  fullName: System.Windows.Media.DoubleCollection.DoubleCollection(IEnumerable<Double>)\n- uid: System.Collections.Generic.IEnumerable{System.Double}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Double>\n  nameWithType: IEnumerable<Double>\n  fullName: System.Collections.Generic.IEnumerable<System.Double>\n- uid: System.Windows.Media.DoubleCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: DoubleCollection(Int32)\n  nameWithType: DoubleCollection.DoubleCollection(Int32)\n  fullName: System.Windows.Media.DoubleCollection.DoubleCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.Add(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Add(Double)\n  nameWithType: DoubleCollection.Add(Double)\n  fullName: System.Windows.Media.DoubleCollection.Add(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.DoubleCollection.Clear\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: DoubleCollection.Clear()\n  fullName: System.Windows.Media.DoubleCollection.Clear()\n- uid: System.Windows.Media.DoubleCollection.Clone\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: DoubleCollection.Clone()\n  fullName: System.Windows.Media.DoubleCollection.Clone()\n- uid: System.Windows.Media.DoubleCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: DoubleCollection\n  nameWithType: DoubleCollection\n  fullName: System.Windows.Media.DoubleCollection\n- uid: System.Windows.Media.DoubleCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: DoubleCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.DoubleCollection.CloneCurrentValue\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: DoubleCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.DoubleCollection.CloneCurrentValue()\n- uid: System.Windows.Media.DoubleCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: DoubleCollection\n  nameWithType: DoubleCollection\n  fullName: System.Windows.Media.DoubleCollection\n- uid: System.Windows.Media.DoubleCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: DoubleCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.DoubleCollection.Contains(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Contains(Double)\n  nameWithType: DoubleCollection.Contains(Double)\n  fullName: System.Windows.Media.DoubleCollection.Contains(Double)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.DoubleCollection.CopyTo(System.Double[],System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: CopyTo(Double[],Int32)\n  nameWithType: DoubleCollection.CopyTo(Double[],Int32)\n  fullName: System.Windows.Media.DoubleCollection.CopyTo(Double[],Int32)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.Count\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Count\n  nameWithType: DoubleCollection.Count\n  fullName: System.Windows.Media.DoubleCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.CreateInstanceCore\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: DoubleCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.DoubleCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.DoubleCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: DoubleCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: DoubleCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.DoubleCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.DoubleCollection.GetEnumerator\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: DoubleCollection.GetEnumerator()\n  fullName: System.Windows.Media.DoubleCollection.GetEnumerator()\n- uid: System.Windows.Media.DoubleCollection.Enumerator\n  parent: System.Windows.Media\n  isExternal: false\n  name: DoubleCollection+Enumerator\n  nameWithType: DoubleCollection+Enumerator\n  fullName: System.Windows.Media.DoubleCollection+Enumerator\n- uid: System.Windows.Media.DoubleCollection.IndexOf(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: IndexOf(Double)\n  nameWithType: DoubleCollection.IndexOf(Double)\n  fullName: System.Windows.Media.DoubleCollection.IndexOf(Double)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.DoubleCollection.Insert(System.Int32,System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Insert(Int32,Double)\n  nameWithType: DoubleCollection.Insert(Int32,Double)\n  fullName: System.Windows.Media.DoubleCollection.Insert(Int32,Double)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.DoubleCollection.Item(System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: DoubleCollection.Item(Int32)\n  fullName: System.Windows.Media.DoubleCollection.Item(Int32)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.Parse(System.String)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Parse(String)\n  nameWithType: DoubleCollection.Parse(String)\n  fullName: System.Windows.Media.DoubleCollection.Parse(String)\n- uid: System.Windows.Media.DoubleCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: DoubleCollection\n  nameWithType: DoubleCollection\n  fullName: System.Windows.Media.DoubleCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.DoubleCollection.Remove(System.Double)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: Remove(Double)\n  nameWithType: DoubleCollection.Remove(Double)\n  fullName: System.Windows.Media.DoubleCollection.Remove(Double)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.DoubleCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: DoubleCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.DoubleCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.System#Collections#Generic#ICollection{System#Double}#IsReadOnly\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: DoubleCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.DoubleCollection.System#Collections#Generic#IEnumerable{System#Double}#GetEnumerator\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: DoubleCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Double}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<Double>\n  nameWithType: IEnumerator<Double>\n  fullName: System.Collections.Generic.IEnumerator<System.Double>\n- uid: System.Windows.Media.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: DoubleCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: DoubleCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.DoubleCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: DoubleCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: DoubleCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: DoubleCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: DoubleCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: DoubleCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.DoubleCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: DoubleCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.DoubleCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.DoubleCollection.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: DoubleCollection.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.DoubleCollection.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.DoubleCollection.ToString\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: ToString()\n  nameWithType: DoubleCollection.ToString()\n  fullName: System.Windows.Media.DoubleCollection.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.DoubleCollection.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: DoubleCollection.ToString(IFormatProvider)\n  fullName: System.Windows.Media.DoubleCollection.ToString(IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.DoubleCollection.ToString*\n  parent: System.Windows.Media.DoubleCollection\n  isExternal: false\n  nameWithType: DoubleCollection.\n"}