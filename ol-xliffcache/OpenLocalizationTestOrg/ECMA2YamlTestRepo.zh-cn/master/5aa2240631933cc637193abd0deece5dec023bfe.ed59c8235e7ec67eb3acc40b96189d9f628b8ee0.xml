{"nodes":[{"pos":[638,643],"content":"Delay","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay","pos":[0,5]}]},{"pos":[2310,2317],"content":"Delay()","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay()","pos":[0,7]}]},{"pos":[2834,2867],"content":"Abort(NativeActivityAbortContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abort(NativeActivityAbortContext)","pos":[0,33]}]},{"pos":[3317,3351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3634,3671],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[4131,4165],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4432,4461],"content":"Cancel(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel(NativeActivityContext)","pos":[0,29]}]},{"pos":[4894,4928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5127,5140],"content":"CanInduceIdle","needQuote":true,"needEscape":true,"nodes":[{"content":"CanInduceIdle","pos":[0,13]}]},{"pos":[5461,5495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5684,5692],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[6056,6090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6359,6389],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[6825,6859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6989,7021],"content":"System.Activities.NativeActivity","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.NativeActivity","pos":[0,32]}]},{"pos":[7143,7150],"content":"Delay()","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay()","pos":[0,7]}]},{"pos":[7403,7436],"content":"Abort(NativeActivityAbortContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Abort(NativeActivityAbortContext)","pos":[0,33]}]},{"pos":[7682,7708],"content":"NativeActivityAbortContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityAbortContext","pos":[0,26]}]},{"pos":[7980,8017],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[8267,8289],"content":"NativeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityMetadata","pos":[0,22]}]},{"pos":[8545,8574],"content":"Cancel(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel(NativeActivityContext)","pos":[0,29]}]},{"pos":[8807,8828],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[9048,9061],"content":"CanInduceIdle","needQuote":true,"needEscape":true,"nodes":[{"content":"CanInduceIdle","pos":[0,13]}]},{"pos":[9226,9233],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9409,9417],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[9614,9634],"content":"InArgument<ph id=\"ph1\">&lt;TimeSpan&gt;</ph>","needQuote":true,"needEscape":true,"source":"InArgument<TimeSpan>"},{"pos":[9894,9924],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[10159,10180],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Delay\n  id: Delay\n  children:\n  - System.Activities.Statements.Delay.#ctor\n  - System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.Delay.CanInduceIdle\n  - System.Activities.Statements.Delay.Duration\n  - System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  langs:\n  - csharp\n  name: Delay\n  nameWithType: Delay\n  fullName: System.Activities.Statements.Delay\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Duration\")]\n\n      public sealed class Delay : System.Activities.NativeActivity\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Delay()\n  nameWithType: Delay.Delay()\n  fullName: System.Activities.Statements.Delay.Delay()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public Delay ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  id: Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: Delay.Abort(NativeActivityAbortContext)\n  fullName: System.Activities.Statements.Delay.Abort(NativeActivityAbortContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Abort (System.Activities.NativeActivityAbortContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityAbortContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Delay.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Delay.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: Delay.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Delay.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: Delay.CanInduceIdle\n  fullName: System.Activities.Statements.Delay.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.Duration\n  id: Duration\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Duration\n  nameWithType: Delay.Duration\n  fullName: System.Activities.Statements.Delay.Duration\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.InArgument<TimeSpan> Duration { get; set; }\n    return:\n      type: System.Activities.InArgument{System.TimeSpan}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: Delay.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Delay.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.Delay.#ctor\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Delay()\n  nameWithType: Delay.Delay()\n  fullName: System.Activities.Statements.Delay.Delay()\n- uid: System.Activities.Statements.Delay.Abort(System.Activities.NativeActivityAbortContext)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Abort(NativeActivityAbortContext)\n  nameWithType: Delay.Abort(NativeActivityAbortContext)\n  fullName: System.Activities.Statements.Delay.Abort(NativeActivityAbortContext)\n- uid: System.Activities.NativeActivityAbortContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityAbortContext\n  nameWithType: NativeActivityAbortContext\n  fullName: System.Activities.NativeActivityAbortContext\n- uid: System.Activities.Statements.Delay.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: Delay.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.Delay.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.Delay.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: Delay.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.Delay.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.Delay.CanInduceIdle\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: Delay.CanInduceIdle\n  fullName: System.Activities.Statements.Delay.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.Delay.Duration\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Duration\n  nameWithType: Delay.Duration\n  fullName: System.Activities.Statements.Delay.Duration\n- uid: System.Activities.InArgument{System.TimeSpan}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<TimeSpan>\n  nameWithType: InArgument<TimeSpan>\n  fullName: System.Activities.InArgument<System.TimeSpan>\n- uid: System.Activities.Statements.Delay.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.Delay\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: Delay.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.Delay.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n"}