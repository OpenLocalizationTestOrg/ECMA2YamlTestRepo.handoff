{"nodes":[{"pos":[478,498],"content":"IStack<TValue,TCont>","needQuote":true,"needEscape":true,"nodes":[{"content":"IStack&lt;TValue,TCont&gt;","pos":[0,20],"source":"IStack<TValue,TCont>"}]},{"pos":[744,778],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[814,848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1137,1165],"content":"assign(IStack<TValue,TCont>)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IStack&lt;TValue,TCont&gt;)","pos":[0,28],"source":"assign(IStack<TValue,TCont>)"}]},{"pos":[1611,1645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1826,1833],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[2163,2197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2374,2379],"content":"pop()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop()","pos":[0,5]}]},{"pos":[2831,2843],"content":"push(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push(TValue)","pos":[0,12]}]},{"pos":[3185,3219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3398,3404],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[3728,3762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3939,3944],"content":"top()","needQuote":true,"needEscape":true,"nodes":[{"content":"top()","pos":[0,5]}]},{"pos":[4263,4297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4484,4492],"content":"top_item","needQuote":true,"needEscape":true,"nodes":[{"content":"top_item","pos":[0,8]}]},{"pos":[4814,4848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5065,5093],"content":"assign(IStack<TValue,TCont>)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IStack&lt;TValue,TCont&gt;)","pos":[0,28],"source":"assign(IStack<TValue,TCont>)"}]},{"pos":[5351,5371],"content":"IStack<TValue,TCont>","needQuote":true,"needEscape":true,"nodes":[{"content":"IStack&lt;TValue,TCont&gt;","pos":[0,20],"source":"IStack<TValue,TCont>"}]},{"pos":[5586,5593],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[5772,5779],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5948,5953],"content":"pop()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop()","pos":[0,5]}]},{"pos":[6183,6195],"content":"push(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push(TValue)","pos":[0,12]}]},{"pos":[6371,6377],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[6538,6544],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[6719,6724],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6889,6894],"content":"top()","needQuote":true,"needEscape":true,"nodes":[{"content":"top()","pos":[0,5]}]},{"pos":[7124,7132],"content":"top_item","needQuote":true,"needEscape":true,"nodes":[{"content":"top_item","pos":[0,8]}]},{"pos":[7300,7306],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IStack`2\n  id: IStack`2\n  children:\n  - Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack`2)\n  - Microsoft.VisualC.StlClr.IStack`2.empty\n  - Microsoft.VisualC.StlClr.IStack`2.pop\n  - Microsoft.VisualC.StlClr.IStack`2.push(`0)\n  - Microsoft.VisualC.StlClr.IStack`2.size\n  - Microsoft.VisualC.StlClr.IStack`2.top\n  - Microsoft.VisualC.StlClr.IStack`2.top_item\n  langs:\n  - csharp\n  name: IStack<TValue,TCont>\n  nameWithType: IStack<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>\n  type: Interface\n  syntax:\n    content: 'public interface IStack<TValue,TCont> : ICloneable'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n    - id: TCont\n      description: Parameter description to be filled\n  implements:\n  - System.ICloneable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack`2)\n  id: assign(Microsoft.VisualC.StlClr.IStack`2)\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: assign(IStack<TValue,TCont>)\n  nameWithType: IStack<TValue,TCont>.assign(IStack<TValue,TCont>)\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.assign(IStack<TValue,TCont>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.IStack<TValue,TCont> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IStack`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IStack<TValue,TCont>.empty()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.pop\n  id: pop\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: pop()\n  nameWithType: IStack<TValue,TCont>.pop()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.pop()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void pop ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.push(`0)\n  id: push(`0)\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: push(TValue)\n  nameWithType: IStack<TValue,TCont>.push(TValue)\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.push(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void push (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IStack<TValue,TCont>.size()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.top\n  id: top\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: top()\n  nameWithType: IStack<TValue,TCont>.top()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.top()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue top ();\n    parameters: []\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IStack`2.top_item\n  id: top_item\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  langs:\n  - csharp\n  name: top_item\n  nameWithType: IStack<TValue,TCont>.top_item\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.top_item\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue top_item { get; set; }\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack`2)\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: assign(IStack<TValue,TCont>)\n  nameWithType: IStack<TValue,TCont>.assign(IStack<TValue,TCont>)\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.assign(IStack<TValue,TCont>)\n- uid: Microsoft.VisualC.StlClr.IStack`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IStack<TValue,TCont>\n  nameWithType: IStack<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>\n- uid: Microsoft.VisualC.StlClr.IStack`2.empty\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: empty()\n  nameWithType: IStack<TValue,TCont>.empty()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IStack`2.pop\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: pop()\n  nameWithType: IStack<TValue,TCont>.pop()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.pop()\n- uid: Microsoft.VisualC.StlClr.IStack`2.push(`0)\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: push(TValue)\n  nameWithType: IStack<TValue,TCont>.push(TValue)\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.push(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IStack`2.size\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: size()\n  nameWithType: IStack<TValue,TCont>.size()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.size()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.IStack`2.top\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: top()\n  nameWithType: IStack<TValue,TCont>.top()\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.top()\n- uid: Microsoft.VisualC.StlClr.IStack`2.top_item\n  parent: Microsoft.VisualC.StlClr.IStack`2\n  isExternal: false\n  name: top_item\n  nameWithType: IStack<TValue,TCont>.top_item\n  fullName: Microsoft.VisualC.StlClr.IStack<TValue,TCont>.top_item\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n"}