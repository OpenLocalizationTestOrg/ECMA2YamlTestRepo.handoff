{"nodes":[{"pos":[539,563],"content":"IDictionary<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;TKey,TValue&gt;","pos":[0,24],"source":"IDictionary<TKey,TValue>"}]},{"pos":[997,1031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1068,1102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1515,1531],"content":"Add(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TKey,TValue)","pos":[0,16]}]},{"pos":[1884,1918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1973,2007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2222,2239],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[2588,2622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2681,2715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2916,2926],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[3270,3304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3355,3389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3582,3586],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[3963,3997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4202,4214],"content":"Remove(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[4548,4582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4641,4675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4898,4922],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[5303,5337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5392,5426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5485,5519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5716,5722],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[6109,6143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6343,6359],"content":"Add(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TKey,TValue)","pos":[0,16]}]},{"pos":[6551,6555],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[6648,6654],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[6840,6857],"content":"ContainsKey(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainsKey(TKey)","pos":[0,17]}]},{"pos":[7066,7073],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7177,7181],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[7356,7366],"content":"Item(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(TKey)","pos":[0,10]}]},{"pos":[7548,7554],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[7649,7653],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[7824,7828],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[8061,8078],"content":"ICollection<ph id=\"ph1\">&lt;TKey&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<TKey>"},{"pos":[8308,8320],"content":"Remove(TKey)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(TKey)","pos":[0,12]}]},{"pos":[8519,8526],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8630,8634],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[8820,8844],"content":"TryGetValue(TKey,TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryGetValue(TKey,TValue)","pos":[0,24]}]},{"pos":[9067,9074],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9178,9182],"content":"TKey","needQuote":true,"needEscape":true,"nodes":[{"content":"TKey","pos":[0,4]}]},{"pos":[9275,9281],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[9458,9464],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[9703,9722],"content":"ICollection<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<TValue>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.IDictionary`2\n  id: IDictionary`2\n  children:\n  - System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  - System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  - System.Collections.Generic.IDictionary`2.Item(`0)\n  - System.Collections.Generic.IDictionary`2.Keys\n  - System.Collections.Generic.IDictionary`2.Remove(`0)\n  - System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  - System.Collections.Generic.IDictionary`2.Values\n  langs:\n  - csharp\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n  type: Interface\n  syntax:\n    content: 'public interface IDictionary<TKey,TValue> : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>'\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  id: Add(`0,`1)\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: Add(TKey,TValue)\n  nameWithType: IDictionary<TKey,TValue>.Add(TKey,TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Add (TKey key, TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  id: ContainsKey(`0)\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: ContainsKey(TKey)\n  nameWithType: IDictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.ContainsKey(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool ContainsKey (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.Item(`0)\n  id: Item(`0)\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: Item(TKey)\n  nameWithType: IDictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public TValue this[TKey key] { get; set; }\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.Keys\n  id: Keys\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: IDictionary<TKey,TValue>.Keys\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.ICollection<TKey> Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TKey}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: Remove(TKey)\n  nameWithType: IDictionary<TKey,TValue>.Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Remove (TKey key);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  id: TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: TryGetValue(TKey,TValue)\n  nameWithType: IDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool TryGetValue (TKey key, out TValue value);\n    parameters:\n    - id: key\n      type: TKey\n      description: Parameter description to be filled\n    - id: value\n      type: TValue\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IDictionary`2.Values\n  id: Values\n  parent: System.Collections.Generic.IDictionary`2\n  langs:\n  - csharp\n  name: Values\n  nameWithType: IDictionary<TKey,TValue>.Values\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.ICollection<TValue> Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{TValue}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.Generic.IDictionary`2.Add(`0,`1)\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: Add(TKey,TValue)\n  nameWithType: IDictionary<TKey,TValue>.Add(TKey,TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey,TValue)\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.IDictionary`2.ContainsKey(`0)\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: ContainsKey(TKey)\n  nameWithType: IDictionary<TKey,TValue>.ContainsKey(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.ContainsKey(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.IDictionary`2.Item(`0)\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: Item(TKey)\n  nameWithType: IDictionary<TKey,TValue>.Item(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.IDictionary`2.Keys\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: Keys\n  nameWithType: IDictionary<TKey,TValue>.Keys\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Keys\n- uid: System.Collections.Generic.ICollection{TKey}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TKey>\n  nameWithType: ICollection<TKey>\n  fullName: System.Collections.Generic.ICollection<TKey>\n- uid: System.Collections.Generic.IDictionary`2.Remove(`0)\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: Remove(TKey)\n  nameWithType: IDictionary<TKey,TValue>.Remove(TKey)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: TryGetValue(TKey,TValue)\n  nameWithType: IDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.TryGetValue(TKey,TValue)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: TKey\n  parent: ''\n  isExternal: true\n  name: TKey\n  nameWithType: TKey\n  fullName: TKey\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Collections.Generic.IDictionary`2.Values\n  parent: System.Collections.Generic.IDictionary`2\n  isExternal: false\n  name: Values\n  nameWithType: IDictionary<TKey,TValue>.Values\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>.Values\n- uid: System.Collections.Generic.ICollection{TValue}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<TValue>\n  nameWithType: ICollection<TValue>\n  fullName: System.Collections.Generic.ICollection<TValue>\n"}