{"nodes":[{"pos":[2169,2181],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[3439,3453],"content":"AssemblyName()","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName()","pos":[0,14]}]},{"pos":[3906,3926],"content":"AssemblyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName(String)","pos":[0,20]}]},{"pos":[4269,4303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4478,4485],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[4770,4804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4985,4993],"content":"CodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeBase","pos":[0,8]}]},{"pos":[5276,5310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5497,5508],"content":"ContentType","needQuote":true,"needEscape":true,"nodes":[{"content":"ContentType","pos":[0,11]}]},{"pos":[5855,5889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6076,6087],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[6424,6458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6645,6656],"content":"CultureName","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureName","pos":[0,11]}]},{"pos":[6948,6982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7177,7192],"content":"EscapedCodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EscapedCodeBase","pos":[0,15]}]},{"pos":[7491,7525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7700,7705],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[8030,8064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8245,8253],"content":"FullName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[8531,8565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8790,8813],"content":"GetAssemblyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyName(String)","pos":[0,23]}]},{"pos":[9198,9232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9307,9341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9720,9769],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[10283,10317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10413,10447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10636,10650],"content":"GetPublicKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKey()","pos":[0,14]}]},{"pos":[10956,10990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11189,11208],"content":"GetPublicKeyToken()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKeyToken()","pos":[0,19]}]},{"pos":[11529,11563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11754,11767],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[12152,12186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12365,12372],"content":"KeyPair","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyPair","pos":[0,7]}]},{"pos":[12703,12737],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12910,12914],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[13185,13219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13448,13473],"content":"OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnDeserialization(Object)","pos":[0,25]}]},{"pos":[13819,13853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14060,14081],"content":"ProcessorArchitecture","needQuote":true,"needEscape":true,"nodes":[{"content":"ProcessorArchitecture","pos":[0,21]}]},{"pos":[14462,14496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14839,14892],"content":"ReferenceMatchesDefinition(AssemblyName,AssemblyName)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReferenceMatchesDefinition(AssemblyName,AssemblyName)","pos":[0,53]}]},{"pos":[15400,15434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15518,15552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15611,15645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15864,15884],"content":"SetPublicKey(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPublicKey(Byte[])","pos":[0,20]}]},{"pos":[16221,16255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16484,16509],"content":"SetPublicKeyToken(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPublicKeyToken(Byte[])","pos":[0,25]}]},{"pos":[16871,16905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17340,17432],"content":"System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,92]}]},{"pos":[17970,18004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18070,18104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18167,18201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18262,18296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18361,18395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18772,18850],"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,78]}]},{"pos":[19328,19362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19423,19457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19521,19555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19888,19957],"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)","pos":[0,69]}]},{"pos":[20401,20435],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20938,21043],"content":"System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,105]}]},{"pos":[21670,21704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21763,21797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21858,21892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21954,21988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22056,22090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22157,22191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22258,22292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22357,22391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22572,22582],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22885,22919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23098,23105],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[23387,23421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23626,23646],"content":"VersionCompatibility","needQuote":true,"needEscape":true,"nodes":[{"content":"VersionCompatibility","pos":[0,20]}]},{"pos":[24066,24100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24211,24224],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[24338,24352],"content":"AssemblyName()","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName()","pos":[0,14]}]},{"pos":[24583,24603],"content":"AssemblyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName(String)","pos":[0,20]}]},{"pos":[24784,24790],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24953,24960],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[25115,25121],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25287,25295],"content":"CodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeBase","pos":[0,8]}]},{"pos":[25452,25458],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25627,25638],"content":"ContentType","needQuote":true,"needEscape":true,"nodes":[{"content":"ContentType","pos":[0,11]}]},{"pos":[25836,25855],"content":"AssemblyContentType","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyContentType","pos":[0,19]}]},{"pos":[26061,26072],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[26268,26279],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[26472,26483],"content":"CultureName","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureName","pos":[0,11]}]},{"pos":[26646,26652],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26825,26840],"content":"EscapedCodeBase","needQuote":true,"needEscape":true,"nodes":[{"content":"EscapedCodeBase","pos":[0,15]}]},{"pos":[27011,27017],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27180,27185],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[27369,27386],"content":"AssemblyNameFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyNameFlags","pos":[0,17]}]},{"pos":[27585,27593],"content":"FullName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullName","pos":[0,8]}]},{"pos":[27750,27756],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27944,27967],"content":"GetAssemblyName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblyName(String)","pos":[0,23]}]},{"pos":[28182,28194],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[28333,28339],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28604,28653],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[28947,28964],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[29178,29194],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[29406,29420],"content":"GetPublicKey()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKey()","pos":[0,14]}]},{"pos":[29587,29591],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29764,29783],"content":"GetPublicKeyToken()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPublicKeyToken()","pos":[0,19]}]},{"pos":[29960,29964],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[30133,30146],"content":"HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithm","pos":[0,13]}]},{"pos":[30378,30399],"content":"AssemblyHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[30619,30626],"content":"KeyPair","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyPair","pos":[0,7]}]},{"pos":[30814,30831],"content":"StrongNameKeyPair","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNameKeyPair","pos":[0,17]}]},{"pos":[31026,31030],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[31179,31185],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31375,31400],"content":"OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnDeserialization(Object)","pos":[0,25]}]},{"pos":[31591,31597],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31776,31797],"content":"ProcessorArchitecture","needQuote":true,"needEscape":true,"nodes":[{"content":"ProcessorArchitecture","pos":[0,21]}]},{"pos":[32017,32038],"content":"ProcessorArchitecture","needQuote":true,"needEscape":true,"nodes":[{"content":"ProcessorArchitecture","pos":[0,21]}]},{"pos":[32326,32379],"content":"ReferenceMatchesDefinition(AssemblyName,AssemblyName)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReferenceMatchesDefinition(AssemblyName,AssemblyName)","pos":[0,53]}]},{"pos":[32627,32634],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32780,32792],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[32959,32971],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[33179,33199],"content":"SetPublicKey(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPublicKey(Byte[])","pos":[0,20]}]},{"pos":[33378,33382],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[33570,33595],"content":"SetPublicKeyToken(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPublicKeyToken(Byte[])","pos":[0,25]}]},{"pos":[33784,33788],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[34072,34164],"content":"System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,92]}]},{"pos":[34487,34491],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[34603,34609],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[34725,34731],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[34847,34853],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[34969,34975],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[35232,35310],"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,78]}]},{"pos":[35607,35613],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[35729,35735],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[35851,35857],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[36092,36161],"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)","pos":[0,69]}]},{"pos":[36440,36446],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[36766,36871],"content":"System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,105]}]},{"pos":[37222,37228],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[37342,37346],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[37458,37464],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[37579,37584],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[37698,37704],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[37820,37826],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[37942,37948],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[38064,38070],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[38236,38246],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[38407,38413],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38578,38585],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[38741,38748],"content":"Version","needQuote":true,"needEscape":true,"nodes":[{"content":"Version","pos":[0,7]}]},{"pos":[38928,38948],"content":"VersionCompatibility","needQuote":true,"needEscape":true,"nodes":[{"content":"VersionCompatibility","pos":[0,20]}]},{"pos":[39201,39229],"content":"AssemblyVersionCompatibility","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyVersionCompatibility","pos":[0,28]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.AssemblyName\n  id: AssemblyName\n  children:\n  - System.Reflection.AssemblyName.#ctor\n  - System.Reflection.AssemblyName.#ctor(System.String)\n  - System.Reflection.AssemblyName.Clone\n  - System.Reflection.AssemblyName.CodeBase\n  - System.Reflection.AssemblyName.ContentType\n  - System.Reflection.AssemblyName.CultureInfo\n  - System.Reflection.AssemblyName.CultureName\n  - System.Reflection.AssemblyName.EscapedCodeBase\n  - System.Reflection.AssemblyName.Flags\n  - System.Reflection.AssemblyName.FullName\n  - System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  - System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.AssemblyName.GetPublicKey\n  - System.Reflection.AssemblyName.GetPublicKeyToken\n  - System.Reflection.AssemblyName.HashAlgorithm\n  - System.Reflection.AssemblyName.KeyPair\n  - System.Reflection.AssemblyName.Name\n  - System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  - System.Reflection.AssemblyName.ProcessorArchitecture\n  - System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  - System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  - System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.AssemblyName.ToString\n  - System.Reflection.AssemblyName.Version\n  - System.Reflection.AssemblyName.VersionCompatibility\n  langs:\n  - csharp\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  - System.Runtime.InteropServices._AssemblyName\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.#ctor\n  id: '#ctor'\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: AssemblyName()\n  nameWithType: AssemblyName.AssemblyName()\n  fullName: System.Reflection.AssemblyName.AssemblyName()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public AssemblyName ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: AssemblyName(String)\n  nameWithType: AssemblyName.AssemblyName(String)\n  fullName: System.Reflection.AssemblyName.AssemblyName(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public AssemblyName (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.Clone\n  id: Clone\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: AssemblyName.Clone()\n  fullName: System.Reflection.AssemblyName.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.CodeBase\n  id: CodeBase\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: CodeBase\n  nameWithType: AssemblyName.CodeBase\n  fullName: System.Reflection.AssemblyName.CodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public string CodeBase { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.ContentType\n  id: ContentType\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: AssemblyName.ContentType\n  fullName: System.Reflection.AssemblyName.ContentType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.AssemblyContentType ContentType { get; set; }\n    return:\n      type: System.Reflection.AssemblyContentType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.CultureInfo\n  id: CultureInfo\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: CultureInfo\n  nameWithType: AssemblyName.CultureInfo\n  fullName: System.Reflection.AssemblyName.CultureInfo\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Globalization.CultureInfo CultureInfo { get; set; }\n    return:\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.CultureName\n  id: CultureName\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: CultureName\n  nameWithType: AssemblyName.CultureName\n  fullName: System.Reflection.AssemblyName.CultureName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public string CultureName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.EscapedCodeBase\n  id: EscapedCodeBase\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: EscapedCodeBase\n  nameWithType: AssemblyName.EscapedCodeBase\n  fullName: System.Reflection.AssemblyName.EscapedCodeBase\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public string EscapedCodeBase { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.Flags\n  id: Flags\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: AssemblyName.Flags\n  fullName: System.Reflection.AssemblyName.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.AssemblyNameFlags Flags { get; set; }\n    return:\n      type: System.Reflection.AssemblyNameFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.FullName\n  id: FullName\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: FullName\n  nameWithType: AssemblyName.FullName\n  fullName: System.Reflection.AssemblyName.FullName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public string FullName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  id: GetAssemblyName(System.String)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyName.GetAssemblyName(String)\n  fullName: System.Reflection.AssemblyName.GetAssemblyName(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: AssemblyName.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.AssemblyName.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.GetPublicKey\n  id: GetPublicKey\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetPublicKey()\n  nameWithType: AssemblyName.GetPublicKey()\n  fullName: System.Reflection.AssemblyName.GetPublicKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public byte[] GetPublicKey ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.GetPublicKeyToken\n  id: GetPublicKeyToken\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: GetPublicKeyToken()\n  nameWithType: AssemblyName.GetPublicKeyToken()\n  fullName: System.Reflection.AssemblyName.GetPublicKeyToken()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public byte[] GetPublicKeyToken ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: AssemblyName.HashAlgorithm\n  fullName: System.Reflection.AssemblyName.HashAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }\n    return:\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.KeyPair\n  id: KeyPair\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: KeyPair\n  nameWithType: AssemblyName.KeyPair\n  fullName: System.Reflection.AssemblyName.KeyPair\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.StrongNameKeyPair KeyPair { get; set; }\n    return:\n      type: System.Reflection.StrongNameKeyPair\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.Name\n  id: Name\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Name\n  nameWithType: AssemblyName.Name\n  fullName: System.Reflection.AssemblyName.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: AssemblyName.OnDeserialization(Object)\n  fullName: System.Reflection.AssemblyName.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.ProcessorArchitecture\n  id: ProcessorArchitecture\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ProcessorArchitecture\n  nameWithType: AssemblyName.ProcessorArchitecture\n  fullName: System.Reflection.AssemblyName.ProcessorArchitecture\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }\n    return:\n      type: System.Reflection.ProcessorArchitecture\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  id: ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ReferenceMatchesDefinition(AssemblyName,AssemblyName)\n  nameWithType: AssemblyName.ReferenceMatchesDefinition(AssemblyName,AssemblyName)\n  fullName: System.Reflection.AssemblyName.ReferenceMatchesDefinition(AssemblyName,AssemblyName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);\n    parameters:\n    - id: reference\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: definition\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  id: SetPublicKey(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: SetPublicKey(Byte[])\n  nameWithType: AssemblyName.SetPublicKey(Byte[])\n  fullName: System.Reflection.AssemblyName.SetPublicKey(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public void SetPublicKey (byte[] publicKey);\n    parameters:\n    - id: publicKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  id: SetPublicKeyToken(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: SetPublicKeyToken(Byte[])\n  nameWithType: AssemblyName.SetPublicKeyToken(Byte[])\n  fullName: System.Reflection.AssemblyName.SetPublicKeyToken(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public void SetPublicKeyToken (byte[] publicKeyToken);\n    parameters:\n    - id: publicKeyToken\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.ToString\n  id: ToString\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AssemblyName.ToString()\n  fullName: System.Reflection.AssemblyName.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.Version\n  id: Version\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: Version\n  nameWithType: AssemblyName.Version\n  fullName: System.Reflection.AssemblyName.Version\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public Version Version { get; set; }\n    return:\n      type: System.Version\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.AssemblyName.VersionCompatibility\n  id: VersionCompatibility\n  parent: System.Reflection.AssemblyName\n  langs:\n  - csharp\n  name: VersionCompatibility\n  nameWithType: AssemblyName.VersionCompatibility\n  fullName: System.Reflection.AssemblyName.VersionCompatibility\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }\n    return:\n      type: System.Configuration.Assemblies.AssemblyVersionCompatibility\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.AssemblyName.#ctor\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: AssemblyName()\n  nameWithType: AssemblyName.AssemblyName()\n  fullName: System.Reflection.AssemblyName.AssemblyName()\n- uid: System.Reflection.AssemblyName.#ctor(System.String)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: AssemblyName(String)\n  nameWithType: AssemblyName.AssemblyName(String)\n  fullName: System.Reflection.AssemblyName.AssemblyName(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.Clone\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Clone()\n  nameWithType: AssemblyName.Clone()\n  fullName: System.Reflection.AssemblyName.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.AssemblyName.CodeBase\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CodeBase\n  nameWithType: AssemblyName.CodeBase\n  fullName: System.Reflection.AssemblyName.CodeBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.ContentType\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ContentType\n  nameWithType: AssemblyName.ContentType\n  fullName: System.Reflection.AssemblyName.ContentType\n- uid: System.Reflection.AssemblyContentType\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyContentType\n  nameWithType: AssemblyContentType\n  fullName: System.Reflection.AssemblyContentType\n- uid: System.Reflection.AssemblyName.CultureInfo\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CultureInfo\n  nameWithType: AssemblyName.CultureInfo\n  fullName: System.Reflection.AssemblyName.CultureInfo\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.AssemblyName.CultureName\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: CultureName\n  nameWithType: AssemblyName.CultureName\n  fullName: System.Reflection.AssemblyName.CultureName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.EscapedCodeBase\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: EscapedCodeBase\n  nameWithType: AssemblyName.EscapedCodeBase\n  fullName: System.Reflection.AssemblyName.EscapedCodeBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.Flags\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Flags\n  nameWithType: AssemblyName.Flags\n  fullName: System.Reflection.AssemblyName.Flags\n- uid: System.Reflection.AssemblyNameFlags\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyNameFlags\n  nameWithType: AssemblyNameFlags\n  fullName: System.Reflection.AssemblyNameFlags\n- uid: System.Reflection.AssemblyName.FullName\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: FullName\n  nameWithType: AssemblyName.FullName\n  fullName: System.Reflection.AssemblyName.FullName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.GetAssemblyName(System.String)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetAssemblyName(String)\n  nameWithType: AssemblyName.GetAssemblyName(String)\n  fullName: System.Reflection.AssemblyName.GetAssemblyName(String)\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: AssemblyName.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.AssemblyName.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.AssemblyName.GetPublicKey\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetPublicKey()\n  nameWithType: AssemblyName.GetPublicKey()\n  fullName: System.Reflection.AssemblyName.GetPublicKey()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.AssemblyName.GetPublicKeyToken\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: GetPublicKeyToken()\n  nameWithType: AssemblyName.GetPublicKeyToken()\n  fullName: System.Reflection.AssemblyName.GetPublicKeyToken()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.AssemblyName.HashAlgorithm\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: AssemblyName.HashAlgorithm\n  fullName: System.Reflection.AssemblyName.HashAlgorithm\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.Reflection.AssemblyName.KeyPair\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: KeyPair\n  nameWithType: AssemblyName.KeyPair\n  fullName: System.Reflection.AssemblyName.KeyPair\n- uid: System.Reflection.StrongNameKeyPair\n  parent: System.Reflection\n  isExternal: false\n  name: StrongNameKeyPair\n  nameWithType: StrongNameKeyPair\n  fullName: System.Reflection.StrongNameKeyPair\n- uid: System.Reflection.AssemblyName.Name\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Name\n  nameWithType: AssemblyName.Name\n  fullName: System.Reflection.AssemblyName.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.OnDeserialization(System.Object)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: AssemblyName.OnDeserialization(Object)\n  fullName: System.Reflection.AssemblyName.OnDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.AssemblyName.ProcessorArchitecture\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: AssemblyName.ProcessorArchitecture\n  fullName: System.Reflection.AssemblyName.ProcessorArchitecture\n- uid: System.Reflection.ProcessorArchitecture\n  parent: System.Reflection\n  isExternal: false\n  name: ProcessorArchitecture\n  nameWithType: ProcessorArchitecture\n  fullName: System.Reflection.ProcessorArchitecture\n- uid: System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ReferenceMatchesDefinition(AssemblyName,AssemblyName)\n  nameWithType: AssemblyName.ReferenceMatchesDefinition(AssemblyName,AssemblyName)\n  fullName: System.Reflection.AssemblyName.ReferenceMatchesDefinition(AssemblyName,AssemblyName)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.AssemblyName.SetPublicKey(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: SetPublicKey(Byte[])\n  nameWithType: AssemblyName.SetPublicKey(Byte[])\n  fullName: System.Reflection.AssemblyName.SetPublicKey(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: SetPublicKeyToken(Byte[])\n  nameWithType: AssemblyName.SetPublicKeyToken(Byte[])\n  fullName: System.Reflection.AssemblyName.SetPublicKeyToken(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: AssemblyName.System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.AssemblyName.System.Runtime.InteropServices._AssemblyName.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.AssemblyName.ToString\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: ToString()\n  nameWithType: AssemblyName.ToString()\n  fullName: System.Reflection.AssemblyName.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.AssemblyName.Version\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: Version\n  nameWithType: AssemblyName.Version\n  fullName: System.Reflection.AssemblyName.Version\n- uid: System.Version\n  parent: System\n  isExternal: false\n  name: Version\n  nameWithType: Version\n  fullName: System.Version\n- uid: System.Reflection.AssemblyName.VersionCompatibility\n  parent: System.Reflection.AssemblyName\n  isExternal: false\n  name: VersionCompatibility\n  nameWithType: AssemblyName.VersionCompatibility\n  fullName: System.Reflection.AssemblyName.VersionCompatibility\n- uid: System.Configuration.Assemblies.AssemblyVersionCompatibility\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyVersionCompatibility\n  nameWithType: AssemblyVersionCompatibility\n  fullName: System.Configuration.Assemblies.AssemblyVersionCompatibility\n"}