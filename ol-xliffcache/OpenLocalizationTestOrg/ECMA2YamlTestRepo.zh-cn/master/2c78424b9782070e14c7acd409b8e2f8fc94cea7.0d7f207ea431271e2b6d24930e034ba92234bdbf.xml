{"nodes":[{"pos":[637,648],"content":"IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary","pos":[0,11]}]},{"pos":[1166,1184],"content":"Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Object,Object)","pos":[0,18]}]},{"pos":[1510,1544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1606,1640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1815,1822],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[2258,2274],"content":"Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[2587,2621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2680,2714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2905,2920],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[3290,3324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3511,3522],"content":"IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[3808,3842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4027,4037],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[4320,4354],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4557,4569],"content":"Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Object)","pos":[0,12]}]},{"pos":[4886,4920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4978,5012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5185,5189],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[5496,5530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5737,5751],"content":"Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[6058,6092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6269,6275],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[6588,6622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6824,6842],"content":"Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Object,Object)","pos":[0,18]}]},{"pos":[7018,7024],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7140,7146],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7309,7316],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[7535,7551],"content":"Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[7724,7731],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7849,7855],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8026,8041],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[8250,8271],"content":"IDictionaryEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[8482,8493],"content":"IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFixedSize","pos":[0,11]}]},{"pos":[8656,8663],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8833,8843],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[9004,9011],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9190,9202],"content":"Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Object)","pos":[0,12]}]},{"pos":[9366,9372],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9488,9494],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9656,9660],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[9837,9848],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[10049,10063],"content":"Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Object)","pos":[0,14]}]},{"pos":[10231,10237],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10401,10407],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[10588,10599],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.IDictionary\n  id: IDictionary\n  children:\n  - System.Collections.IDictionary.Add(System.Object,System.Object)\n  - System.Collections.IDictionary.Clear\n  - System.Collections.IDictionary.Contains(System.Object)\n  - System.Collections.IDictionary.GetEnumerator\n  - System.Collections.IDictionary.IsFixedSize\n  - System.Collections.IDictionary.IsReadOnly\n  - System.Collections.IDictionary.Item(System.Object)\n  - System.Collections.IDictionary.Keys\n  - System.Collections.IDictionary.Remove(System.Object)\n  - System.Collections.IDictionary.Values\n  langs:\n  - csharp\n  name: IDictionary\n  nameWithType: IDictionary\n  fullName: System.Collections.IDictionary\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IDictionary : System.Collections.ICollection\n  implements:\n  - System.Collections.ICollection\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n  id: Add(System.Object,System.Object)\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Add(Object,Object)\n  nameWithType: IDictionary.Add(Object,Object)\n  fullName: System.Collections.IDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Clear\n  id: Clear\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: IDictionary.Clear()\n  fullName: System.Collections.IDictionary.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: IDictionary.Contains(Object)\n  fullName: System.Collections.IDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool Contains (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: IDictionary.GetEnumerator()\n  fullName: System.Collections.IDictionary.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.IsFixedSize\n  id: IsFixedSize\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: IsFixedSize\n  nameWithType: IDictionary.IsFixedSize\n  fullName: System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.IsReadOnly\n  id: IsReadOnly\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: IDictionary.IsReadOnly\n  fullName: System.Collections.IDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Item(System.Object)\n  id: Item(System.Object)\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Item(Object)\n  nameWithType: IDictionary.Item(Object)\n  fullName: System.Collections.IDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public object this[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Keys\n  id: Keys\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: IDictionary.Keys\n  fullName: System.Collections.IDictionary.Keys\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.ICollection Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Remove(System.Object)\n  id: Remove(System.Object)\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Remove(Object)\n  nameWithType: IDictionary.Remove(Object)\n  fullName: System.Collections.IDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public void Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.IDictionary.Values\n  id: Values\n  parent: System.Collections.IDictionary\n  langs:\n  - csharp\n  name: Values\n  nameWithType: IDictionary.Values\n  fullName: System.Collections.IDictionary.Values\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public System.Collections.ICollection Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.IDictionary.Add(System.Object,System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Add(Object,Object)\n  nameWithType: IDictionary.Add(Object,Object)\n  fullName: System.Collections.IDictionary.Add(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IDictionary.Clear\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Clear()\n  nameWithType: IDictionary.Clear()\n  fullName: System.Collections.IDictionary.Clear()\n- uid: System.Collections.IDictionary.Contains(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: IDictionary.Contains(Object)\n  fullName: System.Collections.IDictionary.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IDictionary.GetEnumerator\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: IDictionary.GetEnumerator()\n  fullName: System.Collections.IDictionary.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.Collections.IDictionary.IsFixedSize\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: IsFixedSize\n  nameWithType: IDictionary.IsFixedSize\n  fullName: System.Collections.IDictionary.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.IDictionary.IsReadOnly\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: IDictionary.IsReadOnly\n  fullName: System.Collections.IDictionary.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.IDictionary.Item(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Item(Object)\n  nameWithType: IDictionary.Item(Object)\n  fullName: System.Collections.IDictionary.Item(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IDictionary.Keys\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Keys\n  nameWithType: IDictionary.Keys\n  fullName: System.Collections.IDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.IDictionary.Remove(System.Object)\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Remove(Object)\n  nameWithType: IDictionary.Remove(Object)\n  fullName: System.Collections.IDictionary.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IDictionary.Values\n  parent: System.Collections.IDictionary\n  isExternal: false\n  name: Values\n  nameWithType: IDictionary.Values\n  fullName: System.Collections.IDictionary.Values\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}