{"nodes":[{"pos":[541,559],"content":"KeyedHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyedHashAlgorithm","pos":[0,18]}]},{"pos":[2797,2817],"content":"KeyedHashAlgorithm()","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyedHashAlgorithm()","pos":[0,20]}]},{"pos":[3329,3337],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[3741,3775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4084,4098],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[4497,4531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4623,4657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4970,4986],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5355,5389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5594,5597],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[5907,5941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6156,6164],"content":"KeyValue","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValue","pos":[0,8]}]},{"pos":[6468,6502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6642,6684],"content":"System.Security.Cryptography.HashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.HashAlgorithm","pos":[0,42]}]},{"pos":[6832,6852],"content":"KeyedHashAlgorithm()","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyedHashAlgorithm()","pos":[0,20]}]},{"pos":[7138,7146],"content":"Create()","needQuote":true,"needEscape":true,"nodes":[{"content":"Create()","pos":[0,8]}]},{"pos":[7382,7400],"content":"KeyedHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyedHashAlgorithm","pos":[0,18]}]},{"pos":[7659,7673],"content":"Create(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Create(String)","pos":[0,14]}]},{"pos":[7921,7939],"content":"KeyedHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyedHashAlgorithm","pos":[0,18]}]},{"pos":[8101,8107],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[8322,8338],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[8535,8542],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8739,8742],"content":"Key","needQuote":true,"needEscape":true,"nodes":[{"content":"Key","pos":[0,3]}]},{"pos":[8910,8914],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9112,9120],"content":"KeyValue","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValue","pos":[0,8]}]},{"pos":[9298,9302],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.KeyedHashAlgorithm\n  id: KeyedHashAlgorithm\n  children:\n  - System.Security.Cryptography.KeyedHashAlgorithm.#ctor\n  - System.Security.Cryptography.KeyedHashAlgorithm.Create\n  - System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)\n  - System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.KeyedHashAlgorithm.Key\n  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n  langs:\n  - csharp\n  name: KeyedHashAlgorithm\n  nameWithType: KeyedHashAlgorithm\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class KeyedHashAlgorithm : System.Security.Cryptography.HashAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.HashFinal\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.Initialize\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  langs:\n  - csharp\n  name: KeyedHashAlgorithm()\n  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm()\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected KeyedHashAlgorithm ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create\n  id: Create\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: KeyedHashAlgorithm.Create()\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.KeyedHashAlgorithm Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.KeyedHashAlgorithm\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.KeyedHashAlgorithm.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: KeyedHashAlgorithm.Create(String)\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.KeyedHashAlgorithm Create (string algName);\n    parameters:\n    - id: algName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.KeyedHashAlgorithm\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.KeyedHashAlgorithm.Create*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key\n  id: Key\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  langs:\n  - csharp\n  name: Key\n  nameWithType: KeyedHashAlgorithm.Key\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public virtual byte[] Key { get; set; }\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n  id: KeyValue\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  langs:\n  - csharp\n  name: KeyValue\n  nameWithType: KeyedHashAlgorithm.KeyValue\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected byte[] KeyValue;\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.HashAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.HashAlgorithm\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.#ctor\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: KeyedHashAlgorithm()\n  nameWithType: KeyedHashAlgorithm.KeyedHashAlgorithm()\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyedHashAlgorithm()\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: Create()\n  nameWithType: KeyedHashAlgorithm.Create()\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create()\n- uid: System.Security.Cryptography.KeyedHashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeyedHashAlgorithm\n  nameWithType: KeyedHashAlgorithm\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: Create(String)\n  nameWithType: KeyedHashAlgorithm.Create(String)\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Create(String)\n- uid: System.Security.Cryptography.KeyedHashAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeyedHashAlgorithm\n  nameWithType: KeyedHashAlgorithm\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: KeyedHashAlgorithm.Dispose(Boolean)\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Key\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: Key\n  nameWithType: KeyedHashAlgorithm.Key\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.Key\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: KeyedHashAlgorithm.KeyValue\n  fullName: System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.KeyedHashAlgorithm.Create*\n  parent: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  nameWithType: KeyedHashAlgorithm.\n"}