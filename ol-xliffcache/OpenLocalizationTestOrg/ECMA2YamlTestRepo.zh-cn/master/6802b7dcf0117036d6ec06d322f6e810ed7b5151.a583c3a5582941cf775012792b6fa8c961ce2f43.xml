{"nodes":[{"pos":[1923,1934],"content":"TouchDevice","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice","pos":[0,11]}]},{"pos":[2532,2550],"content":"TouchDevice(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice(Int32)","pos":[0,18]}]},{"pos":[2891,2925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3110,3120],"content":"Activate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Activate()","pos":[0,10]}]},{"pos":[3556,3565],"content":"Activated","needQuote":true,"needEscape":true,"nodes":[{"content":"Activated","pos":[0,9]}]},{"pos":[3865,3899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4092,4104],"content":"ActiveSource","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveSource","pos":[0,12]}]},{"pos":[4469,4503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4746,4768],"content":"Capture(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"Capture(IInputElement)","pos":[0,22]}]},{"pos":[5149,5183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5242,5276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5639,5673],"content":"Capture(IInputElement,CaptureMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Capture(IInputElement,CaptureMode)","pos":[0,34]}]},{"pos":[6124,6158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6245,6279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6338,6372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6611,6619],"content":"Captured","needQuote":true,"needEscape":true,"nodes":[{"content":"Captured","pos":[0,8]}]},{"pos":[6946,6980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7171,7182],"content":"CaptureMode","needQuote":true,"needEscape":true,"nodes":[{"content":"CaptureMode","pos":[0,11]}]},{"pos":[7526,7560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7749,7761],"content":"Deactivate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Deactivate()","pos":[0,12]}]},{"pos":[8207,8218],"content":"Deactivated","needQuote":true,"needEscape":true,"nodes":[{"content":"Deactivated","pos":[0,11]}]},{"pos":[8524,8558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8751,8763],"content":"DirectlyOver","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectlyOver","pos":[0,12]}]},{"pos":[9102,9136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9417,9458],"content":"GetIntermediateTouchPoints(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIntermediateTouchPoints(IInputElement)","pos":[0,41]}]},{"pos":[9948,9982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10068,10102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10357,10385],"content":"GetTouchPoint(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTouchPoint(IInputElement)","pos":[0,28]}]},{"pos":[10826,10860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10936,10970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11143,11145],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[11413,11447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11632,11640],"content":"IsActive","needQuote":true,"needEscape":true,"nodes":[{"content":"IsActive","pos":[0,8]}]},{"pos":[11929,11963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12276,12312],"content":"OnCapture(IInputElement,CaptureMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCapture(IInputElement,CaptureMode)","pos":[0,36]}]},{"pos":[12780,12814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12901,12935],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13174,13202],"content":"OnManipulationEnded(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnManipulationEnded(Boolean)","pos":[0,28]}]},{"pos":[13578,13612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13823,13846],"content":"OnManipulationStarted()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnManipulationStarted()","pos":[0,23]}]},{"pos":[14331,14343],"content":"ReportDown()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportDown()","pos":[0,12]}]},{"pos":[14657,14691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14880,14892],"content":"ReportMove()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportMove()","pos":[0,12]}]},{"pos":[15206,15240],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15425,15435],"content":"ReportUp()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportUp()","pos":[0,10]}]},{"pos":[15743,15777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16046,16081],"content":"SetActiveSource(PresentationSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetActiveSource(PresentationSource)","pos":[0,35]}]},{"pos":[16519,16553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16744,16757],"content":"Synchronize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronize()","pos":[0,13]}]},{"pos":[17345,17405],"content":"System.Windows.Input.IManipulator.GetPosition(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.IManipulator.GetPosition(IInputElement)","pos":[0,60]}]},{"pos":[17894,17928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17993,18027],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18282,18318],"content":"System.Windows.Input.IManipulator.Id","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.IManipulator.Id","pos":[0,36]}]},{"pos":[18681,18715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19032,19092],"content":"System.Windows.Input.IManipulator.ManipulationEnded(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.IManipulator.ManipulationEnded(Boolean)","pos":[0,60]}]},{"pos":[19525,19559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19740,19746],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[20083,20117],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20300,20307],"content":"Updated","needQuote":true,"needEscape":true,"nodes":[{"content":"Updated","pos":[0,7]}]},{"pos":[20601,20635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20765,20797],"content":"System.Windows.Input.InputDevice","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.InputDevice","pos":[0,32]}]},{"pos":[20929,20947],"content":"TouchDevice(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchDevice(Int32)","pos":[0,18]}]},{"pos":[21124,21129],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21297,21307],"content":"Activate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Activate()","pos":[0,10]}]},{"pos":[21524,21533],"content":"Activated","needQuote":true,"needEscape":true,"nodes":[{"content":"Activated","pos":[0,9]}]},{"pos":[21699,21711],"content":"EventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[21897,21909],"content":"ActiveSource","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveSource","pos":[0,12]}]},{"pos":[22103,22121],"content":"PresentationSource","needQuote":true,"needEscape":true,"nodes":[{"content":"PresentationSource","pos":[0,18]}]},{"pos":[22352,22374],"content":"Capture(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"Capture(IInputElement)","pos":[0,22]}]},{"pos":[22561,22568],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22709,22722],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[22976,23010],"content":"Capture(IInputElement,CaptureMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Capture(IInputElement,CaptureMode)","pos":[0,34]}]},{"pos":[23221,23228],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[23369,23382],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[23553,23564],"content":"CaptureMode","needQuote":true,"needEscape":true,"nodes":[{"content":"CaptureMode","pos":[0,11]}]},{"pos":[23758,23766],"content":"Captured","needQuote":true,"needEscape":true,"nodes":[{"content":"Captured","pos":[0,8]}]},{"pos":[23947,23960],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[24155,24166],"content":"CaptureMode","needQuote":true,"needEscape":true,"nodes":[{"content":"CaptureMode","pos":[0,11]}]},{"pos":[24363,24374],"content":"CaptureMode","needQuote":true,"needEscape":true,"nodes":[{"content":"CaptureMode","pos":[0,11]}]},{"pos":[24570,24582],"content":"Deactivate()","needQuote":true,"needEscape":true,"nodes":[{"content":"Deactivate()","pos":[0,12]}]},{"pos":[24805,24816],"content":"Deactivated","needQuote":true,"needEscape":true,"nodes":[{"content":"Deactivated","pos":[0,11]}]},{"pos":[24986,24998],"content":"EventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[25184,25196],"content":"DirectlyOver","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectlyOver","pos":[0,12]}]},{"pos":[25385,25398],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[25638,25679],"content":"GetIntermediateTouchPoints(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetIntermediateTouchPoints(IInputElement)","pos":[0,41]}]},{"pos":[25945,25965],"content":"TouchPointCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchPointCollection","pos":[0,20]}]},{"pos":[26146,26159],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[26386,26414],"content":"GetTouchPoint(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTouchPoint(IInputElement)","pos":[0,28]}]},{"pos":[26644,26654],"content":"TouchPoint","needQuote":true,"needEscape":true,"nodes":[{"content":"TouchPoint","pos":[0,10]}]},{"pos":[26815,26828],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[27014,27016],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[27161,27166],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27334,27342],"content":"IsActive","needQuote":true,"needEscape":true,"nodes":[{"content":"IsActive","pos":[0,8]}]},{"pos":[27501,27508],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27744,27780],"content":"OnCapture(IInputElement,CaptureMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCapture(IInputElement,CaptureMode)","pos":[0,36]}]},{"pos":[28017,28030],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[28201,28212],"content":"CaptureMode","needQuote":true,"needEscape":true,"nodes":[{"content":"CaptureMode","pos":[0,11]}]},{"pos":[28433,28461],"content":"OnManipulationEnded(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnManipulationEnded(Boolean)","pos":[0,28]}]},{"pos":[28660,28667],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28852,28875],"content":"OnManipulationStarted()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnManipulationStarted()","pos":[0,23]}]},{"pos":[29119,29131],"content":"ReportDown()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportDown()","pos":[0,12]}]},{"pos":[29298,29305],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29479,29491],"content":"ReportMove()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportMove()","pos":[0,12]}]},{"pos":[29658,29665],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29837,29847],"content":"ReportUp()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportUp()","pos":[0,10]}]},{"pos":[30010,30017],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30231,30266],"content":"SetActiveSource(PresentationSource)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetActiveSource(PresentationSource)","pos":[0,35]}]},{"pos":[30506,30524],"content":"PresentationSource","needQuote":true,"needEscape":true,"nodes":[{"content":"PresentationSource","pos":[0,18]}]},{"pos":[30729,30742],"content":"Synchronize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronize()","pos":[0,13]}]},{"pos":[31031,31091],"content":"System.Windows.Input.IManipulator.GetPosition(IInputElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.IManipulator.GetPosition(IInputElement)","pos":[0,60]}]},{"pos":[31367,31372],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[31517,31530],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[31750,31786],"content":"System.Windows.Input.IManipulator.Id","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.IManipulator.Id","pos":[0,36]}]},{"pos":[31999,32004],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32231,32291],"content":"System.Windows.Input.IManipulator.ManipulationEnded(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.IManipulator.ManipulationEnded(Boolean)","pos":[0,60]}]},{"pos":[32554,32561],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32731,32737],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[32914,32927],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[33118,33125],"content":"Updated","needQuote":true,"needEscape":true,"nodes":[{"content":"Updated","pos":[0,7]}]},{"pos":[33287,33299],"content":"EventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.TouchDevice\n  id: TouchDevice\n  children:\n  - System.Windows.Input.TouchDevice.#ctor(System.Int32)\n  - System.Windows.Input.TouchDevice.Activate\n  - System.Windows.Input.TouchDevice.Activated\n  - System.Windows.Input.TouchDevice.ActiveSource\n  - System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)\n  - System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  - System.Windows.Input.TouchDevice.Captured\n  - System.Windows.Input.TouchDevice.CaptureMode\n  - System.Windows.Input.TouchDevice.Deactivate\n  - System.Windows.Input.TouchDevice.Deactivated\n  - System.Windows.Input.TouchDevice.DirectlyOver\n  - System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  - System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)\n  - System.Windows.Input.TouchDevice.Id\n  - System.Windows.Input.TouchDevice.IsActive\n  - System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  - System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)\n  - System.Windows.Input.TouchDevice.OnManipulationStarted\n  - System.Windows.Input.TouchDevice.ReportDown\n  - System.Windows.Input.TouchDevice.ReportMove\n  - System.Windows.Input.TouchDevice.ReportUp\n  - System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)\n  - System.Windows.Input.TouchDevice.Synchronize\n  - System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)\n  - System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id\n  - System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)\n  - System.Windows.Input.TouchDevice.Target\n  - System.Windows.Input.TouchDevice.Updated\n  langs:\n  - csharp\n  name: TouchDevice\n  nameWithType: TouchDevice\n  fullName: System.Windows.Input.TouchDevice\n  type: Class\n  syntax:\n    content: 'public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator'\n  inheritance:\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.Input.InputDevice\n  implements:\n  - System.Windows.Input.IManipulator\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: TouchDevice(Int32)\n  nameWithType: TouchDevice.TouchDevice(Int32)\n  fullName: System.Windows.Input.TouchDevice.TouchDevice(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected TouchDevice (int deviceId);\n    parameters:\n    - id: deviceId\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Activate\n  id: Activate\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Activate()\n  nameWithType: TouchDevice.Activate()\n  fullName: System.Windows.Input.TouchDevice.Activate()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected void Activate ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Activated\n  id: Activated\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Activated\n  nameWithType: TouchDevice.Activated\n  fullName: System.Windows.Input.TouchDevice.Activated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public event EventHandler Activated;\n    return:\n      type: System.EventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.ActiveSource\n  id: ActiveSource\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: ActiveSource\n  nameWithType: TouchDevice.ActiveSource\n  fullName: System.Windows.Input.TouchDevice.ActiveSource\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public override sealed System.Windows.PresentationSource ActiveSource { get; }\n    return:\n      type: System.Windows.PresentationSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)\n  id: Capture(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Capture(IInputElement)\n  nameWithType: TouchDevice.Capture(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.Capture(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public bool Capture (System.Windows.IInputElement element);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Input.TouchDevice.Capture*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  id: Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Capture(IInputElement,CaptureMode)\n  nameWithType: TouchDevice.Capture(IInputElement,CaptureMode)\n  fullName: System.Windows.Input.TouchDevice.Capture(IInputElement,CaptureMode)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    - id: captureMode\n      type: System.Windows.Input.CaptureMode\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Input.TouchDevice.Capture*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Captured\n  id: Captured\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Captured\n  nameWithType: TouchDevice.Captured\n  fullName: System.Windows.Input.TouchDevice.Captured\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.IInputElement Captured { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.CaptureMode\n  id: CaptureMode\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: CaptureMode\n  nameWithType: TouchDevice.CaptureMode\n  fullName: System.Windows.Input.TouchDevice.CaptureMode\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.CaptureMode CaptureMode { get; }\n    return:\n      type: System.Windows.Input.CaptureMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Deactivate\n  id: Deactivate\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Deactivate()\n  nameWithType: TouchDevice.Deactivate()\n  fullName: System.Windows.Input.TouchDevice.Deactivate()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected void Deactivate ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Deactivated\n  id: Deactivated\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Deactivated\n  nameWithType: TouchDevice.Deactivated\n  fullName: System.Windows.Input.TouchDevice.Deactivated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public event EventHandler Deactivated;\n    return:\n      type: System.EventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.DirectlyOver\n  id: DirectlyOver\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: DirectlyOver\n  nameWithType: TouchDevice.DirectlyOver\n  fullName: System.Windows.Input.TouchDevice.DirectlyOver\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.IInputElement DirectlyOver { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  id: GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchDevice.GetIntermediateTouchPoints(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Input.TouchPointCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)\n  id: GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchDevice.GetTouchPoint(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.GetTouchPoint(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Input.TouchPoint\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Id\n  id: Id\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Id\n  nameWithType: TouchDevice.Id\n  fullName: System.Windows.Input.TouchDevice.Id\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public int Id { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.IsActive\n  id: IsActive\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: IsActive\n  nameWithType: TouchDevice.IsActive\n  fullName: System.Windows.Input.TouchDevice.IsActive\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public bool IsActive { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  id: OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: OnCapture(IInputElement,CaptureMode)\n  nameWithType: TouchDevice.OnCapture(IInputElement,CaptureMode)\n  fullName: System.Windows.Input.TouchDevice.OnCapture(IInputElement,CaptureMode)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);\n    parameters:\n    - id: element\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    - id: captureMode\n      type: System.Windows.Input.CaptureMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)\n  id: OnManipulationEnded(System.Boolean)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: OnManipulationEnded(Boolean)\n  nameWithType: TouchDevice.OnManipulationEnded(Boolean)\n  fullName: System.Windows.Input.TouchDevice.OnManipulationEnded(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected virtual void OnManipulationEnded (bool cancel);\n    parameters:\n    - id: cancel\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.OnManipulationStarted\n  id: OnManipulationStarted\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: OnManipulationStarted()\n  nameWithType: TouchDevice.OnManipulationStarted()\n  fullName: System.Windows.Input.TouchDevice.OnManipulationStarted()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected virtual void OnManipulationStarted ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.ReportDown\n  id: ReportDown\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: ReportDown()\n  nameWithType: TouchDevice.ReportDown()\n  fullName: System.Windows.Input.TouchDevice.ReportDown()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected bool ReportDown ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.ReportMove\n  id: ReportMove\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: ReportMove()\n  nameWithType: TouchDevice.ReportMove()\n  fullName: System.Windows.Input.TouchDevice.ReportMove()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected bool ReportMove ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.ReportUp\n  id: ReportUp\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: ReportUp()\n  nameWithType: TouchDevice.ReportUp()\n  fullName: System.Windows.Input.TouchDevice.ReportUp()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected bool ReportUp ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)\n  id: SetActiveSource(System.Windows.PresentationSource)\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: SetActiveSource(PresentationSource)\n  nameWithType: TouchDevice.SetActiveSource(PresentationSource)\n  fullName: System.Windows.Input.TouchDevice.SetActiveSource(PresentationSource)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected void SetActiveSource (System.Windows.PresentationSource activeSource);\n    parameters:\n    - id: activeSource\n      type: System.Windows.PresentationSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Synchronize\n  id: Synchronize\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Synchronize()\n  nameWithType: TouchDevice.Synchronize()\n  fullName: System.Windows.Input.TouchDevice.Synchronize()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public void Synchronize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)\n  id: System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)\n  isEii: true\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: System.Windows.Input.IManipulator.GetPosition(IInputElement)\n  nameWithType: TouchDevice.System.Windows.Input.IManipulator.GetPosition(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.GetPosition(IInputElement)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);\n    parameters:\n    - id: relativeTo\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id\n  id: System#Windows#Input#IManipulator#Id\n  isEii: true\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: System.Windows.Input.IManipulator.Id\n  nameWithType: TouchDevice.System.Windows.Input.IManipulator.Id\n  fullName: System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.Id\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: int System.Windows.Input.IManipulator.Id { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)\n  id: System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)\n  isEii: true\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: System.Windows.Input.IManipulator.ManipulationEnded(Boolean)\n  nameWithType: TouchDevice.System.Windows.Input.IManipulator.ManipulationEnded(Boolean)\n  fullName: System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.ManipulationEnded(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: void IManipulator.ManipulationEnded (bool cancel);\n    parameters:\n    - id: cancel\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Target\n  id: Target\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Target\n  nameWithType: TouchDevice.Target\n  fullName: System.Windows.Input.TouchDevice.Target\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public override sealed System.Windows.IInputElement Target { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.TouchDevice.Updated\n  id: Updated\n  parent: System.Windows.Input.TouchDevice\n  langs:\n  - csharp\n  name: Updated\n  nameWithType: TouchDevice.Updated\n  fullName: System.Windows.Input.TouchDevice.Updated\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public event EventHandler Updated;\n    return:\n      type: System.EventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Input.InputDevice\n  isExternal: false\n  name: System.Windows.Input.InputDevice\n- uid: System.Windows.Input.TouchDevice.#ctor(System.Int32)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: TouchDevice(Int32)\n  nameWithType: TouchDevice.TouchDevice(Int32)\n  fullName: System.Windows.Input.TouchDevice.TouchDevice(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.TouchDevice.Activate\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Activate()\n  nameWithType: TouchDevice.Activate()\n  fullName: System.Windows.Input.TouchDevice.Activate()\n- uid: System.Windows.Input.TouchDevice.Activated\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Activated\n  nameWithType: TouchDevice.Activated\n  fullName: System.Windows.Input.TouchDevice.Activated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Input.TouchDevice.ActiveSource\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: ActiveSource\n  nameWithType: TouchDevice.ActiveSource\n  fullName: System.Windows.Input.TouchDevice.ActiveSource\n- uid: System.Windows.PresentationSource\n  parent: System.Windows\n  isExternal: false\n  name: PresentationSource\n  nameWithType: PresentationSource\n  fullName: System.Windows.PresentationSource\n- uid: System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Capture(IInputElement)\n  nameWithType: TouchDevice.Capture(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.Capture(IInputElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Capture(IInputElement,CaptureMode)\n  nameWithType: TouchDevice.Capture(IInputElement,CaptureMode)\n  fullName: System.Windows.Input.TouchDevice.Capture(IInputElement,CaptureMode)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.CaptureMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: CaptureMode\n  nameWithType: CaptureMode\n  fullName: System.Windows.Input.CaptureMode\n- uid: System.Windows.Input.TouchDevice.Captured\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Captured\n  nameWithType: TouchDevice.Captured\n  fullName: System.Windows.Input.TouchDevice.Captured\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.CaptureMode\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: CaptureMode\n  nameWithType: TouchDevice.CaptureMode\n  fullName: System.Windows.Input.TouchDevice.CaptureMode\n- uid: System.Windows.Input.CaptureMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: CaptureMode\n  nameWithType: CaptureMode\n  fullName: System.Windows.Input.CaptureMode\n- uid: System.Windows.Input.TouchDevice.Deactivate\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Deactivate()\n  nameWithType: TouchDevice.Deactivate()\n  fullName: System.Windows.Input.TouchDevice.Deactivate()\n- uid: System.Windows.Input.TouchDevice.Deactivated\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Deactivated\n  nameWithType: TouchDevice.Deactivated\n  fullName: System.Windows.Input.TouchDevice.Deactivated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Input.TouchDevice.DirectlyOver\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: DirectlyOver\n  nameWithType: TouchDevice.DirectlyOver\n  fullName: System.Windows.Input.TouchDevice.DirectlyOver\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: GetIntermediateTouchPoints(IInputElement)\n  nameWithType: TouchDevice.GetIntermediateTouchPoints(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(IInputElement)\n- uid: System.Windows.Input.TouchPointCollection\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPointCollection\n  nameWithType: TouchPointCollection\n  fullName: System.Windows.Input.TouchPointCollection\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: GetTouchPoint(IInputElement)\n  nameWithType: TouchDevice.GetTouchPoint(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.GetTouchPoint(IInputElement)\n- uid: System.Windows.Input.TouchPoint\n  parent: System.Windows.Input\n  isExternal: false\n  name: TouchPoint\n  nameWithType: TouchPoint\n  fullName: System.Windows.Input.TouchPoint\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.Id\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Id\n  nameWithType: TouchDevice.Id\n  fullName: System.Windows.Input.TouchDevice.Id\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.TouchDevice.IsActive\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: IsActive\n  nameWithType: TouchDevice.IsActive\n  fullName: System.Windows.Input.TouchDevice.IsActive\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: OnCapture(IInputElement,CaptureMode)\n  nameWithType: TouchDevice.OnCapture(IInputElement,CaptureMode)\n  fullName: System.Windows.Input.TouchDevice.OnCapture(IInputElement,CaptureMode)\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.CaptureMode\n  parent: System.Windows.Input\n  isExternal: false\n  name: CaptureMode\n  nameWithType: CaptureMode\n  fullName: System.Windows.Input.CaptureMode\n- uid: System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: OnManipulationEnded(Boolean)\n  nameWithType: TouchDevice.OnManipulationEnded(Boolean)\n  fullName: System.Windows.Input.TouchDevice.OnManipulationEnded(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TouchDevice.OnManipulationStarted\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: OnManipulationStarted()\n  nameWithType: TouchDevice.OnManipulationStarted()\n  fullName: System.Windows.Input.TouchDevice.OnManipulationStarted()\n- uid: System.Windows.Input.TouchDevice.ReportDown\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: ReportDown()\n  nameWithType: TouchDevice.ReportDown()\n  fullName: System.Windows.Input.TouchDevice.ReportDown()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TouchDevice.ReportMove\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: ReportMove()\n  nameWithType: TouchDevice.ReportMove()\n  fullName: System.Windows.Input.TouchDevice.ReportMove()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TouchDevice.ReportUp\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: ReportUp()\n  nameWithType: TouchDevice.ReportUp()\n  fullName: System.Windows.Input.TouchDevice.ReportUp()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: SetActiveSource(PresentationSource)\n  nameWithType: TouchDevice.SetActiveSource(PresentationSource)\n  fullName: System.Windows.Input.TouchDevice.SetActiveSource(PresentationSource)\n- uid: System.Windows.PresentationSource\n  parent: System.Windows\n  isExternal: false\n  name: PresentationSource\n  nameWithType: PresentationSource\n  fullName: System.Windows.PresentationSource\n- uid: System.Windows.Input.TouchDevice.Synchronize\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Synchronize()\n  nameWithType: TouchDevice.Synchronize()\n  fullName: System.Windows.Input.TouchDevice.Synchronize()\n- uid: System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: System.Windows.Input.IManipulator.GetPosition(IInputElement)\n  nameWithType: TouchDevice.System.Windows.Input.IManipulator.GetPosition(IInputElement)\n  fullName: System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.GetPosition(IInputElement)\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: System.Windows.Input.IManipulator.Id\n  nameWithType: TouchDevice.System.Windows.Input.IManipulator.Id\n  fullName: System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.Id\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: System.Windows.Input.IManipulator.ManipulationEnded(Boolean)\n  nameWithType: TouchDevice.System.Windows.Input.IManipulator.ManipulationEnded(Boolean)\n  fullName: System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.ManipulationEnded(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.TouchDevice.Target\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Target\n  nameWithType: TouchDevice.Target\n  fullName: System.Windows.Input.TouchDevice.Target\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.TouchDevice.Updated\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  name: Updated\n  nameWithType: TouchDevice.Updated\n  fullName: System.Windows.Input.TouchDevice.Updated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Input.TouchDevice.Capture*\n  parent: System.Windows.Input.TouchDevice\n  isExternal: false\n  nameWithType: TouchDevice.\n"}