{"nodes":[{"pos":[356,378],"content":"SecurityRulesAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRulesAttribute","pos":[0,22]}]},{"pos":[4625,4664],"content":"SecurityRulesAttribute(SecurityRuleSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRulesAttribute(SecurityRuleSet)","pos":[0,39]}]},{"pos":[5104,5138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5333,5340],"content":"RuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"RuleSet","pos":[0,7]}]},{"pos":[5674,5708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5943,5970],"content":"SkipVerificationInFullTrust","needQuote":true,"needEscape":true,"nodes":[{"content":"SkipVerificationInFullTrust","pos":[0,27]}]},{"pos":[6325,6359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6473,6489],"content":"System.Attribute","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Attribute","pos":[0,16]}]},{"pos":[6652,6691],"content":"SecurityRulesAttribute(SecurityRuleSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRulesAttribute(SecurityRuleSet)","pos":[0,39]}]},{"pos":[6955,6970],"content":"SecurityRuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRuleSet","pos":[0,15]}]},{"pos":[7178,7185],"content":"RuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"RuleSet","pos":[0,7]}]},{"pos":[7385,7400],"content":"SecurityRuleSet","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityRuleSet","pos":[0,15]}]},{"pos":[7628,7655],"content":"SkipVerificationInFullTrust","needQuote":true,"needEscape":true,"nodes":[{"content":"SkipVerificationInFullTrust","pos":[0,27]}]},{"pos":[7869,7876],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.SecurityRulesAttribute\n  id: SecurityRulesAttribute\n  children:\n  - System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  - System.Security.SecurityRulesAttribute.RuleSet\n  - System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  langs:\n  - csharp\n  name: SecurityRulesAttribute\n  nameWithType: SecurityRulesAttribute\n  fullName: System.Security.SecurityRulesAttribute\n  type: Class\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)]\n\n      public sealed class SecurityRulesAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  id: '#ctor(System.Security.SecurityRuleSet)'\n  parent: System.Security.SecurityRulesAttribute\n  langs:\n  - csharp\n  name: SecurityRulesAttribute(SecurityRuleSet)\n  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public SecurityRulesAttribute (System.Security.SecurityRuleSet ruleSet);\n    parameters:\n    - id: ruleSet\n      type: System.Security.SecurityRuleSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityRulesAttribute.RuleSet\n  id: RuleSet\n  parent: System.Security.SecurityRulesAttribute\n  langs:\n  - csharp\n  name: RuleSet\n  nameWithType: SecurityRulesAttribute.RuleSet\n  fullName: System.Security.SecurityRulesAttribute.RuleSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public System.Security.SecurityRuleSet RuleSet { get; }\n    return:\n      type: System.Security.SecurityRuleSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  id: SkipVerificationInFullTrust\n  parent: System.Security.SecurityRulesAttribute\n  langs:\n  - csharp\n  name: SkipVerificationInFullTrust\n  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust\n  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public bool SkipVerificationInFullTrust { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Attribute\n  isExternal: false\n  name: System.Attribute\n- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: SecurityRulesAttribute(SecurityRuleSet)\n  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)\n- uid: System.Security.SecurityRuleSet\n  parent: System.Security\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: SecurityRuleSet\n  fullName: System.Security.SecurityRuleSet\n- uid: System.Security.SecurityRulesAttribute.RuleSet\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: RuleSet\n  nameWithType: SecurityRulesAttribute.RuleSet\n  fullName: System.Security.SecurityRulesAttribute.RuleSet\n- uid: System.Security.SecurityRuleSet\n  parent: System.Security\n  isExternal: false\n  name: SecurityRuleSet\n  nameWithType: SecurityRuleSet\n  fullName: System.Security.SecurityRuleSet\n- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n  parent: System.Security.SecurityRulesAttribute\n  isExternal: false\n  name: SkipVerificationInFullTrust\n  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust\n  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}