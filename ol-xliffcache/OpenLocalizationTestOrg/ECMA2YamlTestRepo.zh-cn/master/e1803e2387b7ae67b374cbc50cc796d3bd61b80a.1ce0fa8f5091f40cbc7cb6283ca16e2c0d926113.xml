{"nodes":[{"pos":[861,878],"content":"EventLogException","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException","pos":[0,17]}]},{"pos":[1944,1963],"content":"EventLogException()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException()","pos":[0,19]}]},{"pos":[2520,2544],"content":"EventLogException(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(Int32)","pos":[0,24]}]},{"pos":[2940,2974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3225,3250],"content":"EventLogException(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(String)","pos":[0,25]}]},{"pos":[3645,3679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4088,4141],"content":"EventLogException(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(SerializationInfo,StreamingContext)","pos":[0,53]}]},{"pos":[4752,4786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4891,4925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5210,5245],"content":"EventLogException(String,Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(String,Exception)","pos":[0,35]}]},{"pos":[5686,5720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5794,5828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6251,6300],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[6870,6904],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7000,7034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7257,7264],"content":"Message","needQuote":true,"needEscape":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[7595,7629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7743,7759],"content":"System.Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Exception","pos":[0,16]}]},{"pos":[7917,7936],"content":"EventLogException()","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException()","pos":[0,19]}]},{"pos":[8247,8271],"content":"EventLogException(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(Int32)","pos":[0,24]}]},{"pos":[8486,8491],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8711,8736],"content":"EventLogException(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(String)","pos":[0,25]}]},{"pos":[8954,8960],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9261,9314],"content":"EventLogException(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(SerializationInfo,StreamingContext)","pos":[0,53]}]},{"pos":[9643,9660],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[9874,9890],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[10171,10206],"content":"EventLogException(String,Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogException(String,Exception)","pos":[0,35]}]},{"pos":[10444,10450],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10569,10578],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[10893,10942],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[11263,11280],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[11494,11510],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[11761,11768],"content":"Message","needQuote":true,"needEscape":true,"nodes":[{"content":"Message","pos":[0,7]}]},{"pos":[11950,11956],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogException\n  id: EventLogException\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor\n  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)\n  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)\n  - System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Diagnostics.Eventing.Reader.EventLogException.Message\n  langs:\n  - csharp\n  name: EventLogException\n  nameWithType: EventLogException\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException\n  type: Class\n  syntax:\n    content: 'public class EventLogException : Exception'\n  inheritance:\n  - System.Object\n  - System.Exception\n  implements: []\n  inheritedMembers:\n  - System.Exception.Data\n  - System.Exception.GetBaseException\n  - System.Exception.GetType\n  - System.Exception.HelpLink\n  - System.Exception.HResult\n  - System.Exception.InnerException\n  - System.Exception.SerializeObjectState\n  - System.Exception.Source\n  - System.Exception.StackTrace\n  - System.Exception.TargetSite\n  - System.Exception.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor\n  id: '#ctor'\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: EventLogException()\n  nameWithType: EventLogException.EventLogException()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogException ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: EventLogException(Int32)\n  nameWithType: EventLogException.EventLogException(Int32)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(Int32)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: protected EventLogException (int errorCode);\n    parameters:\n    - id: errorCode\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: EventLogException(String)\n  nameWithType: EventLogException.EventLogException(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogException (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: EventLogException(SerializationInfo,StreamingContext)\n  nameWithType: EventLogException.EventLogException(SerializationInfo,StreamingContext)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: protected EventLogException (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);\n    parameters:\n    - id: serializationInfo\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: streamingContext\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)\n  id: '#ctor(System.String,System.Exception)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: EventLogException(String,Exception)\n  nameWithType: EventLogException.EventLogException(String,Exception)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String,Exception)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogException (string message, Exception innerException);\n    parameters:\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n    - id: innerException\n      type: System.Exception\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: EventLogException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message\n  id: Message\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  langs:\n  - csharp\n  name: Message\n  nameWithType: EventLogException.Message\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.Message\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public override string Message { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Exception\n  isExternal: false\n  name: System.Exception\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: EventLogException()\n  nameWithType: EventLogException.EventLogException()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException()\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Int32)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: EventLogException(Int32)\n  nameWithType: EventLogException.EventLogException(Int32)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: EventLogException(String)\n  nameWithType: EventLogException.EventLogException(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: EventLogException(SerializationInfo,StreamingContext)\n  nameWithType: EventLogException.EventLogException(SerializationInfo,StreamingContext)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.#ctor(System.String,System.Exception)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: EventLogException(String,Exception)\n  nameWithType: EventLogException.EventLogException(String,Exception)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.EventLogException(String,Exception)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: EventLogException.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Diagnostics.Eventing.Reader.EventLogException.Message\n  parent: System.Diagnostics.Eventing.Reader.EventLogException\n  isExternal: false\n  name: Message\n  nameWithType: EventLogException.Message\n  fullName: System.Diagnostics.Eventing.Reader.EventLogException.Message\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}