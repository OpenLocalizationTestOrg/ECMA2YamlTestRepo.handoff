{"nodes":[{"pos":[949,954],"content":"Queue","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue","pos":[0,5]}]},{"pos":[1901,1908],"content":"Queue()","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue()","pos":[0,7]}]},{"pos":[2350,2368],"content":"Queue(ICollection)","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue(ICollection)","pos":[0,18]}]},{"pos":[2711,2745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2938,2950],"content":"Queue(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue(Int32)","pos":[0,12]}]},{"pos":[3246,3280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3501,3520],"content":"Queue(Int32,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue(Int32,Single)","pos":[0,19]}]},{"pos":[3848,3882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3949,3983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4146,4153],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[4537,4544],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[4825,4859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5058,5074],"content":"Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[5383,5417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5476,5510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5729,5748],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[6074,6108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6169,6203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6366,6371],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[6632,6666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6833,6842],"content":"Dequeue()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dequeue()","pos":[0,9]}]},{"pos":[7129,7163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7360,7375],"content":"Enqueue(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Enqueue(Object)","pos":[0,15]}]},{"pos":[7681,7715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7894,7909],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[8255,8289],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8470,8484],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[8775,8809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8970,8976],"content":"Peek()","needQuote":true,"needEscape":true,"nodes":[{"content":"Peek()","pos":[0,6]}]},{"pos":[9254,9288],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9517,9536],"content":"Synchronized(Queue)","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronized(Queue)","pos":[0,19]}]},{"pos":[9907,9941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10010,10044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10213,10221],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[10495,10529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10696,10705],"content":"ToArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[10996,11030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11203,11215],"content":"TrimToSize()","needQuote":true,"needEscape":true,"nodes":[{"content":"TrimToSize()","pos":[0,12]}]},{"pos":[11562,11575],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11677,11684],"content":"Queue()","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue()","pos":[0,7]}]},{"pos":[11893,11911],"content":"Queue(ICollection)","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue(ICollection)","pos":[0,18]}]},{"pos":[12104,12115],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[12302,12314],"content":"Queue(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue(Int32)","pos":[0,12]}]},{"pos":[12465,12470],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12647,12666],"content":"Queue(Int32,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue(Int32,Single)","pos":[0,19]}]},{"pos":[12831,12836],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12950,12956],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[13107,13114],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[13291,13298],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[13440,13446],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13615,13631],"content":"Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Object)","pos":[0,16]}]},{"pos":[13792,13799],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13917,13923],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14102,14121],"content":"CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Array,Int32)","pos":[0,19]}]},{"pos":[14286,14291],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[14404,14409],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14558,14563],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[14700,14705],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14856,14865],"content":"Dequeue()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dequeue()","pos":[0,9]}]},{"pos":[15011,15017],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15185,15200],"content":"Enqueue(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Enqueue(Object)","pos":[0,15]}]},{"pos":[15358,15364],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15523,15538],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[15725,15736],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[15918,15932],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[16089,16096],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[16248,16254],"content":"Peek()","needQuote":true,"needEscape":true,"nodes":[{"content":"Peek()","pos":[0,6]}]},{"pos":[16394,16400],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16584,16603],"content":"Synchronized(Queue)","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronized(Queue)","pos":[0,19]}]},{"pos":[16792,16797],"content":"Queue","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue","pos":[0,5]}]},{"pos":[16946,16951],"content":"Queue","needQuote":true,"needEscape":true,"nodes":[{"content":"Queue","pos":[0,5]}]},{"pos":[17115,17123],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[17267,17273],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17426,17435],"content":"ToArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToArray()","pos":[0,9]}]},{"pos":[17581,17587],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17745,17757],"content":"TrimToSize()","needQuote":true,"needEscape":true,"nodes":[{"content":"TrimToSize()","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Queue\n  id: Queue\n  children:\n  - System.Collections.Queue.#ctor\n  - System.Collections.Queue.#ctor(System.Collections.ICollection)\n  - System.Collections.Queue.#ctor(System.Int32)\n  - System.Collections.Queue.#ctor(System.Int32,System.Single)\n  - System.Collections.Queue.Clear\n  - System.Collections.Queue.Clone\n  - System.Collections.Queue.Contains(System.Object)\n  - System.Collections.Queue.CopyTo(System.Array,System.Int32)\n  - System.Collections.Queue.Count\n  - System.Collections.Queue.Dequeue\n  - System.Collections.Queue.Enqueue(System.Object)\n  - System.Collections.Queue.GetEnumerator\n  - System.Collections.Queue.IsSynchronized\n  - System.Collections.Queue.Peek\n  - System.Collections.Queue.Synchronized(System.Collections.Queue)\n  - System.Collections.Queue.SyncRoot\n  - System.Collections.Queue.ToArray\n  - System.Collections.Queue.TrimToSize\n  langs:\n  - csharp\n  name: Queue\n  nameWithType: Queue\n  fullName: System.Collections.Queue\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Queue/QueueDebugView))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class Queue : ICloneable, System.Collections.ICollection\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.#ctor\n  id: '#ctor'\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Queue()\n  nameWithType: Queue.Queue()\n  fullName: System.Collections.Queue.Queue()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public Queue ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.#ctor(System.Collections.ICollection)\n  id: '#ctor(System.Collections.ICollection)'\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Queue(ICollection)\n  nameWithType: Queue.Queue(ICollection)\n  fullName: System.Collections.Queue.Queue(ICollection)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public Queue (System.Collections.ICollection col);\n    parameters:\n    - id: col\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Queue(Int32)\n  nameWithType: Queue.Queue(Int32)\n  fullName: System.Collections.Queue.Queue(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public Queue (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.#ctor(System.Int32,System.Single)\n  id: '#ctor(System.Int32,System.Single)'\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Queue(Int32,Single)\n  nameWithType: Queue.Queue(Int32,Single)\n  fullName: System.Collections.Queue.Queue(Int32,Single)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public Queue (int capacity, float growFactor);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: growFactor\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Clear\n  id: Clear\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: Queue.Clear()\n  fullName: System.Collections.Queue.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Clone\n  id: Clone\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Queue.Clone()\n  fullName: System.Collections.Queue.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Contains(System.Object)\n  id: Contains(System.Object)\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Contains(Object)\n  nameWithType: Queue.Contains(Object)\n  fullName: System.Collections.Queue.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual bool Contains (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.CopyTo(System.Array,System.Int32)\n  id: CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: CopyTo(Array,Int32)\n  nameWithType: Queue.CopyTo(Array,Int32)\n  fullName: System.Collections.Queue.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual void CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Count\n  id: Count\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Count\n  nameWithType: Queue.Count\n  fullName: System.Collections.Queue.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Dequeue\n  id: Dequeue\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Dequeue()\n  nameWithType: Queue.Dequeue()\n  fullName: System.Collections.Queue.Dequeue()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual object Dequeue ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Enqueue(System.Object)\n  id: Enqueue(System.Object)\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Enqueue(Object)\n  nameWithType: Queue.Enqueue(Object)\n  fullName: System.Collections.Queue.Enqueue(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual void Enqueue (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Queue.GetEnumerator()\n  fullName: System.Collections.Queue.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.IsSynchronized\n  id: IsSynchronized\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: Queue.IsSynchronized\n  fullName: System.Collections.Queue.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Peek\n  id: Peek\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Peek()\n  nameWithType: Queue.Peek()\n  fullName: System.Collections.Queue.Peek()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual object Peek ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.Synchronized(System.Collections.Queue)\n  id: Synchronized(System.Collections.Queue)\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: Synchronized(Queue)\n  nameWithType: Queue.Synchronized(Queue)\n  fullName: System.Collections.Queue.Synchronized(Queue)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public static System.Collections.Queue Synchronized (System.Collections.Queue queue);\n    parameters:\n    - id: queue\n      type: System.Collections.Queue\n      description: Parameter description to be filled\n    return:\n      type: System.Collections.Queue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.SyncRoot\n  id: SyncRoot\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: Queue.SyncRoot\n  fullName: System.Collections.Queue.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.ToArray\n  id: ToArray\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: ToArray()\n  nameWithType: Queue.ToArray()\n  fullName: System.Collections.Queue.ToArray()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual object[] ToArray ();\n    parameters: []\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Queue.TrimToSize\n  id: TrimToSize\n  parent: System.Collections.Queue\n  langs:\n  - csharp\n  name: TrimToSize()\n  nameWithType: Queue.TrimToSize()\n  fullName: System.Collections.Queue.TrimToSize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections\n  syntax:\n    content: public virtual void TrimToSize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.Queue.#ctor\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Queue()\n  nameWithType: Queue.Queue()\n  fullName: System.Collections.Queue.Queue()\n- uid: System.Collections.Queue.#ctor(System.Collections.ICollection)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Queue(ICollection)\n  nameWithType: Queue.Queue(ICollection)\n  fullName: System.Collections.Queue.Queue(ICollection)\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.Collections.Queue.#ctor(System.Int32)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Queue(Int32)\n  nameWithType: Queue.Queue(Int32)\n  fullName: System.Collections.Queue.Queue(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Queue.#ctor(System.Int32,System.Single)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Queue(Int32,Single)\n  nameWithType: Queue.Queue(Int32,Single)\n  fullName: System.Collections.Queue.Queue(Int32,Single)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Collections.Queue.Clear\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Clear()\n  nameWithType: Queue.Clear()\n  fullName: System.Collections.Queue.Clear()\n- uid: System.Collections.Queue.Clone\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Clone()\n  nameWithType: Queue.Clone()\n  fullName: System.Collections.Queue.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Queue.Contains(System.Object)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Contains(Object)\n  nameWithType: Queue.Contains(Object)\n  fullName: System.Collections.Queue.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Queue.CopyTo(System.Array,System.Int32)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: CopyTo(Array,Int32)\n  nameWithType: Queue.CopyTo(Array,Int32)\n  fullName: System.Collections.Queue.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Queue.Count\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Count\n  nameWithType: Queue.Count\n  fullName: System.Collections.Queue.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Queue.Dequeue\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Dequeue()\n  nameWithType: Queue.Dequeue()\n  fullName: System.Collections.Queue.Dequeue()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Queue.Enqueue(System.Object)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Enqueue(Object)\n  nameWithType: Queue.Enqueue(Object)\n  fullName: System.Collections.Queue.Enqueue(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Queue.GetEnumerator\n  parent: System.Collections.Queue\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Queue.GetEnumerator()\n  fullName: System.Collections.Queue.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Queue.IsSynchronized\n  parent: System.Collections.Queue\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: Queue.IsSynchronized\n  fullName: System.Collections.Queue.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Queue.Peek\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Peek()\n  nameWithType: Queue.Peek()\n  fullName: System.Collections.Queue.Peek()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Queue.Synchronized(System.Collections.Queue)\n  parent: System.Collections.Queue\n  isExternal: false\n  name: Synchronized(Queue)\n  nameWithType: Queue.Synchronized(Queue)\n  fullName: System.Collections.Queue.Synchronized(Queue)\n- uid: System.Collections.Queue\n  parent: System.Collections\n  isExternal: false\n  name: Queue\n  nameWithType: Queue\n  fullName: System.Collections.Queue\n- uid: System.Collections.Queue\n  parent: System.Collections\n  isExternal: false\n  name: Queue\n  nameWithType: Queue\n  fullName: System.Collections.Queue\n- uid: System.Collections.Queue.SyncRoot\n  parent: System.Collections.Queue\n  isExternal: false\n  name: SyncRoot\n  nameWithType: Queue.SyncRoot\n  fullName: System.Collections.Queue.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Queue.ToArray\n  parent: System.Collections.Queue\n  isExternal: false\n  name: ToArray()\n  nameWithType: Queue.ToArray()\n  fullName: System.Collections.Queue.ToArray()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Collections.Queue.TrimToSize\n  parent: System.Collections.Queue\n  isExternal: false\n  name: TrimToSize()\n  nameWithType: Queue.TrimToSize()\n  fullName: System.Collections.Queue.TrimToSize()\n"}