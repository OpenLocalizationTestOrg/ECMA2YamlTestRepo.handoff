{"nodes":[{"pos":[672,694],"content":"TopLevelNameCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLevelNameCollection","pos":[0,22]}]},{"pos":[2132,2154],"content":"Contains(TopLevelName)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TopLevelName)","pos":[0,22]}]},{"pos":[2650,2684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2743,2777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3160,3188],"content":"CopyTo(TopLevelName[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TopLevelName[],Int32)","pos":[0,28]}]},{"pos":[3711,3745],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3806,3840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4195,4216],"content":"IndexOf(TopLevelName)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TopLevelName)","pos":[0,21]}]},{"pos":[4708,4742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4799,4833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5100,5111],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[5550,5584],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5682,5716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5855,5896],"content":"System.Collections.ReadOnlyCollectionBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ReadOnlyCollectionBase","pos":[0,41]}]},{"pos":[6134,6156],"content":"Contains(TopLevelName)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(TopLevelName)","pos":[0,22]}]},{"pos":[6385,6392],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6584,6596],"content":"TopLevelName","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLevelName","pos":[0,12]}]},{"pos":[6942,6970],"content":"CopyTo(TopLevelName[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(TopLevelName[],Int32)","pos":[0,28]}]},{"pos":[7284,7296],"content":"TopLevelName","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLevelName","pos":[0,12]}]},{"pos":[7459,7464],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7748,7769],"content":"IndexOf(TopLevelName)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(TopLevelName)","pos":[0,21]}]},{"pos":[7994,7999],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8187,8199],"content":"TopLevelName","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLevelName","pos":[0,12]}]},{"pos":[8487,8498],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[8778,8790],"content":"TopLevelName","needQuote":true,"needEscape":true,"nodes":[{"content":"TopLevelName","pos":[0,12]}]},{"pos":[8951,8956],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  id: TopLevelNameCollection\n  children:\n  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)\n  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  - System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)\n  langs:\n  - csharp\n  name: TopLevelNameCollection\n  nameWithType: TopLevelNameCollection\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  type: Class\n  syntax:\n    content: 'public class TopLevelNameCollection : System.Collections.ReadOnlyCollectionBase'\n  inheritance:\n  - System.Object\n  - System.Collections.ReadOnlyCollectionBase\n  implements: []\n  inheritedMembers:\n  - System.Collections.ReadOnlyCollectionBase.Count\n  - System.Collections.ReadOnlyCollectionBase.GetEnumerator\n  - System.Collections.ReadOnlyCollectionBase.InnerList\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  id: Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  langs:\n  - csharp\n  name: Contains(TopLevelName)\n  nameWithType: TopLevelNameCollection.Contains(TopLevelName)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(TopLevelName)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public bool Contains (System.DirectoryServices.ActiveDirectory.TopLevelName name);\n    parameters:\n    - id: name\n      type: System.DirectoryServices.ActiveDirectory.TopLevelName\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)\n  id: CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  langs:\n  - csharp\n  name: CopyTo(TopLevelName[],Int32)\n  nameWithType: TopLevelNameCollection.CopyTo(TopLevelName[],Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(TopLevelName[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void CopyTo (System.DirectoryServices.ActiveDirectory.TopLevelName[] names, int index);\n    parameters:\n    - id: names\n      type: System.DirectoryServices.ActiveDirectory.TopLevelName[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  id: IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  langs:\n  - csharp\n  name: IndexOf(TopLevelName)\n  nameWithType: TopLevelNameCollection.IndexOf(TopLevelName)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(TopLevelName)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public int IndexOf (System.DirectoryServices.ActiveDirectory.TopLevelName name);\n    parameters:\n    - id: name\n      type: System.DirectoryServices.ActiveDirectory.TopLevelName\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TopLevelNameCollection.Item(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TopLevelName this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TopLevelName\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.ReadOnlyCollectionBase\n  isExternal: false\n  name: System.Collections.ReadOnlyCollectionBase\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  isExternal: false\n  name: Contains(TopLevelName)\n  nameWithType: TopLevelNameCollection.Contains(TopLevelName)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Contains(TopLevelName)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelName\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TopLevelName\n  nameWithType: TopLevelName\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelName\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(System.DirectoryServices.ActiveDirectory.TopLevelName[],System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  isExternal: false\n  name: CopyTo(TopLevelName[],Int32)\n  nameWithType: TopLevelNameCollection.CopyTo(TopLevelName[],Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.CopyTo(TopLevelName[],Int32)\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelName\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TopLevelName\n  nameWithType: TopLevelName\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelName[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(System.DirectoryServices.ActiveDirectory.TopLevelName)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  isExternal: false\n  name: IndexOf(TopLevelName)\n  nameWithType: TopLevelNameCollection.IndexOf(TopLevelName)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.IndexOf(TopLevelName)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelName\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TopLevelName\n  nameWithType: TopLevelName\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelName\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TopLevelNameCollection.Item(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelNameCollection.Item(Int32)\n- uid: System.DirectoryServices.ActiveDirectory.TopLevelName\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TopLevelName\n  nameWithType: TopLevelName\n  fullName: System.DirectoryServices.ActiveDirectory.TopLevelName\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}