{"nodes":[{"pos":[2049,2057],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[2961,2984],"content":"Delegate(Object,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate(Object,String)","pos":[0,23]}]},{"pos":[3305,3339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3402,3436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3637,3658],"content":"Delegate(Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate(Type,String)","pos":[0,21]}]},{"pos":[3971,4005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4068,4102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4247,4254],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[4517,4551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4738,4757],"content":"Combine(Delegate[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Delegate[])","pos":[0,19]}]},{"pos":[5076,5110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5170,5204],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5456,5482],"content":"Combine(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Delegate,Delegate)","pos":[0,26]}]},{"pos":[5807,5841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5901,5935],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5995,6029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6257,6278],"content":"CombineImpl(Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"CombineImpl(Delegate)","pos":[0,21]}]},{"pos":[6589,6623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6683,6717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6964,6995],"content":"CreateDelegate(Type,MethodInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,MethodInfo)","pos":[0,31]}]},{"pos":[7360,7394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7472,7506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7566,7600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7919,7957],"content":"CreateDelegate(Type,Object,MethodInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,MethodInfo)","pos":[0,38]}]},{"pos":[8358,8392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8462,8496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8574,8608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8668,8702],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8991,9025],"content":"CreateDelegate(Type,Object,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,String)","pos":[0,34]}]},{"pos":[9389,9423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9486,9520],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9583,9617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9677,9711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10032,10071],"content":"CreateDelegate(Type,MethodInfo,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,MethodInfo,Boolean)","pos":[0,39]}]},{"pos":[10477,10511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10589,10623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10699,10733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10793,10827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11112,11144],"content":"CreateDelegate(Type,Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Type,String)","pos":[0,32]}]},{"pos":[11502,11536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11597,11631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11694,11728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11788,11822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12171,12217],"content":"CreateDelegate(Type,Object,MethodInfo,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,MethodInfo,Boolean)","pos":[0,46]}]},{"pos":[12659,12693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12763,12797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12875,12909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12985,13019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13079,13113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13432,13474],"content":"CreateDelegate(Type,Object,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,String,Boolean)","pos":[0,42]}]},{"pos":[13871,13905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13968,14002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14065,14099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14167,14201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14261,14295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14610,14650],"content":"CreateDelegate(Type,Type,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Type,String,Boolean)","pos":[0,40]}]},{"pos":[15041,15075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15136,15170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15233,15267],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15335,15369],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15429,15463],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15812,15862],"content":"CreateDelegate(Type,Object,String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,String,Boolean,Boolean)","pos":[0,50]}]},{"pos":[16300,16334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16397,16431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16494,16528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16596,16630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16706,16740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16800,16834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17179,17227],"content":"CreateDelegate(Type,Type,String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Type,String,Boolean,Boolean)","pos":[0,48]}]},{"pos":[17659,17693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17754,17788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17851,17885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17953,17987],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18063,18097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18157,18191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18430,18453],"content":"DynamicInvoke(Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicInvoke(Object[])","pos":[0,23]}]},{"pos":[18763,18797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18855,18889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19092,19119],"content":"DynamicInvokeImpl(Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicInvokeImpl(Object[])","pos":[0,27]}]},{"pos":[19452,19486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19544,19578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19755,19769],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[20055,20089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20148,20182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20339,20352],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[20630,20664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20833,20852],"content":"GetInvocationList()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInvocationList()","pos":[0,19]}]},{"pos":[21159,21193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21354,21369],"content":"GetMethodImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImpl()","pos":[0,15]}]},{"pos":[21696,21730],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22079,22128],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[22620,22654],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22750,22784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22931,22937],"content":"Method","needQuote":true,"needEscape":true,"nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[23216,23250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23473,23503],"content":"op_Equality(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Delegate,Delegate)","pos":[0,30]}]},{"pos":[23841,23875],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23936,23970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24029,24063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24290,24322],"content":"op_Inequality(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Delegate,Delegate)","pos":[0,32]}]},{"pos":[24666,24700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24761,24795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24854,24888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25101,25126],"content":"Remove(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Delegate,Delegate)","pos":[0,25]}]},{"pos":[25462,25496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25560,25594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25654,25688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25907,25935],"content":"RemoveAll(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAll(Delegate,Delegate)","pos":[0,28]}]},{"pos":[26280,26314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26378,26412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26472,26506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26695,26715],"content":"RemoveImpl(Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveImpl(Delegate)","pos":[0,20]}]},{"pos":[27023,27057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27117,27151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27298,27304],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[27546,27580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27691,27704],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[27817,27840],"content":"Delegate(Object,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate(Object,String)","pos":[0,23]}]},{"pos":[28008,28014],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28130,28136],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28296,28317],"content":"Delegate(Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate(Type,String)","pos":[0,21]}]},{"pos":[28479,28483],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[28595,28601],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28734,28741],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[28877,28883],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29037,29056],"content":"Combine(Delegate[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Delegate[])","pos":[0,19]}]},{"pos":[29218,29226],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[29348,29356],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[29530,29556],"content":"Combine(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Delegate,Delegate)","pos":[0,26]}]},{"pos":[29732,29740],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[29862,29870],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[29992,30000],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[30160,30181],"content":"CombineImpl(Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"CombineImpl(Delegate)","pos":[0,21]}]},{"pos":[30347,30355],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[30477,30485],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[30673,30704],"content":"CreateDelegate(Type,MethodInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,MethodInfo)","pos":[0,31]}]},{"pos":[30890,30898],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[31016,31020],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[31158,31168],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[31385,31423],"content":"CreateDelegate(Type,Object,MethodInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,MethodInfo)","pos":[0,38]}]},{"pos":[31623,31631],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[31749,31753],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[31865,31871],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32013,32023],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[32225,32259],"content":"CreateDelegate(Type,Object,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,String)","pos":[0,34]}]},{"pos":[32451,32459],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[32577,32581],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[32693,32699],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32815,32821],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33020,33059],"content":"CreateDelegate(Type,MethodInfo,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,MethodInfo,Boolean)","pos":[0,39]}]},{"pos":[33261,33269],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[33387,33391],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33529,33539],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[33675,33682],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33865,33897],"content":"CreateDelegate(Type,Type,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Type,String)","pos":[0,32]}]},{"pos":[34085,34093],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[34211,34215],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[34325,34329],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[34441,34447],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34660,34706],"content":"CreateDelegate(Type,Object,MethodInfo,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,MethodInfo,Boolean)","pos":[0,46]}]},{"pos":[34922,34930],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[35048,35052],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[35164,35170],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[35312,35322],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[35458,35465],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35665,35707],"content":"CreateDelegate(Type,Object,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,String,Boolean)","pos":[0,42]}]},{"pos":[35915,35923],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[36041,36045],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[36157,36163],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36279,36285],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36402,36409],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36607,36647],"content":"CreateDelegate(Type,Type,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Type,String,Boolean)","pos":[0,40]}]},{"pos":[36851,36859],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[36977,36981],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[37091,37095],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[37207,37213],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37330,37337],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37552,37602],"content":"CreateDelegate(Type,Object,String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Object,String,Boolean,Boolean)","pos":[0,50]}]},{"pos":[37826,37834],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[37952,37956],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[38068,38074],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38190,38196],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38313,38320],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38439,38446],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38659,38707],"content":"CreateDelegate(Type,Type,String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDelegate(Type,Type,String,Boolean,Boolean)","pos":[0,48]}]},{"pos":[38927,38935],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[39053,39057],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[39167,39171],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[39283,39289],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[39406,39413],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39532,39539],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39699,39722],"content":"DynamicInvoke(Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicInvoke(Object[])","pos":[0,23]}]},{"pos":[39890,39896],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40012,40018],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40182,40209],"content":"DynamicInvokeImpl(Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicInvokeImpl(Object[])","pos":[0,27]}]},{"pos":[40385,40391],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40507,40513],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40664,40678],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[40829,40836],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40954,40960],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41099,41112],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[41259,41264],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41407,41426],"content":"GetInvocationList()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetInvocationList()","pos":[0,19]}]},{"pos":[41588,41596],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[41743,41758],"content":"GetMethodImpl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImpl()","pos":[0,15]}]},{"pos":[41936,41946],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[42200,42249],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[42524,42541],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[42755,42771],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[42947,42953],"content":"Method","needQuote":true,"needEscape":true,"nodes":[{"content":"Method","pos":[0,6]}]},{"pos":[43113,43123],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[43314,43344],"content":"op_Equality(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Delegate,Delegate)","pos":[0,30]}]},{"pos":[43527,43534],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43654,43662],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[43784,43792],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[43970,44002],"content":"op_Inequality(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Delegate,Delegate)","pos":[0,32]}]},{"pos":[44189,44196],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44316,44324],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[44446,44454],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[44625,44650],"content":"Remove(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Delegate,Delegate)","pos":[0,25]}]},{"pos":[44824,44832],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[44954,44962],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[45084,45092],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[45266,45294],"content":"RemoveAll(Delegate,Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAll(Delegate,Delegate)","pos":[0,28]}]},{"pos":[45474,45482],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[45604,45612],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[45734,45742],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[45901,45921],"content":"RemoveImpl(Delegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveImpl(Delegate)","pos":[0,20]}]},{"pos":[46085,46093],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[46215,46223],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[46361,46367],"content":"Target","needQuote":true,"needEscape":true,"nodes":[{"content":"Target","pos":[0,6]}]},{"pos":[46501,46507],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Delegate\n  id: Delegate\n  children:\n  - System.Delegate.#ctor(System.Object,System.String)\n  - System.Delegate.#ctor(System.Type,System.String)\n  - System.Delegate.Clone\n  - System.Delegate.Combine(System.Delegate[])\n  - System.Delegate.Combine(System.Delegate,System.Delegate)\n  - System.Delegate.CombineImpl(System.Delegate)\n  - System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String)\n  - System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)\n  - System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)\n  - System.Delegate.DynamicInvoke(System.Object[])\n  - System.Delegate.DynamicInvokeImpl(System.Object[])\n  - System.Delegate.Equals(System.Object)\n  - System.Delegate.GetHashCode\n  - System.Delegate.GetInvocationList\n  - System.Delegate.GetMethodImpl\n  - System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Delegate.Method\n  - System.Delegate.op_Equality(System.Delegate,System.Delegate)\n  - System.Delegate.op_Inequality(System.Delegate,System.Delegate)\n  - System.Delegate.Remove(System.Delegate,System.Delegate)\n  - System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  - System.Delegate.RemoveImpl(System.Delegate)\n  - System.Delegate.Target\n  langs:\n  - csharp\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Delegate : ICloneable, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.#ctor(System.Object,System.String)\n  id: '#ctor(System.Object,System.String)'\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Delegate(Object,String)\n  nameWithType: Delegate.Delegate(Object,String)\n  fullName: System.Delegate.Delegate(Object,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected Delegate (object target, string method);\n    parameters:\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Delegate(Type,String)\n  nameWithType: Delegate.Delegate(Type,String)\n  fullName: System.Delegate.Delegate(Type,String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected Delegate (Type target, string method);\n    parameters:\n    - id: target\n      type: System.Type\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Clone\n  id: Clone\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Delegate.Clone()\n  fullName: System.Delegate.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Combine(System.Delegate[])\n  id: Combine(System.Delegate[])\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Combine(Delegate[])\n  nameWithType: Delegate.Combine(Delegate[])\n  fullName: System.Delegate.Combine(Delegate[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate Combine (Delegate[] delegates);\n    parameters:\n    - id: delegates\n      type: System.Delegate[]\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.Combine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Combine(System.Delegate,System.Delegate)\n  id: Combine(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Combine(Delegate,Delegate)\n  nameWithType: Delegate.Combine(Delegate,Delegate)\n  fullName: System.Delegate.Combine(Delegate,Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate Combine (Delegate a, Delegate b);\n    parameters:\n    - id: a\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: b\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.Combine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CombineImpl(System.Delegate)\n  id: CombineImpl(System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CombineImpl(Delegate)\n  nameWithType: Delegate.CombineImpl(Delegate)\n  fullName: System.Delegate.CombineImpl(Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected virtual Delegate CombineImpl (Delegate d);\n    parameters:\n    - id: d\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)\n  id: CreateDelegate(System.Type,System.Reflection.MethodInfo)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,MethodInfo)\n  nameWithType: Delegate.CreateDelegate(Type,MethodInfo)\n  fullName: System.Delegate.CreateDelegate(Type,MethodInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, System.Reflection.MethodInfo method);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)\n  id: CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Object,MethodInfo)\n  nameWithType: Delegate.CreateDelegate(Type,Object,MethodInfo)\n  fullName: System.Delegate.CreateDelegate(Type,Object,MethodInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, object firstArgument, System.Reflection.MethodInfo method);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: firstArgument\n      type: System.Object\n      description: Parameter description to be filled\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String)\n  id: CreateDelegate(System.Type,System.Object,System.String)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Object,String)\n  nameWithType: Delegate.CreateDelegate(Type,Object,String)\n  fullName: System.Delegate.CreateDelegate(Type,Object,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, object target, string method);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)\n  id: CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,MethodInfo,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,MethodInfo,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,MethodInfo,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, System.Reflection.MethodInfo method, bool throwOnBindFailure);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n    - id: throwOnBindFailure\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String)\n  id: CreateDelegate(System.Type,System.Type,System.String)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Type,String)\n  nameWithType: Delegate.CreateDelegate(Type,Type,String)\n  fullName: System.Delegate.CreateDelegate(Type,Type,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, Type target, string method);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Type\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)\n  id: CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Object,MethodInfo,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Object,MethodInfo,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Object,MethodInfo,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, object firstArgument, System.Reflection.MethodInfo method, bool throwOnBindFailure);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: firstArgument\n      type: System.Object\n      description: Parameter description to be filled\n    - id: method\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n    - id: throwOnBindFailure\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)\n  id: CreateDelegate(System.Type,System.Object,System.String,System.Boolean)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Object,String,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Object,String,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Object,String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, object target, string method, bool ignoreCase);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)\n  id: CreateDelegate(System.Type,System.Type,System.String,System.Boolean)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Type,String,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Type,String,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Type,String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, Type target, string method, bool ignoreCase);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Type\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)\n  id: CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Object,String,Boolean,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Object,String,Boolean,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Object,String,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, object target, string method, bool ignoreCase, bool throwOnBindFailure);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Object\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: throwOnBindFailure\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)\n  id: CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: CreateDelegate(Type,Type,String,Boolean,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Type,String,Boolean,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Type,String,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate CreateDelegate (Type type, Type target, string method, bool ignoreCase, bool throwOnBindFailure);\n    parameters:\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: target\n      type: System.Type\n      description: Parameter description to be filled\n    - id: method\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: throwOnBindFailure\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  overload: System.Delegate.CreateDelegate*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.DynamicInvoke(System.Object[])\n  id: DynamicInvoke(System.Object[])\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: DynamicInvoke(Object[])\n  nameWithType: Delegate.DynamicInvoke(Object[])\n  fullName: System.Delegate.DynamicInvoke(Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object DynamicInvoke (object[] args);\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.DynamicInvokeImpl(System.Object[])\n  id: DynamicInvokeImpl(System.Object[])\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: DynamicInvokeImpl(Object[])\n  nameWithType: Delegate.DynamicInvokeImpl(Object[])\n  fullName: System.Delegate.DynamicInvokeImpl(Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected virtual object DynamicInvokeImpl (object[] args);\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Delegate.Equals(Object)\n  fullName: System.Delegate.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.GetHashCode\n  id: GetHashCode\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Delegate.GetHashCode()\n  fullName: System.Delegate.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.GetInvocationList\n  id: GetInvocationList\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: GetInvocationList()\n  nameWithType: Delegate.GetInvocationList()\n  fullName: System.Delegate.GetInvocationList()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual Delegate[] GetInvocationList ();\n    parameters: []\n    return:\n      type: System.Delegate[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.GetMethodImpl\n  id: GetMethodImpl\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: GetMethodImpl()\n  nameWithType: Delegate.GetMethodImpl()\n  fullName: System.Delegate.GetMethodImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected virtual System.Reflection.MethodInfo GetMethodImpl ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Delegate.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Delegate.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Method\n  id: Method\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Method\n  nameWithType: Delegate.Method\n  fullName: System.Delegate.Method\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.MethodInfo Method { get; }\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.op_Equality(System.Delegate,System.Delegate)\n  id: op_Equality(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: op_Equality(Delegate,Delegate)\n  nameWithType: Delegate.op_Equality(Delegate,Delegate)\n  fullName: System.Delegate.op_Equality(Delegate,Delegate)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Equality (Delegate d1, Delegate d2);\n    parameters:\n    - id: d1\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: d2\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.op_Inequality(System.Delegate,System.Delegate)\n  id: op_Inequality(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: op_Inequality(Delegate,Delegate)\n  nameWithType: Delegate.op_Inequality(Delegate,Delegate)\n  fullName: System.Delegate.op_Inequality(Delegate,Delegate)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Inequality (Delegate d1, Delegate d2);\n    parameters:\n    - id: d1\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: d2\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Remove(System.Delegate,System.Delegate)\n  id: Remove(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Remove(Delegate,Delegate)\n  nameWithType: Delegate.Remove(Delegate,Delegate)\n  fullName: System.Delegate.Remove(Delegate,Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate Remove (Delegate source, Delegate value);\n    parameters:\n    - id: source\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: value\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  id: RemoveAll(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: RemoveAll(Delegate,Delegate)\n  nameWithType: Delegate.RemoveAll(Delegate,Delegate)\n  fullName: System.Delegate.RemoveAll(Delegate,Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static Delegate RemoveAll (Delegate source, Delegate value);\n    parameters:\n    - id: source\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: value\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.RemoveImpl(System.Delegate)\n  id: RemoveImpl(System.Delegate)\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: RemoveImpl(Delegate)\n  nameWithType: Delegate.RemoveImpl(Delegate)\n  fullName: System.Delegate.RemoveImpl(Delegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: protected virtual Delegate RemoveImpl (Delegate d);\n    parameters:\n    - id: d\n      type: System.Delegate\n      description: Parameter description to be filled\n    return:\n      type: System.Delegate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Delegate.Target\n  id: Target\n  parent: System.Delegate\n  langs:\n  - csharp\n  name: Target\n  nameWithType: Delegate.Target\n  fullName: System.Delegate.Target\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object Target { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Delegate.#ctor(System.Object,System.String)\n  parent: System.Delegate\n  isExternal: false\n  name: Delegate(Object,String)\n  nameWithType: Delegate.Delegate(Object,String)\n  fullName: System.Delegate.Delegate(Object,String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Delegate.#ctor(System.Type,System.String)\n  parent: System.Delegate\n  isExternal: false\n  name: Delegate(Type,String)\n  nameWithType: Delegate.Delegate(Type,String)\n  fullName: System.Delegate.Delegate(Type,String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Delegate.Clone\n  parent: System.Delegate\n  isExternal: false\n  name: Clone()\n  nameWithType: Delegate.Clone()\n  fullName: System.Delegate.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Delegate.Combine(System.Delegate[])\n  parent: System.Delegate\n  isExternal: false\n  name: Combine(Delegate[])\n  nameWithType: Delegate.Combine(Delegate[])\n  fullName: System.Delegate.Combine(Delegate[])\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate[]\n- uid: System.Delegate.Combine(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: Combine(Delegate,Delegate)\n  nameWithType: Delegate.Combine(Delegate,Delegate)\n  fullName: System.Delegate.Combine(Delegate,Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.CombineImpl(System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: CombineImpl(Delegate)\n  nameWithType: Delegate.CombineImpl(Delegate)\n  fullName: System.Delegate.CombineImpl(Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,MethodInfo)\n  nameWithType: Delegate.CreateDelegate(Type,MethodInfo)\n  fullName: System.Delegate.CreateDelegate(Type,MethodInfo)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Object,MethodInfo)\n  nameWithType: Delegate.CreateDelegate(Type,Object,MethodInfo)\n  fullName: System.Delegate.CreateDelegate(Type,Object,MethodInfo)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Object,String)\n  nameWithType: Delegate.CreateDelegate(Type,Object,String)\n  fullName: System.Delegate.CreateDelegate(Type,Object,String)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,MethodInfo,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,MethodInfo,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,MethodInfo,Boolean)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Type,String)\n  nameWithType: Delegate.CreateDelegate(Type,Type,String)\n  fullName: System.Delegate.CreateDelegate(Type,Type,String)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Object,MethodInfo,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Object,MethodInfo,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Object,MethodInfo,Boolean)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Object,String,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Object,String,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Object,String,Boolean)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Type,String,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Type,String,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Type,String,Boolean)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Object,String,Boolean,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Object,String,Boolean,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Object,String,Boolean,Boolean)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)\n  parent: System.Delegate\n  isExternal: false\n  name: CreateDelegate(Type,Type,String,Boolean,Boolean)\n  nameWithType: Delegate.CreateDelegate(Type,Type,String,Boolean,Boolean)\n  fullName: System.Delegate.CreateDelegate(Type,Type,String,Boolean,Boolean)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate.DynamicInvoke(System.Object[])\n  parent: System.Delegate\n  isExternal: false\n  name: DynamicInvoke(Object[])\n  nameWithType: Delegate.DynamicInvoke(Object[])\n  fullName: System.Delegate.DynamicInvoke(Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Delegate.DynamicInvokeImpl(System.Object[])\n  parent: System.Delegate\n  isExternal: false\n  name: DynamicInvokeImpl(Object[])\n  nameWithType: Delegate.DynamicInvokeImpl(Object[])\n  fullName: System.Delegate.DynamicInvokeImpl(Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Delegate.Equals(System.Object)\n  parent: System.Delegate\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Delegate.Equals(Object)\n  fullName: System.Delegate.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Delegate.GetHashCode\n  parent: System.Delegate\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Delegate.GetHashCode()\n  fullName: System.Delegate.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Delegate.GetInvocationList\n  parent: System.Delegate\n  isExternal: false\n  name: GetInvocationList()\n  nameWithType: Delegate.GetInvocationList()\n  fullName: System.Delegate.GetInvocationList()\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate[]\n- uid: System.Delegate.GetMethodImpl\n  parent: System.Delegate\n  isExternal: false\n  name: GetMethodImpl()\n  nameWithType: Delegate.GetMethodImpl()\n  fullName: System.Delegate.GetMethodImpl()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Delegate\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Delegate.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Delegate.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Delegate.Method\n  parent: System.Delegate\n  isExternal: false\n  name: Method\n  nameWithType: Delegate.Method\n  fullName: System.Delegate.Method\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Delegate.op_Equality(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: op_Equality(Delegate,Delegate)\n  nameWithType: Delegate.op_Equality(Delegate,Delegate)\n  fullName: System.Delegate.op_Equality(Delegate,Delegate)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.op_Inequality(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: op_Inequality(Delegate,Delegate)\n  nameWithType: Delegate.op_Inequality(Delegate,Delegate)\n  fullName: System.Delegate.op_Inequality(Delegate,Delegate)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.Remove(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: Remove(Delegate,Delegate)\n  nameWithType: Delegate.Remove(Delegate,Delegate)\n  fullName: System.Delegate.Remove(Delegate,Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.RemoveAll(System.Delegate,System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: RemoveAll(Delegate,Delegate)\n  nameWithType: Delegate.RemoveAll(Delegate,Delegate)\n  fullName: System.Delegate.RemoveAll(Delegate,Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.RemoveImpl(System.Delegate)\n  parent: System.Delegate\n  isExternal: false\n  name: RemoveImpl(Delegate)\n  nameWithType: Delegate.RemoveImpl(Delegate)\n  fullName: System.Delegate.RemoveImpl(Delegate)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Delegate.Target\n  parent: System.Delegate\n  isExternal: false\n  name: Target\n  nameWithType: Delegate.Target\n  fullName: System.Delegate.Target\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Delegate.Combine*\n  parent: System.Delegate\n  isExternal: false\n  nameWithType: Delegate.\n- uid: System.Delegate.CreateDelegate*\n  parent: System.Delegate\n  isExternal: false\n  nameWithType: Delegate.\n"}