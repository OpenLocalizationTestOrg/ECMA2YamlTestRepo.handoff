{"nodes":[{"pos":[7095,7115],"content":"TaskFactory<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"TaskFactory<TResult>"},{"pos":[7337,7371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7904,7917],"content":"TaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory()","pos":[0,13]}]},{"pos":[8447,8477],"content":"TaskFactory(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken)","pos":[0,30]}]},{"pos":[8924,8958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9223,9249],"content":"TaskFactory(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskScheduler)","pos":[0,26]}]},{"pos":[9676,9710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10081,10137],"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","pos":[0,56]}]},{"pos":[10716,10750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10859,10893],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11408,11496],"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","pos":[0,88]}]},{"pos":[12235,12269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12370,12404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12513,12547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12636,12670],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12881,12898],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[13278,13312],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13527,13546],"content":"ContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinuationOptions","pos":[0,19]}]},{"pos":[13956,13990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14351,14393],"content":"ContinueWhenAll(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAll(Task[],Func<Task,TResult>)"}]},{"pos":[14932,14966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15078,15112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15186,15220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15717,15777],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[16406,16440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16552,16586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16681,16715],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16789,16823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17344,17410],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[18065,18099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18211,18245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18354,18388],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18462,18496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19161,19259],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[20080,20114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20226,20260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20355,20389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20498,20532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20621,20655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20729,20763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21216,21294],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[21979,22013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22144,22178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22252,22286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22828,22924],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[23699,23733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23864,23898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23993,24027],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24101,24135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24701,24803],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[25604,25638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25769,25803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25912,25946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26020,26054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26764,26898],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[27865,27899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28030,28064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28159,28193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28302,28336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28425,28459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28533,28567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29009,29051],"content":"ContinueWhenAny(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAny(Task[],Func<Task,TResult>)"}]},{"pos":[29588,29622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29734,29768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29842,29876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30369,30429],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[31056,31090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31202,31236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31331,31365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31439,31473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31990,32056],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[32709,32743],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32855,32889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32998,33032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33106,33140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33801,33899],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[34718,34752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34864,34898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34993,35027],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35136,35170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35259,35293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35367,35401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35850,35928],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[36611,36645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36776,36810],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36884,36918],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37456,37552],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[38325,38359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38490,38524],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38619,38653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38727,38761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39323,39425],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[40224,40258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40389,40423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40532,40566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40640,40674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41380,41514],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[42479,42513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42644,42678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42773,42807],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42916,42950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43039,43073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43147,43181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43473,43488],"content":"CreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CreationOptions","pos":[0,15]}]},{"pos":[43878,43912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44221,44271],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;)","pos":[0,50],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)"}]},{"pos":[44777,44811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44904,44938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45012,45046],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45539,45623],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object)","pos":[0,84],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)"}]},{"pos":[46286,46320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46413,46447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46509,46543],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46617,46651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47106,47176],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions)","pos":[0,70],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)"}]},{"pos":[47782,47816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47909,47943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48044,48078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48152,48186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48765,48869],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object,TaskCreationOptions)","pos":[0,104],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)"}]},{"pos":[49632,49666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49759,49793],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49855,49889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49990,50024],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50098,50132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50661,50745],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions,TaskScheduler)","pos":[0,84],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)"}]},{"pos":[51427,51461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51554,51588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51689,51723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51812,51846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51920,51954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52469,52565],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object)","pos":[0,96],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)"}]},{"pos":[53283,53317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53410,53444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53497,53531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53593,53627],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53701,53735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54343,54459],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object,TaskCreationOptions)","pos":[0,116],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)"}]},{"pos":[55277,55311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55404,55438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55491,55525],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55587,55621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55722,55756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55830,55864],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56402,56510],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object)","pos":[0,108],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)"}]},{"pos":[57282,57316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57409,57443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57496,57530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57583,57617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57679,57713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57787,57821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58451,58579],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)","pos":[0,128],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)"}]},{"pos":[59451,59485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59578,59612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59665,59699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59752,59786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59848,59882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59983,60017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60091,60125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60685,60805],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object)","pos":[0,120],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)"}]},{"pos":[61631,61665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61758,61792],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61845,61879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61932,61966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62019,62053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62115,62149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62223,62257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62909,63049],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","pos":[0,140],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)"}]},{"pos":[63975,64009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64102,64136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64189,64223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64276,64310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64363,64397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64459,64493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64594,64628],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64702,64736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65010,65019],"content":"Scheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"Scheduler","pos":[0,9]}]},{"pos":[65379,65413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65640,65663],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>)"},{"pos":[66072,66106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66180,66214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66556,66593],"content":"StartNew(Func<Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object)","pos":[0,37],"source":"StartNew(Func<Object,TResult>,Object)"}]},{"pos":[67065,67099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67161,67195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67269,67303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67659,67700],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken)"},{"pos":[68199,68233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68328,68362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68436,68470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68842,68885],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,TaskCreationOptions)"},{"pos":[69394,69428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69529,69563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69637,69671],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70083,70138],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken)","pos":[0,55],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken)"}]},{"pos":[70700,70734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70796,70830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70925,70959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71033,71067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71495,71552],"content":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)","pos":[0,57],"source":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)"}]},{"pos":[72124,72158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72220,72254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72355,72389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72463,72497],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73013,73088],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)"},{"pos":[73763,73797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73892,73926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74027,74061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74150,74184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74258,74292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74864,74953],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","pos":[0,89],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)"}]},{"pos":[75691,75725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75787,75821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75916,75950],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76051,76085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76174,76208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76282,76316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76486,76499],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[76625,76638],"content":"TaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory()","pos":[0,13]}]},{"pos":[76921,76951],"content":"TaskFactory(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken)","pos":[0,30]}]},{"pos":[77204,77221],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[77466,77492],"content":"TaskFactory(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskScheduler)","pos":[0,26]}]},{"pos":[77745,77758],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[78054,78110],"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(TaskCreationOptions,TaskContinuationOptions)","pos":[0,56]}]},{"pos":[78429,78448],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[78655,78678],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[79066,79154],"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)","pos":[0,88]}]},{"pos":[79523,79540],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[79733,79752],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[79959,79982],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[80187,80200],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[80417,80434],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[80661,80678],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[80899,80918],"content":"ContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinuationOptions","pos":[0,19]}]},{"pos":[81167,81190],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[81502,81544],"content":"ContinueWhenAll(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAll(Task[],Func<Task,TResult>)"}]},{"pos":[81822,81835],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[82011,82015],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[82179,82197],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[82543,82603],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[82917,82930],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[83106,83110],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[83274,83292],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[83488,83505],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[83846,83912],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[84238,84251],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[84427,84431],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[84595,84613],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[84827,84850],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[85281,85379],"content":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAll(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[85769,85782],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[85958,85962],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[86126,86144],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[86340,86357],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[86554,86577],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[86782,86795],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[87100,87178],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[87528,87541],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[87736,87759],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[87980,88017],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[88414,88510],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[88896,88909],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[89104,89127],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[89348,89385],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[89619,89636],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[89990,90092],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[90490,90503],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[90698,90721],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[90942,90979],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[91231,91254],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[91698,91832],"content":"ContinueWhenAll(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[92294,92307],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[92502,92525],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[92746,92783],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[93017,93034],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[93231,93254],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[93459,93472],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[93762,93804],"content":"ContinueWhenAny(Task[],Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;)","pos":[0,42],"source":"ContinueWhenAny(Task[],Func<Task,TResult>)"}]},{"pos":[94082,94095],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[94271,94275],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[94439,94457],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[94799,94859],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,60],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)"}]},{"pos":[95173,95186],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[95362,95366],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[95530,95548],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[95742,95759],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[96098,96164],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,66],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[96490,96503],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[96679,96683],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[96847,96865],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[97077,97100],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[97529,97627],"content":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWhenAny(Task[],Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,98],"source":"ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[98017,98030],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[98206,98210],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[98374,98392],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[98586,98603],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[98800,98823],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[99028,99041],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[99344,99422],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)"},{"pos":[99772,99785],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[99980,100003],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[100224,100261],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[100654,100750],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)"},{"pos":[101136,101149],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[101344,101367],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[101588,101625],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[101857,101874],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[102226,102328],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)"},{"pos":[102726,102739],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[102934,102957],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[103178,103215],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[103465,103488],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[103930,104064],"content":"ContinueWhenAny(Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,Func&lt;Task<ph id=\"ph2\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[104526,104539],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[104734,104757],"content":"Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TAntecedentResult>"},{"pos":[104978,105015],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TAntecedentResult&gt;</ph>,TResult&gt;","needQuote":true,"needEscape":true,"source":"Func<Task<TAntecedentResult>,TResult>"},{"pos":[105247,105264],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[105461,105484],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[105689,105702],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[105917,105932],"content":"CreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CreationOptions","pos":[0,15]}]},{"pos":[106169,106188],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[106466,106516],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;)","pos":[0,50],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)"}]},{"pos":[106810,106823],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[106975,106987],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[107141,107167],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[107512,107596],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object)","pos":[0,84],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)"}]},{"pos":[107958,107971],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[108170,108209],"content":"Func<AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;AsyncCallback,Object,IAsyncResult&gt;","pos":[0,39],"source":"Func<AsyncCallback,Object,IAsyncResult>"}]},{"pos":[108438,108464],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[108627,108633],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[108912,108982],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions)","pos":[0,70],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)"}]},{"pos":[109316,109329],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[109481,109493],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[109647,109673],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[109881,109900],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[110283,110387],"content":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,Object,TaskCreationOptions)","pos":[0,104],"source":"FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)"}]},{"pos":[110789,110802],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[111001,111040],"content":"Func<AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;AsyncCallback,Object,IAsyncResult&gt;","pos":[0,39],"source":"Func<AsyncCallback,Object,IAsyncResult>"}]},{"pos":[111269,111295],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[111458,111464],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[111625,111644],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[112002,112086],"content":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(IAsyncResult,Func&lt;IAsyncResult,TResult&gt;,TaskCreationOptions,TaskScheduler)","pos":[0,84],"source":"FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)"}]},{"pos":[112448,112461],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[112613,112625],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[112779,112805],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[113013,113032],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[113229,113242],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[113581,113677],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object)","pos":[0,96],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)"}]},{"pos":[114063,114076],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[114281,114326],"content":"Func<TArg1,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,45],"source":"Func<TArg1,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[114567,114593],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[114743,114748],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[114855,114861],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[115213,115329],"content":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,Object,TaskCreationOptions)","pos":[0,116],"source":"FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)"}]},{"pos":[115755,115768],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[115973,116018],"content":"Func<TArg1,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,45],"source":"Func<TArg1,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[116259,116285],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[116435,116440],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[116547,116553],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[116714,116733],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[117092,117200],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object)","pos":[0,108],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)"}]},{"pos":[117610,117623],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[117834,117885],"content":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,51],"source":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[118138,118164],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[118314,118319],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[118413,118418],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[118525,118531],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[118891,119019],"content":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,Object,TaskCreationOptions)","pos":[0,128],"source":"FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)"}]},{"pos":[119469,119482],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[119693,119744],"content":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,51],"source":"Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[119997,120023],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[120173,120178],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[120272,120277],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[120384,120390],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[120551,120570],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[120937,121057],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object)","pos":[0,120],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)"}]},{"pos":[121491,121504],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[121722,121779],"content":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,57],"source":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[122044,122070],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[122220,122225],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[122319,122324],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[122418,122423],"content":"TArg3","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg3","pos":[0,5]}]},{"pos":[122530,122536],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122904,123044],"content":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromAsync(Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;,Func&lt;IAsyncResult,TResult&gt;,TArg1,TArg2,TArg3,Object,TaskCreationOptions)","pos":[0,140],"source":"FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)"}]},{"pos":[123518,123531],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[123749,123806],"content":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult&gt;","pos":[0,57],"source":"Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>"}]},{"pos":[124071,124097],"content":"Func<IAsyncResult,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;IAsyncResult,TResult&gt;","pos":[0,26],"source":"Func<IAsyncResult,TResult>"}]},{"pos":[124247,124252],"content":"TArg1","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg1","pos":[0,5]}]},{"pos":[124346,124351],"content":"TArg2","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg2","pos":[0,5]}]},{"pos":[124445,124450],"content":"TArg3","needQuote":true,"needEscape":true,"nodes":[{"content":"TArg3","pos":[0,5]}]},{"pos":[124557,124563],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[124724,124743],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[124964,124973],"content":"Scheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"Scheduler","pos":[0,9]}]},{"pos":[125192,125205],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[125430,125453],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>)"},{"pos":[125693,125706],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[125858,125871],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[126108,126145],"content":"StartNew(Func<Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object)","pos":[0,37],"source":"StartNew(Func<Object,TResult>,Object)"}]},{"pos":[126413,126426],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[126592,126612],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[126763,126769],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[126999,127040],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken)"},{"pos":[127316,127329],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[127481,127494],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[127655,127672],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[127942,127985],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,TaskCreationOptions)"},{"pos":[128265,128278],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[128430,128443],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[128618,128637],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[128937,128992],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken)","pos":[0,55],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken)"}]},{"pos":[129296,129309],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[129475,129495],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[129646,129652],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[129799,129816],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[130114,130171],"content":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,TaskCreationOptions)","pos":[0,57],"source":"StartNew(Func<Object,TResult>,Object,TaskCreationOptions)"}]},{"pos":[130479,130492],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[130658,130678],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[130829,130835],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[130996,131015],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[131367,131442],"content":"StartNew(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)"},{"pos":[131786,131799],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[131951,131964],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[132125,132142],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[132335,132354],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[132551,132564],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[132932,133021],"content":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"StartNew(Func&lt;Object,TResult&gt;,Object,CancellationToken,TaskCreationOptions,TaskScheduler)","pos":[0,89],"source":"StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)"}]},{"pos":[133393,133406],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[133572,133592],"content":"Func<Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Object,TResult&gt;","pos":[0,20],"source":"Func<Object,TResult>"}]},{"pos":[133743,133749],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[133896,133913],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[134106,134125],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[134322,134335],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.TaskFactory`1\n  id: TaskFactory`1\n  children:\n  - System.Threading.Tasks.TaskFactory`1.#ctor\n  - System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.CancellationToken\n  - System.Threading.Tasks.TaskFactory`1.ContinuationOptions\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.CreationOptions\n  - System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})\n  - System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)\n  - System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.Scheduler\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  langs:\n  - csharp\n  name: TaskFactory<TResult>\n  nameWithType: TaskFactory<TResult>\n  fullName: System.Threading.Tasks.TaskFactory<TResult>\n  type: Class\n  syntax:\n    content: public class TaskFactory<TResult>\n    typeParameters:\n    - id: TResult\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor\n  id: '#ctor'\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: TaskFactory()\n  nameWithType: TaskFactory<TResult>.TaskFactory()\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)\n  id: '#ctor(System.Threading.CancellationToken)'\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: TaskFactory(CancellationToken)\n  nameWithType: TaskFactory<TResult>.TaskFactory(CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(CancellationToken)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)\n  id: '#ctor(System.Threading.Tasks.TaskScheduler)'\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: TaskFactory(TaskScheduler)\n  nameWithType: TaskFactory<TResult>.TaskFactory(TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(TaskScheduler)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)\n  id: '#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)'\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: '#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)'\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public TaskFactory (System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.CancellationToken\n  id: CancellationToken\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: CancellationToken\n  nameWithType: TaskFactory<TResult>.CancellationToken\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.CancellationToken\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.CancellationToken CancellationToken { get; }\n    return:\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinuationOptions\n  id: ContinuationOptions\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinuationOptions\n  nameWithType: TaskFactory<TResult>.ContinuationOptions\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinuationOptions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskContinuationOptions ContinuationOptions { get; }\n    return:\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAll<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny (System.Threading.Tasks.Task[] tasks, Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWhenAny<TAntecedentResult> (System.Threading.Tasks.Task<TAntecedentResult>[] tasks, Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TAntecedentResult}\n      description: Parameter description to be filled\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny<TAntecedentResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.CreationOptions\n  id: CreationOptions\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: CreationOptions\n  nameWithType: TaskFactory<TResult>.CreationOptions\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.CreationOptions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }\n    return:\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})\n  id: FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  nameWithType: TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)\n  id: FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync (Func<AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync (Func<AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync (IAsyncResult asyncResult, Func<IAsyncResult,TResult> endMethod, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)\n  id: FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1> (Func<TArg1,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)\n  id: FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1,TArg2>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2> (Func<TArg1,TArg2,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1,TArg2>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)\n  id: FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TArg3> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: arg3\n      type: TArg3\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1,TArg2,TArg3>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> FromAsync<TArg1,TArg2,TArg3> (Func<TArg1,TArg2,TArg3,AsyncCallback,object,IAsyncResult> beginMethod, Func<IAsyncResult,TResult> endMethod, TArg1 arg1, TArg2 arg2, TArg3 arg3, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: beginMethod\n      type: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n      description: Parameter description to be filled\n    - id: endMethod\n      type: System.Func{System.IAsyncResult,TResult}\n      description: Parameter description to be filled\n    - id: arg1\n      type: TArg1\n      description: Parameter description to be filled\n    - id: arg2\n      type: TArg2\n      description: Parameter description to be filled\n    - id: arg3\n      type: TArg3\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1,TArg2,TArg3>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.Scheduler\n  id: Scheduler\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: Scheduler\n  nameWithType: TaskFactory<TResult>.Scheduler\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.Scheduler\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskScheduler Scheduler { get; }\n    return:\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})\n  id: StartNew(System.Func{`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)\n  id: StartNew(System.Func{System.Object,`0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)\n  id: StartNew(System.Func{`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  id: StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  id: StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<TResult> function, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  id: StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  langs:\n  - csharp\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> StartNew (Func<object,TResult> function, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: function\n      type: System.Func{System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.TaskFactory`1.StartNew*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: TaskFactory()\n  nameWithType: TaskFactory<TResult>.TaskFactory()\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory()\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: TaskFactory(CancellationToken)\n  nameWithType: TaskFactory<TResult>.TaskFactory(CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: TaskFactory(TaskScheduler)\n  nameWithType: TaskFactory<TResult>.TaskFactory(TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(TaskScheduler)\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(TaskCreationOptions,TaskContinuationOptions)\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.TaskFactory(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.CancellationToken\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: CancellationToken\n  nameWithType: TaskFactory<TResult>.CancellationToken\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.CancellationToken\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.ContinuationOptions\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinuationOptions\n  nameWithType: TaskFactory<TResult>.ContinuationOptions\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinuationOptions\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAll(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>[],TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task[],Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.ContinueWhenAny(Task<TAntecedentResult>,Func<Task<TAntecedentResult>,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{TAntecedentResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TAntecedentResult>\n  nameWithType: Task<TAntecedentResult>\n  fullName: System.Threading.Tasks.Task<TAntecedentResult>[]\n- uid: System.Func{System.Threading.Tasks.Task{TAntecedentResult},TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task<TAntecedentResult>,TResult>\n  nameWithType: Func<Task<TAntecedentResult>,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task<TAntecedentResult>,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.CreationOptions\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: CreationOptions\n  nameWithType: TaskFactory<TResult>.CreationOptions\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.CreationOptions\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  nameWithType: TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(IAsyncResult,Func<IAsyncResult,TResult>,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: true\n  name: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: TArg3\n  parent: ''\n  isExternal: true\n  name: TArg3\n  nameWithType: TArg3\n  fullName: TArg3\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.FromAsync(Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>,Func<IAsyncResult,TResult>,TArg1,TArg2,TArg3,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult}\n  parent: System\n  isExternal: false\n  name: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  nameWithType: Func<TArg1,TArg2,TArg3,AsyncCallback,Object,IAsyncResult>\n  fullName: System.Func<TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult>\n- uid: System.Func{System.IAsyncResult,TResult}\n  parent: System\n  isExternal: true\n  name: Func<IAsyncResult,TResult>\n  nameWithType: Func<IAsyncResult,TResult>\n  fullName: System.Func<System.IAsyncResult,TResult>\n- uid: TArg1\n  parent: ''\n  isExternal: true\n  name: TArg1\n  nameWithType: TArg1\n  fullName: TArg1\n- uid: TArg2\n  parent: ''\n  isExternal: true\n  name: TArg2\n  nameWithType: TArg2\n  fullName: TArg2\n- uid: TArg3\n  parent: ''\n  isExternal: true\n  name: TArg3\n  nameWithType: TArg3\n  fullName: TArg3\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.Scheduler\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: Scheduler\n  nameWithType: TaskFactory<TResult>.Scheduler\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.Scheduler\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<TResult>)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<TResult>,CancellationToken)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<TResult>,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,TaskCreationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<TResult>,CancellationToken,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  name: StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  nameWithType: TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.TaskFactory<TResult>.StartNew(Func<Object,TResult>,Object,CancellationToken,TaskCreationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Object,TResult>\n  nameWithType: Func<Object,TResult>\n  fullName: System.Func<System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAll<TAntecedentResult>*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.ContinueWhenAny<TAntecedentResult>*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1>*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1,TArg2>*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.FromAsync<TArg1,TArg2,TArg3>*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n- uid: System.Threading.Tasks.TaskFactory`1.StartNew*\n  parent: System.Threading.Tasks.TaskFactory`1\n  isExternal: false\n  nameWithType: TaskFactory<TResult>.\n"}