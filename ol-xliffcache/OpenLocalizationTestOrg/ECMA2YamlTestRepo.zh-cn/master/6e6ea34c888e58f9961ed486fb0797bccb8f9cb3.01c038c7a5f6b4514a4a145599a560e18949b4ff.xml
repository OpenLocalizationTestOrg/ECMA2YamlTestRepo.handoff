{"nodes":[{"pos":[2748,2761],"content":"ISymbolWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolWriter","pos":[0,13]}]},{"pos":[3206,3213],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[3681,3694],"content":"CloseMethod()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseMethod()","pos":[0,13]}]},{"pos":[4186,4202],"content":"CloseNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseNamespace()","pos":[0,16]}]},{"pos":[4723,4740],"content":"CloseScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseScope(Int32)","pos":[0,17]}]},{"pos":[5093,5127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5450,5487],"content":"DefineDocument(String,Guid,Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDocument(String,Guid,Guid,Guid)","pos":[0,37]}]},{"pos":[5979,6013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6076,6110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6179,6213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6280,6314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6411,6445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7042,7129],"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,87]}]},{"pos":[7852,7886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7947,7981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8068,8102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8168,8202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8299,8333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8394,8428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8489,8523],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8584,8618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9147,9231],"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,84]}]},{"pos":[9875,9909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9996,10030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10096,10130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10227,10261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10322,10356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10417,10451],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10512,10546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11125,11220],"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","pos":[0,95]}]},{"pos":[11917,11951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12038,12072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12138,12172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12269,12303],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12364,12398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12459,12493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12554,12588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12655,12689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12754,12788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13313,13395],"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","pos":[0,82]}]},{"pos":[14030,14064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14155,14189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14253,14287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14384,14418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14479,14513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14574,14608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14669,14703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15194,15277],"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","pos":[0,83]}]},{"pos":[15936,15970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16035,16069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16132,16166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16231,16265],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16331,16365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16433,16467],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16768,16801],"content":"Initialize(IntPtr,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(IntPtr,String,Boolean)","pos":[0,33]}]},{"pos":[17220,17254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17319,17353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17421,17455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17756,17779],"content":"OpenMethod(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenMethod(SymbolToken)","pos":[0,23]}]},{"pos":[18207,18241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18490,18511],"content":"OpenNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenNamespace(String)","pos":[0,21]}]},{"pos":[18869,18903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19142,19158],"content":"OpenScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenScope(Int32)","pos":[0,16]}]},{"pos":[19511,19545],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19602,19636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20187,20276],"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","pos":[0,89]}]},{"pos":[20991,21025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21090,21124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21191,21225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21327,21361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21424,21458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21523,21557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21856,21888],"content":"SetScopeRange(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetScopeRange(Int32,Int32,Int32)","pos":[0,32]}]},{"pos":[22302,22336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22403,22437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22502,22536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22903,22945],"content":"SetSymAttribute(SymbolToken,String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSymAttribute(SymbolToken,String,Byte[])","pos":[0,42]}]},{"pos":[23442,23476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23537,23571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23632,23666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23927,23954],"content":"SetUnderlyingWriter(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUnderlyingWriter(IntPtr)","pos":[0,27]}]},{"pos":[24354,24388],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24703,24733],"content":"SetUserEntryPoint(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUserEntryPoint(SymbolToken)","pos":[0,30]}]},{"pos":[25192,25226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25477,25499],"content":"UsingNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingNamespace(String)","pos":[0,22]}]},{"pos":[25868,25902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26105,26112],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[26363,26376],"content":"CloseMethod()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseMethod()","pos":[0,13]}]},{"pos":[26642,26658],"content":"CloseNamespace()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseNamespace()","pos":[0,16]}]},{"pos":[26940,26957],"content":"CloseScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloseScope(Int32)","pos":[0,17]}]},{"pos":[27146,27151],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27400,27437],"content":"DefineDocument(String,Guid,Guid,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDocument(String,Guid,Guid,Guid)","pos":[0,37]}]},{"pos":[27730,27751],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[27921,27927],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28041,28045],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[28155,28159],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[28269,28273],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[28657,28744],"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,87]}]},{"pos":[29127,29138],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[29288,29294],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29441,29456],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[29599,29603],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29773,29787],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[29942,29947],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30060,30065],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30178,30183],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30535,30619],"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)","pos":[0,84]}]},{"pos":[30943,30949],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31096,31111],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[31254,31258],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31428,31442],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[31597,31602],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31715,31720],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31833,31838],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32215,32310],"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)","pos":[0,95]}]},{"pos":[32656,32662],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32809,32824],"content":"FieldAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldAttributes","pos":[0,15]}]},{"pos":[32967,32971],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[33141,33155],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[33310,33315],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33428,33433],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33546,33551],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33664,33669],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33782,33787],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34137,34219],"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)","pos":[0,82]}]},{"pos":[34539,34545],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34696,34715],"content":"ParameterAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterAttributes","pos":[0,19]}]},{"pos":[34867,34872],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35042,35056],"content":"SymAddressKind","needQuote":true,"needEscape":true,"nodes":[{"content":"SymAddressKind","pos":[0,14]}]},{"pos":[35211,35216],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35329,35334],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35447,35452],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35785,35868],"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])","pos":[0,83]}]},{"pos":[36253,36274],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[36443,36448],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36563,36568],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36683,36688],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36803,36808],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36923,36928],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37168,37201],"content":"Initialize(IntPtr,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(IntPtr,String,Boolean)","pos":[0,33]}]},{"pos":[37423,37429],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[37545,37551],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37668,37675],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37917,37940],"content":"OpenMethod(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenMethod(SymbolToken)","pos":[0,23]}]},{"pos":[38195,38206],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[38454,38475],"content":"OpenNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenNamespace(String)","pos":[0,21]}]},{"pos":[38673,38679],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38888,38904],"content":"OpenScope(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"OpenScope(Int32)","pos":[0,16]}]},{"pos":[39091,39096],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39209,39214],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39577,39666],"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)","pos":[0,89]}]},{"pos":[40063,40084],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[40253,40258],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40371,40376],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40553,40574],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[40743,40748],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40861,40866],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41103,41135],"content":"SetScopeRange(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetScopeRange(Int32,Int32,Int32)","pos":[0,32]}]},{"pos":[41354,41359],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41472,41477],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41590,41595],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41866,41908],"content":"SetSymAttribute(SymbolToken,String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSymAttribute(SymbolToken,String,Byte[])","pos":[0,42]}]},{"pos":[42201,42212],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[42362,42368],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42482,42486],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[42704,42731],"content":"SetUnderlyingWriter(IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUnderlyingWriter(IntPtr)","pos":[0,27]}]},{"pos":[42941,42947],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[43194,43224],"content":"SetUserEntryPoint(SymbolToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetUserEntryPoint(SymbolToken)","pos":[0,30]}]},{"pos":[43493,43504],"content":"SymbolToken","needQuote":true,"needEscape":true,"nodes":[{"content":"SymbolToken","pos":[0,11]}]},{"pos":[43753,43775],"content":"UsingNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingNamespace(String)","pos":[0,22]}]},{"pos":[43975,43981],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter\n  id: ISymbolWriter\n  children:\n  - System.Diagnostics.SymbolStore.ISymbolWriter.Close\n  - System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod\n  - System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace\n  - System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  - System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  - System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  - System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)\n  langs:\n  - csharp\n  name: ISymbolWriter\n  nameWithType: ISymbolWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface ISymbolWriter\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Close\n  id: Close\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: ISymbolWriter.Close()\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod\n  id: CloseMethod\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: CloseMethod()\n  nameWithType: ISymbolWriter.CloseMethod()\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void CloseMethod ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace\n  id: CloseNamespace\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: CloseNamespace()\n  nameWithType: ISymbolWriter.CloseNamespace()\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void CloseNamespace ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)\n  id: CloseScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: CloseScope(Int32)\n  nameWithType: ISymbolWriter.CloseScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void CloseScope (int endOffset);\n    parameters:\n    - id: endOffset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  id: DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: DefineDocument(String,Guid,Guid,Guid)\n  nameWithType: ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public System.Diagnostics.SymbolStore.ISymbolDocumentWriter DefineDocument (string url, Guid language, Guid languageVendor, Guid documentType);\n    parameters:\n    - id: url\n      type: System.String\n      description: Parameter description to be filled\n    - id: language\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: languageVendor\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: documentType\n      type: System.Guid\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  id: DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void DefineField (System.Diagnostics.SymbolStore.SymbolToken parent, string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  id: DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void DefineGlobalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void DefineLocalVariable (string name, System.Reflection.FieldAttributes attributes, byte[] signature, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3, int startOffset, int endOffset);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.FieldAttributes\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endOffset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  id: DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void DefineParameter (string name, System.Reflection.ParameterAttributes attributes, int sequence, System.Diagnostics.SymbolStore.SymAddressKind addrKind, int addr1, int addr2, int addr3);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: attributes\n      type: System.Reflection.ParameterAttributes\n      description: Parameter description to be filled\n    - id: sequence\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addrKind\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: Parameter description to be filled\n    - id: addr1\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr2\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: addr3\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  id: DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void DefineSequencePoints (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int[] offsets, int[] lines, int[] columns, int[] endLines, int[] endColumns);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: offsets\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: lines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: columns\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endLines\n      type: System.Int32[]\n      description: Parameter description to be filled\n    - id: endColumns\n      type: System.Int32[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)\n  id: Initialize(System.IntPtr,System.String,System.Boolean)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: Initialize(IntPtr,String,Boolean)\n  nameWithType: ISymbolWriter.Initialize(IntPtr,String,Boolean)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(IntPtr,String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void Initialize (IntPtr emitter, string filename, bool fFullBuild);\n    parameters:\n    - id: emitter\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: filename\n      type: System.String\n      description: Parameter description to be filled\n    - id: fFullBuild\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  id: OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: OpenMethod(SymbolToken)\n  nameWithType: ISymbolWriter.OpenMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void OpenMethod (System.Diagnostics.SymbolStore.SymbolToken method);\n    parameters:\n    - id: method\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)\n  id: OpenNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: OpenNamespace(String)\n  nameWithType: ISymbolWriter.OpenNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void OpenNamespace (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)\n  id: OpenScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: OpenScope(Int32)\n  nameWithType: ISymbolWriter.OpenScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public int OpenScope (int startOffset);\n    parameters:\n    - id: startOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  id: SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  nameWithType: ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void SetMethodSourceRange (System.Diagnostics.SymbolStore.ISymbolDocumentWriter startDoc, int startLine, int startColumn, System.Diagnostics.SymbolStore.ISymbolDocumentWriter endDoc, int endLine, int endColumn);\n    parameters:\n    - id: startDoc\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: startLine\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startColumn\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endDoc\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: endLine\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endColumn\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)\n  id: SetScopeRange(System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: SetScopeRange(Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.SetScopeRange(Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void SetScopeRange (int scopeID, int startOffset, int endOffset);\n    parameters:\n    - id: scopeID\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startOffset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endOffset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  id: SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: SetSymAttribute(SymbolToken,String,Byte[])\n  nameWithType: ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void SetSymAttribute (System.Diagnostics.SymbolStore.SymbolToken parent, string name, byte[] data);\n    parameters:\n    - id: parent\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)\n  id: SetUnderlyingWriter(System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: SetUnderlyingWriter(IntPtr)\n  nameWithType: ISymbolWriter.SetUnderlyingWriter(IntPtr)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void SetUnderlyingWriter (IntPtr underlyingWriter);\n    parameters:\n    - id: underlyingWriter\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  id: SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: SetUserEntryPoint(SymbolToken)\n  nameWithType: ISymbolWriter.SetUserEntryPoint(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(SymbolToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void SetUserEntryPoint (System.Diagnostics.SymbolStore.SymbolToken entryMethod);\n    parameters:\n    - id: entryMethod\n      type: System.Diagnostics.SymbolStore.SymbolToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)\n  id: UsingNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  langs:\n  - csharp\n  name: UsingNamespace(String)\n  nameWithType: ISymbolWriter.UsingNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Diagnostics.SymbolStore\n  syntax:\n    content: public void UsingNamespace (string fullName);\n    parameters:\n    - id: fullName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Close\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: Close()\n  nameWithType: ISymbolWriter.Close()\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Close()\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: CloseMethod()\n  nameWithType: ISymbolWriter.CloseMethod()\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseMethod()\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: CloseNamespace()\n  nameWithType: ISymbolWriter.CloseNamespace()\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseNamespace()\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: CloseScope(Int32)\n  nameWithType: ISymbolWriter.CloseScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.CloseScope(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(System.String,System.Guid,System.Guid,System.Guid)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: DefineDocument(String,Guid,Guid,Guid)\n  nameWithType: ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineDocument(String,Guid,Guid,Guid)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(SymbolToken,String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineGlobalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(String,FieldAttributes,Byte[],SymAddressKind,Int32,Int32,Int32,Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.FieldAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: FieldAttributes\n  nameWithType: FieldAttributes\n  fullName: System.Reflection.FieldAttributes\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(String,ParameterAttributes,Int32,SymAddressKind,Int32,Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ParameterAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterAttributes\n  nameWithType: ParameterAttributes\n  fullName: System.Reflection.ParameterAttributes\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32[],System.Int32[],System.Int32[],System.Int32[],System.Int32[])\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  nameWithType: ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.DefineSequencePoints(ISymbolDocumentWriter,Int32[],Int32[],Int32[],Int32[],Int32[])\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32[]\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(System.IntPtr,System.String,System.Boolean)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: Initialize(IntPtr,String,Boolean)\n  nameWithType: ISymbolWriter.Initialize(IntPtr,String,Boolean)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.Initialize(IntPtr,String,Boolean)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: OpenMethod(SymbolToken)\n  nameWithType: ISymbolWriter.OpenMethod(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenMethod(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: OpenNamespace(String)\n  nameWithType: ISymbolWriter.OpenNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenNamespace(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: OpenScope(Int32)\n  nameWithType: ISymbolWriter.OpenScope(Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.OpenScope(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  nameWithType: ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetMethodSourceRange(ISymbolDocumentWriter,Int32,Int32,ISymbolDocumentWriter,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(System.Int32,System.Int32,System.Int32)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: SetScopeRange(Int32,Int32,Int32)\n  nameWithType: ISymbolWriter.SetScopeRange(Int32,Int32,Int32)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetScopeRange(Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Byte[])\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: SetSymAttribute(SymbolToken,String,Byte[])\n  nameWithType: ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetSymAttribute(SymbolToken,String,Byte[])\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(System.IntPtr)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: SetUnderlyingWriter(IntPtr)\n  nameWithType: ISymbolWriter.SetUnderlyingWriter(IntPtr)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUnderlyingWriter(IntPtr)\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(System.Diagnostics.SymbolStore.SymbolToken)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: SetUserEntryPoint(SymbolToken)\n  nameWithType: ISymbolWriter.SetUserEntryPoint(SymbolToken)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.SetUserEntryPoint(SymbolToken)\n- uid: System.Diagnostics.SymbolStore.SymbolToken\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymbolToken\n  nameWithType: SymbolToken\n  fullName: System.Diagnostics.SymbolStore.SymbolToken\n- uid: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(System.String)\n  parent: System.Diagnostics.SymbolStore.ISymbolWriter\n  isExternal: false\n  name: UsingNamespace(String)\n  nameWithType: ISymbolWriter.UsingNamespace(String)\n  fullName: System.Diagnostics.SymbolStore.ISymbolWriter.UsingNamespace(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}