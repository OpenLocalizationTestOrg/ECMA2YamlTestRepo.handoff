{"nodes":[{"pos":[454,477],"content":"StrongNamePublicKeyBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNamePublicKeyBlob","pos":[0,23]}]},{"pos":[1224,1255],"content":"StrongNamePublicKeyBlob(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNamePublicKeyBlob(Byte[])","pos":[0,31]}]},{"pos":[1667,1701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1950,1964],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2322,2356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2415,2449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2678,2691],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3041,3075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3298,3308],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[3653,3687],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3798,3811],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[3982,4013],"content":"StrongNamePublicKeyBlob(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongNamePublicKeyBlob(Byte[])","pos":[0,31]}]},{"pos":[4246,4250],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[4469,4483],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[4685,4692],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[4810,4816],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5027,5040],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5238,5243],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5449,5459],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5652,5658],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob\n  id: StrongNamePublicKeyBlob\n  children:\n  - System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])\n  - System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)\n  - System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode\n  - System.Security.Permissions.StrongNamePublicKeyBlob.ToString\n  langs:\n  - csharp\n  name: StrongNamePublicKeyBlob\n  nameWithType: StrongNamePublicKeyBlob\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class StrongNamePublicKeyBlob\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  langs:\n  - csharp\n  name: StrongNamePublicKeyBlob(Byte[])\n  nameWithType: StrongNamePublicKeyBlob.StrongNamePublicKeyBlob(Byte[])\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.StrongNamePublicKeyBlob(Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public StrongNamePublicKeyBlob (byte[] publicKey);\n    parameters:\n    - id: publicKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: StrongNamePublicKeyBlob.Equals(Object)\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: StrongNamePublicKeyBlob.GetHashCode()\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.ToString\n  id: ToString\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: StrongNamePublicKeyBlob.ToString()\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.#ctor(System.Byte[])\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  isExternal: false\n  name: StrongNamePublicKeyBlob(Byte[])\n  nameWithType: StrongNamePublicKeyBlob.StrongNamePublicKeyBlob(Byte[])\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.StrongNamePublicKeyBlob(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.Equals(System.Object)\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: StrongNamePublicKeyBlob.Equals(Object)\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: StrongNamePublicKeyBlob.GetHashCode()\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Permissions.StrongNamePublicKeyBlob.ToString\n  parent: System.Security.Permissions.StrongNamePublicKeyBlob\n  isExternal: false\n  name: ToString()\n  nameWithType: StrongNamePublicKeyBlob.ToString()\n  fullName: System.Security.Permissions.StrongNamePublicKeyBlob.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}