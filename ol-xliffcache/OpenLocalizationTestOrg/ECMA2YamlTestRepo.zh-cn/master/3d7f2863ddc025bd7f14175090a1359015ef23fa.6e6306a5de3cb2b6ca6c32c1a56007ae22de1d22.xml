{"nodes":[{"pos":[2733,2746],"content":"ExpandoObject","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandoObject","pos":[0,13]}]},{"pos":[4134,4149],"content":"ExpandoObject()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandoObject()","pos":[0,15]}]},{"pos":[4936,5003],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;)","pos":[0,67],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)"}]},{"pos":[5551,5585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5988,6028],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[6901,6968],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;)","pos":[0,67],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)"}]},{"pos":[7521,7555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7614,7648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8223,8296],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;,Int32)","pos":[0,73],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)"}]},{"pos":[8879,8913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8979,9013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9416,9454],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[9886,9920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10333,10371],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[10811,10845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11390,11457],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;)","pos":[0,67],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)"}]},{"pos":[12008,12042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12101,12135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12510,12563],"content":"System.Collections.Generic.IDictionary(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String,Object)","pos":[0,53]}]},{"pos":[12978,13012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13074,13108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13471,13517],"content":"System.Collections.Generic.IDictionary(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String)","pos":[0,46]}]},{"pos":[13912,13946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14005,14039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14388,14434],"content":"System.Collections.Generic.IDictionary(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String)","pos":[0,46]}]},{"pos":[14879,14913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14971,15005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15324,15362],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[15836,15870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16223,16269],"content":"System.Collections.Generic.IDictionary(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String)","pos":[0,46]}]},{"pos":[16659,16693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16752,16786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17179,17232],"content":"System.Collections.Generic.IDictionary(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String,Object)","pos":[0,53]}]},{"pos":[17659,17693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17755,17789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17848,17882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18205,18243],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[18719,18753],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19172,19212],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[19787,19821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20084,20130],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[20546,20580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20937,21004],"content":"System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)","pos":[0,67]}]},{"pos":[21532,21566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21643,21677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21788,21801],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[21911,21926],"content":"ExpandoObject()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandoObject()","pos":[0,15]}]},{"pos":[22316,22383],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;)","pos":[0,67],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)"}]},{"pos":[22732,22759],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[23103,23143],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[23588,23655],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;)","pos":[0,67],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)"}]},{"pos":[23930,23937],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24130,24157],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[24587,24660],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;,Int32)","pos":[0,73],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)"}]},{"pos":[25021,25048],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[25241,25246],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25512,25550],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[25765,25770],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26041,26079],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[26296,26303],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26644,26711],"content":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(KeyValuePair&lt;String,Object&gt;)","pos":[0,67],"source":"System.Collections.Generic.ICollection(KeyValuePair<String,Object>)"}]},{"pos":[26986,26993],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27186,27213],"content":"KeyValuePair<String,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyValuePair&lt;String,Object&gt;","pos":[0,27],"source":"KeyValuePair<String,Object>"}]},{"pos":[27543,27596],"content":"System.Collections.Generic.IDictionary(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String,Object)","pos":[0,53]}]},{"pos":[27842,27848],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[27964,27970],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[28218,28264],"content":"System.Collections.Generic.IDictionary(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String)","pos":[0,46]}]},{"pos":[28497,28504],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28622,28628],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28869,28915],"content":"System.Collections.Generic.IDictionary(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String)","pos":[0,46]}]},{"pos":[29147,29153],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29269,29275],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29501,29539],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[29815,29834],"content":"ICollection<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<String>"},{"pos":[30130,30176],"content":"System.Collections.Generic.IDictionary(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String)","pos":[0,46]}]},{"pos":[30409,30416],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30534,30540],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[30803,30856],"content":"System.Collections.Generic.IDictionary(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary(String,Object)","pos":[0,53]}]},{"pos":[31103,31110],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31228,31234],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31350,31356],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31584,31622],"content":"System.Collections.Generic.IDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IDictionary","pos":[0,38]}]},{"pos":[31898,31917],"content":"ICollection<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"ICollection<Object>"},{"pos":[32246,32286],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[32621,32661],"content":"IEnumerator<KeyValuePair<String,Object>>","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator&lt;KeyValuePair&lt;String,Object&gt;&gt;","pos":[0,40],"source":"IEnumerator<KeyValuePair<String,Object>>"}]},{"pos":[32988,33034],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[33295,33306],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[33573,33640],"content":"System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)","pos":[0,67]}]},{"pos":[33941,33958],"content":"DynamicMetaObject","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicMetaObject","pos":[0,17]}]},{"pos":[34142,34152],"content":"Expression","needQuote":true,"needEscape":true,"nodes":[{"content":"Expression","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Dynamic.ExpandoObject\n  id: ExpandoObject\n  children:\n  - System.Dynamic.ExpandoObject.#ctor\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values\n  - System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  - System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator\n  - System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)\n  langs:\n  - csharp\n  name: ExpandoObject\n  nameWithType: ExpandoObject\n  fullName: System.Dynamic.ExpandoObject\n  type: Class\n  syntax:\n    content: 'public sealed class ExpandoObject : System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<string,object>>, System.Collections.Generic.IDictionary<string,object>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,object>>, System.ComponentModel.INotifyPropertyChanged, System.Dynamic.IDynamicMetaObjectProvider'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  - System.Collections.Generic.IDictionary<System.String,System.Object>\n  - System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n  - System.ComponentModel.INotifyPropertyChanged\n  - System.Dynamic.IDynamicMetaObjectProvider\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.#ctor\n  id: '#ctor'\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: ExpandoObject()\n  nameWithType: ExpandoObject.ExpandoObject()\n  fullName: System.Dynamic.ExpandoObject.ExpandoObject()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: public ExpandoObject ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: void ICollection<KeyValuePair<string,object>>.Add (System.Collections.Generic.KeyValuePair<string,object> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection()\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: void ICollection<KeyValuePair<string,object>>.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: bool ICollection<KeyValuePair<string,object>>.Contains (System.Collections.Generic.KeyValuePair<string,object> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: void ICollection<KeyValuePair<string,object>>.CopyTo (System.Collections.Generic.KeyValuePair<string,object>[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: int System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: bool ICollection<KeyValuePair<string,object>>.Remove (System.Collections.Generic.KeyValuePair<string,object> item);\n    parameters:\n    - id: item\n      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(String,Object)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: void IDictionary<string,object>.Add (string key, object value);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(String)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: bool IDictionary<string,object>.ContainsKey (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(String)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String)\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: object System.Collections.Generic.IDictionary<System.String,System.Object>.Item[string key] { get; set; }\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Keys\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: System.Collections.Generic.ICollection<string> System.Collections.Generic.IDictionary<System.String,System.Object>.Keys { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(String)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: bool IDictionary<string,object>.Remove (string key);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary(String,Object)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: bool IDictionary<string,object>.TryGetValue (string key, out object value);\n    parameters:\n    - id: key\n      type: System.String\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values\n  id: System#Collections#Generic#IDictionary{System#String,System#Object}#Values\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: System.Collections.Generic.ICollection<object> System.Collections.Generic.IDictionary<System.String,System.Object>.Values { get; }\n    return:\n      type: System.Collections.Generic.ICollection{System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: ExpandoObject.System.Collections.Generic.IEnumerable()\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<string,object>> IEnumerable<KeyValuePair<string,object>>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ExpandoObject.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Dynamic.ExpandoObject.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)\n  id: System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)\n  isEii: true\n  parent: System.Dynamic.ExpandoObject\n  langs:\n  - csharp\n  name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)\n  nameWithType: ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)\n  fullName: System.Dynamic.ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Dynamic\n  syntax:\n    content: System.Dynamic.DynamicMetaObject IDynamicMetaObjectProvider.GetMetaObject (System.Linq.Expressions.Expression parameter);\n    parameters:\n    - id: parameter\n      type: System.Linq.Expressions.Expression\n      description: Parameter description to be filled\n    return:\n      type: System.Dynamic.DynamicMetaObject\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Dynamic.ExpandoObject.#ctor\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: ExpandoObject()\n  nameWithType: ExpandoObject.ExpandoObject()\n  fullName: System.Dynamic.ExpandoObject.ExpandoObject()\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Clear\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection()\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection()\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>,Int32)\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Count\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#IsReadOnly\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  nameWithType: ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.ICollection(KeyValuePair<String,Object>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: KeyValuePair<String,Object>\n  nameWithType: KeyValuePair<String,Object>\n  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Object>\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Add(System.String,System.Object)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(String,Object)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#ContainsKey(System.String)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(String)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Item(System.String)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(String)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Keys\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary\n- uid: System.Collections.Generic.ICollection{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<String>\n  nameWithType: ICollection<String>\n  fullName: System.Collections.Generic.ICollection<System.String>\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Remove(System.String)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(String)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#TryGetValue(System.String,System.Object@)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary(String,Object)\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary(String,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IDictionary{System#String,System#Object}#Values\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IDictionary\n  nameWithType: ExpandoObject.System.Collections.Generic.IDictionary\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IDictionary\n- uid: System.Collections.Generic.ICollection{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: ICollection<Object>\n  nameWithType: ICollection<Object>\n  fullName: System.Collections.Generic.ICollection<System.Object>\n- uid: System.Dynamic.ExpandoObject.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: ExpandoObject.System.Collections.Generic.IEnumerable()\n  fullName: System.Dynamic.ExpandoObject.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{System.String,System.Object}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<KeyValuePair<String,Object>>\n  nameWithType: IEnumerator<KeyValuePair<String,Object>>\n  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<System.String,System.Object>>\n- uid: System.Dynamic.ExpandoObject.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ExpandoObject.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Dynamic.ExpandoObject.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Dynamic.ExpandoObject.System#Dynamic#IDynamicMetaObjectProvider#GetMetaObject(System.Linq.Expressions.Expression)\n  parent: System.Dynamic.ExpandoObject\n  isExternal: false\n  name: System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)\n  nameWithType: ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)\n  fullName: System.Dynamic.ExpandoObject.System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)\n- uid: System.Dynamic.DynamicMetaObject\n  parent: System.Dynamic\n  isExternal: false\n  name: DynamicMetaObject\n  nameWithType: DynamicMetaObject\n  fullName: System.Dynamic.DynamicMetaObject\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n"}