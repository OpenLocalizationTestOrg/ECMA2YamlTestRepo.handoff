{"nodes":[{"pos":[825,835],"content":"CounterSet","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterSet","pos":[0,10]}]},{"pos":[1734,1778],"content":"CounterSet(Guid,Guid,CounterSetInstanceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterSet(Guid,Guid,CounterSetInstanceType)","pos":[0,44]}]},{"pos":[2289,2323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2392,2426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2539,2573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2910,2939],"content":"AddCounter(Int32,CounterType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddCounter(Int32,CounterType)","pos":[0,29]}]},{"pos":[3381,3415],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3516,3550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3985,4021],"content":"AddCounter(Int32,CounterType,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddCounter(Int32,CounterType,String)","pos":[0,36]}]},{"pos":[4497,4531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4632,4666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4734,4768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5111,5143],"content":"CreateCounterSetInstance(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateCounterSetInstance(String)","pos":[0,32]}]},{"pos":[5604,5638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5736,5770],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5979,5988],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6560,6576],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6943,6977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7255,7265],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[7634,7647],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7874,7918],"content":"CounterSet(Guid,Guid,CounterSetInstanceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterSet(Guid,Guid,CounterSetInstanceType)","pos":[0,44]}]},{"pos":[8158,8162],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[8272,8276],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[8460,8482],"content":"CounterSetInstanceType","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterSetInstanceType","pos":[0,22]}]},{"pos":[8801,8830],"content":"AddCounter(Int32,CounterType)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddCounter(Int32,CounterType)","pos":[0,29]}]},{"pos":[9041,9046],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9221,9232],"content":"CounterType","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterType","pos":[0,11]}]},{"pos":[9543,9579],"content":"AddCounter(Int32,CounterType,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddCounter(Int32,CounterType,String)","pos":[0,36]}]},{"pos":[9804,9809],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9984,9995],"content":"CounterType","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterType","pos":[0,11]}]},{"pos":[10149,10155],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10382,10414],"content":"CreateCounterSetInstance(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateCounterSetInstance(String)","pos":[0,32]}]},{"pos":[10700,10718],"content":"CounterSetInstance","needQuote":true,"needEscape":true,"nodes":[{"content":"CounterSetInstance","pos":[0,18]}]},{"pos":[10886,10892],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11087,11096],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[11363,11379],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[11566,11573],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11771,11781],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.PerformanceData.CounterSet\n  id: CounterSet\n  children:\n  - System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)\n  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)\n  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)\n  - System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)\n  - System.Diagnostics.PerformanceData.CounterSet.Dispose\n  - System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)\n  - System.Diagnostics.PerformanceData.CounterSet.Finalize\n  langs:\n  - csharp\n  name: CounterSet\n  nameWithType: CounterSet\n  fullName: System.Diagnostics.PerformanceData.CounterSet\n  type: Class\n  syntax:\n    content: 'public class CounterSet : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)\n  id: '#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)'\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: CounterSet(Guid,Guid,CounterSetInstanceType)\n  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);\n    parameters:\n    - id: providerGuid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: counterSetGuid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: instanceType\n      type: System.Diagnostics.PerformanceData.CounterSetInstanceType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)\n  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: AddCounter(Int32,CounterType)\n  nameWithType: CounterSet.AddCounter(Int32,CounterType)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);\n    parameters:\n    - id: counterId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: counterType\n      type: System.Diagnostics.PerformanceData.CounterType\n      description: Parameter description to be filled\n  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)\n  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: AddCounter(Int32,CounterType,String)\n  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);\n    parameters:\n    - id: counterId\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: counterType\n      type: System.Diagnostics.PerformanceData.CounterType\n      description: Parameter description to be filled\n    - id: counterName\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)\n  id: CreateCounterSetInstance(System.String)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: CreateCounterSetInstance(String)\n  nameWithType: CounterSet.CreateCounterSetInstance(String)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);\n    parameters:\n    - id: instanceName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Diagnostics.PerformanceData.CounterSetInstance\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose\n  id: Dispose\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: CounterSet.Dispose()\n  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CounterSet.Dispose(Boolean)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize\n  id: Finalize\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: CounterSet.Finalize()\n  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.PerformanceData\n  syntax:\n    content: ~CounterSet ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: CounterSet(Guid,Guid,CounterSetInstanceType)\n  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Diagnostics.PerformanceData.CounterSetInstanceType\n  parent: System.Diagnostics.PerformanceData\n  isExternal: false\n  name: CounterSetInstanceType\n  nameWithType: CounterSetInstanceType\n  fullName: System.Diagnostics.PerformanceData.CounterSetInstanceType\n- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: AddCounter(Int32,CounterType)\n  nameWithType: CounterSet.AddCounter(Int32,CounterType)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.PerformanceData.CounterType\n  parent: System.Diagnostics.PerformanceData\n  isExternal: false\n  name: CounterType\n  nameWithType: CounterType\n  fullName: System.Diagnostics.PerformanceData.CounterType\n- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: AddCounter(Int32,CounterType,String)\n  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.PerformanceData.CounterType\n  parent: System.Diagnostics.PerformanceData\n  isExternal: false\n  name: CounterType\n  nameWithType: CounterType\n  fullName: System.Diagnostics.PerformanceData.CounterType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: CreateCounterSetInstance(String)\n  nameWithType: CounterSet.CreateCounterSetInstance(String)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)\n- uid: System.Diagnostics.PerformanceData.CounterSetInstance\n  parent: System.Diagnostics.PerformanceData\n  isExternal: false\n  name: CounterSetInstance\n  nameWithType: CounterSetInstance\n  fullName: System.Diagnostics.PerformanceData.CounterSetInstance\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: Dispose()\n  nameWithType: CounterSet.Dispose()\n  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()\n- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CounterSet.Dispose(Boolean)\n  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  name: Finalize()\n  nameWithType: CounterSet.Finalize()\n  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()\n- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter*\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  nameWithType: CounterSet.\n- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose*\n  parent: System.Diagnostics.PerformanceData.CounterSet\n  isExternal: false\n  nameWithType: CounterSet.\n"}