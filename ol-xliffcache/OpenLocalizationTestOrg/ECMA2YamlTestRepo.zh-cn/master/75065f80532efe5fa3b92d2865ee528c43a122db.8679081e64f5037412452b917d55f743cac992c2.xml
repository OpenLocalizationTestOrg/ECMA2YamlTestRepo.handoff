{"nodes":[{"pos":[1107,1126],"content":"CompensableActivity","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensableActivity","pos":[0,19]}]},{"pos":[3420,3441],"content":"CompensableActivity()","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensableActivity()","pos":[0,21]}]},{"pos":[3962,3966],"content":"Body","needQuote":true,"needEscape":true,"nodes":[{"content":"Body","pos":[0,4]}]},{"pos":[4315,4349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4660,4697],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[5185,5219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5514,5543],"content":"Cancel(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel(NativeActivityContext)","pos":[0,29]}]},{"pos":[6004,6038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6277,6296],"content":"CancellationHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationHandler","pos":[0,19]}]},{"pos":[6690,6724],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6951,6964],"content":"CanInduceIdle","needQuote":true,"needEscape":true,"nodes":[{"content":"CanInduceIdle","pos":[0,13]}]},{"pos":[7313,7347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7586,7605],"content":"CompensationHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensationHandler","pos":[0,19]}]},{"pos":[7999,8033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8272,8291],"content":"ConfirmationHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfirmationHandler","pos":[0,19]}]},{"pos":[8685,8719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9016,9046],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[9510,9544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9977,10043],"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","pos":[0,66]}]},{"pos":[10691,10725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10811,10845],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11064,11073],"content":"Variables","needQuote":true,"needEscape":true,"nodes":[{"content":"Variables","pos":[0,9]}]},{"pos":[11518,11552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11684,11764],"content":"System.Activities.NativeActivity<System.Activities.Statements.CompensationToken>","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.NativeActivity&lt;System.Activities.Statements.CompensationToken&gt;","pos":[0,80],"source":"System.Activities.NativeActivity<System.Activities.Statements.CompensationToken>"}]},{"pos":[11914,11935],"content":"CompensableActivity()","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensableActivity()","pos":[0,21]}]},{"pos":[12225,12229],"content":"Body","needQuote":true,"needEscape":true,"nodes":[{"content":"Body","pos":[0,4]}]},{"pos":[12427,12435],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[12699,12736],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[13014,13036],"content":"NativeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityMetadata","pos":[0,22]}]},{"pos":[13320,13349],"content":"Cancel(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel(NativeActivityContext)","pos":[0,29]}]},{"pos":[13610,13631],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[13885,13904],"content":"CancellationHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationHandler","pos":[0,19]}]},{"pos":[14132,14140],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[14362,14375],"content":"CanInduceIdle","needQuote":true,"needEscape":true,"nodes":[{"content":"CanInduceIdle","pos":[0,13]}]},{"pos":[14568,14575],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14790,14809],"content":"CompensationHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensationHandler","pos":[0,19]}]},{"pos":[15037,15045],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[15273,15292],"content":"ConfirmationHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfirmationHandler","pos":[0,19]}]},{"pos":[15520,15528],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[15785,15815],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[16078,16099],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[16450,16516],"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)","pos":[0,66]}]},{"pos":[16889,16920],"content":"NativeActivityUpdateMapMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityUpdateMapMetadata","pos":[0,31]}]},{"pos":[17135,17143],"content":"Activity","needQuote":true,"needEscape":true,"nodes":[{"content":"Activity","pos":[0,8]}]},{"pos":[17361,17370],"content":"Variables","needQuote":true,"needEscape":true,"nodes":[{"content":"Variables","pos":[0,9]}]},{"pos":[17634,17654],"content":"Collection<ph id=\"ph1\">&lt;Variable&gt;</ph>","needQuote":true,"needEscape":true,"source":"Collection<Variable>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.CompensableActivity\n  id: CompensableActivity\n  children:\n  - System.Activities.Statements.CompensableActivity.#ctor\n  - System.Activities.Statements.CompensableActivity.Body\n  - System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.CompensableActivity.CancellationHandler\n  - System.Activities.Statements.CompensableActivity.CanInduceIdle\n  - System.Activities.Statements.CompensableActivity.CompensationHandler\n  - System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  - System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.Statements.CompensableActivity.Variables\n  langs:\n  - csharp\n  name: CompensableActivity\n  nameWithType: CompensableActivity\n  fullName: System.Activities.Statements.CompensableActivity\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Body\")]\n\n      public sealed class CompensableActivity : System.Activities.NativeActivity<System.Activities.Statements.CompensationToken>\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.ActivityWithResult\n  - System.Activities.Activity`1\n  - System.Activities.NativeActivity`1\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.Activity`1.FromValue(`0)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)\n  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.op_Implicit(`0)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)\n  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})\n  - System.Activities.Activity`1.Result\n  - System.Activities.ActivityWithResult.ResultType\n  - System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity`1.Implementation\n  - System.Activities.NativeActivity`1.ImplementationVersion\n  - System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CompensableActivity()\n  nameWithType: CompensableActivity.CompensableActivity()\n  fullName: System.Activities.Statements.CompensableActivity.CompensableActivity()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public CompensableActivity ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.Body\n  id: Body\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Body\n  nameWithType: CompensableActivity.Body\n  fullName: System.Activities.Statements.CompensableActivity.Body\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.Activity Body { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: CompensableActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.CompensableActivity.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  id: Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Cancel(NativeActivityContext)\n  nameWithType: CompensableActivity.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.CompensableActivity.Cancel(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Cancel (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.CancellationHandler\n  id: CancellationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CancellationHandler\n  nameWithType: CompensableActivity.CancellationHandler\n  fullName: System.Activities.Statements.CompensableActivity.CancellationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.Activity CancellationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.CanInduceIdle\n  id: CanInduceIdle\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CanInduceIdle\n  nameWithType: CompensableActivity.CanInduceIdle\n  fullName: System.Activities.Statements.CompensableActivity.CanInduceIdle\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override bool CanInduceIdle { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.CompensationHandler\n  id: CompensationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: CompensationHandler\n  nameWithType: CompensableActivity.CompensationHandler\n  fullName: System.Activities.Statements.CompensableActivity.CompensationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.Activity CompensationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  id: ConfirmationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: ConfirmationHandler\n  nameWithType: CompensableActivity.ConfirmationHandler\n  fullName: System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.Activity ConfirmationHandler { get; set; }\n    return:\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: CompensableActivity.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.CompensableActivity.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);\n    parameters:\n    - id: metadata\n      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n      description: Parameter description to be filled\n    - id: originalActivity\n      type: System.Activities.Activity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensableActivity.Variables\n  id: Variables\n  parent: System.Activities.Statements.CompensableActivity\n  langs:\n  - csharp\n  name: Variables\n  nameWithType: CompensableActivity.Variables\n  fullName: System.Activities.Statements.CompensableActivity.Variables\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Collections.ObjectModel.Collection<System.Activities.Variable> Variables { get; }\n    return:\n      type: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.NativeActivity`1\n  isExternal: false\n  name: System.Activities.NativeActivity<System.Activities.Statements.CompensationToken>\n- uid: System.Activities.Statements.CompensableActivity.#ctor\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CompensableActivity()\n  nameWithType: CompensableActivity.CompensableActivity()\n  fullName: System.Activities.Statements.CompensableActivity.CompensableActivity()\n- uid: System.Activities.Statements.CompensableActivity.Body\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Body\n  nameWithType: CompensableActivity.Body\n  fullName: System.Activities.Statements.CompensableActivity.Body\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CompensableActivity.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: CompensableActivity.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.CompensableActivity.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.CompensableActivity.Cancel(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Cancel(NativeActivityContext)\n  nameWithType: CompensableActivity.Cancel(NativeActivityContext)\n  fullName: System.Activities.Statements.CompensableActivity.Cancel(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.CompensableActivity.CancellationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CancellationHandler\n  nameWithType: CompensableActivity.CancellationHandler\n  fullName: System.Activities.Statements.CompensableActivity.CancellationHandler\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CompensableActivity.CanInduceIdle\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CanInduceIdle\n  nameWithType: CompensableActivity.CanInduceIdle\n  fullName: System.Activities.Statements.CompensableActivity.CanInduceIdle\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Activities.Statements.CompensableActivity.CompensationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: CompensationHandler\n  nameWithType: CompensableActivity.CompensationHandler\n  fullName: System.Activities.Statements.CompensableActivity.CompensationHandler\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CompensableActivity.ConfirmationHandler\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: ConfirmationHandler\n  nameWithType: CompensableActivity.ConfirmationHandler\n  fullName: System.Activities.Statements.CompensableActivity.ConfirmationHandler\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CompensableActivity.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: CompensableActivity.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.CompensableActivity.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  nameWithType: CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n  fullName: System.Activities.Statements.CompensableActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)\n- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n  parent: System.Activities.DynamicUpdate\n  isExternal: false\n  name: NativeActivityUpdateMapMetadata\n  nameWithType: NativeActivityUpdateMapMetadata\n  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata\n- uid: System.Activities.Activity\n  parent: System.Activities\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Activities.Activity\n- uid: System.Activities.Statements.CompensableActivity.Variables\n  parent: System.Activities.Statements.CompensableActivity\n  isExternal: false\n  name: Variables\n  nameWithType: CompensableActivity.Variables\n  fullName: System.Activities.Statements.CompensableActivity.Variables\n- uid: System.Collections.ObjectModel.Collection{System.Activities.Variable}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: Collection<Variable>\n  nameWithType: Collection<Variable>\n  fullName: System.Collections.ObjectModel.Collection<System.Activities.Variable>\n"}