{"nodes":[{"pos":[2939,2949],"content":"HashSet<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"HashSet<T>"},{"pos":[3585,3619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4439,4448],"content":"HashSet()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashSet()","pos":[0,9]}]},{"pos":[4969,4992],"content":"HashSet(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashSet(IEnumerable<T>)"},{"pos":[5411,5445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5730,5759],"content":"HashSet(IEqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashSet(IEqualityComparer<T>)"},{"pos":[6198,6232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6599,6643],"content":"HashSet(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>,IEqualityComparer<ph id=\"ph2\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashSet(IEnumerable<T>,IEqualityComparer<T>)"},{"pos":[7162,7196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7294,7328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7705,7748],"content":"HashSet(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashSet(SerializationInfo,StreamingContext)","pos":[0,43]}]},{"pos":[8264,8298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8394,8428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8619,8625],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[8915,8949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9008,9042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9229,9236],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[9671,9679],"content":"Comparer","needQuote":true,"needEscape":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[10048,10082],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10283,10294],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[10599,10633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10692,10726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10927,10938],"content":"CopyTo(T[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[])","pos":[0,11]}]},{"pos":[11247,11281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11565,11582],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[11919,11953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12019,12053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12363,12386],"content":"CopyTo(T[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32,Int32)","pos":[0,23]}]},{"pos":[12746,12780],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12846,12880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12941,12975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13219,13224],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[13506,13540],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13751,13770],"content":"CreateSetComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSetComparer()","pos":[0,19]}]},{"pos":[14262,14296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14577,14603],"content":"ExceptWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ExceptWith(IEnumerable<T>)"},{"pos":[15021,15055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15258,15273],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[15675,15709],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16100,16149],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[16688,16722],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16818,16852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17139,17168],"content":"IntersectWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IntersectWith(IEnumerable<T>)"},{"pos":[17595,17629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17922,17954],"content":"IsProperSubsetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsProperSubsetOf(IEnumerable<T>)"},{"pos":[18390,18424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18483,18517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18814,18848],"content":"IsProperSupersetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsProperSupersetOf(IEnumerable<T>)"},{"pos":[19290,19324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19383,19417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19698,19724],"content":"IsSubsetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsSubsetOf(IEnumerable<T>)"},{"pos":[20142,20176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20235,20269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20554,20582],"content":"IsSupersetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsSupersetOf(IEnumerable<T>)"},{"pos":[21006,21040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21099,21133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21374,21399],"content":"OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnDeserialization(Object)","pos":[0,25]}]},{"pos":[21770,21804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22081,22105],"content":"Overlaps(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Overlaps(IEnumerable<T>)"},{"pos":[22517,22551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22610,22644],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22841,22850],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[23149,23183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23242,23276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23515,23540],"content":"RemoveWhere(Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"RemoveWhere(Predicate<T>)"},{"pos":[23905,23939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23996,24030],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24309,24334],"content":"SetEquals(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SetEquals(IEnumerable<T>)"},{"pos":[24749,24783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24842,24876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25175,25210],"content":"SymmetricExceptWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SymmetricExceptWith(IEnumerable<T>)"},{"pos":[25655,25689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25978,26019],"content":"System.Collections.Generic.ICollection(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(T)","pos":[0,41]}]},{"pos":[26387,26421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26716,26754],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[27145,27179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27480,27520],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[27966,28000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28279,28325],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[28759,28793],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28990,29002],"content":"TrimExcess()","needQuote":true,"needEscape":true,"nodes":[{"content":"TrimExcess()","pos":[0,12]}]},{"pos":[29538,29563],"content":"UnionWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"UnionWith(IEnumerable<T>)"},{"pos":[29978,30012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30123,30136],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[30262,30271],"content":"HashSet()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashSet()","pos":[0,9]}]},{"pos":[30536,30559],"content":"HashSet(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashSet(IEnumerable<T>)"},{"pos":[30798,30812],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[31071,31100],"content":"HashSet(IEqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashSet(IEqualityComparer<T>)"},{"pos":[31357,31377],"content":"IEqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<T>"},{"pos":[31689,31733],"content":"HashSet(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>,IEqualityComparer<ph id=\"ph2\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashSet(IEnumerable<T>,IEqualityComparer<T>)"},{"pos":[32014,32028],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[32233,32253],"content":"IEqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<T>"},{"pos":[32570,32613],"content":"HashSet(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashSet(SerializationInfo,StreamingContext)","pos":[0,43]}]},{"pos":[32900,32917],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[33131,33147],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[33366,33372],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[33531,33538],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33639,33640],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33798,33805],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[34027,34035],"content":"Comparer","needQuote":true,"needEscape":true,"nodes":[{"content":"Comparer","pos":[0,8]}]},{"pos":[34250,34270],"content":"IEqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<T>"},{"pos":[34500,34511],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[34680,34687],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34788,34789],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34954,34965],"content":"CopyTo(T[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[])","pos":[0,11]}]},{"pos":[35116,35117],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35297,35314],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[35477,35478],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[35578,35583],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35789,35812],"content":"CopyTo(T[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32,Int32)","pos":[0,23]}]},{"pos":[35987,35988],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[36088,36093],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36206,36211],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36384,36389],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[36544,36549],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36734,36753],"content":"CreateSetComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateSetComparer()","pos":[0,19]}]},{"pos":[37027,37056],"content":"IEqualityComparer&lt;HashSet<ph id=\"ph1\">&lt;T&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<HashSet<T>>"},{"pos":[37371,37397],"content":"ExceptWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ExceptWith(IEnumerable<T>)"},{"pos":[37642,37656],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[37875,37890],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[38120,38141],"content":"HashSet<ph id=\"ph1\">&lt;T&gt;</ph>+Enumerator","needQuote":true,"needEscape":true,"source":"HashSet<T>+Enumerator"},{"pos":[38468,38517],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[38816,38833],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[39047,39063],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[39330,39359],"content":"IntersectWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IntersectWith(IEnumerable<T>)"},{"pos":[39610,39624],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[39888,39920],"content":"IsProperSubsetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsProperSubsetOf(IEnumerable<T>)"},{"pos":[40131,40138],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40303,40317],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[40583,40617],"content":"IsProperSupersetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsProperSupersetOf(IEnumerable<T>)"},{"pos":[40832,40839],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41004,41018],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[41276,41302],"content":"IsSubsetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsSubsetOf(IEnumerable<T>)"},{"pos":[41501,41508],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41673,41687],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[41947,41975],"content":"IsSupersetOf(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"IsSupersetOf(IEnumerable<T>)"},{"pos":[42178,42185],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42350,42364],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[42602,42627],"content":"OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"OnDeserialization(Object)","pos":[0,25]}]},{"pos":[42823,42829],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43049,43073],"content":"Overlaps(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Overlaps(IEnumerable<T>)"},{"pos":[43268,43275],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43440,43454],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[43670,43679],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[43844,43851],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43952,43953],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[44137,44162],"content":"RemoveWhere(Predicate<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"RemoveWhere(Predicate<T>)"},{"pos":[44357,44362],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44481,44493],"content":"Predicate<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Predicate<T>"},{"pos":[44726,44751],"content":"SetEquals(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SetEquals(IEnumerable<T>)"},{"pos":[44948,44955],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45120,45134],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[45401,45436],"content":"SymmetricExceptWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"SymmetricExceptWith(IEnumerable<T>)"},{"pos":[45699,45713],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"},{"pos":[45968,46009],"content":"System.Collections.Generic.ICollection(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(T)","pos":[0,41]}]},{"pos":[46220,46221],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[46426,46464],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[46687,46694],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46921,46961],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[47234,47248],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[47498,47544],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[47811,47822],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[48024,48036],"content":"TrimExcess()","needQuote":true,"needEscape":true,"nodes":[{"content":"TrimExcess()","pos":[0,12]}]},{"pos":[48311,48336],"content":"UnionWith(IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"UnionWith(IEnumerable<T>)"},{"pos":[48579,48593],"content":"IEnumerable<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<T>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.HashSet`1\n  id: HashSet`1\n  children:\n  - System.Collections.Generic.HashSet`1.#ctor\n  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer`1)\n  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)\n  - System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Generic.HashSet`1.Add(`0)\n  - System.Collections.Generic.HashSet`1.Clear\n  - System.Collections.Generic.HashSet`1.Comparer\n  - System.Collections.Generic.HashSet`1.Contains(`0)\n  - System.Collections.Generic.HashSet`1.CopyTo(`0[])\n  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  - System.Collections.Generic.HashSet`1.Count\n  - System.Collections.Generic.HashSet`1.CreateSetComparer\n  - System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.GetEnumerator\n  - System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)\n  - System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.Remove(`0)\n  - System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate`1)\n  - System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.HashSet`1.TrimExcess\n  - System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable`1)\n  langs:\n  - csharp\n  name: HashSet<T>\n  nameWithType: HashSet<T>\n  fullName: System.Collections.Generic.HashSet<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.HashSetDebugView`1))]\n\n      public class HashSet<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.ISet<T>, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IReadOnlyCollection<T>\n  - System.Collections.Generic.ISet<T>\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: HashSet()\n  nameWithType: HashSet<T>.HashSet()\n  fullName: System.Collections.Generic.HashSet<T>.HashSet()\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public HashSet ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  id: '#ctor(System.Collections.Generic.IEnumerable`1)'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: HashSet(IEnumerable<T>)\n  nameWithType: HashSet<T>.HashSet(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public HashSet (System.Collections.Generic.IEnumerable<T> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer`1)\n  id: '#ctor(System.Collections.Generic.IEqualityComparer`1)'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: HashSet(IEqualityComparer<T>)\n  nameWithType: HashSet<T>.HashSet(IEqualityComparer<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEqualityComparer<T>)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public HashSet (System.Collections.Generic.IEqualityComparer<T> comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)\n  id: '#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: HashSet(IEnumerable<T>,IEqualityComparer<T>)\n  nameWithType: HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public HashSet (System.Collections.Generic.IEnumerable<T> collection, System.Collections.Generic.IEqualityComparer<T> comparer);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.Generic.IEqualityComparer`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: HashSet(SerializationInfo,StreamingContext)\n  nameWithType: HashSet<T>.HashSet(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(SerializationInfo,StreamingContext)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: protected HashSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Add(`0)\n  id: Add(`0)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: HashSet<T>.Add(T)\n  fullName: System.Collections.Generic.HashSet<T>.Add(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Clear\n  id: Clear\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: HashSet<T>.Clear()\n  fullName: System.Collections.Generic.HashSet<T>.Clear()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Comparer\n  id: Comparer\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Comparer\n  nameWithType: HashSet<T>.Comparer\n  fullName: System.Collections.Generic.HashSet<T>.Comparer\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.IEqualityComparer<T> Comparer { get; }\n    return:\n      type: System.Collections.Generic.IEqualityComparer`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: HashSet<T>.Contains(T)\n  fullName: System.Collections.Generic.HashSet<T>.Contains(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])\n  id: CopyTo(`0[])\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: CopyTo(T[])\n  nameWithType: HashSet<T>.CopyTo(T[])\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void CopyTo (T[] array);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n  overload: System.Collections.Generic.HashSet`1.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: HashSet<T>.CopyTo(T[],Int32)\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void CopyTo (T[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Collections.Generic.HashSet`1.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  id: CopyTo(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32,Int32)\n  nameWithType: HashSet<T>.CopyTo(T[],Int32,Int32)\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32,Int32)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void CopyTo (T[] array, int arrayIndex, int count);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Collections.Generic.HashSet`1.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Count\n  id: Count\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: HashSet<T>.Count\n  fullName: System.Collections.Generic.HashSet<T>.Count\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.CreateSetComparer\n  id: CreateSetComparer\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: CreateSetComparer()\n  nameWithType: HashSet<T>.CreateSetComparer()\n  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public static System.Collections.Generic.IEqualityComparer<System.Collections.Generic.HashSet<T>> CreateSetComparer ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.HashSet{T}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable`1)\n  id: ExceptWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: ExceptWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void ExceptWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: HashSet<T>.GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public System.Collections.Generic.HashSet<T>.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.HashSet`1.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable`1)\n  id: IntersectWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: IntersectWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void IntersectWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)\n  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: IsProperSubsetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)\n  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: IsProperSupersetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable`1)\n  id: IsSubsetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: IsSubsetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool IsSubsetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable`1)\n  id: IsSupersetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: IsSupersetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool IsSupersetOf (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)\n  id: OnDeserialization(System.Object)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: OnDeserialization(Object)\n  nameWithType: HashSet<T>.OnDeserialization(Object)\n  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public virtual void OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable`1)\n  id: Overlaps(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Overlaps(IEnumerable<T>)\n  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.Overlaps(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Overlaps (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: HashSet<T>.Remove(T)\n  fullName: System.Collections.Generic.HashSet<T>.Remove(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate`1)\n  id: RemoveWhere(System.Predicate`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: RemoveWhere(Predicate<T>)\n  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)\n  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(Predicate<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public int RemoveWhere (Predicate<T> match);\n    parameters:\n    - id: match\n      type: System.Predicate`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable`1)\n  id: SetEquals(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: SetEquals(IEnumerable<T>)\n  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.SetEquals(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool SetEquals (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)\n  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: SymmetricExceptWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void SymmetricExceptWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  id: System#Collections#Generic#ICollection{T}#Add(`0)\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: HashSet<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection(T)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: void ICollection<T>.Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: HashSet<T>.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: HashSet<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HashSet<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.TrimExcess\n  id: TrimExcess\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: TrimExcess()\n  nameWithType: HashSet<T>.TrimExcess()\n  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void TrimExcess ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable`1)\n  id: UnionWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  langs:\n  - csharp\n  name: UnionWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.UnionWith(IEnumerable<T>)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Collections.Generic\n  syntax:\n    content: public void UnionWith (System.Collections.Generic.IEnumerable<T> other);\n    parameters:\n    - id: other\n      type: System.Collections.Generic.IEnumerable`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.Generic.HashSet`1.#ctor\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: HashSet()\n  nameWithType: HashSet<T>.HashSet()\n  fullName: System.Collections.Generic.HashSet<T>.HashSet()\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: HashSet(IEnumerable<T>)\n  nameWithType: HashSet<T>.HashSet(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: HashSet(IEqualityComparer<T>)\n  nameWithType: HashSet<T>.HashSet(IEqualityComparer<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEqualityComparer<T>)\n- uid: System.Collections.Generic.IEqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: HashSet(IEnumerable<T>,IEqualityComparer<T>)\n  nameWithType: HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: HashSet(SerializationInfo,StreamingContext)\n  nameWithType: HashSet<T>.HashSet(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.HashSet<T>.HashSet(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Generic.HashSet`1.Add(`0)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: HashSet<T>.Add(T)\n  fullName: System.Collections.Generic.HashSet<T>.Add(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.HashSet`1.Clear\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Clear()\n  nameWithType: HashSet<T>.Clear()\n  fullName: System.Collections.Generic.HashSet<T>.Clear()\n- uid: System.Collections.Generic.HashSet`1.Comparer\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Comparer\n  nameWithType: HashSet<T>.Comparer\n  fullName: System.Collections.Generic.HashSet<T>.Comparer\n- uid: System.Collections.Generic.IEqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n- uid: System.Collections.Generic.HashSet`1.Contains(`0)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: HashSet<T>.Contains(T)\n  fullName: System.Collections.Generic.HashSet<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: CopyTo(T[])\n  nameWithType: HashSet<T>.CopyTo(T[])\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: HashSet<T>.CopyTo(T[],Int32)\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: CopyTo(T[],Int32,Int32)\n  nameWithType: HashSet<T>.CopyTo(T[],Int32,Int32)\n  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32,Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.HashSet`1.Count\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Count\n  nameWithType: HashSet<T>.Count\n  fullName: System.Collections.Generic.HashSet<T>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.Generic.HashSet`1.CreateSetComparer\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: CreateSetComparer()\n  nameWithType: HashSet<T>.CreateSetComparer()\n  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer()\n- uid: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.HashSet{T}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEqualityComparer<HashSet<T>>\n  nameWithType: IEqualityComparer<HashSet<T>>\n  fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.HashSet<T>>\n- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: ExceptWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.GetEnumerator\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: HashSet<T>.GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()\n- uid: System.Collections.Generic.HashSet`1.Enumerator\n  parent: System.Collections.Generic\n  isExternal: false\n  name: HashSet<T>+Enumerator\n  nameWithType: HashSet<T>+Enumerator\n  fullName: System.Collections.Generic.HashSet<T>+Enumerator\n- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Collections.Generic.HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: IntersectWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: IsProperSubsetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(IEnumerable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: IsProperSupersetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(IEnumerable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: IsSubsetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(IEnumerable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: IsSupersetOf(IEnumerable<T>)\n  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(IEnumerable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: OnDeserialization(Object)\n  nameWithType: HashSet<T>.OnDeserialization(Object)\n  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Overlaps(IEnumerable<T>)\n  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.Overlaps(IEnumerable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.Remove(`0)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: HashSet<T>.Remove(T)\n  fullName: System.Collections.Generic.HashSet<T>.Remove(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: RemoveWhere(Predicate<T>)\n  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)\n  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(Predicate<T>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Predicate`1\n  parent: System\n  isExternal: false\n  name: Predicate<T>\n  nameWithType: Predicate<T>\n  fullName: System.Predicate<T>\n- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: SetEquals(IEnumerable<T>)\n  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.SetEquals(IEnumerable<T>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: SymmetricExceptWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: HashSet<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: HashSet<T>.System.Collections.Generic.ICollection\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: HashSet<T>.System.Collections.Generic.IEnumerable()\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: HashSet<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.Generic.HashSet`1.TrimExcess\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: TrimExcess()\n  nameWithType: HashSet<T>.TrimExcess()\n  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()\n- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable`1)\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  name: UnionWith(IEnumerable<T>)\n  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)\n  fullName: System.Collections.Generic.HashSet<T>.UnionWith(IEnumerable<T>)\n- uid: System.Collections.Generic.IEnumerable`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.HashSet`1.CopyTo*\n  parent: System.Collections.Generic.HashSet`1\n  isExternal: false\n  nameWithType: HashSet<T>.\n"}