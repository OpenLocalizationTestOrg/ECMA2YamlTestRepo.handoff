{"nodes":[{"pos":[914,932],"content":"NamedPermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet","pos":[0,18]}]},{"pos":[3500,3538],"content":"NamedPermissionSet(NamedPermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(NamedPermissionSet)","pos":[0,38]}]},{"pos":[3970,4004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4219,4245],"content":"NamedPermissionSet(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(String)","pos":[0,26]}]},{"pos":[4598,4632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4935,4977],"content":"NamedPermissionSet(String,PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(String,PermissionState)","pos":[0,42]}]},{"pos":[5413,5447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5539,5573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5848,5888],"content":"NamedPermissionSet(String,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(String,PermissionSet)","pos":[0,40]}]},{"pos":[6308,6342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6422,6456],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6637,6643],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[6981,7015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7279,7291],"content":"Copy(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(String)","pos":[0,12]}]},{"pos":[7632,7666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7745,7779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8027,8038],"content":"Description","needQuote":true,"needEscape":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[8338,8372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8587,8601],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8925,8959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9018,9052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9305,9329],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[9715,9749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9944,9957],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[10273,10307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10488,10492],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[10771,10805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10988,10995],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[11340,11374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11501,11530],"content":"System.Security.PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.PermissionSet","pos":[0,29]}]},{"pos":[11688,11726],"content":"NamedPermissionSet(NamedPermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(NamedPermissionSet)","pos":[0,38]}]},{"pos":[11983,12001],"content":"NamedPermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet","pos":[0,18]}]},{"pos":[12220,12246],"content":"NamedPermissionSet(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(String)","pos":[0,26]}]},{"pos":[12449,12455],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12685,12727],"content":"NamedPermissionSet(String,PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(String,PermissionState)","pos":[0,42]}]},{"pos":[12962,12968],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13135,13150],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[13405,13445],"content":"NamedPermissionSet(String,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet(String,PermissionSet)","pos":[0,40]}]},{"pos":[13676,13682],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13823,13836],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[14029,14035],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[14223,14236],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[14444,14456],"content":"Copy(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy(String)","pos":[0,12]}]},{"pos":[14661,14679],"content":"NamedPermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"NamedPermissionSet","pos":[0,18]}]},{"pos":[14828,14834],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15011,15022],"content":"Description","needQuote":true,"needEscape":true,"nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[15195,15201],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15388,15402],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15582,15589],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15707,15713],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15919,15943],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[16169,16184],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[16388,16401],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16577,16582],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16750,16754],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[16913,16919],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[17090,17097],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[17289,17304],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.NamedPermissionSet\n  id: NamedPermissionSet\n  children:\n  - System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)\n  - System.Security.NamedPermissionSet.#ctor(System.String)\n  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)\n  - System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)\n  - System.Security.NamedPermissionSet.Copy\n  - System.Security.NamedPermissionSet.Copy(System.String)\n  - System.Security.NamedPermissionSet.Description\n  - System.Security.NamedPermissionSet.Equals(System.Object)\n  - System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)\n  - System.Security.NamedPermissionSet.GetHashCode\n  - System.Security.NamedPermissionSet.Name\n  - System.Security.NamedPermissionSet.ToXml\n  langs:\n  - csharp\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet\n  fullName: System.Security.NamedPermissionSet\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class NamedPermissionSet : System.Security.PermissionSet\n  inheritance:\n  - System.Object\n  - System.Security.PermissionSet\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.AddPermissionImpl(System.Security.IPermission)\n  - System.Security.PermissionSet.Assert\n  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions\n  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)\n  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)\n  - System.Security.PermissionSet.Count\n  - System.Security.PermissionSet.Demand\n  - System.Security.PermissionSet.Deny\n  - System.Security.PermissionSet.GetEnumerator\n  - System.Security.PermissionSet.GetEnumeratorImpl\n  - System.Security.PermissionSet.GetPermission(System.Type)\n  - System.Security.PermissionSet.GetPermissionImpl(System.Type)\n  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsEmpty\n  - System.Security.PermissionSet.IsReadOnly\n  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsSynchronized\n  - System.Security.PermissionSet.IsUnrestricted\n  - System.Security.PermissionSet.PermitOnly\n  - System.Security.PermissionSet.RemovePermission(System.Type)\n  - System.Security.PermissionSet.RemovePermissionImpl(System.Type)\n  - System.Security.PermissionSet.RevertAssert\n  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.SetPermissionImpl(System.Security.IPermission)\n  - System.Security.PermissionSet.SyncRoot\n  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.PermissionSet.ToString\n  - System.Security.PermissionSet.Union(System.Security.PermissionSet)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)\n  id: '#ctor(System.Security.NamedPermissionSet)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(NamedPermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public NamedPermissionSet (System.Security.NamedPermissionSet permSet);\n    parameters:\n    - id: permSet\n      type: System.Security.NamedPermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(String)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public NamedPermissionSet (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)\n  id: '#ctor(System.String,System.Security.Permissions.PermissionState)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(String,PermissionState)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public NamedPermissionSet (string name, System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)\n  id: '#ctor(System.String,System.Security.PermissionSet)'\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: NamedPermissionSet(String,PermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public NamedPermissionSet (string name, System.Security.PermissionSet permSet);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: permSet\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.Copy\n  id: Copy\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: NamedPermissionSet.Copy()\n  fullName: System.Security.NamedPermissionSet.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override System.Security.PermissionSet Copy ();\n    parameters: []\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  overload: System.Security.NamedPermissionSet.Copy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.Copy(System.String)\n  id: Copy(System.String)\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Copy(String)\n  nameWithType: NamedPermissionSet.Copy(String)\n  fullName: System.Security.NamedPermissionSet.Copy(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public System.Security.NamedPermissionSet Copy (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Security.NamedPermissionSet\n      description: Parameter description to be filled\n  overload: System.Security.NamedPermissionSet.Copy*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.Description\n  id: Description\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Description\n  nameWithType: NamedPermissionSet.Description\n  fullName: System.Security.NamedPermissionSet.Description\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public string Description { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NamedPermissionSet.Equals(Object)\n  fullName: System.Security.NamedPermissionSet.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: NamedPermissionSet.FromXml(SecurityElement)\n  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement et);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.GetHashCode\n  id: GetHashCode\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NamedPermissionSet.GetHashCode()\n  fullName: System.Security.NamedPermissionSet.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.Name\n  id: Name\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: Name\n  nameWithType: NamedPermissionSet.Name\n  fullName: System.Security.NamedPermissionSet.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.NamedPermissionSet.ToXml\n  id: ToXml\n  parent: System.Security.NamedPermissionSet\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: NamedPermissionSet.ToXml()\n  fullName: System.Security.NamedPermissionSet.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.PermissionSet\n  isExternal: false\n  name: System.Security.PermissionSet\n- uid: System.Security.NamedPermissionSet.#ctor(System.Security.NamedPermissionSet)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(NamedPermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(NamedPermissionSet)\n- uid: System.Security.NamedPermissionSet\n  parent: System.Security\n  isExternal: false\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet\n  fullName: System.Security.NamedPermissionSet\n- uid: System.Security.NamedPermissionSet.#ctor(System.String)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(String)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.Permissions.PermissionState)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(String,PermissionState)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionState)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.NamedPermissionSet.#ctor(System.String,System.Security.PermissionSet)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: NamedPermissionSet(String,PermissionSet)\n  nameWithType: NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n  fullName: System.Security.NamedPermissionSet.NamedPermissionSet(String,PermissionSet)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.NamedPermissionSet.Copy\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Copy()\n  nameWithType: NamedPermissionSet.Copy()\n  fullName: System.Security.NamedPermissionSet.Copy()\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.NamedPermissionSet.Copy(System.String)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Copy(String)\n  nameWithType: NamedPermissionSet.Copy(String)\n  fullName: System.Security.NamedPermissionSet.Copy(String)\n- uid: System.Security.NamedPermissionSet\n  parent: System.Security\n  isExternal: false\n  name: NamedPermissionSet\n  nameWithType: NamedPermissionSet\n  fullName: System.Security.NamedPermissionSet\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.NamedPermissionSet.Description\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Description\n  nameWithType: NamedPermissionSet.Description\n  fullName: System.Security.NamedPermissionSet.Description\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.NamedPermissionSet.Equals(System.Object)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NamedPermissionSet.Equals(Object)\n  fullName: System.Security.NamedPermissionSet.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.NamedPermissionSet.FromXml(System.Security.SecurityElement)\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: NamedPermissionSet.FromXml(SecurityElement)\n  fullName: System.Security.NamedPermissionSet.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.NamedPermissionSet.GetHashCode\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NamedPermissionSet.GetHashCode()\n  fullName: System.Security.NamedPermissionSet.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.NamedPermissionSet.Name\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: Name\n  nameWithType: NamedPermissionSet.Name\n  fullName: System.Security.NamedPermissionSet.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.NamedPermissionSet.ToXml\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  name: ToXml()\n  nameWithType: NamedPermissionSet.ToXml()\n  fullName: System.Security.NamedPermissionSet.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.NamedPermissionSet.Copy*\n  parent: System.Security.NamedPermissionSet\n  isExternal: false\n  nameWithType: NamedPermissionSet.\n"}