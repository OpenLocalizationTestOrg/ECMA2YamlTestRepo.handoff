{"nodes":[{"pos":[2023,2033],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[3058,3070],"content":"WaitHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle()","pos":[0,12]}]},{"pos":[3476,3483],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[3883,3892],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[4371,4387],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[4731,4765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4985,4991],"content":"Handle","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle","pos":[0,6]}]},{"pos":[5270,5304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5489,5502],"content":"InvalidHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"InvalidHandle","pos":[0,13]}]},{"pos":[5797,5831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6018,6032],"content":"SafeWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[6392,6426],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6725,6761],"content":"SignalAndWait(WaitHandle,WaitHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignalAndWait(WaitHandle,WaitHandle)","pos":[0,36]}]},{"pos":[7203,7237],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7316,7350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7409,7443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7853,7903],"content":"SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)","pos":[0,50]}]},{"pos":[8416,8450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8529,8563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8638,8672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8741,8775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8834,8868],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9284,9337],"content":"SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)","pos":[0,53]}]},{"pos":[9849,9883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9962,9996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10062,10096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10165,10199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10258,10292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10582,10603],"content":"WaitAll(WaitHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[])","pos":[0,21]}]},{"pos":[10981,11015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11074,11108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11418,11445],"content":"WaitAll(WaitHandle[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],Int32)","pos":[0,27]}]},{"pos":[11860,11894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11969,12003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12062,12096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12412,12442],"content":"WaitAll(WaitHandle[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],TimeSpan)","pos":[0,30]}]},{"pos":[12856,12890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12956,12990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13049,13083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13423,13458],"content":"WaitAll(WaitHandle[],Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],Int32,Boolean)","pos":[0,35]}]},{"pos":[13907,13941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14016,14050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14119,14153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14212,14246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14592,14630],"content":"WaitAll(WaitHandle[],TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],TimeSpan,Boolean)","pos":[0,38]}]},{"pos":[15078,15112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15178,15212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15281,15315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15374,15408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15692,15713],"content":"WaitAny(WaitHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[])","pos":[0,21]}]},{"pos":[16090,16124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16181,16215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16525,16552],"content":"WaitAny(WaitHandle[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],Int32)","pos":[0,27]}]},{"pos":[16966,17000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17075,17109],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17166,17200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17516,17546],"content":"WaitAny(WaitHandle[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],TimeSpan)","pos":[0,30]}]},{"pos":[17959,17993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18059,18093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18150,18184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18524,18559],"content":"WaitAny(WaitHandle[],Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],Int32,Boolean)","pos":[0,35]}]},{"pos":[19007,19041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19116,19150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19219,19253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19310,19344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19690,19728],"content":"WaitAny(WaitHandle[],TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],TimeSpan,Boolean)","pos":[0,38]}]},{"pos":[20175,20209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20275,20309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20378,20412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20469,20503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20725,20734],"content":"WaitOne()","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne()","pos":[0,9]}]},{"pos":[21026,21060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21310,21324],"content":"WaitOne(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(Int32)","pos":[0,14]}]},{"pos":[21662,21696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21755,21789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22045,22062],"content":"WaitOne(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(TimeSpan)","pos":[0,17]}]},{"pos":[22390,22424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22483,22517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22797,22819],"content":"WaitOne(Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(Int32,Boolean)","pos":[0,22]}]},{"pos":[23191,23225],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23294,23328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23387,23421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23707,23732],"content":"WaitOne(TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(TimeSpan,Boolean)","pos":[0,25]}]},{"pos":[24094,24128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24197,24231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24290,24324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24554,24565],"content":"WaitTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitTimeout","pos":[0,11]}]},{"pos":[24843,24877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25000,25025],"content":"System.MarshalByRefObject","needQuote":true,"needEscape":true,"nodes":[{"content":"System.MarshalByRefObject","pos":[0,25]}]},{"pos":[25133,25145],"content":"WaitHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle()","pos":[0,12]}]},{"pos":[25346,25353],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[25546,25555],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[25768,25784],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[25953,25960],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26120,26126],"content":"Handle","needQuote":true,"needEscape":true,"nodes":[{"content":"Handle","pos":[0,6]}]},{"pos":[26274,26280],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[26445,26458],"content":"InvalidHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"InvalidHandle","pos":[0,13]}]},{"pos":[26620,26626],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[26792,26806],"content":"SafeWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[27020,27034],"content":"SafeWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"SafeWaitHandle","pos":[0,14]}]},{"pos":[27293,27329],"content":"SignalAndWait(WaitHandle,WaitHandle)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignalAndWait(WaitHandle,WaitHandle)","pos":[0,36]}]},{"pos":[27538,27545],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27687,27697],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[27855,27865],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[28133,28183],"content":"SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)","pos":[0,50]}]},{"pos":[28420,28427],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28569,28579],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[28737,28747],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[28880,28885],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29000,29007],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29262,29315],"content":"SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)","pos":[0,53]}]},{"pos":[29558,29565],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29707,29717],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[29875,29885],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[30021,30029],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[30150,30157],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30349,30370],"content":"WaitAll(WaitHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[])","pos":[0,21]}]},{"pos":[30549,30556],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30698,30708],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[30931,30958],"content":"WaitAll(WaitHandle[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],Int32)","pos":[0,27]}]},{"pos":[31149,31156],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31298,31308],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[31443,31448],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31652,31682],"content":"WaitAll(WaitHandle[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],TimeSpan)","pos":[0,30]}]},{"pos":[31879,31886],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32028,32038],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[32176,32184],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[32406,32441],"content":"WaitAll(WaitHandle[],Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],Int32,Boolean)","pos":[0,35]}]},{"pos":[32648,32655],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32797,32807],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[32942,32947],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33062,33069],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33292,33330],"content":"WaitAll(WaitHandle[],TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(WaitHandle[],TimeSpan,Boolean)","pos":[0,38]}]},{"pos":[33543,33550],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33692,33702],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[33840,33848],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[33969,33976],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34168,34189],"content":"WaitAny(WaitHandle[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[])","pos":[0,21]}]},{"pos":[34366,34371],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34509,34519],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[34742,34769],"content":"WaitAny(WaitHandle[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],Int32)","pos":[0,27]}]},{"pos":[34958,34963],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35101,35111],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[35246,35251],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35455,35485],"content":"WaitAny(WaitHandle[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],TimeSpan)","pos":[0,30]}]},{"pos":[35680,35685],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35823,35833],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[35971,35979],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[36201,36236],"content":"WaitAny(WaitHandle[],Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],Int32,Boolean)","pos":[0,35]}]},{"pos":[36441,36446],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36584,36594],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[36729,36734],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36849,36856],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37079,37117],"content":"WaitAny(WaitHandle[],TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(WaitHandle[],TimeSpan,Boolean)","pos":[0,38]}]},{"pos":[37328,37333],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37471,37481],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[37619,37627],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[37748,37755],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37916,37925],"content":"WaitOne()","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne()","pos":[0,9]}]},{"pos":[38080,38087],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38262,38276],"content":"WaitOne(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(Int32)","pos":[0,14]}]},{"pos":[38441,38448],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38565,38570],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38744,38761],"content":"WaitOne(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(TimeSpan)","pos":[0,17]}]},{"pos":[38932,38939],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39059,39067],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[39259,39281],"content":"WaitOne(Int32,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(Int32,Boolean)","pos":[0,22]}]},{"pos":[39462,39469],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39586,39591],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[39706,39713],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39906,39931],"content":"WaitOne(TimeSpan,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitOne(TimeSpan,Boolean)","pos":[0,25]}]},{"pos":[40118,40125],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40245,40253],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[40374,40381],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40546,40557],"content":"WaitTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitTimeout","pos":[0,11]}]},{"pos":[40714,40719],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.WaitHandle\n  id: WaitHandle\n  children:\n  - System.Threading.WaitHandle.#ctor\n  - System.Threading.WaitHandle.Close\n  - System.Threading.WaitHandle.Dispose\n  - System.Threading.WaitHandle.Dispose(System.Boolean)\n  - System.Threading.WaitHandle.Handle\n  - System.Threading.WaitHandle.InvalidHandle\n  - System.Threading.WaitHandle.SafeWaitHandle\n  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitOne\n  - System.Threading.WaitHandle.WaitOne(System.Int32)\n  - System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n  - System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n  - System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n  - System.Threading.WaitHandle.WaitTimeout\n  langs:\n  - csharp\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class WaitHandle : MarshalByRefObject, IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.#ctor\n  id: '#ctor'\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitHandle()\n  nameWithType: WaitHandle.WaitHandle()\n  fullName: System.Threading.WaitHandle.WaitHandle()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: protected WaitHandle ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.Close\n  id: Close\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: WaitHandle.Close()\n  fullName: System.Threading.WaitHandle.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.Dispose\n  id: Dispose\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: WaitHandle.Dispose()\n  fullName: System.Threading.WaitHandle.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Threading.WaitHandle.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: WaitHandle.Dispose(Boolean)\n  fullName: System.Threading.WaitHandle.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: protected virtual void Dispose (bool explicitDisposing);\n    parameters:\n    - id: explicitDisposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.Handle\n  id: Handle\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: Handle\n  nameWithType: WaitHandle.Handle\n  fullName: System.Threading.WaitHandle.Handle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual IntPtr Handle { get; set; }\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.InvalidHandle\n  id: InvalidHandle\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: InvalidHandle\n  nameWithType: WaitHandle.InvalidHandle\n  fullName: System.Threading.WaitHandle.InvalidHandle\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: protected static readonly IntPtr InvalidHandle;\n    return:\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.SafeWaitHandle\n  id: SafeWaitHandle\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: SafeWaitHandle\n  nameWithType: WaitHandle.SafeWaitHandle\n  fullName: System.Threading.WaitHandle.SafeWaitHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public Microsoft.Win32.SafeHandles.SafeWaitHandle SafeWaitHandle { get; set; }\n    return:\n      type: Microsoft.Win32.SafeHandles.SafeWaitHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n  id: SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: SignalAndWait(WaitHandle,WaitHandle)\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle)\n  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn);\n    parameters:\n    - id: toSignal\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n    - id: toWaitOn\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.SignalAndWait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n  id: SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)\n  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, int millisecondsTimeout, bool exitContext);\n    parameters:\n    - id: toSignal\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n    - id: toWaitOn\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.SignalAndWait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n  id: SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool SignalAndWait (System.Threading.WaitHandle toSignal, System.Threading.WaitHandle toWaitOn, TimeSpan timeout, bool exitContext);\n    parameters:\n    - id: toSignal\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n    - id: toWaitOn\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.SignalAndWait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n  id: WaitAll(System.Threading.WaitHandle[])\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAll(WaitHandle[])\n  nameWithType: WaitHandle.WaitAll(WaitHandle[])\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n  id: WaitAll(System.Threading.WaitHandle[],System.Int32)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAll(WaitHandle[],Int32)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n  id: WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAll(WaitHandle[],TimeSpan)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  id: WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAll(WaitHandle[],Int32,Boolean)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  id: WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAll(WaitHandle[],TimeSpan,Boolean)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static bool WaitAll (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n  id: WaitAny(System.Threading.WaitHandle[])\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAny(WaitHandle[])\n  nameWithType: WaitHandle.WaitAny(WaitHandle[])\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n  id: WaitAny(System.Threading.WaitHandle[],System.Int32)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAny(WaitHandle[],Int32)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n  id: WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAny(WaitHandle[],TimeSpan)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  id: WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAny(WaitHandle[],Int32,Boolean)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, int millisecondsTimeout, bool exitContext);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  id: WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitAny(WaitHandle[],TimeSpan,Boolean)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public static int WaitAny (System.Threading.WaitHandle[] waitHandles, TimeSpan timeout, bool exitContext);\n    parameters:\n    - id: waitHandles\n      type: System.Threading.WaitHandle[]\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitOne\n  id: WaitOne\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitOne()\n  nameWithType: WaitHandle.WaitOne()\n  fullName: System.Threading.WaitHandle.WaitOne()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual bool WaitOne ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitOne(System.Int32)\n  id: WaitOne(System.Int32)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitOne(Int32)\n  nameWithType: WaitHandle.WaitOne(Int32)\n  fullName: System.Threading.WaitHandle.WaitOne(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual bool WaitOne (int millisecondsTimeout);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n  id: WaitOne(System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitOne(TimeSpan)\n  nameWithType: WaitHandle.WaitOne(TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual bool WaitOne (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n  id: WaitOne(System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitOne(Int32,Boolean)\n  nameWithType: WaitHandle.WaitOne(Int32,Boolean)\n  fullName: System.Threading.WaitHandle.WaitOne(Int32,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual bool WaitOne (int millisecondsTimeout, bool exitContext);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n  id: WaitOne(System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitOne(TimeSpan,Boolean)\n  nameWithType: WaitHandle.WaitOne(TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public virtual bool WaitOne (TimeSpan timeout, bool exitContext);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: exitContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.WaitHandle.WaitOne*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.WaitHandle.WaitTimeout\n  id: WaitTimeout\n  parent: System.Threading.WaitHandle\n  langs:\n  - csharp\n  name: WaitTimeout\n  nameWithType: WaitHandle.WaitTimeout\n  fullName: System.Threading.WaitHandle.WaitTimeout\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Threading\n  syntax:\n    content: public const int WaitTimeout = 258;\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.Threading.WaitHandle.#ctor\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitHandle()\n  nameWithType: WaitHandle.WaitHandle()\n  fullName: System.Threading.WaitHandle.WaitHandle()\n- uid: System.Threading.WaitHandle.Close\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: Close()\n  nameWithType: WaitHandle.Close()\n  fullName: System.Threading.WaitHandle.Close()\n- uid: System.Threading.WaitHandle.Dispose\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: Dispose()\n  nameWithType: WaitHandle.Dispose()\n  fullName: System.Threading.WaitHandle.Dispose()\n- uid: System.Threading.WaitHandle.Dispose(System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: WaitHandle.Dispose(Boolean)\n  fullName: System.Threading.WaitHandle.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.Handle\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: Handle\n  nameWithType: WaitHandle.Handle\n  fullName: System.Threading.WaitHandle.Handle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Threading.WaitHandle.InvalidHandle\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: InvalidHandle\n  nameWithType: WaitHandle.InvalidHandle\n  fullName: System.Threading.WaitHandle.InvalidHandle\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Threading.WaitHandle.SafeWaitHandle\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: SafeWaitHandle\n  nameWithType: WaitHandle.SafeWaitHandle\n  fullName: System.Threading.WaitHandle.SafeWaitHandle\n- uid: Microsoft.Win32.SafeHandles.SafeWaitHandle\n  parent: Microsoft.Win32.SafeHandles\n  isExternal: false\n  name: SafeWaitHandle\n  nameWithType: SafeWaitHandle\n  fullName: Microsoft.Win32.SafeHandles.SafeWaitHandle\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: SignalAndWait(WaitHandle,WaitHandle)\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle)\n  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)\n  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,Int32,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.SignalAndWait(System.Threading.WaitHandle,System.Threading.WaitHandle,System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)\n  nameWithType: WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.SignalAndWait(WaitHandle,WaitHandle,TimeSpan,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[])\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAll(WaitHandle[])\n  nameWithType: WaitHandle.WaitAll(WaitHandle[])\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAll(WaitHandle[],Int32)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAll(WaitHandle[],TimeSpan)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAll(WaitHandle[],Int32,Boolean)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],Int32,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitAll(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAll(WaitHandle[],TimeSpan,Boolean)\n  nameWithType: WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAll(WaitHandle[],TimeSpan,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[])\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAny(WaitHandle[])\n  nameWithType: WaitHandle.WaitAny(WaitHandle[])\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAny(WaitHandle[],Int32)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAny(WaitHandle[],TimeSpan)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAny(WaitHandle[],Int32,Boolean)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],Int32,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitAny(System.Threading.WaitHandle[],System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitAny(WaitHandle[],TimeSpan,Boolean)\n  nameWithType: WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.WaitAny(WaitHandle[],TimeSpan,Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle[]\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitOne\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitOne()\n  nameWithType: WaitHandle.WaitOne()\n  fullName: System.Threading.WaitHandle.WaitOne()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitOne(System.Int32)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitOne(Int32)\n  nameWithType: WaitHandle.WaitOne(Int32)\n  fullName: System.Threading.WaitHandle.WaitOne(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitOne(TimeSpan)\n  nameWithType: WaitHandle.WaitOne(TimeSpan)\n  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.WaitHandle.WaitOne(System.Int32,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitOne(Int32,Boolean)\n  nameWithType: WaitHandle.WaitOne(Int32,Boolean)\n  fullName: System.Threading.WaitHandle.WaitOne(Int32,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitOne(System.TimeSpan,System.Boolean)\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitOne(TimeSpan,Boolean)\n  nameWithType: WaitHandle.WaitOne(TimeSpan,Boolean)\n  fullName: System.Threading.WaitHandle.WaitOne(TimeSpan,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.WaitHandle.WaitTimeout\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  name: WaitTimeout\n  nameWithType: WaitHandle.WaitTimeout\n  fullName: System.Threading.WaitHandle.WaitTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.WaitHandle.Dispose*\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  nameWithType: WaitHandle.\n- uid: System.Threading.WaitHandle.SignalAndWait*\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  nameWithType: WaitHandle.\n- uid: System.Threading.WaitHandle.WaitAll*\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  nameWithType: WaitHandle.\n- uid: System.Threading.WaitHandle.WaitAny*\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  nameWithType: WaitHandle.\n- uid: System.Threading.WaitHandle.WaitOne*\n  parent: System.Threading.WaitHandle\n  isExternal: false\n  nameWithType: WaitHandle.\n"}