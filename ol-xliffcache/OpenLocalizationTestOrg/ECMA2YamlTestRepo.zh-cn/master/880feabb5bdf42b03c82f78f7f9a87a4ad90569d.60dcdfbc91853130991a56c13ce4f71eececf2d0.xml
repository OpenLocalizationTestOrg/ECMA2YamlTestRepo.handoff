{"nodes":[{"pos":[5345,5359],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[6181,6205],"content":"DateTimeOffset(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(DateTime)","pos":[0,24]}]},{"pos":[6536,6570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6795,6828],"content":"DateTimeOffset(DateTime,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(DateTime,TimeSpan)","pos":[0,33]}]},{"pos":[7194,7228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7293,7327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7546,7576],"content":"DateTimeOffset(Int64,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int64,TimeSpan)","pos":[0,30]}]},{"pos":[7923,7957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8022,8056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8405,8465],"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","pos":[0,60]}]},{"pos":[8923,8957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9018,9052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9111,9145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9205,9239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9301,9335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9397,9431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9496,9530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9905,9971],"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","pos":[0,66]}]},{"pos":[10458,10492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10553,10587],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10646,10680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10740,10774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10836,10870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10932,10966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11033,11067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11132,11166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11601,11676],"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)","pos":[0,75]}]},{"pos":[12221,12255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12316,12350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12409,12443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12503,12537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12599,12633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12695,12729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12796,12830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12911,12945],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13010,13044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13231,13244],"content":"Add(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TimeSpan)","pos":[0,13]}]},{"pos":[13552,13586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13652,13686],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13877,13892],"content":"AddDays(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddDays(Double)","pos":[0,15]}]},{"pos":[14196,14230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14296,14330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14523,14539],"content":"AddHours(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddHours(Double)","pos":[0,16]}]},{"pos":[14848,14882],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14948,14982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15189,15212],"content":"AddMilliseconds(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMilliseconds(Double)","pos":[0,23]}]},{"pos":[15556,15590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15656,15690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15887,15905],"content":"AddMinutes(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMinutes(Double)","pos":[0,18]}]},{"pos":[16224,16258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16324,16358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16551,16567],"content":"AddMonths(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMonths(Int32)","pos":[0,16]}]},{"pos":[16875,16909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16975,17009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17206,17224],"content":"AddSeconds(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddSeconds(Double)","pos":[0,18]}]},{"pos":[17543,17577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17643,17677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17868,17883],"content":"AddTicks(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddTicks(Int64)","pos":[0,15]}]},{"pos":[18187,18221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18287,18321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18512,18527],"content":"AddYears(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddYears(Int32)","pos":[0,15]}]},{"pos":[18830,18864],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18930,18964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19215,19253],"content":"Compare(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(DateTimeOffset,DateTimeOffset)","pos":[0,38]}]},{"pos":[19640,19674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19745,19779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19836,19870],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20081,20106],"content":"CompareTo(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(DateTimeOffset)","pos":[0,25]}]},{"pos":[20439,20473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20530,20564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20719,20723],"content":"Date","needQuote":true,"needEscape":true,"nodes":[{"content":"Date","pos":[0,4]}]},{"pos":[20975,21009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21172,21180],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[21444,21478],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21631,21634],"content":"Day","needQuote":true,"needEscape":true,"nodes":[{"content":"Day","pos":[0,3]}]},{"pos":[21875,21909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22074,22083],"content":"DayOfWeek","needQuote":true,"needEscape":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[22352,22386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22551,22560],"content":"DayOfYear","needQuote":true,"needEscape":true,"nodes":[{"content":"DayOfYear","pos":[0,9]}]},{"pos":[22819,22853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23058,23080],"content":"Equals(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(DateTimeOffset)","pos":[0,22]}]},{"pos":[23405,23439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23498,23532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23763,23777],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[24075,24109],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24168,24202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24493,24530],"content":"Equals(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(DateTimeOffset,DateTimeOffset)","pos":[0,37]}]},{"pos":[24915,24949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25020,25054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25113,25147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25404,25431],"content":"EqualsExact(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"EqualsExact(DateTimeOffset)","pos":[0,27]}]},{"pos":[25771,25805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25864,25898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26097,26116],"content":"FromFileTime(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromFileTime(Int64)","pos":[0,19]}]},{"pos":[26445,26479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26545,26579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26802,26833],"content":"FromUnixTimeMilliseconds(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromUnixTimeMilliseconds(Int64)","pos":[0,31]}]},{"pos":[27206,27240],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27306,27340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27553,27579],"content":"FromUnixTimeSeconds(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromUnixTimeSeconds(Int64)","pos":[0,26]}]},{"pos":[27927,27961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28027,28061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28230,28243],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[28533,28567],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28722,28726],"content":"Hour","needQuote":true,"needEscape":true,"nodes":[{"content":"Hour","pos":[0,4]}]},{"pos":[28970,29004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29177,29190],"content":"LocalDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalDateTime","pos":[0,13]}]},{"pos":[29469,29503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29666,29674],"content":"MaxValue","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[29955,29989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30158,30169],"content":"Millisecond","needQuote":true,"needEscape":true,"nodes":[{"content":"Millisecond","pos":[0,11]}]},{"pos":[30434,30468],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30627,30633],"content":"Minute","needQuote":true,"needEscape":true,"nodes":[{"content":"Minute","pos":[0,6]}]},{"pos":[30883,30917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31080,31088],"content":"MinValue","needQuote":true,"needEscape":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[31369,31403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31560,31565],"content":"Month","needQuote":true,"needEscape":true,"nodes":[{"content":"Month","pos":[0,5]}]},{"pos":[31812,31846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31999,32002],"content":"Now","needQuote":true,"needEscape":true,"nodes":[{"content":"Now","pos":[0,3]}]},{"pos":[32270,32304],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32463,32469],"content":"Offset","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset","pos":[0,6]}]},{"pos":[32727,32761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33008,33044],"content":"op_Addition(DateTimeOffset,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Addition(DateTimeOffset,TimeSpan)","pos":[0,36]}]},{"pos":[33458,33492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33559,33593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33659,33693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33952,33994],"content":"op_Equality(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(DateTimeOffset,DateTimeOffset)","pos":[0,42]}]},{"pos":[34393,34427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34497,34531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34590,34624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34889,34934],"content":"op_GreaterThan(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(DateTimeOffset,DateTimeOffset)","pos":[0,45]}]},{"pos":[35342,35376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35446,35480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35539,35573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35852,35904],"content":"op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)","pos":[0,52]}]},{"pos":[36333,36367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36437,36471],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36530,36564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36767,36788],"content":"op_Implicit(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit(DateTime)","pos":[0,21]}]},{"pos":[37129,37163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37229,37263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37526,37570],"content":"op_Inequality(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(DateTimeOffset,DateTimeOffset)","pos":[0,44]}]},{"pos":[37975,38009],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38079,38113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38172,38206],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38465,38507],"content":"op_LessThan(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(DateTimeOffset,DateTimeOffset)","pos":[0,42]}]},{"pos":[38906,38940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39010,39044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39103,39137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39410,39459],"content":"op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)","pos":[0,49]}]},{"pos":[39879,39913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39983,40017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40076,40110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40375,40420],"content":"op_Subtraction(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Subtraction(DateTimeOffset,DateTimeOffset)","pos":[0,45]}]},{"pos":[40832,40866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40936,40970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41030,41064],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41317,41356],"content":"op_Subtraction(DateTimeOffset,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Subtraction(DateTimeOffset,TimeSpan)","pos":[0,39]}]},{"pos":[41779,41813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41880,41914],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41980,42014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42201,42214],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[42521,42555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42621,42655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42929,42958],"content":"Parse(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String,IFormatProvider)","pos":[0,29]}]},{"pos":[43329,43363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43443,43477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43543,43577],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43923,43967],"content":"Parse(String,IFormatProvider,DateTimeStyles)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String,IFormatProvider,DateTimeStyles)","pos":[0,44]}]},{"pos":[44412,44446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44526,44560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44645,44679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44745,44779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45091,45132],"content":"ParseExact(String,String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseExact(String,String,IFormatProvider)","pos":[0,41]}]},{"pos":[45547,45581],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45644,45678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45758,45792],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45858,45892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46281,46337],"content":"ParseExact(String,String,IFormatProvider,DateTimeStyles)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseExact(String,String,IFormatProvider,DateTimeStyles)","pos":[0,56]}]},{"pos":[46826,46860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46923,46957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47037,47071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47156,47190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47256,47290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47683,47741],"content":"ParseExact(String,String[],IFormatProvider,DateTimeStyles)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseExact(String,String[],IFormatProvider,DateTimeStyles)","pos":[0,58]}]},{"pos":[48237,48271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48337,48371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48451,48485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48570,48604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48670,48704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48909,48915],"content":"Second","needQuote":true,"needEscape":true,"nodes":[{"content":"Second","pos":[0,6]}]},{"pos":[49165,49199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49408,49432],"content":"Subtract(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtract(DateTimeOffset)","pos":[0,24]}]},{"pos":[49767,49801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49861,49895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50136,50154],"content":"Subtract(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtract(TimeSpan)","pos":[0,18]}]},{"pos":[50471,50505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50571,50605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50896,50932],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[51272,51306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51363,51397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51730,51809],"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","pos":[0,79]}]},{"pos":[52263,52297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52758,52850],"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","pos":[0,92]}]},{"pos":[53439,53473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53569,53603],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53760,53765],"content":"Ticks","needQuote":true,"needEscape":true,"nodes":[{"content":"Ticks","pos":[0,5]}]},{"pos":[54013,54047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54212,54221],"content":"TimeOfDay","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeOfDay","pos":[0,9]}]},{"pos":[54488,54522],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54689,54701],"content":"ToFileTime()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToFileTime()","pos":[0,12]}]},{"pos":[54980,55014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55183,55196],"content":"ToLocalTime()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToLocalTime()","pos":[0,13]}]},{"pos":[55497,55531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55728,55746],"content":"ToOffset(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToOffset(TimeSpan)","pos":[0,18]}]},{"pos":[56065,56099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56165,56199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56362,56372],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[56657,56691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56946,56971],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[57326,57360],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57418,57452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57689,57705],"content":"ToString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"pos":[58008,58042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58100,58134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58417,58449],"content":"ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(String,IFormatProvider)","pos":[0,32]}]},{"pos":[58816,58850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58930,58964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59022,59056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59277,59294],"content":"ToUniversalTime()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUniversalTime()","pos":[0,17]}]},{"pos":[59607,59641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59832,59856],"content":"ToUnixTimeMilliseconds()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUnixTimeMilliseconds()","pos":[0,24]}]},{"pos":[60171,60205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60386,60405],"content":"ToUnixTimeSeconds()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUnixTimeSeconds()","pos":[0,19]}]},{"pos":[60705,60739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60978,61009],"content":"TryParse(String,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParse(String,DateTimeOffset)","pos":[0,31]}]},{"pos":[61372,61406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61477,61511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61570,61604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62005,62067],"content":"TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)","pos":[0,62]}]},{"pos":[62568,62602],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62682,62716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62801,62835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62906,62940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62999,63033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63472,63546],"content":"TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)","pos":[0,74]}]},{"pos":[64091,64125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64188,64222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64302,64336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64421,64455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64526,64560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64619,64653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65101,65177],"content":"TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)","pos":[0,76]}]},{"pos":[65729,65763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65829,65863],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65943,65977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66062,66096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66167,66201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66260,66294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66512,66523],"content":"UtcDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"UtcDateTime","pos":[0,11]}]},{"pos":[66796,66830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66989,66995],"content":"UtcNow","needQuote":true,"needEscape":true,"nodes":[{"content":"UtcNow","pos":[0,6]}]},{"pos":[67272,67306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67469,67477],"content":"UtcTicks","needQuote":true,"needEscape":true,"nodes":[{"content":"UtcTicks","pos":[0,8]}]},{"pos":[67734,67768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67923,67927],"content":"Year","needQuote":true,"needEscape":true,"nodes":[{"content":"Year","pos":[0,4]}]},{"pos":[68171,68205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68319,68335],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[68448,68472],"content":"DateTimeOffset(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(DateTime)","pos":[0,24]}]},{"pos":[68656,68664],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[68846,68879],"content":"DateTimeOffset(DateTime,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(DateTime,TimeSpan)","pos":[0,33]}]},{"pos":[69081,69089],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[69211,69219],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[69398,69428],"content":"DateTimeOffset(Int64,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int64,TimeSpan)","pos":[0,30]}]},{"pos":[69621,69626],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[69742,69750],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[69994,70054],"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","pos":[0,60]}]},{"pos":[70307,70312],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70425,70430],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70543,70548],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70661,70666],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70779,70784],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70897,70902],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71018,71026],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[71283,71349],"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)","pos":[0,66]}]},{"pos":[71614,71619],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71732,71737],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71850,71855],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71968,71973],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72086,72091],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72204,72209],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72322,72327],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72443,72451],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[72738,72813],"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)","pos":[0,75]}]},{"pos":[73096,73101],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73214,73219],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73332,73337],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73450,73455],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73568,73573],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73686,73691],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73804,73809],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73953,73961],"content":"Calendar","needQuote":true,"needEscape":true,"nodes":[{"content":"Calendar","pos":[0,8]}]},{"pos":[74097,74105],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[74269,74282],"content":"Add(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(TimeSpan)","pos":[0,13]}]},{"pos":[74450,74464],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[74598,74606],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[74772,74787],"content":"AddDays(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddDays(Double)","pos":[0,15]}]},{"pos":[74959,74973],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[75105,75111],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[75274,75290],"content":"AddHours(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddHours(Double)","pos":[0,16]}]},{"pos":[75464,75478],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[75610,75616],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[75786,75809],"content":"AddMilliseconds(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMilliseconds(Double)","pos":[0,23]}]},{"pos":[75997,76011],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[76143,76149],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[76314,76332],"content":"AddMinutes(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMinutes(Double)","pos":[0,18]}]},{"pos":[76510,76524],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[76656,76662],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[76825,76841],"content":"AddMonths(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddMonths(Int32)","pos":[0,16]}]},{"pos":[77015,77029],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[77160,77165],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77328,77346],"content":"AddSeconds(Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddSeconds(Double)","pos":[0,18]}]},{"pos":[77524,77538],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[77670,77676],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[77838,77853],"content":"AddTicks(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddTicks(Int64)","pos":[0,15]}]},{"pos":[78025,78039],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[78170,78175],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[78335,78350],"content":"AddYears(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddYears(Int32)","pos":[0,15]}]},{"pos":[78522,78536],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[78667,78672],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78862,78900],"content":"Compare(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(DateTimeOffset,DateTimeOffset)","pos":[0,38]}]},{"pos":[79109,79114],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79236,79250],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[79390,79404],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[79592,79617],"content":"CompareTo(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(DateTimeOffset)","pos":[0,25]}]},{"pos":[79800,79805],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[79927,79941],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[80101,80105],"content":"Date","needQuote":true,"needEscape":true,"nodes":[{"content":"Date","pos":[0,4]}]},{"pos":[80249,80257],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[80409,80417],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[80569,80577],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[80724,80727],"content":"Day","needQuote":true,"needEscape":true,"nodes":[{"content":"Day","pos":[0,3]}]},{"pos":[80866,80871],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81018,81027],"content":"DayOfWeek","needQuote":true,"needEscape":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[81182,81191],"content":"DayOfWeek","needQuote":true,"needEscape":true,"nodes":[{"content":"DayOfWeek","pos":[0,9]}]},{"pos":[81346,81355],"content":"DayOfYear","needQuote":true,"needEscape":true,"nodes":[{"content":"DayOfYear","pos":[0,9]}]},{"pos":[81506,81511],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[81678,81700],"content":"Equals(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(DateTimeOffset)","pos":[0,22]}]},{"pos":[81879,81886],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82012,82026],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[82203,82217],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[82380,82387],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[82505,82511],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[82702,82739],"content":"Equals(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(DateTimeOffset,DateTimeOffset)","pos":[0,37]}]},{"pos":[82948,82955],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83081,83095],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[83235,83249],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[83439,83466],"content":"EqualsExact(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"EqualsExact(DateTimeOffset)","pos":[0,27]}]},{"pos":[83655,83662],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[83788,83802],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[83984,84003],"content":"FromFileTime(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromFileTime(Int64)","pos":[0,19]}]},{"pos":[84183,84197],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[84328,84333],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[84509,84540],"content":"FromUnixTimeMilliseconds(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromUnixTimeMilliseconds(Int64)","pos":[0,31]}]},{"pos":[84744,84758],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[84889,84894],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[85065,85091],"content":"FromUnixTimeSeconds(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromUnixTimeSeconds(Int64)","pos":[0,26]}]},{"pos":[85285,85299],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[85430,85435],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[85584,85597],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[85756,85761],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85903,85907],"content":"Hour","needQuote":true,"needEscape":true,"nodes":[{"content":"Hour","pos":[0,4]}]},{"pos":[86048,86053],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[86204,86217],"content":"LocalDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalDateTime","pos":[0,13]}]},{"pos":[86379,86387],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[86539,86547],"content":"MaxValue","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxValue","pos":[0,8]}]},{"pos":[86705,86719],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[86886,86897],"content":"Millisecond","needQuote":true,"needEscape":true,"nodes":[{"content":"Millisecond","pos":[0,11]}]},{"pos":[87052,87057],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87201,87207],"content":"Minute","needQuote":true,"needEscape":true,"nodes":[{"content":"Minute","pos":[0,6]}]},{"pos":[87352,87357],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[87503,87511],"content":"MinValue","needQuote":true,"needEscape":true,"nodes":[{"content":"MinValue","pos":[0,8]}]},{"pos":[87669,87683],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[87844,87849],"content":"Month","needQuote":true,"needEscape":true,"nodes":[{"content":"Month","pos":[0,5]}]},{"pos":[87992,87997],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[88138,88141],"content":"Now","needQuote":true,"needEscape":true,"nodes":[{"content":"Now","pos":[0,3]}]},{"pos":[88289,88303],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[88465,88471],"content":"Offset","needQuote":true,"needEscape":true,"nodes":[{"content":"Offset","pos":[0,6]}]},{"pos":[88619,88627],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[88821,88857],"content":"op_Addition(DateTimeOffset,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Addition(DateTimeOffset,TimeSpan)","pos":[0,36]}]},{"pos":[89071,89085],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[89225,89239],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[89373,89381],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[89581,89623],"content":"op_Equality(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(DateTimeOffset,DateTimeOffset)","pos":[0,42]}]},{"pos":[89842,89849],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[89975,89989],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[90129,90143],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[90358,90403],"content":"op_GreaterThan(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(DateTimeOffset,DateTimeOffset)","pos":[0,45]}]},{"pos":[90628,90635],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[90761,90775],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[90915,90929],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[91151,91203],"content":"op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)","pos":[0,52]}]},{"pos":[91442,91449],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[91575,91589],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[91729,91743],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[91927,91948],"content":"op_Implicit(DateTime)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit(DateTime)","pos":[0,21]}]},{"pos":[92132,92146],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[92280,92288],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[92490,92534],"content":"op_Inequality(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(DateTimeOffset,DateTimeOffset)","pos":[0,44]}]},{"pos":[92757,92764],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[92890,92904],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[93044,93058],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[93270,93312],"content":"op_LessThan(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(DateTimeOffset,DateTimeOffset)","pos":[0,42]}]},{"pos":[93531,93538],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[93664,93678],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[93818,93832],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[94051,94100],"content":"op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)","pos":[0,49]}]},{"pos":[94333,94340],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[94466,94480],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[94620,94634],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[94849,94894],"content":"op_Subtraction(DateTimeOffset,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Subtraction(DateTimeOffset,DateTimeOffset)","pos":[0,45]}]},{"pos":[95120,95128],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[95256,95270],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[95410,95424],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[95633,95672],"content":"op_Subtraction(DateTimeOffset,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Subtraction(DateTimeOffset,TimeSpan)","pos":[0,39]}]},{"pos":[95892,95906],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[96046,96060],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[96194,96202],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[96366,96379],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[96547,96561],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[96693,96699],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[96882,96911],"content":"Parse(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String,IFormatProvider)","pos":[0,29]}]},{"pos":[97111,97125],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[97257,97263],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[97388,97403],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[97640,97684],"content":"Parse(String,IFormatProvider,DateTimeStyles)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String,IFormatProvider,DateTimeStyles)","pos":[0,44]}]},{"pos":[97914,97928],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[98060,98066],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[98191,98206],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[98376,98390],"content":"DateTimeStyles","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[98622,98663],"content":"ParseExact(String,String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseExact(String,String,IFormatProvider)","pos":[0,41]}]},{"pos":[98887,98901],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[99033,99039],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[99155,99161],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[99286,99301],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[99557,99613],"content":"ParseExact(String,String,IFormatProvider,DateTimeStyles)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseExact(String,String,IFormatProvider,DateTimeStyles)","pos":[0,56]}]},{"pos":[99867,99881],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[100013,100019],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[100135,100141],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[100266,100281],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[100451,100465],"content":"DateTimeStyles","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[100735,100793],"content":"ParseExact(String,String[],IFormatProvider,DateTimeStyles)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseExact(String,String[],IFormatProvider,DateTimeStyles)","pos":[0,58]}]},{"pos":[101051,101065],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[101197,101203],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[101319,101325],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[101452,101467],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[101637,101651],"content":"DateTimeStyles","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[101827,101833],"content":"Second","needQuote":true,"needEscape":true,"nodes":[{"content":"Second","pos":[0,6]}]},{"pos":[101978,101983],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[102152,102176],"content":"Subtract(DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtract(DateTimeOffset)","pos":[0,24]}]},{"pos":[102360,102368],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[102496,102510],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[102691,102709],"content":"Subtract(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Subtract(TimeSpan)","pos":[0,18]}]},{"pos":[102887,102901],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[103035,103043],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[103230,103266],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[103471,103476],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[103590,103596],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[103822,103901],"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)","pos":[0,79]}]},{"pos":[104193,104199],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[104489,104581],"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)","pos":[0,92]}]},{"pos":[104954,104971],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[105185,105201],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[105388,105393],"content":"Ticks","needQuote":true,"needEscape":true,"nodes":[{"content":"Ticks","pos":[0,5]}]},{"pos":[105536,105541],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[105688,105697],"content":"TimeOfDay","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeOfDay","pos":[0,9]}]},{"pos":[105851,105859],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[106013,106025],"content":"ToFileTime()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToFileTime()","pos":[0,12]}]},{"pos":[106182,106187],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[106336,106349],"content":"ToLocalTime()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToLocalTime()","pos":[0,13]}]},{"pos":[106517,106531],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[106712,106730],"content":"ToOffset(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToOffset(TimeSpan)","pos":[0,18]}]},{"pos":[106908,106922],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[107056,107064],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[107216,107226],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[107380,107386],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[107558,107583],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[107767,107773],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[107898,107913],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[108094,108110],"content":"ToString(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(String)","pos":[0,16]}]},{"pos":[108276,108282],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108398,108404],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108590,108622],"content":"ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(String,IFormatProvider)","pos":[0,32]}]},{"pos":[108820,108826],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[108942,108948],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[109073,109088],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[109261,109278],"content":"ToUniversalTime()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUniversalTime()","pos":[0,17]}]},{"pos":[109454,109468],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[109646,109670],"content":"ToUnixTimeMilliseconds()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUnixTimeMilliseconds()","pos":[0,24]}]},{"pos":[109851,109856],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[110011,110030],"content":"ToUnixTimeSeconds()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToUnixTimeSeconds()","pos":[0,19]}]},{"pos":[110201,110206],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[110390,110421],"content":"TryParse(String,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParse(String,DateTimeOffset)","pos":[0,31]}]},{"pos":[110618,110625],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[110743,110749],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[110873,110887],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[111148,111210],"content":"TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)","pos":[0,62]}]},{"pos":[111469,111476],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[111594,111600],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[111725,111740],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[111910,111924],"content":"DateTimeStyles","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[112078,112092],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[112372,112446],"content":"TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)","pos":[0,74]}]},{"pos":[112729,112736],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[112854,112860],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[112976,112982],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[113107,113122],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[113292,113306],"content":"DateTimeStyles","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[113460,113474],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[113756,113832],"content":"TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)","pos":[0,76]}]},{"pos":[114119,114126],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[114244,114250],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[114366,114372],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[114499,114514],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[114684,114698],"content":"DateTimeStyles","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeStyles","pos":[0,14]}]},{"pos":[114852,114866],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[115033,115044],"content":"UtcDateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"UtcDateTime","pos":[0,11]}]},{"pos":[115202,115210],"content":"DateTime","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTime","pos":[0,8]}]},{"pos":[115360,115366],"content":"UtcNow","needQuote":true,"needEscape":true,"nodes":[{"content":"UtcNow","pos":[0,6]}]},{"pos":[115520,115534],"content":"DateTimeOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"DateTimeOffset","pos":[0,14]}]},{"pos":[115698,115706],"content":"UtcTicks","needQuote":true,"needEscape":true,"nodes":[{"content":"UtcTicks","pos":[0,8]}]},{"pos":[115855,115860],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[116002,116006],"content":"Year","needQuote":true,"needEscape":true,"nodes":[{"content":"Year","pos":[0,4]}]},{"pos":[116147,116152],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DateTimeOffset\n  id: DateTimeOffset\n  children:\n  - System.DateTimeOffset.#ctor(System.DateTime)\n  - System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  - System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  - System.DateTimeOffset.Add(System.TimeSpan)\n  - System.DateTimeOffset.AddDays(System.Double)\n  - System.DateTimeOffset.AddHours(System.Double)\n  - System.DateTimeOffset.AddMilliseconds(System.Double)\n  - System.DateTimeOffset.AddMinutes(System.Double)\n  - System.DateTimeOffset.AddMonths(System.Int32)\n  - System.DateTimeOffset.AddSeconds(System.Double)\n  - System.DateTimeOffset.AddTicks(System.Int64)\n  - System.DateTimeOffset.AddYears(System.Int32)\n  - System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  - System.DateTimeOffset.Date\n  - System.DateTimeOffset.DateTime\n  - System.DateTimeOffset.Day\n  - System.DateTimeOffset.DayOfWeek\n  - System.DateTimeOffset.DayOfYear\n  - System.DateTimeOffset.Equals(System.DateTimeOffset)\n  - System.DateTimeOffset.Equals(System.Object)\n  - System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  - System.DateTimeOffset.FromFileTime(System.Int64)\n  - System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  - System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  - System.DateTimeOffset.GetHashCode\n  - System.DateTimeOffset.Hour\n  - System.DateTimeOffset.LocalDateTime\n  - System.DateTimeOffset.MaxValue\n  - System.DateTimeOffset.Millisecond\n  - System.DateTimeOffset.Minute\n  - System.DateTimeOffset.MinValue\n  - System.DateTimeOffset.Month\n  - System.DateTimeOffset.Now\n  - System.DateTimeOffset.Offset\n  - System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  - System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_Implicit(System.DateTime)\n  - System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  - System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  - System.DateTimeOffset.Parse(System.String)\n  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  - System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  - System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  - System.DateTimeOffset.Second\n  - System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  - System.DateTimeOffset.Subtract(System.TimeSpan)\n  - System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  - System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.DateTimeOffset.Ticks\n  - System.DateTimeOffset.TimeOfDay\n  - System.DateTimeOffset.ToFileTime\n  - System.DateTimeOffset.ToLocalTime\n  - System.DateTimeOffset.ToOffset(System.TimeSpan)\n  - System.DateTimeOffset.ToString\n  - System.DateTimeOffset.ToString(System.IFormatProvider)\n  - System.DateTimeOffset.ToString(System.String)\n  - System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  - System.DateTimeOffset.ToUniversalTime\n  - System.DateTimeOffset.ToUnixTimeMilliseconds\n  - System.DateTimeOffset.ToUnixTimeSeconds\n  - System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  - System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  - System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  - System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  - System.DateTimeOffset.UtcDateTime\n  - System.DateTimeOffset.UtcNow\n  - System.DateTimeOffset.UtcTicks\n  - System.DateTimeOffset.Year\n  langs:\n  - csharp\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n  type: Struct\n  syntax:\n    content: 'public struct DateTimeOffset : IComparable, IComparable<DateTimeOffset>, IEquatable<DateTimeOffset>, IFormattable, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable<System.DateTimeOffset>\n  - System.IEquatable<System.DateTimeOffset>\n  - System.IFormattable\n  - System.Runtime.Serialization.IDeserializationCallback\n  - System.Runtime.Serialization.ISerializable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.#ctor(System.DateTime)\n  id: '#ctor(System.DateTime)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(DateTime)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)\n  fullName: System.DateTimeOffset.DateTimeOffset(DateTime)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  id: '#ctor(System.DateTime,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(DateTime,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset (DateTime dateTime, TimeSpan offset);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: Parameter description to be filled\n    - id: offset\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  id: '#ctor(System.Int64,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int64,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int64,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int64,TimeSpan)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset (long ticks, TimeSpan offset);\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: offset\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, TimeSpan offset);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: month\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: day\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: hour\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: minute\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: second\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: offset\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, TimeSpan offset);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: month\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: day\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: hour\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: minute\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: second\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: millisecond\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: offset\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)'\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset (int year, int month, int day, int hour, int minute, int second, int millisecond, System.Globalization.Calendar calendar, TimeSpan offset);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: month\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: day\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: hour\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: minute\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: second\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: millisecond\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: calendar\n      type: System.Globalization.Calendar\n      description: Parameter description to be filled\n    - id: offset\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Add(System.TimeSpan)\n  id: Add(System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Add(TimeSpan)\n  nameWithType: DateTimeOffset.Add(TimeSpan)\n  fullName: System.DateTimeOffset.Add(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset Add (TimeSpan timeSpan);\n    parameters:\n    - id: timeSpan\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddDays(System.Double)\n  id: AddDays(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddDays(Double)\n  nameWithType: DateTimeOffset.AddDays(Double)\n  fullName: System.DateTimeOffset.AddDays(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddDays (double days);\n    parameters:\n    - id: days\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddHours(System.Double)\n  id: AddHours(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddHours(Double)\n  nameWithType: DateTimeOffset.AddHours(Double)\n  fullName: System.DateTimeOffset.AddHours(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddHours (double hours);\n    parameters:\n    - id: hours\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddMilliseconds(System.Double)\n  id: AddMilliseconds(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddMilliseconds(Double)\n  nameWithType: DateTimeOffset.AddMilliseconds(Double)\n  fullName: System.DateTimeOffset.AddMilliseconds(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddMilliseconds (double milliseconds);\n    parameters:\n    - id: milliseconds\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddMinutes(System.Double)\n  id: AddMinutes(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddMinutes(Double)\n  nameWithType: DateTimeOffset.AddMinutes(Double)\n  fullName: System.DateTimeOffset.AddMinutes(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddMinutes (double minutes);\n    parameters:\n    - id: minutes\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddMonths(System.Int32)\n  id: AddMonths(System.Int32)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddMonths(Int32)\n  nameWithType: DateTimeOffset.AddMonths(Int32)\n  fullName: System.DateTimeOffset.AddMonths(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddMonths (int months);\n    parameters:\n    - id: months\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddSeconds(System.Double)\n  id: AddSeconds(System.Double)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddSeconds(Double)\n  nameWithType: DateTimeOffset.AddSeconds(Double)\n  fullName: System.DateTimeOffset.AddSeconds(Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddSeconds (double seconds);\n    parameters:\n    - id: seconds\n      type: System.Double\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddTicks(System.Int64)\n  id: AddTicks(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddTicks(Int64)\n  nameWithType: DateTimeOffset.AddTicks(Int64)\n  fullName: System.DateTimeOffset.AddTicks(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddTicks (long ticks);\n    parameters:\n    - id: ticks\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.AddYears(System.Int32)\n  id: AddYears(System.Int32)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: AddYears(Int32)\n  nameWithType: DateTimeOffset.AddYears(Int32)\n  fullName: System.DateTimeOffset.AddYears(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset AddYears (int years);\n    parameters:\n    - id: years\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  id: Compare(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Compare(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int Compare (DateTimeOffset first, DateTimeOffset second);\n    parameters:\n    - id: first\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: second\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  id: CompareTo(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: CompareTo(DateTimeOffset)\n  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)\n  fullName: System.DateTimeOffset.CompareTo(DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (DateTimeOffset other);\n    parameters:\n    - id: other\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Date\n  id: Date\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Date\n  nameWithType: DateTimeOffset.Date\n  fullName: System.DateTimeOffset.Date\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTime Date { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.DateTime\n  id: DateTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DateTime\n  nameWithType: DateTimeOffset.DateTime\n  fullName: System.DateTimeOffset.DateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTime DateTime { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Day\n  id: Day\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Day\n  nameWithType: DateTimeOffset.Day\n  fullName: System.DateTimeOffset.Day\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Day { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.DayOfWeek\n  id: DayOfWeek\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DayOfWeek\n  nameWithType: DateTimeOffset.DayOfWeek\n  fullName: System.DateTimeOffset.DayOfWeek\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DayOfWeek DayOfWeek { get; }\n    return:\n      type: System.DayOfWeek\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.DayOfYear\n  id: DayOfYear\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: DayOfYear\n  nameWithType: DateTimeOffset.DayOfYear\n  fullName: System.DateTimeOffset.DayOfYear\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int DayOfYear { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)\n  id: Equals(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Equals(DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset)\n  fullName: System.DateTimeOffset.Equals(DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (DateTimeOffset other);\n    parameters:\n    - id: other\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: DateTimeOffset.Equals(Object)\n  fullName: System.DateTimeOffset.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  id: Equals(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Equals(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool Equals (DateTimeOffset first, DateTimeOffset second);\n    parameters:\n    - id: first\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: second\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  id: EqualsExact(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: EqualsExact(DateTimeOffset)\n  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)\n  fullName: System.DateTimeOffset.EqualsExact(DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool EqualsExact (DateTimeOffset other);\n    parameters:\n    - id: other\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.FromFileTime(System.Int64)\n  id: FromFileTime(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: FromFileTime(Int64)\n  nameWithType: DateTimeOffset.FromFileTime(Int64)\n  fullName: System.DateTimeOffset.FromFileTime(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset FromFileTime (long fileTime);\n    parameters:\n    - id: fileTime\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  id: FromUnixTimeMilliseconds(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: FromUnixTimeMilliseconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n  fullName: System.DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset FromUnixTimeMilliseconds (long milliseconds);\n    parameters:\n    - id: milliseconds\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  id: FromUnixTimeSeconds(System.Int64)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: FromUnixTimeSeconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)\n  fullName: System.DateTimeOffset.FromUnixTimeSeconds(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset FromUnixTimeSeconds (long seconds);\n    parameters:\n    - id: seconds\n      type: System.Int64\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.GetHashCode\n  id: GetHashCode\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: DateTimeOffset.GetHashCode()\n  fullName: System.DateTimeOffset.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Hour\n  id: Hour\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Hour\n  nameWithType: DateTimeOffset.Hour\n  fullName: System.DateTimeOffset.Hour\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Hour { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.LocalDateTime\n  id: LocalDateTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: LocalDateTime\n  nameWithType: DateTimeOffset.LocalDateTime\n  fullName: System.DateTimeOffset.LocalDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTime LocalDateTime { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.MaxValue\n  id: MaxValue\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: DateTimeOffset.MaxValue\n  fullName: System.DateTimeOffset.MaxValue\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static readonly DateTimeOffset MaxValue;\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Millisecond\n  id: Millisecond\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Millisecond\n  nameWithType: DateTimeOffset.Millisecond\n  fullName: System.DateTimeOffset.Millisecond\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Millisecond { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Minute\n  id: Minute\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Minute\n  nameWithType: DateTimeOffset.Minute\n  fullName: System.DateTimeOffset.Minute\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Minute { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.MinValue\n  id: MinValue\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: DateTimeOffset.MinValue\n  fullName: System.DateTimeOffset.MinValue\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static readonly DateTimeOffset MinValue;\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Month\n  id: Month\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Month\n  nameWithType: DateTimeOffset.Month\n  fullName: System.DateTimeOffset.Month\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Month { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Now\n  id: Now\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Now\n  nameWithType: DateTimeOffset.Now\n  fullName: System.DateTimeOffset.Now\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset Now { get; }\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Offset\n  id: Offset\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Offset\n  nameWithType: DateTimeOffset.Offset\n  fullName: System.DateTimeOffset.Offset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public TimeSpan Offset { get; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  id: op_Addition(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Addition(DateTimeOffset,TimeSpan)\n  nameWithType: DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)\n  fullName: System.DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset op_Addition (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: timeSpan\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Equality(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Equality (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_GreaterThan(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_GreaterThan (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_Implicit(System.DateTime)\n  id: op_Implicit(System.DateTime)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Implicit(DateTime)\n  nameWithType: DateTimeOffset.op_Implicit(DateTime)\n  fullName: System.DateTimeOffset.op_Implicit(DateTime)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset op_Implicit (DateTime dateTime);\n    parameters:\n    - id: dateTime\n      type: System.DateTime\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Inequality(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_Inequality (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_LessThan(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_LessThan (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool op_LessThanOrEqual (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  id: op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Subtraction(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static TimeSpan op_Subtraction (DateTimeOffset left, DateTimeOffset right);\n    parameters:\n    - id: left\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: right\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  id: op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: op_Subtraction(DateTimeOffset,TimeSpan)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)\n  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset op_Subtraction (DateTimeOffset dateTimeOffset, TimeSpan timeSpan);\n    parameters:\n    - id: dateTimeOffset\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    - id: timeSpan\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: DateTimeOffset.Parse(String)\n  fullName: System.DateTimeOffset.Parse(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset Parse (string input);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Parse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Parse(String,IFormatProvider)\n  nameWithType: DateTimeOffset.Parse(String,IFormatProvider)\n  fullName: System.DateTimeOffset.Parse(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset Parse (string input, IFormatProvider formatProvider);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Parse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Parse(String,IFormatProvider,DateTimeStyles)\n  nameWithType: DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)\n  fullName: System.DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset Parse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Parse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  id: ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ParseExact(String,String,IFormatProvider)\n  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider)\n  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ParseExact*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ParseExact(String,String,IFormatProvider,DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)\n  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset ParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ParseExact*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  id: ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ParseExact(String,String[],IFormatProvider,DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)\n  fullName: System.DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset ParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: formats\n      type: System.String[]\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ParseExact*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Second\n  id: Second\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Second\n  nameWithType: DateTimeOffset.Second\n  fullName: System.DateTimeOffset.Second\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Second { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  id: Subtract(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Subtract(DateTimeOffset)\n  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)\n  fullName: System.DateTimeOffset.Subtract(DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public TimeSpan Subtract (DateTimeOffset value);\n    parameters:\n    - id: value\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Subtract*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Subtract(System.TimeSpan)\n  id: Subtract(System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Subtract(TimeSpan)\n  nameWithType: DateTimeOffset.Subtract(TimeSpan)\n  fullName: System.DateTimeOffset.Subtract(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset Subtract (TimeSpan value);\n    parameters:\n    - id: value\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.Subtract*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: DateTimeOffset.System.IComparable.CompareTo(Object)\n  fullName: System.DateTimeOffset.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  isEii: true\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Ticks\n  id: Ticks\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Ticks\n  nameWithType: DateTimeOffset.Ticks\n  fullName: System.DateTimeOffset.Ticks\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long Ticks { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.TimeOfDay\n  id: TimeOfDay\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TimeOfDay\n  nameWithType: DateTimeOffset.TimeOfDay\n  fullName: System.DateTimeOffset.TimeOfDay\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public TimeSpan TimeOfDay { get; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToFileTime\n  id: ToFileTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToFileTime()\n  nameWithType: DateTimeOffset.ToFileTime()\n  fullName: System.DateTimeOffset.ToFileTime()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long ToFileTime ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToLocalTime\n  id: ToLocalTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToLocalTime()\n  nameWithType: DateTimeOffset.ToLocalTime()\n  fullName: System.DateTimeOffset.ToLocalTime()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset ToLocalTime ();\n    parameters: []\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)\n  id: ToOffset(System.TimeSpan)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToOffset(TimeSpan)\n  nameWithType: DateTimeOffset.ToOffset(TimeSpan)\n  fullName: System.DateTimeOffset.ToOffset(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset ToOffset (TimeSpan offset);\n    parameters:\n    - id: offset\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToString\n  id: ToString\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: DateTimeOffset.ToString()\n  fullName: System.DateTimeOffset.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(IFormatProvider)\n  fullName: System.DateTimeOffset.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string ToString (IFormatProvider formatProvider);\n    parameters:\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: DateTimeOffset.ToString(String)\n  fullName: System.DateTimeOffset.ToString(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToString(String,IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(String,IFormatProvider)\n  fullName: System.DateTimeOffset.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string ToString (string format, IFormatProvider formatProvider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToUniversalTime\n  id: ToUniversalTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToUniversalTime()\n  nameWithType: DateTimeOffset.ToUniversalTime()\n  fullName: System.DateTimeOffset.ToUniversalTime()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTimeOffset ToUniversalTime ();\n    parameters: []\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToUnixTimeMilliseconds\n  id: ToUnixTimeMilliseconds\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToUnixTimeMilliseconds()\n  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()\n  fullName: System.DateTimeOffset.ToUnixTimeMilliseconds()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long ToUnixTimeMilliseconds ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.ToUnixTimeSeconds\n  id: ToUnixTimeSeconds\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: ToUnixTimeSeconds()\n  nameWithType: DateTimeOffset.ToUnixTimeSeconds()\n  fullName: System.DateTimeOffset.ToUnixTimeSeconds()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long ToUnixTimeSeconds ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  id: TryParse(System.String,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParse(String,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParse(String,DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool TryParse (string input, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: result\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.TryParse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  id: TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool TryParse (string input, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: Parameter description to be filled\n    - id: result\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.TryParse*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  id: TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool TryParseExact (string input, string format, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: Parameter description to be filled\n    - id: result\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.TryParseExact*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  id: TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool TryParseExact (string input, string[] formats, IFormatProvider formatProvider, System.Globalization.DateTimeStyles styles, out DateTimeOffset result);\n    parameters:\n    - id: input\n      type: System.String\n      description: Parameter description to be filled\n    - id: formats\n      type: System.String[]\n      description: Parameter description to be filled\n    - id: formatProvider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    - id: styles\n      type: System.Globalization.DateTimeStyles\n      description: Parameter description to be filled\n    - id: result\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.DateTimeOffset.TryParseExact*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.UtcDateTime\n  id: UtcDateTime\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: UtcDateTime\n  nameWithType: DateTimeOffset.UtcDateTime\n  fullName: System.DateTimeOffset.UtcDateTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public DateTime UtcDateTime { get; }\n    return:\n      type: System.DateTime\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.UtcNow\n  id: UtcNow\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: UtcNow\n  nameWithType: DateTimeOffset.UtcNow\n  fullName: System.DateTimeOffset.UtcNow\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static DateTimeOffset UtcNow { get; }\n    return:\n      type: System.DateTimeOffset\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.UtcTicks\n  id: UtcTicks\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: UtcTicks\n  nameWithType: DateTimeOffset.UtcTicks\n  fullName: System.DateTimeOffset.UtcTicks\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long UtcTicks { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DateTimeOffset.Year\n  id: Year\n  parent: System.DateTimeOffset\n  langs:\n  - csharp\n  name: Year\n  nameWithType: DateTimeOffset.Year\n  fullName: System.DateTimeOffset.Year\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Year { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.DateTimeOffset.#ctor(System.DateTime)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(DateTime)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime)\n  fullName: System.DateTimeOffset.DateTimeOffset(DateTime)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.#ctor(System.DateTime,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(DateTime,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(DateTime,TimeSpan)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.#ctor(System.Int64,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int64,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int64,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int64,TimeSpan)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Globalization.Calendar,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)\n  nameWithType: DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)\n  fullName: System.DateTimeOffset.DateTimeOffset(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Calendar,TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  nameWithType: Calendar\n  fullName: System.Globalization.Calendar\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.Add(System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Add(TimeSpan)\n  nameWithType: DateTimeOffset.Add(TimeSpan)\n  fullName: System.DateTimeOffset.Add(TimeSpan)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.AddDays(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddDays(Double)\n  nameWithType: DateTimeOffset.AddDays(Double)\n  fullName: System.DateTimeOffset.AddDays(Double)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTimeOffset.AddHours(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddHours(Double)\n  nameWithType: DateTimeOffset.AddHours(Double)\n  fullName: System.DateTimeOffset.AddHours(Double)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTimeOffset.AddMilliseconds(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMilliseconds(Double)\n  nameWithType: DateTimeOffset.AddMilliseconds(Double)\n  fullName: System.DateTimeOffset.AddMilliseconds(Double)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTimeOffset.AddMinutes(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMinutes(Double)\n  nameWithType: DateTimeOffset.AddMinutes(Double)\n  fullName: System.DateTimeOffset.AddMinutes(Double)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTimeOffset.AddMonths(System.Int32)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddMonths(Int32)\n  nameWithType: DateTimeOffset.AddMonths(Int32)\n  fullName: System.DateTimeOffset.AddMonths(Int32)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.AddSeconds(System.Double)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddSeconds(Double)\n  nameWithType: DateTimeOffset.AddSeconds(Double)\n  fullName: System.DateTimeOffset.AddSeconds(Double)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.DateTimeOffset.AddTicks(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddTicks(Int64)\n  nameWithType: DateTimeOffset.AddTicks(Int64)\n  fullName: System.DateTimeOffset.AddTicks(Int64)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.AddYears(System.Int32)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: AddYears(Int32)\n  nameWithType: DateTimeOffset.AddYears(Int32)\n  fullName: System.DateTimeOffset.AddYears(Int32)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Compare(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Compare(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.Compare(DateTimeOffset,DateTimeOffset)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.CompareTo(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: CompareTo(DateTimeOffset)\n  nameWithType: DateTimeOffset.CompareTo(DateTimeOffset)\n  fullName: System.DateTimeOffset.CompareTo(DateTimeOffset)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.Date\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Date\n  nameWithType: DateTimeOffset.Date\n  fullName: System.DateTimeOffset.Date\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.DateTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTimeOffset.DateTime\n  fullName: System.DateTimeOffset.DateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.Day\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Day\n  nameWithType: DateTimeOffset.Day\n  fullName: System.DateTimeOffset.Day\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.DayOfWeek\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DateTimeOffset.DayOfWeek\n  fullName: System.DateTimeOffset.DayOfWeek\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.DateTimeOffset.DayOfYear\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: DayOfYear\n  nameWithType: DateTimeOffset.DayOfYear\n  fullName: System.DateTimeOffset.DayOfYear\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals(DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset)\n  fullName: System.DateTimeOffset.Equals(DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.Equals(System.Object)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DateTimeOffset.Equals(Object)\n  fullName: System.DateTimeOffset.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTimeOffset.Equals(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Equals(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.Equals(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.EqualsExact(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: EqualsExact(DateTimeOffset)\n  nameWithType: DateTimeOffset.EqualsExact(DateTimeOffset)\n  fullName: System.DateTimeOffset.EqualsExact(DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.FromFileTime(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromFileTime(Int64)\n  nameWithType: DateTimeOffset.FromFileTime(Int64)\n  fullName: System.DateTimeOffset.FromFileTime(Int64)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.FromUnixTimeMilliseconds(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromUnixTimeMilliseconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n  fullName: System.DateTimeOffset.FromUnixTimeMilliseconds(Int64)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.FromUnixTimeSeconds(System.Int64)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: FromUnixTimeSeconds(Int64)\n  nameWithType: DateTimeOffset.FromUnixTimeSeconds(Int64)\n  fullName: System.DateTimeOffset.FromUnixTimeSeconds(Int64)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.GetHashCode\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DateTimeOffset.GetHashCode()\n  fullName: System.DateTimeOffset.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Hour\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Hour\n  nameWithType: DateTimeOffset.Hour\n  fullName: System.DateTimeOffset.Hour\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.LocalDateTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: LocalDateTime\n  nameWithType: DateTimeOffset.LocalDateTime\n  fullName: System.DateTimeOffset.LocalDateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.MaxValue\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: MaxValue\n  nameWithType: DateTimeOffset.MaxValue\n  fullName: System.DateTimeOffset.MaxValue\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.Millisecond\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Millisecond\n  nameWithType: DateTimeOffset.Millisecond\n  fullName: System.DateTimeOffset.Millisecond\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Minute\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Minute\n  nameWithType: DateTimeOffset.Minute\n  fullName: System.DateTimeOffset.Minute\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.MinValue\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: MinValue\n  nameWithType: DateTimeOffset.MinValue\n  fullName: System.DateTimeOffset.MinValue\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.Month\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Month\n  nameWithType: DateTimeOffset.Month\n  fullName: System.DateTimeOffset.Month\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Now\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Now\n  nameWithType: DateTimeOffset.Now\n  fullName: System.DateTimeOffset.Now\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.Offset\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Offset\n  nameWithType: DateTimeOffset.Offset\n  fullName: System.DateTimeOffset.Offset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.op_Addition(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Addition(DateTimeOffset,TimeSpan)\n  nameWithType: DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)\n  fullName: System.DateTimeOffset.op_Addition(DateTimeOffset,TimeSpan)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.op_Equality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Equality(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_Equality(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_GreaterThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_GreaterThan(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_GreaterThan(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_GreaterThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_Implicit(System.DateTime)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Implicit(DateTime)\n  nameWithType: DateTimeOffset.op_Implicit(DateTime)\n  fullName: System.DateTimeOffset.op_Implicit(DateTime)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.op_Inequality(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Inequality(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_Inequality(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_LessThan(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_LessThan(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_LessThan(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_LessThanOrEqual(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Subtraction(DateTimeOffset,DateTimeOffset)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)\n  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,DateTimeOffset)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.op_Subtraction(System.DateTimeOffset,System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: op_Subtraction(DateTimeOffset,TimeSpan)\n  nameWithType: DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)\n  fullName: System.DateTimeOffset.op_Subtraction(DateTimeOffset,TimeSpan)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.Parse(System.String)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse(String)\n  nameWithType: DateTimeOffset.Parse(String)\n  fullName: System.DateTimeOffset.Parse(String)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse(String,IFormatProvider)\n  nameWithType: DateTimeOffset.Parse(String,IFormatProvider)\n  fullName: System.DateTimeOffset.Parse(String,IFormatProvider)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.DateTimeOffset.Parse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Parse(String,IFormatProvider,DateTimeStyles)\n  nameWithType: DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)\n  fullName: System.DateTimeOffset.Parse(String,IFormatProvider,DateTimeStyles)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact(String,String,IFormatProvider)\n  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider)\n  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact(String,String,IFormatProvider,DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)\n  fullName: System.DateTimeOffset.ParseExact(String,String,IFormatProvider,DateTimeStyles)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset.ParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ParseExact(String,String[],IFormatProvider,DateTimeStyles)\n  nameWithType: DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)\n  fullName: System.DateTimeOffset.ParseExact(String,String[],IFormatProvider,DateTimeStyles)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset.Second\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Second\n  nameWithType: DateTimeOffset.Second\n  fullName: System.DateTimeOffset.Second\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Subtract(System.DateTimeOffset)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Subtract(DateTimeOffset)\n  nameWithType: DateTimeOffset.Subtract(DateTimeOffset)\n  fullName: System.DateTimeOffset.Subtract(DateTimeOffset)\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.Subtract(System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Subtract(TimeSpan)\n  nameWithType: DateTimeOffset.Subtract(TimeSpan)\n  fullName: System.DateTimeOffset.Subtract(TimeSpan)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.System#IComparable#CompareTo(System.Object)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: DateTimeOffset.System.IComparable.CompareTo(Object)\n  fullName: System.DateTimeOffset.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTimeOffset.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n  fullName: System.DateTimeOffset.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DateTimeOffset.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.DateTimeOffset.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.DateTimeOffset.Ticks\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Ticks\n  nameWithType: DateTimeOffset.Ticks\n  fullName: System.DateTimeOffset.Ticks\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.TimeOfDay\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TimeOfDay\n  nameWithType: DateTimeOffset.TimeOfDay\n  fullName: System.DateTimeOffset.TimeOfDay\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.ToFileTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToFileTime()\n  nameWithType: DateTimeOffset.ToFileTime()\n  fullName: System.DateTimeOffset.ToFileTime()\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.ToLocalTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToLocalTime()\n  nameWithType: DateTimeOffset.ToLocalTime()\n  fullName: System.DateTimeOffset.ToLocalTime()\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.ToOffset(System.TimeSpan)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToOffset(TimeSpan)\n  nameWithType: DateTimeOffset.ToOffset(TimeSpan)\n  fullName: System.DateTimeOffset.ToOffset(TimeSpan)\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.DateTimeOffset.ToString\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString()\n  nameWithType: DateTimeOffset.ToString()\n  fullName: System.DateTimeOffset.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTimeOffset.ToString(System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(IFormatProvider)\n  fullName: System.DateTimeOffset.ToString(IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.DateTimeOffset.ToString(System.String)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString(String)\n  nameWithType: DateTimeOffset.ToString(String)\n  fullName: System.DateTimeOffset.ToString(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTimeOffset.ToString(System.String,System.IFormatProvider)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToString(String,IFormatProvider)\n  nameWithType: DateTimeOffset.ToString(String,IFormatProvider)\n  fullName: System.DateTimeOffset.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.DateTimeOffset.ToUniversalTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUniversalTime()\n  nameWithType: DateTimeOffset.ToUniversalTime()\n  fullName: System.DateTimeOffset.ToUniversalTime()\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.ToUnixTimeMilliseconds\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUnixTimeMilliseconds()\n  nameWithType: DateTimeOffset.ToUnixTimeMilliseconds()\n  fullName: System.DateTimeOffset.ToUnixTimeMilliseconds()\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.ToUnixTimeSeconds\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: ToUnixTimeSeconds()\n  nameWithType: DateTimeOffset.ToUnixTimeSeconds()\n  fullName: System.DateTimeOffset.ToUnixTimeSeconds()\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.TryParse(System.String,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParse(String,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParse(String,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.TryParse(System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String,System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.TryParseExact(System.String,System.String[],System.IFormatProvider,System.Globalization.DateTimeStyles,System.DateTimeOffset@)\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)\n  nameWithType: DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)\n  fullName: System.DateTimeOffset.TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Globalization.DateTimeStyles\n  parent: System.Globalization\n  isExternal: false\n  name: DateTimeStyles\n  nameWithType: DateTimeStyles\n  fullName: System.Globalization.DateTimeStyles\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.UtcDateTime\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcDateTime\n  nameWithType: DateTimeOffset.UtcDateTime\n  fullName: System.DateTimeOffset.UtcDateTime\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.DateTimeOffset.UtcNow\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcNow\n  nameWithType: DateTimeOffset.UtcNow\n  fullName: System.DateTimeOffset.UtcNow\n- uid: System.DateTimeOffset\n  parent: System\n  isExternal: false\n  name: DateTimeOffset\n  nameWithType: DateTimeOffset\n  fullName: System.DateTimeOffset\n- uid: System.DateTimeOffset.UtcTicks\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: UtcTicks\n  nameWithType: DateTimeOffset.UtcTicks\n  fullName: System.DateTimeOffset.UtcTicks\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.DateTimeOffset.Year\n  parent: System.DateTimeOffset\n  isExternal: false\n  name: Year\n  nameWithType: DateTimeOffset.Year\n  fullName: System.DateTimeOffset.Year\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DateTimeOffset.Equals*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n- uid: System.DateTimeOffset.Parse*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n- uid: System.DateTimeOffset.ParseExact*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n- uid: System.DateTimeOffset.Subtract*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n- uid: System.DateTimeOffset.ToString*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n- uid: System.DateTimeOffset.TryParse*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n- uid: System.DateTimeOffset.TryParseExact*\n  parent: System.DateTimeOffset\n  isExternal: false\n  nameWithType: DateTimeOffset.\n"}