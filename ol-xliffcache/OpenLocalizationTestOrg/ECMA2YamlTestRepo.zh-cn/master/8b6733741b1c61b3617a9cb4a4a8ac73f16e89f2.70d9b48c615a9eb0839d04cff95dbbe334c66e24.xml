{"nodes":[{"pos":[1433,1445],"content":"BinaryReader","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader","pos":[0,12]}]},{"pos":[2213,2233],"content":"BinaryReader(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader(Stream)","pos":[0,20]}]},{"pos":[2559,2593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2832,2861],"content":"BinaryReader(Stream,Encoding)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader(Stream,Encoding)","pos":[0,29]}]},{"pos":[3236,3270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3342,3376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3645,3682],"content":"BinaryReader(Stream,Encoding,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader(Stream,Encoding,Boolean)","pos":[0,37]}]},{"pos":[4089,4123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4195,4229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4296,4330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4499,4509],"content":"BaseStream","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"pos":[4798,4832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4991,4998],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[5378,5387],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[5841,5857],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6175,6209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6450,6467],"content":"FillBuffer(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillBuffer(Int32)","pos":[0,17]}]},{"pos":[6785,6819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6984,6994],"content":"PeekChar()","needQuote":true,"needEscape":true,"nodes":[{"content":"PeekChar()","pos":[0,10]}]},{"pos":[7276,7310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7467,7473],"content":"Read()","needQuote":true,"needEscape":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"pos":[7743,7777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8057,8081],"content":"Read(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Byte[],Int32,Int32)","pos":[0,24]}]},{"pos":[8425,8459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8520,8554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8615,8649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8706,8740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9020,9044],"content":"Read(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Char[],Int32,Int32)","pos":[0,24]}]},{"pos":[9388,9422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9483,9517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9578,9612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9669,9703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9929,9949],"content":"Read7BitEncodedInt()","needQuote":true,"needEscape":true,"nodes":[{"content":"Read7BitEncodedInt()","pos":[0,20]}]},{"pos":[10256,10290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10461,10474],"content":"ReadBoolean()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBoolean()","pos":[0,13]}]},{"pos":[10768,10802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10967,10977],"content":"ReadByte()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[11259,11293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11488,11504],"content":"ReadBytes(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBytes(Int32)","pos":[0,16]}]},{"pos":[11812,11846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11904,11938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12103,12113],"content":"ReadChar()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadChar()","pos":[0,10]}]},{"pos":[12395,12429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12624,12640],"content":"ReadChars(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadChars(Int32)","pos":[0,16]}]},{"pos":[12948,12982],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13040,13074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13245,13258],"content":"ReadDecimal()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadDecimal()","pos":[0,13]}]},{"pos":[13555,13589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13758,13770],"content":"ReadDouble()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadDouble()","pos":[0,12]}]},{"pos":[14062,14096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14263,14274],"content":"ReadInt16()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadInt16()","pos":[0,11]}]},{"pos":[14561,14595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14762,14773],"content":"ReadInt32()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadInt32()","pos":[0,11]}]},{"pos":[15058,15092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15259,15270],"content":"ReadInt64()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadInt64()","pos":[0,11]}]},{"pos":[15556,15590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15757,15768],"content":"ReadSByte()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadSByte()","pos":[0,11]}]},{"pos":[16055,16089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16258,16270],"content":"ReadSingle()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadSingle()","pos":[0,12]}]},{"pos":[16561,16595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16764,16776],"content":"ReadString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadString()","pos":[0,12]}]},{"pos":[17068,17102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17271,17283],"content":"ReadUInt16()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadUInt16()","pos":[0,12]}]},{"pos":[17575,17609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17778,17790],"content":"ReadUInt32()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadUInt32()","pos":[0,12]}]},{"pos":[18080,18114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18283,18295],"content":"ReadUInt64()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadUInt64()","pos":[0,12]}]},{"pos":[18586,18620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18731,18744],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[18860,18880],"content":"BinaryReader(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader(Stream)","pos":[0,20]}]},{"pos":[19059,19065],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[19254,19283],"content":"BinaryReader(Stream,Encoding)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader(Stream,Encoding)","pos":[0,29]}]},{"pos":[19480,19486],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[19617,19625],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[19835,19872],"content":"BinaryReader(Stream,Encoding,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryReader(Stream,Encoding,Boolean)","pos":[0,37]}]},{"pos":[20085,20091],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[20222,20230],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[20356,20363],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20517,20527],"content":"BaseStream","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseStream","pos":[0,10]}]},{"pos":[20686,20692],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[20842,20849],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[21029,21038],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[21238,21254],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[21420,21427],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21595,21612],"content":"FillBuffer(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillBuffer(Int32)","pos":[0,17]}]},{"pos":[21778,21783],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21931,21941],"content":"PeekChar()","needQuote":true,"needEscape":true,"nodes":[{"content":"PeekChar()","pos":[0,10]}]},{"pos":[22093,22098],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22242,22248],"content":"Read()","needQuote":true,"needEscape":true,"nodes":[{"content":"Read()","pos":[0,6]}]},{"pos":[22392,22397],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22582,22606],"content":"Read(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Byte[],Int32,Int32)","pos":[0,24]}]},{"pos":[22786,22791],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22903,22907],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[23020,23025],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23138,23143],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23328,23352],"content":"Read(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Char[],Int32,Int32)","pos":[0,24]}]},{"pos":[23532,23537],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23649,23653],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[23766,23771],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23884,23889],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24047,24067],"content":"Read7BitEncodedInt()","needQuote":true,"needEscape":true,"nodes":[{"content":"Read7BitEncodedInt()","pos":[0,20]}]},{"pos":[24239,24244],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24395,24408],"content":"ReadBoolean()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBoolean()","pos":[0,13]}]},{"pos":[24568,24575],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24727,24737],"content":"ReadByte()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[24888,24892],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25053,25069],"content":"ReadBytes(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadBytes(Int32)","pos":[0,16]}]},{"pos":[25232,25236],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[25349,25354],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25502,25512],"content":"ReadChar()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadChar()","pos":[0,10]}]},{"pos":[25663,25667],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[25828,25844],"content":"ReadChars(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadChars(Int32)","pos":[0,16]}]},{"pos":[26007,26011],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[26124,26129],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26280,26293],"content":"ReadDecimal()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadDecimal()","pos":[0,13]}]},{"pos":[26453,26460],"content":"Decimal","needQuote":true,"needEscape":true,"nodes":[{"content":"Decimal","pos":[0,7]}]},{"pos":[26614,26626],"content":"ReadDouble()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadDouble()","pos":[0,12]}]},{"pos":[26783,26789],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[26940,26951],"content":"ReadInt16()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadInt16()","pos":[0,11]}]},{"pos":[27105,27110],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[27259,27270],"content":"ReadInt32()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadInt32()","pos":[0,11]}]},{"pos":[27424,27429],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27578,27589],"content":"ReadInt64()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadInt64()","pos":[0,11]}]},{"pos":[27743,27748],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[27897,27908],"content":"ReadSByte()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadSByte()","pos":[0,11]}]},{"pos":[28062,28067],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[28217,28229],"content":"ReadSingle()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadSingle()","pos":[0,12]}]},{"pos":[28386,28392],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[28544,28556],"content":"ReadString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadString()","pos":[0,12]}]},{"pos":[28713,28719],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28871,28883],"content":"ReadUInt16()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadUInt16()","pos":[0,12]}]},{"pos":[29040,29046],"content":"UInt16","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt16","pos":[0,6]}]},{"pos":[29198,29210],"content":"ReadUInt32()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadUInt32()","pos":[0,12]}]},{"pos":[29367,29373],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[29525,29537],"content":"ReadUInt64()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadUInt64()","pos":[0,12]}]},{"pos":[29694,29700],"content":"UInt64","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt64","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.BinaryReader\n  id: BinaryReader\n  children:\n  - System.IO.BinaryReader.#ctor(System.IO.Stream)\n  - System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  - System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  - System.IO.BinaryReader.BaseStream\n  - System.IO.BinaryReader.Close\n  - System.IO.BinaryReader.Dispose\n  - System.IO.BinaryReader.Dispose(System.Boolean)\n  - System.IO.BinaryReader.FillBuffer(System.Int32)\n  - System.IO.BinaryReader.PeekChar\n  - System.IO.BinaryReader.Read\n  - System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  - System.IO.BinaryReader.Read7BitEncodedInt\n  - System.IO.BinaryReader.ReadBoolean\n  - System.IO.BinaryReader.ReadByte\n  - System.IO.BinaryReader.ReadBytes(System.Int32)\n  - System.IO.BinaryReader.ReadChar\n  - System.IO.BinaryReader.ReadChars(System.Int32)\n  - System.IO.BinaryReader.ReadDecimal\n  - System.IO.BinaryReader.ReadDouble\n  - System.IO.BinaryReader.ReadInt16\n  - System.IO.BinaryReader.ReadInt32\n  - System.IO.BinaryReader.ReadInt64\n  - System.IO.BinaryReader.ReadSByte\n  - System.IO.BinaryReader.ReadSingle\n  - System.IO.BinaryReader.ReadString\n  - System.IO.BinaryReader.ReadUInt16\n  - System.IO.BinaryReader.ReadUInt32\n  - System.IO.BinaryReader.ReadUInt64\n  langs:\n  - csharp\n  name: BinaryReader\n  nameWithType: BinaryReader\n  fullName: System.IO.BinaryReader\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class BinaryReader : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BinaryReader(Stream)\n  nameWithType: BinaryReader.BinaryReader(Stream)\n  fullName: System.IO.BinaryReader.BinaryReader(Stream)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public BinaryReader (System.IO.Stream input);\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding)'\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BinaryReader(Stream,Encoding)\n  nameWithType: BinaryReader.BinaryReader(Stream,Encoding)\n  fullName: System.IO.BinaryReader.BinaryReader(Stream,Encoding)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding);\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)'\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BinaryReader(Stream,Encoding,Boolean)\n  nameWithType: BinaryReader.BinaryReader(Stream,Encoding,Boolean)\n  fullName: System.IO.BinaryReader.BinaryReader(Stream,Encoding,Boolean)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public BinaryReader (System.IO.Stream input, System.Text.Encoding encoding, bool leaveOpen);\n    parameters:\n    - id: input\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: encoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: leaveOpen\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.BaseStream\n  id: BaseStream\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: BaseStream\n  nameWithType: BinaryReader.BaseStream\n  fullName: System.IO.BinaryReader.BaseStream\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.IO.Stream BaseStream { get; }\n    return:\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Close\n  id: Close\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: BinaryReader.Close()\n  fullName: System.IO.BinaryReader.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Dispose\n  id: Dispose\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: BinaryReader.Dispose()\n  fullName: System.IO.BinaryReader.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.BinaryReader.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: BinaryReader.Dispose(Boolean)\n  fullName: System.IO.BinaryReader.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.IO.BinaryReader.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.FillBuffer(System.Int32)\n  id: FillBuffer(System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: FillBuffer(Int32)\n  nameWithType: BinaryReader.FillBuffer(Int32)\n  fullName: System.IO.BinaryReader.FillBuffer(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected virtual void FillBuffer (int numBytes);\n    parameters:\n    - id: numBytes\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.PeekChar\n  id: PeekChar\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: PeekChar()\n  nameWithType: BinaryReader.PeekChar()\n  fullName: System.IO.BinaryReader.PeekChar()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int PeekChar ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Read\n  id: Read\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read()\n  nameWithType: BinaryReader.Read()\n  fullName: System.IO.BinaryReader.Read()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int Read ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.IO.BinaryReader.Read*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: BinaryReader.Read(Byte[],Int32,Int32)\n  fullName: System.IO.BinaryReader.Read(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int Read (byte[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.IO.BinaryReader.Read*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  id: Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read(Char[],Int32,Int32)\n  nameWithType: BinaryReader.Read(Char[],Int32,Int32)\n  fullName: System.IO.BinaryReader.Read(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int Read (char[] buffer, int index, int count);\n    parameters:\n    - id: buffer\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.IO.BinaryReader.Read*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.Read7BitEncodedInt\n  id: Read7BitEncodedInt\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: Read7BitEncodedInt()\n  nameWithType: BinaryReader.Read7BitEncodedInt()\n  fullName: System.IO.BinaryReader.Read7BitEncodedInt()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected int Read7BitEncodedInt ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadBoolean\n  id: ReadBoolean\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadBoolean()\n  nameWithType: BinaryReader.ReadBoolean()\n  fullName: System.IO.BinaryReader.ReadBoolean()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual bool ReadBoolean ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadByte\n  id: ReadByte\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadByte()\n  nameWithType: BinaryReader.ReadByte()\n  fullName: System.IO.BinaryReader.ReadByte()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual byte ReadByte ();\n    parameters: []\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadBytes(System.Int32)\n  id: ReadBytes(System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadBytes(Int32)\n  nameWithType: BinaryReader.ReadBytes(Int32)\n  fullName: System.IO.BinaryReader.ReadBytes(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual byte[] ReadBytes (int count);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadChar\n  id: ReadChar\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadChar()\n  nameWithType: BinaryReader.ReadChar()\n  fullName: System.IO.BinaryReader.ReadChar()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual char ReadChar ();\n    parameters: []\n    return:\n      type: System.Char\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadChars(System.Int32)\n  id: ReadChars(System.Int32)\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadChars(Int32)\n  nameWithType: BinaryReader.ReadChars(Int32)\n  fullName: System.IO.BinaryReader.ReadChars(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual char[] ReadChars (int count);\n    parameters:\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Char[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadDecimal\n  id: ReadDecimal\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadDecimal()\n  nameWithType: BinaryReader.ReadDecimal()\n  fullName: System.IO.BinaryReader.ReadDecimal()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual decimal ReadDecimal ();\n    parameters: []\n    return:\n      type: System.Decimal\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadDouble\n  id: ReadDouble\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadDouble()\n  nameWithType: BinaryReader.ReadDouble()\n  fullName: System.IO.BinaryReader.ReadDouble()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual double ReadDouble ();\n    parameters: []\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadInt16\n  id: ReadInt16\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadInt16()\n  nameWithType: BinaryReader.ReadInt16()\n  fullName: System.IO.BinaryReader.ReadInt16()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual short ReadInt16 ();\n    parameters: []\n    return:\n      type: System.Int16\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadInt32\n  id: ReadInt32\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadInt32()\n  nameWithType: BinaryReader.ReadInt32()\n  fullName: System.IO.BinaryReader.ReadInt32()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int ReadInt32 ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadInt64\n  id: ReadInt64\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadInt64()\n  nameWithType: BinaryReader.ReadInt64()\n  fullName: System.IO.BinaryReader.ReadInt64()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual long ReadInt64 ();\n    parameters: []\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadSByte\n  id: ReadSByte\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadSByte()\n  nameWithType: BinaryReader.ReadSByte()\n  fullName: System.IO.BinaryReader.ReadSByte()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual sbyte ReadSByte ();\n    parameters: []\n    return:\n      type: System.SByte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadSingle\n  id: ReadSingle\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadSingle()\n  nameWithType: BinaryReader.ReadSingle()\n  fullName: System.IO.BinaryReader.ReadSingle()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual float ReadSingle ();\n    parameters: []\n    return:\n      type: System.Single\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadString\n  id: ReadString\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadString()\n  nameWithType: BinaryReader.ReadString()\n  fullName: System.IO.BinaryReader.ReadString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual string ReadString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadUInt16\n  id: ReadUInt16\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadUInt16()\n  nameWithType: BinaryReader.ReadUInt16()\n  fullName: System.IO.BinaryReader.ReadUInt16()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual ushort ReadUInt16 ();\n    parameters: []\n    return:\n      type: System.UInt16\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadUInt32\n  id: ReadUInt32\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadUInt32()\n  nameWithType: BinaryReader.ReadUInt32()\n  fullName: System.IO.BinaryReader.ReadUInt32()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual uint ReadUInt32 ();\n    parameters: []\n    return:\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.BinaryReader.ReadUInt64\n  id: ReadUInt64\n  parent: System.IO.BinaryReader\n  langs:\n  - csharp\n  name: ReadUInt64()\n  nameWithType: BinaryReader.ReadUInt64()\n  fullName: System.IO.BinaryReader.ReadUInt64()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual ulong ReadUInt64 ();\n    parameters: []\n    return:\n      type: System.UInt64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader(Stream)\n  nameWithType: BinaryReader.BinaryReader(Stream)\n  fullName: System.IO.BinaryReader.BinaryReader(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader(Stream,Encoding)\n  nameWithType: BinaryReader.BinaryReader(Stream,Encoding)\n  fullName: System.IO.BinaryReader.BinaryReader(Stream,Encoding)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.IO.BinaryReader.#ctor(System.IO.Stream,System.Text.Encoding,System.Boolean)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BinaryReader(Stream,Encoding,Boolean)\n  nameWithType: BinaryReader.BinaryReader(Stream,Encoding,Boolean)\n  fullName: System.IO.BinaryReader.BinaryReader(Stream,Encoding,Boolean)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.BinaryReader.BaseStream\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: BaseStream\n  nameWithType: BinaryReader.BaseStream\n  fullName: System.IO.BinaryReader.BaseStream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.BinaryReader.Close\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Close()\n  nameWithType: BinaryReader.Close()\n  fullName: System.IO.BinaryReader.Close()\n- uid: System.IO.BinaryReader.Dispose\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Dispose()\n  nameWithType: BinaryReader.Dispose()\n  fullName: System.IO.BinaryReader.Dispose()\n- uid: System.IO.BinaryReader.Dispose(System.Boolean)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: BinaryReader.Dispose(Boolean)\n  fullName: System.IO.BinaryReader.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.BinaryReader.FillBuffer(System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: FillBuffer(Int32)\n  nameWithType: BinaryReader.FillBuffer(Int32)\n  fullName: System.IO.BinaryReader.FillBuffer(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.PeekChar\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: PeekChar()\n  nameWithType: BinaryReader.PeekChar()\n  fullName: System.IO.BinaryReader.PeekChar()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.Read\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read()\n  nameWithType: BinaryReader.Read()\n  fullName: System.IO.BinaryReader.Read()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: BinaryReader.Read(Byte[],Int32,Int32)\n  fullName: System.IO.BinaryReader.Read(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.Read(System.Char[],System.Int32,System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read(Char[],Int32,Int32)\n  nameWithType: BinaryReader.Read(Char[],Int32,Int32)\n  fullName: System.IO.BinaryReader.Read(Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.Read7BitEncodedInt\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: Read7BitEncodedInt()\n  nameWithType: BinaryReader.Read7BitEncodedInt()\n  fullName: System.IO.BinaryReader.Read7BitEncodedInt()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.ReadBoolean\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadBoolean()\n  nameWithType: BinaryReader.ReadBoolean()\n  fullName: System.IO.BinaryReader.ReadBoolean()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.BinaryReader.ReadByte\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadByte()\n  nameWithType: BinaryReader.ReadByte()\n  fullName: System.IO.BinaryReader.ReadByte()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.IO.BinaryReader.ReadBytes(System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadBytes(Int32)\n  nameWithType: BinaryReader.ReadBytes(Int32)\n  fullName: System.IO.BinaryReader.ReadBytes(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.ReadChar\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadChar()\n  nameWithType: BinaryReader.ReadChar()\n  fullName: System.IO.BinaryReader.ReadChar()\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.IO.BinaryReader.ReadChars(System.Int32)\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadChars(Int32)\n  nameWithType: BinaryReader.ReadChars(Int32)\n  fullName: System.IO.BinaryReader.ReadChars(Int32)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.ReadDecimal\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadDecimal()\n  nameWithType: BinaryReader.ReadDecimal()\n  fullName: System.IO.BinaryReader.ReadDecimal()\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.IO.BinaryReader.ReadDouble\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadDouble()\n  nameWithType: BinaryReader.ReadDouble()\n  fullName: System.IO.BinaryReader.ReadDouble()\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.IO.BinaryReader.ReadInt16\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt16()\n  nameWithType: BinaryReader.ReadInt16()\n  fullName: System.IO.BinaryReader.ReadInt16()\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IO.BinaryReader.ReadInt32\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt32()\n  nameWithType: BinaryReader.ReadInt32()\n  fullName: System.IO.BinaryReader.ReadInt32()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.BinaryReader.ReadInt64\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadInt64()\n  nameWithType: BinaryReader.ReadInt64()\n  fullName: System.IO.BinaryReader.ReadInt64()\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.BinaryReader.ReadSByte\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadSByte()\n  nameWithType: BinaryReader.ReadSByte()\n  fullName: System.IO.BinaryReader.ReadSByte()\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.IO.BinaryReader.ReadSingle\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadSingle()\n  nameWithType: BinaryReader.ReadSingle()\n  fullName: System.IO.BinaryReader.ReadSingle()\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.IO.BinaryReader.ReadString\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadString()\n  nameWithType: BinaryReader.ReadString()\n  fullName: System.IO.BinaryReader.ReadString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.BinaryReader.ReadUInt16\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt16()\n  nameWithType: BinaryReader.ReadUInt16()\n  fullName: System.IO.BinaryReader.ReadUInt16()\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.IO.BinaryReader.ReadUInt32\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt32()\n  nameWithType: BinaryReader.ReadUInt32()\n  fullName: System.IO.BinaryReader.ReadUInt32()\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IO.BinaryReader.ReadUInt64\n  parent: System.IO.BinaryReader\n  isExternal: false\n  name: ReadUInt64()\n  nameWithType: BinaryReader.ReadUInt64()\n  fullName: System.IO.BinaryReader.ReadUInt64()\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.IO.BinaryReader.Dispose*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  nameWithType: BinaryReader.\n- uid: System.IO.BinaryReader.Read*\n  parent: System.IO.BinaryReader\n  isExternal: false\n  nameWithType: BinaryReader.\n"}