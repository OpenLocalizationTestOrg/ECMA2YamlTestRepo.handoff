{"nodes":[{"pos":[2077,2083],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[3067,3075],"content":"Stream()","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream()","pos":[0,8]}]},{"pos":[3585,3635],"content":"BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)","pos":[0,50]}]},{"pos":[4072,4106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4168,4202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4263,4297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4369,4403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4465,4499],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4563,4597],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4906,4957],"content":"BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)","pos":[0,51]}]},{"pos":[5397,5431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5493,5527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5588,5622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5694,5728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5790,5824],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5888,5922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6073,6080],"content":"CanRead","needQuote":true,"needEscape":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[6335,6369],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6520,6527],"content":"CanSeek","needQuote":true,"needEscape":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[6782,6816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6973,6983],"content":"CanTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[7246,7280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7433,7441],"content":"CanWrite","needQuote":true,"needEscape":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[7699,7733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7880,7887],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[8277,8291],"content":"CopyTo(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[8599,8633],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8881,8901],"content":"CopyTo(Stream,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Stream,Int32)","pos":[0,20]}]},{"pos":[9237,9271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9337,9371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9603,9622],"content":"CopyToAsync(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[9968,10002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10074,10108],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10371,10396],"content":"CopyToAsync(Stream,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyToAsync(Stream,Int32)","pos":[0,25]}]},{"pos":[10770,10804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10870,10904],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10976,11010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11343,11386],"content":"CopyToAsync(Stream,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyToAsync(Stream,Int32,CancellationToken)","pos":[0,43]}]},{"pos":[11858,11892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11958,11992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12087,12121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12193,12227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12438,12456],"content":"CreateWaitHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[12792,12826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12977,12986],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[13410,13426],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13732,13766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13997,14018],"content":"EndRead(IAsyncResult)","needQuote":true,"needEscape":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[14347,14381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14438,14472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14667,14689],"content":"EndWrite(IAsyncResult)","needQuote":true,"needEscape":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[15022,15056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15203,15210],"content":"Flush()","needQuote":true,"needEscape":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[15573,15585],"content":"FlushAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[15892,15926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16196,16225],"content":"FlushAsync(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[16646,16680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16752,16786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16976,16982],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[17232,17266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17671,17705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17872,17889],"content":"ObjectInvariant()","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[18280,18288],"content":"Position","needQuote":true,"needEscape":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[18549,18583],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18810,18834],"content":"Read(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Byte[],Int32,Int32)","pos":[0,24]}]},{"pos":[19168,19202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19264,19298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19359,19393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19450,19484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19721,19750],"content":"ReadAsync(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[20119,20153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20215,20249],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20310,20344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20430,20464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20811,20858],"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,47]}]},{"pos":[21325,21359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21421,21455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21516,21550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21645,21679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21765,21799],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21992,22002],"content":"ReadByte()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[22272,22306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22465,22476],"content":"ReadTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[22744,22778],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22993,23015],"content":"Seek(Int64,SeekOrigin)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(Int64,SeekOrigin)","pos":[0,22]}]},{"pos":[23349,23383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23453,23487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23544,23578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23761,23777],"content":"SetLength(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[24073,24107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24304,24324],"content":"Synchronized(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[24659,24693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24754,24788],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25017,25042],"content":"Write(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(Byte[],Int32,Int32)","pos":[0,25]}]},{"pos":[25380,25414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25476,25510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25571,25605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25844,25874],"content":"WriteAsync(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteAsync(Byte[],Int32,Int32)","pos":[0,30]}]},{"pos":[26241,26275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26337,26371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26432,26466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26538,26572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26922,26970],"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,48]}]},{"pos":[27435,27469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27531,27565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27626,27660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27755,27789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27861,27895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28117,28132],"content":"WriteByte(Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[28424,28458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28619,28631],"content":"WriteTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[28902,28936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29059,29084],"content":"System.MarshalByRefObject","needQuote":true,"needEscape":true,"nodes":[{"content":"System.MarshalByRefObject","pos":[0,25]}]},{"pos":[29170,29178],"content":"Stream()","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream()","pos":[0,8]}]},{"pos":[29414,29464],"content":"BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)","pos":[0,50]}]},{"pos":[29691,29703],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[29829,29833],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[29946,29951],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30064,30069],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30190,30203],"content":"AsyncCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"pos":[30333,30339],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30555,30606],"content":"BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)","pos":[0,51]}]},{"pos":[30835,30847],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[30973,30977],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[31090,31095],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31208,31213],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31334,31347],"content":"AsyncCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncCallback","pos":[0,13]}]},{"pos":[31477,31483],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31620,31627],"content":"CanRead","needQuote":true,"needEscape":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[31763,31770],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31909,31916],"content":"CanSeek","needQuote":true,"needEscape":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[32052,32059],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32201,32211],"content":"CanTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"CanTimeout","pos":[0,10]}]},{"pos":[32353,32360],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32500,32508],"content":"CanWrite","needQuote":true,"needEscape":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[32646,32653],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32790,32797],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[32970,32984],"content":"CopyTo(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Stream)","pos":[0,14]}]},{"pos":[33139,33145],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[33315,33335],"content":"CopyTo(Stream,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Stream,Int32)","pos":[0,20]}]},{"pos":[33502,33508],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[33626,33631],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33788,33807],"content":"CopyToAsync(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyToAsync(Stream)","pos":[0,19]}]},{"pos":[33996,34000],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[34134,34140],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[34315,34340],"content":"CopyToAsync(Stream,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyToAsync(Stream,Int32)","pos":[0,25]}]},{"pos":[34541,34545],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[34679,34685],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[34803,34808],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35013,35056],"content":"CopyToAsync(Stream,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyToAsync(Stream,Int32,CancellationToken)","pos":[0,43]}]},{"pos":[35293,35297],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[35431,35437],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[35555,35560],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35705,35722],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[35900,35918],"content":"CreateWaitHandle()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateWaitHandle()","pos":[0,18]}]},{"pos":[36099,36109],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[36264,36273],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[36449,36465],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[36619,36626],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36786,36807],"content":"EndRead(IAsyncResult)","needQuote":true,"needEscape":true,"nodes":[{"content":"EndRead(IAsyncResult)","pos":[0,21]}]},{"pos":[36969,36974],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37094,37106],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[37277,37299],"content":"EndWrite(IAsyncResult)","needQuote":true,"needEscape":true,"nodes":[{"content":"EndWrite(IAsyncResult)","pos":[0,22]}]},{"pos":[37470,37482],"content":"IAsyncResult","needQuote":true,"needEscape":true,"nodes":[{"content":"IAsyncResult","pos":[0,12]}]},{"pos":[37629,37636],"content":"Flush()","needQuote":true,"needEscape":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[37795,37807],"content":"FlushAsync()","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushAsync()","pos":[0,12]}]},{"pos":[37982,37986],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[38174,38203],"content":"FlushAsync(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[38412,38416],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[38575,38592],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[38760,38766],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[38898,38903],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[39174,39180],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[39328,39345],"content":"ObjectInvariant()","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectInvariant()","pos":[0,17]}]},{"pos":[39522,39530],"content":"Position","needQuote":true,"needEscape":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[39666,39671],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[39844,39868],"content":"Read(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Byte[],Int32,Int32)","pos":[0,24]}]},{"pos":[40036,40041],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40153,40157],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[40270,40275],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40388,40393],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40571,40600],"content":"ReadAsync(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[40823,40834],"content":"Task<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Int32>"},{"pos":[40981,40985],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[41098,41103],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41216,41221],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41434,41481],"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,47]}]},{"pos":[41740,41751],"content":"Task<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Int32>"},{"pos":[41898,41902],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[42015,42020],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42133,42138],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42283,42300],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[42470,42480],"content":"ReadByte()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadByte()","pos":[0,10]}]},{"pos":[42620,42625],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42764,42775],"content":"ReadTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadTimeout","pos":[0,11]}]},{"pos":[42917,42922],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43089,43111],"content":"Seek(Int64,SeekOrigin)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(Int64,SeekOrigin)","pos":[0,22]}]},{"pos":[43275,43280],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[43393,43398],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[43522,43532],"content":"SeekOrigin","needQuote":true,"needEscape":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[43696,43712],"content":"SetLength(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[43864,43869],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[44027,44047],"content":"Synchronized(Stream)","needQuote":true,"needEscape":true,"nodes":[{"content":"Synchronized(Stream)","pos":[0,20]}]},{"pos":[44214,44220],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[44345,44351],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[44530,44555],"content":"Write(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(Byte[],Int32,Int32)","pos":[0,25]}]},{"pos":[44724,44728],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[44841,44846],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[44959,44964],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45143,45173],"content":"WriteAsync(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteAsync(Byte[],Int32,Int32)","pos":[0,30]}]},{"pos":[45384,45388],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[45514,45518],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[45631,45636],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45749,45754],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45968,46016],"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,48]}]},{"pos":[46263,46267],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[46393,46397],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[46510,46515],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46628,46633],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[46778,46795],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[46979,46994],"content":"WriteByte(Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteByte(Byte)","pos":[0,15]}]},{"pos":[47143,47147],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[47285,47297],"content":"WriteTimeout","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteTimeout","pos":[0,12]}]},{"pos":[47441,47446],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Stream\n  id: Stream\n  children:\n  - System.IO.Stream.#ctor\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.CanRead\n  - System.IO.Stream.CanSeek\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.CanWrite\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.Dispose(System.Boolean)\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.Flush\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  - System.IO.Stream.Length\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.Position\n  - System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.IO.Stream.SetLength(System.Int64)\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.WriteTimeout\n  langs:\n  - csharp\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Stream : MarshalByRefObject, IDisposable\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.#ctor\n  id: '#ctor'\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Stream()\n  nameWithType: Stream.Stream()\n  fullName: System.IO.Stream.Stream()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected Stream ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: Stream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.Stream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: callback\n      type: System.AsyncCallback\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: Stream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.Stream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: callback\n      type: System.AsyncCallback\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CanRead\n  id: CanRead\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: Stream.CanRead\n  fullName: System.IO.Stream.CanRead\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CanSeek\n  id: CanSeek\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: Stream.CanSeek\n  fullName: System.IO.Stream.CanSeek\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CanTimeout\n  id: CanTimeout\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual bool CanTimeout { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CanWrite\n  id: CanWrite\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: Stream.CanWrite\n  fullName: System.IO.Stream.CanWrite\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Close\n  id: Close\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: System.IO.Stream.Close()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  id: CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public void CopyTo (System.IO.Stream destination);\n    parameters:\n    - id: destination\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  overload: System.IO.Stream.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  id: CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CopyTo(Stream,Int32)\n  nameWithType: Stream.CopyTo(Stream,Int32)\n  fullName: System.IO.Stream.CopyTo(Stream,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public void CopyTo (System.IO.Stream destination, int bufferSize);\n    parameters:\n    - id: destination\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: bufferSize\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.IO.Stream.CopyTo*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  id: CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination);\n    parameters:\n    - id: destination\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.CopyToAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  id: CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CopyToAsync(Stream,Int32)\n  nameWithType: Stream.CopyToAsync(Stream,Int32)\n  fullName: System.IO.Stream.CopyToAsync(Stream,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize);\n    parameters:\n    - id: destination\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: bufferSize\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.CopyToAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  id: CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CopyToAsync(Stream,Int32,CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream,Int32,CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(Stream,Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.Threading.Tasks.Task CopyToAsync (System.IO.Stream destination, int bufferSize, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: destination\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: bufferSize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.CopyToAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.CreateWaitHandle\n  id: CreateWaitHandle\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected virtual System.Threading.WaitHandle CreateWaitHandle ();\n    parameters: []\n    return:\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Dispose\n  id: Dispose\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: System.IO.Stream.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.IO.Stream.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Stream.Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.IO.Stream.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int EndRead (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Flush\n  id: Flush\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: Stream.Flush()\n  fullName: System.IO.Stream.Flush()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract void Flush ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.FlushAsync\n  id: FlushAsync\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public System.Threading.Tasks.Task FlushAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.FlushAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.FlushAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Length\n  id: Length\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: Stream.Length\n  fullName: System.IO.Stream.Length\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract long Length { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Null\n  id: Null\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Null\n  nameWithType: Stream.Null\n  fullName: System.IO.Stream.Null\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public static readonly System.IO.Stream Null;\n    return:\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.ObjectInvariant\n  id: ObjectInvariant\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: protected virtual void ObjectInvariant ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Position\n  id: Position\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: Stream.Position\n  fullName: System.IO.Stream.Position\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract long Position { get; set; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: Stream.Read(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.Read(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[],Int32,Int32)\n  nameWithType: Stream.ReadAsync(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.ReadAsync(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: Parameter description to be filled\n  overload: System.IO.Stream.ReadAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: Parameter description to be filled\n  overload: System.IO.Stream.ReadAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.ReadByte\n  id: ReadByte\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int ReadByte ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.ReadTimeout\n  id: ReadTimeout\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int ReadTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: Stream.Seek(Int64,SeekOrigin)\n  fullName: System.IO.Stream.Seek(Int64,SeekOrigin)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: Stream.SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  id: Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(Stream)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public static System.IO.Stream Synchronized (System.IO.Stream stream);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    return:\n      type: System.IO.Stream\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: Stream.Write(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.Write(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public abstract void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[],Int32,Int32)\n  nameWithType: Stream.WriteAsync(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.WriteAsync(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.WriteAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.IO.Stream.WriteAsync*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  id: WriteByte(System.Byte)\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(Byte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual void WriteByte (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.IO.Stream.WriteTimeout\n  id: WriteTimeout\n  parent: System.IO.Stream\n  langs:\n  - csharp\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.IO\n  syntax:\n    content: public virtual int WriteTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.IO.Stream.#ctor\n  parent: System.IO.Stream\n  isExternal: false\n  name: Stream()\n  nameWithType: Stream.Stream()\n  fullName: System.IO.Stream.Stream()\n- uid: System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: Stream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.Stream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.IO.Stream\n  isExternal: false\n  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  nameWithType: Stream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n  fullName: System.IO.Stream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.Stream.CanRead\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanRead\n  nameWithType: Stream.CanRead\n  fullName: System.IO.Stream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Stream.CanSeek\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanSeek\n  nameWithType: Stream.CanSeek\n  fullName: System.IO.Stream.CanSeek\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Stream.CanTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: Stream.CanTimeout\n  fullName: System.IO.Stream.CanTimeout\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Stream.CanWrite\n  parent: System.IO.Stream\n  isExternal: false\n  name: CanWrite\n  nameWithType: Stream.CanWrite\n  fullName: System.IO.Stream.CanWrite\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: System.IO.Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: System.IO.Stream.CopyTo(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream,Int32)\n  nameWithType: Stream.CopyTo(Stream,Int32)\n  fullName: System.IO.Stream.CopyTo(Stream,Int32)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: System.IO.Stream.CopyToAsync(Stream)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream,Int32)\n  nameWithType: Stream.CopyToAsync(Stream,Int32)\n  fullName: System.IO.Stream.CopyToAsync(Stream,Int32)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream,Int32,CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream,Int32,CancellationToken)\n  fullName: System.IO.Stream.CopyToAsync(Stream,Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: System.IO.Stream.CreateWaitHandle()\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: System.IO.Stream.Dispose()\n- uid: System.IO.Stream.Dispose(System.Boolean)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Stream.Dispose(Boolean)\n  fullName: System.IO.Stream.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Stream.EndRead(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: Stream.EndRead(IAsyncResult)\n  fullName: System.IO.Stream.EndRead(IAsyncResult)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.IO.Stream.EndWrite(System.IAsyncResult)\n  parent: System.IO.Stream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: Stream.EndWrite(IAsyncResult)\n  fullName: System.IO.Stream.EndWrite(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.IO.Stream.Flush\n  parent: System.IO.Stream\n  isExternal: false\n  name: Flush()\n  nameWithType: Stream.Flush()\n  fullName: System.IO.Stream.Flush()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: System.IO.Stream.FlushAsync()\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.IO.Stream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: Stream.FlushAsync(CancellationToken)\n  fullName: System.IO.Stream.FlushAsync(CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Stream.Length\n  parent: System.IO.Stream\n  isExternal: false\n  name: Length\n  nameWithType: Stream.Length\n  fullName: System.IO.Stream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: Null\n  nameWithType: Stream.Null\n  fullName: System.IO.Stream.Null\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: System.IO.Stream.ObjectInvariant()\n- uid: System.IO.Stream.Position\n  parent: System.IO.Stream\n  isExternal: false\n  name: Position\n  nameWithType: Stream.Position\n  fullName: System.IO.Stream.Position\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: Stream.Read(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.Read(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[],Int32,Int32)\n  nameWithType: Stream.ReadAsync(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.ReadAsync(Byte[],Int32,Int32)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.IO.Stream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: System.IO.Stream.ReadByte()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.ReadTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: Stream.ReadTimeout\n  fullName: System.IO.Stream.ReadTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: Stream.Seek(Int64,SeekOrigin)\n  fullName: System.IO.Stream.Seek(Int64,SeekOrigin)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.IO.Stream.SetLength(System.Int64)\n  parent: System.IO.Stream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: Stream.SetLength(Int64)\n  fullName: System.IO.Stream.SetLength(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: System.IO.Stream.Synchronized(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: Stream.Write(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.Write(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[],Int32,Int32)\n  nameWithType: Stream.WriteAsync(Byte[],Int32,Int32)\n  fullName: System.IO.Stream.WriteAsync(Byte[],Int32,Int32)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.IO.Stream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: System.IO.Stream.WriteByte(Byte)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.IO.Stream.WriteTimeout\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: Stream.WriteTimeout\n  fullName: System.IO.Stream.WriteTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IO.Stream.CopyTo*\n  parent: System.IO.Stream\n  isExternal: false\n  nameWithType: Stream.\n- uid: System.IO.Stream.CopyToAsync*\n  parent: System.IO.Stream\n  isExternal: false\n  nameWithType: Stream.\n- uid: System.IO.Stream.Dispose*\n  parent: System.IO.Stream\n  isExternal: false\n  nameWithType: Stream.\n- uid: System.IO.Stream.FlushAsync*\n  parent: System.IO.Stream\n  isExternal: false\n  nameWithType: Stream.\n- uid: System.IO.Stream.ReadAsync*\n  parent: System.IO.Stream\n  isExternal: false\n  nameWithType: Stream.\n- uid: System.IO.Stream.WriteAsync*\n  parent: System.IO.Stream\n  isExternal: false\n  nameWithType: Stream.\n"}