{"nodes":[{"pos":[538,555],"content":"TerminateWorkflow","needQuote":true,"needEscape":true,"nodes":[{"content":"TerminateWorkflow","pos":[0,17]}]},{"pos":[2441,2460],"content":"TerminateWorkflow()","needQuote":true,"needEscape":true,"nodes":[{"content":"TerminateWorkflow()","pos":[0,19]}]},{"pos":[3069,3106],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[3590,3624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3839,3848],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[4241,4275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4568,4598],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[5058,5092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5301,5307],"content":"Reason","needQuote":true,"needEscape":true,"nodes":[{"content":"Reason","pos":[0,6]}]},{"pos":[5685,5719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5849,5881],"content":"System.Activities.NativeActivity","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.NativeActivity","pos":[0,32]}]},{"pos":[6027,6046],"content":"TerminateWorkflow()","needQuote":true,"needEscape":true,"nodes":[{"content":"TerminateWorkflow()","pos":[0,19]}]},{"pos":[6375,6412],"content":"CacheMetadata(NativeActivityMetadata)","needQuote":true,"needEscape":true,"nodes":[{"content":"CacheMetadata(NativeActivityMetadata)","pos":[0,37]}]},{"pos":[6686,6708],"content":"NativeActivityMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityMetadata","pos":[0,22]}]},{"pos":[6950,6959],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[7183,7204],"content":"InArgument<ph id=\"ph1\">&lt;Exception&gt;</ph>","needQuote":true,"needEscape":true,"source":"InArgument<Exception>"},{"pos":[7490,7520],"content":"Execute(NativeActivityContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"Execute(NativeActivityContext)","pos":[0,30]}]},{"pos":[7779,7800],"content":"NativeActivityContext","needQuote":true,"needEscape":true,"nodes":[{"content":"NativeActivityContext","pos":[0,21]}]},{"pos":[8037,8043],"content":"Reason","needQuote":true,"needEscape":true,"nodes":[{"content":"Reason","pos":[0,6]}]},{"pos":[8258,8276],"content":"InArgument<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"InArgument<String>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.TerminateWorkflow\n  id: TerminateWorkflow\n  children:\n  - System.Activities.Statements.TerminateWorkflow.#ctor\n  - System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  - System.Activities.Statements.TerminateWorkflow.Exception\n  - System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  - System.Activities.Statements.TerminateWorkflow.Reason\n  langs:\n  - csharp\n  name: TerminateWorkflow\n  nameWithType: TerminateWorkflow\n  fullName: System.Activities.Statements.TerminateWorkflow\n  type: Class\n  syntax:\n    content: 'public sealed class TerminateWorkflow : System.Activities.NativeActivity'\n  inheritance:\n  - System.Object\n  - System.Activities.Activity\n  - System.Activities.NativeActivity\n  implements: []\n  inheritedMembers:\n  - System.Activities.Activity.CacheId\n  - System.Activities.Activity.Constraints\n  - System.Activities.Activity.DisplayName\n  - System.Activities.Activity.Id\n  - System.Activities.Activity.ShouldSerializeDisplayName\n  - System.Activities.Activity.ToString\n  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)\n  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)\n  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)\n  - System.Activities.NativeActivity.CanInduceIdle\n  - System.Activities.NativeActivity.Implementation\n  - System.Activities.NativeActivity.ImplementationVersion\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)\n  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: TerminateWorkflow()\n  nameWithType: TerminateWorkflow.TerminateWorkflow()\n  fullName: System.Activities.Statements.TerminateWorkflow.TerminateWorkflow()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public TerminateWorkflow ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  id: CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);\n    parameters:\n    - id: metadata\n      type: System.Activities.NativeActivityMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.TerminateWorkflow.Exception\n  id: Exception\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: System.Activities.Statements.TerminateWorkflow.Exception\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.InArgument<Exception> Exception { get; set; }\n    return:\n      type: System.Activities.InArgument{System.Exception}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  id: Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Execute(NativeActivityContext)\n  nameWithType: TerminateWorkflow.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TerminateWorkflow.Execute(NativeActivityContext)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void Execute (System.Activities.NativeActivityContext context);\n    parameters:\n    - id: context\n      type: System.Activities.NativeActivityContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.TerminateWorkflow.Reason\n  id: Reason\n  parent: System.Activities.Statements.TerminateWorkflow\n  langs:\n  - csharp\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: System.Activities.Statements.TerminateWorkflow.Reason\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public System.Activities.InArgument<string> Reason { get; set; }\n    return:\n      type: System.Activities.InArgument{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.NativeActivity\n  isExternal: false\n  name: System.Activities.NativeActivity\n- uid: System.Activities.Statements.TerminateWorkflow.#ctor\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: TerminateWorkflow()\n  nameWithType: TerminateWorkflow.TerminateWorkflow()\n  fullName: System.Activities.Statements.TerminateWorkflow.TerminateWorkflow()\n- uid: System.Activities.Statements.TerminateWorkflow.CacheMetadata(System.Activities.NativeActivityMetadata)\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: CacheMetadata(NativeActivityMetadata)\n  nameWithType: TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n  fullName: System.Activities.Statements.TerminateWorkflow.CacheMetadata(NativeActivityMetadata)\n- uid: System.Activities.NativeActivityMetadata\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityMetadata\n  nameWithType: NativeActivityMetadata\n  fullName: System.Activities.NativeActivityMetadata\n- uid: System.Activities.Statements.TerminateWorkflow.Exception\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Exception\n  nameWithType: TerminateWorkflow.Exception\n  fullName: System.Activities.Statements.TerminateWorkflow.Exception\n- uid: System.Activities.InArgument{System.Exception}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<Exception>\n  nameWithType: InArgument<Exception>\n  fullName: System.Activities.InArgument<System.Exception>\n- uid: System.Activities.Statements.TerminateWorkflow.Execute(System.Activities.NativeActivityContext)\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Execute(NativeActivityContext)\n  nameWithType: TerminateWorkflow.Execute(NativeActivityContext)\n  fullName: System.Activities.Statements.TerminateWorkflow.Execute(NativeActivityContext)\n- uid: System.Activities.NativeActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: NativeActivityContext\n  nameWithType: NativeActivityContext\n  fullName: System.Activities.NativeActivityContext\n- uid: System.Activities.Statements.TerminateWorkflow.Reason\n  parent: System.Activities.Statements.TerminateWorkflow\n  isExternal: false\n  name: Reason\n  nameWithType: TerminateWorkflow.Reason\n  fullName: System.Activities.Statements.TerminateWorkflow.Reason\n- uid: System.Activities.InArgument{System.String}\n  parent: System.Activities\n  isExternal: false\n  name: InArgument<String>\n  nameWithType: InArgument<String>\n  fullName: System.Activities.InArgument<System.String>\n"}