{"nodes":[{"pos":[2814,2829],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[3854,3871],"content":"AddArgument(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArgument(Type)","pos":[0,17]}]},{"pos":[4217,4251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4574,4599],"content":"AddArgument(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArgument(Type,Boolean)","pos":[0,25]}]},{"pos":[4968,5002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5066,5100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5449,5480],"content":"AddArgument(Type,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArgument(Type,Type[],Type[])","pos":[0,31]}]},{"pos":[5912,5946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6026,6060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6140,6174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6537,6575],"content":"AddArguments(Type[],Type[][],Type[][])","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArguments(Type[],Type[][],Type[][])","pos":[0,38]}]},{"pos":[7032,7066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7148,7182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7264,7298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7501,7514],"content":"AddSentinel()","needQuote":true,"needEscape":true,"nodes":[{"content":"AddSentinel()","pos":[0,13]}]},{"pos":[7996,8010],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8342,8376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8435,8469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8736,8761],"content":"GetFieldSigHelper(Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFieldSigHelper(Module)","pos":[0,25]}]},{"pos":[9187,9221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9304,9338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9541,9554],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9878,9912],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10133,10155],"content":"GetLocalVarSigHelper()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLocalVarSigHelper()","pos":[0,22]}]},{"pos":[10565,10599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10945,10973],"content":"GetLocalVarSigHelper(Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLocalVarSigHelper(Module)","pos":[0,28]}]},{"pos":[11408,11442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11525,11559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11949,11992],"content":"GetMethodSigHelper(CallingConventions,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(CallingConventions,Type)","pos":[0,43]}]},{"pos":[12524,12558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12623,12657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12740,12774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13186,13228],"content":"GetMethodSigHelper(CallingConvention,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(CallingConvention,Type)","pos":[0,42]}]},{"pos":[13800,13834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13899,13933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14016,14050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14488,14538],"content":"GetMethodSigHelper(Module,CallingConventions,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(Module,CallingConventions,Type)","pos":[0,50]}]},{"pos":[15088,15122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15219,15253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15318,15352],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15435,15469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15931,15980],"content":"GetMethodSigHelper(Module,CallingConvention,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(Module,CallingConvention,Type)","pos":[0,49]}]},{"pos":[16540,16574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16683,16717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16782,16816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16899,16933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17325,17363],"content":"GetMethodSigHelper(Module,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(Module,Type,Type[])","pos":[0,38]}]},{"pos":[17856,17890],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17955,17989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18060,18094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18177,18211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18607,18647],"content":"GetPropertySigHelper(Module,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertySigHelper(Module,Type,Type[])","pos":[0,40]}]},{"pos":[19146,19180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19245,19279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19350,19384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19467,19501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20019,20091],"content":"GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])","pos":[0,72]}]},{"pos":[20832,20866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20931,20965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21055,21089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21179,21213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21284,21318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21413,21447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21542,21576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21659,21693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22285,22376],"content":"GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])","pos":[0,91]}]},{"pos":[23211,23245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23342,23376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23441,23475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23565,23599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23689,23723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23794,23828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23923,23957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24052,24086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24169,24203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24481,24495],"content":"GetSignature()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSignature()","pos":[0,14]}]},{"pos":[24817,24851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25308,25403],"content":"System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,95]}]},{"pos":[25966,26000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26066,26100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26163,26197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26258,26292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26357,26391],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26790,26871],"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,81]}]},{"pos":[27374,27408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27469,27503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27567,27601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27956,28028],"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)","pos":[0,72]}]},{"pos":[28497,28531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29056,29164],"content":"System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,108]}]},{"pos":[29816,29850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29909,29943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30004,30038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30100,30134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30202,30236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30303,30337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30404,30438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30503,30537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30734,30744],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[31063,31097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31208,31221],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[31370,31387],"content":"AddArgument(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArgument(Type)","pos":[0,17]}]},{"pos":[31571,31575],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[31784,31809],"content":"AddArgument(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArgument(Type,Boolean)","pos":[0,25]}]},{"pos":[32009,32013],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[32126,32133],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32361,32392],"content":"AddArgument(Type,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArgument(Type,Type[],Type[])","pos":[0,31]}]},{"pos":[32604,32608],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[32718,32722],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[32834,32838],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33069,33107],"content":"AddArguments(Type[],Type[][],Type[][])","needQuote":true,"needEscape":true,"nodes":[{"content":"AddArguments(Type[],Type[][],Type[][])","pos":[0,38]}]},{"pos":[33333,33337],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33449,33453],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33567,33571],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[33756,33769],"content":"AddSentinel()","needQuote":true,"needEscape":true,"nodes":[{"content":"AddSentinel()","pos":[0,13]}]},{"pos":[34026,34040],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[34221,34228],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34346,34352],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34569,34594],"content":"GetFieldSigHelper(Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFieldSigHelper(Module)","pos":[0,25]}]},{"pos":[34837,34852],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[35024,35030],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[35226,35239],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[35416,35421],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35613,35635],"content":"GetLocalVarSigHelper()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLocalVarSigHelper()","pos":[0,22]}]},{"pos":[35872,35887],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[36141,36169],"content":"GetLocalVarSigHelper(Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetLocalVarSigHelper(Module)","pos":[0,28]}]},{"pos":[36418,36433],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[36605,36611],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[36864,36907],"content":"GetMethodSigHelper(CallingConventions,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(CallingConventions,Type)","pos":[0,43]}]},{"pos":[37186,37201],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[37385,37403],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[37552,37556],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[37806,37848],"content":"GetMethodSigHelper(CallingConvention,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(CallingConvention,Type)","pos":[0,42]}]},{"pos":[38125,38140],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[38349,38366],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[38526,38530],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[38793,38843],"content":"GetMethodSigHelper(Module,CallingConventions,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(Module,CallingConventions,Type)","pos":[0,50]}]},{"pos":[39136,39151],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[39323,39329],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[39490,39508],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[39657,39661],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[39936,39985],"content":"GetMethodSigHelper(Module,CallingConvention,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(Module,CallingConvention,Type)","pos":[0,49]}]},{"pos":[40276,40291],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[40463,40469],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[40655,40672],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[40832,40836],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[41076,41114],"content":"GetMethodSigHelper(Module,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodSigHelper(Module,Type,Type[])","pos":[0,38]}]},{"pos":[41383,41398],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[41570,41576],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[41701,41705],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[41815,41819],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42063,42103],"content":"GetPropertySigHelper(Module,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertySigHelper(Module,Type,Type[])","pos":[0,40]}]},{"pos":[42376,42391],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[42563,42569],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[42694,42698],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[42808,42812],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43116,43188],"content":"GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])","pos":[0,72]}]},{"pos":[43525,43540],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[43712,43718],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[43843,43847],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43957,43961],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44073,44077],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44189,44193],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44305,44309],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44423,44427],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[44770,44861],"content":"GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])","pos":[0,91]}]},{"pos":[45236,45251],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[45423,45429],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[45590,45608],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[45757,45761],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45871,45875],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45987,45991],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46103,46107],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46219,46223],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46337,46341],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[46527,46541],"content":"GetSignature()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSignature()","pos":[0,14]}]},{"pos":[46719,46723],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[47026,47121],"content":"System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,95]}]},{"pos":[47461,47465],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[47577,47583],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[47699,47705],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[47821,47827],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[47943,47949],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[48225,48306],"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,81]}]},{"pos":[48620,48626],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[48742,48748],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[48864,48870],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[49124,49196],"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)","pos":[0,72]}]},{"pos":[49492,49498],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[49837,49945],"content":"System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,108]}]},{"pos":[50313,50319],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[50433,50437],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[50549,50555],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[50670,50675],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[50789,50795],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[50911,50917],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[51033,51039],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[51155,51161],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[51343,51353],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[51525,51531],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.SignatureHelper\n  id: SignatureHelper\n  children:\n  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)\n  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)\n  - System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])\n  - System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.SignatureHelper.AddSentinel\n  - System.Reflection.Emit.SignatureHelper.Equals(System.Object)\n  - System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)\n  - System.Reflection.Emit.SignatureHelper.GetHashCode\n  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper\n  - System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)\n  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)\n  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)\n  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)\n  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)\n  - System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])\n  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])\n  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  - System.Reflection.Emit.SignatureHelper.GetSignature\n  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.Emit.SignatureHelper.ToString\n  langs:\n  - csharp\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.InteropServices._SignatureHelper\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)\n  id: AddArgument(System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: AddArgument(Type)\n  nameWithType: SignatureHelper.AddArgument(Type)\n  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public void AddArgument (Type clsArgument);\n    parameters:\n    - id: clsArgument\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.AddArgument*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)\n  id: AddArgument(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: AddArgument(Type,Boolean)\n  nameWithType: SignatureHelper.AddArgument(Type,Boolean)\n  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public void AddArgument (Type argument, bool pinned);\n    parameters:\n    - id: argument\n      type: System.Type\n      description: Parameter description to be filled\n    - id: pinned\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.AddArgument*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])\n  id: AddArgument(System.Type,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: AddArgument(Type,Type[],Type[])\n  nameWithType: SignatureHelper.AddArgument(Type,Type[],Type[])\n  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Type[],Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);\n    parameters:\n    - id: argument\n      type: System.Type\n      description: Parameter description to be filled\n    - id: requiredCustomModifiers\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: optionalCustomModifiers\n      type: System.Type[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.AddArgument*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])\n  id: AddArguments(System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: AddArguments(Type[],Type[][],Type[][])\n  nameWithType: SignatureHelper.AddArguments(Type[],Type[][],Type[][])\n  fullName: System.Reflection.Emit.SignatureHelper.AddArguments(Type[],Type[][],Type[][])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);\n    parameters:\n    - id: arguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: requiredCustomModifiers\n      type: System.Type[][]\n      description: Parameter description to be filled\n    - id: optionalCustomModifiers\n      type: System.Type[][]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.AddSentinel\n  id: AddSentinel\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: AddSentinel()\n  nameWithType: SignatureHelper.AddSentinel()\n  fullName: System.Reflection.Emit.SignatureHelper.AddSentinel()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public void AddSentinel ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SignatureHelper.Equals(Object)\n  fullName: System.Reflection.Emit.SignatureHelper.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)\n  id: GetFieldSigHelper(System.Reflection.Module)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetFieldSigHelper(Module)\n  nameWithType: SignatureHelper.GetFieldSigHelper(Module)\n  fullName: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(Module)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SignatureHelper.GetHashCode()\n  fullName: System.Reflection.Emit.SignatureHelper.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper\n  id: GetLocalVarSigHelper\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetLocalVarSigHelper()\n  nameWithType: SignatureHelper.GetLocalVarSigHelper()\n  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)\n  id: GetLocalVarSigHelper(System.Reflection.Module)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetLocalVarSigHelper(Module)\n  nameWithType: SignatureHelper.GetLocalVarSigHelper(Module)\n  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(Module)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)\n  id: GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetMethodSigHelper(CallingConventions,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConventions,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConventions,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);\n    parameters:\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)\n  id: GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetMethodSigHelper(CallingConvention,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConvention,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConvention,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);\n    parameters:\n    - id: unmanagedCallingConvention\n      type: System.Runtime.InteropServices.CallingConvention\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)\n  id: GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetMethodSigHelper(Module,CallingConventions,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)\n  id: GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetMethodSigHelper(Module,CallingConvention,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: unmanagedCallConv\n      type: System.Runtime.InteropServices.CallingConvention\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])\n  id: GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetMethodSigHelper(Module,Type,Type[])\n  nameWithType: SignatureHelper.GetMethodSigHelper(Module,Type,Type[])\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,Type,Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])\n  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetPropertySigHelper(Module,Type,Type[])\n  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[])\n  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])\n  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])\n  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: requiredReturnTypeCustomModifiers\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: optionalReturnTypeCustomModifiers\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: requiredParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: Parameter description to be filled\n    - id: optionalParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  id: GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])\n  nameWithType: SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])\n  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);\n    parameters:\n    - id: mod\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: requiredReturnTypeCustomModifiers\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: optionalReturnTypeCustomModifiers\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: requiredParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: Parameter description to be filled\n    - id: optionalParameterTypeCustomModifiers\n      type: System.Type[][]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.GetSignature\n  id: GetSignature\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: GetSignature()\n  nameWithType: SignatureHelper.GetSignature()\n  fullName: System.Reflection.Emit.SignatureHelper.GetSignature()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public byte[] GetSignature ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.SignatureHelper.ToString\n  id: ToString\n  parent: System.Reflection.Emit.SignatureHelper\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: SignatureHelper.ToString()\n  fullName: System.Reflection.Emit.SignatureHelper.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: AddArgument(Type)\n  nameWithType: SignatureHelper.AddArgument(Type)\n  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: AddArgument(Type,Boolean)\n  nameWithType: SignatureHelper.AddArgument(Type,Boolean)\n  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: AddArgument(Type,Type[],Type[])\n  nameWithType: SignatureHelper.AddArgument(Type,Type[],Type[])\n  fullName: System.Reflection.Emit.SignatureHelper.AddArgument(Type,Type[],Type[])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: AddArguments(Type[],Type[][],Type[][])\n  nameWithType: SignatureHelper.AddArguments(Type[],Type[][],Type[][])\n  fullName: System.Reflection.Emit.SignatureHelper.AddArguments(Type[],Type[][],Type[][])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[][]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[][]\n- uid: System.Reflection.Emit.SignatureHelper.AddSentinel\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: AddSentinel()\n  nameWithType: SignatureHelper.AddSentinel()\n  fullName: System.Reflection.Emit.SignatureHelper.AddSentinel()\n- uid: System.Reflection.Emit.SignatureHelper.Equals(System.Object)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SignatureHelper.Equals(Object)\n  fullName: System.Reflection.Emit.SignatureHelper.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetFieldSigHelper(Module)\n  nameWithType: SignatureHelper.GetFieldSigHelper(Module)\n  fullName: System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(Module)\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Emit.SignatureHelper.GetHashCode\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SignatureHelper.GetHashCode()\n  fullName: System.Reflection.Emit.SignatureHelper.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetLocalVarSigHelper()\n  nameWithType: SignatureHelper.GetLocalVarSigHelper()\n  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper()\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetLocalVarSigHelper(Module)\n  nameWithType: SignatureHelper.GetLocalVarSigHelper(Module)\n  fullName: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(Module)\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetMethodSigHelper(CallingConventions,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConventions,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConventions,Type)\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetMethodSigHelper(CallingConvention,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(CallingConvention,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(CallingConvention,Type)\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Runtime.InteropServices.CallingConvention\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CallingConvention\n  nameWithType: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetMethodSigHelper(Module,CallingConventions,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConventions,Type)\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetMethodSigHelper(Module,CallingConvention,Type)\n  nameWithType: SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,CallingConvention,Type)\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Runtime.InteropServices.CallingConvention\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CallingConvention\n  nameWithType: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetMethodSigHelper(Module,Type,Type[])\n  nameWithType: SignatureHelper.GetMethodSigHelper(Module,Type,Type[])\n  fullName: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(Module,Type,Type[])\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetPropertySigHelper(Module,Type,Type[])\n  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[])\n  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[])\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])\n  nameWithType: SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])\n  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[][]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[][]\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])\n  nameWithType: SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])\n  fullName: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[][]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[][]\n- uid: System.Reflection.Emit.SignatureHelper.GetSignature\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: GetSignature()\n  nameWithType: SignatureHelper.GetSignature()\n  fullName: System.Reflection.Emit.SignatureHelper.GetSignature()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.Emit.SignatureHelper.System.Runtime.InteropServices._SignatureHelper.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Emit.SignatureHelper.ToString\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  name: ToString()\n  nameWithType: SignatureHelper.ToString()\n  fullName: System.Reflection.Emit.SignatureHelper.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.SignatureHelper.AddArgument*\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  nameWithType: SignatureHelper.\n- uid: System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper*\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  nameWithType: SignatureHelper.\n- uid: System.Reflection.Emit.SignatureHelper.GetMethodSigHelper*\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  nameWithType: SignatureHelper.\n- uid: System.Reflection.Emit.SignatureHelper.GetPropertySigHelper*\n  parent: System.Reflection.Emit.SignatureHelper\n  isExternal: false\n  nameWithType: SignatureHelper.\n"}