{"nodes":[{"pos":[532,548],"content":"IListContract<ph id=\"ph1\">&lt;C&gt;</ph>","needQuote":true,"needEscape":true,"source":"IListContract<C>"},{"pos":[910,944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1325,1339],"content":"GetItem(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetItem(Int32)","pos":[0,14]}]},{"pos":[1697,1731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1777,1811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2036,2046],"content":"IndexOf(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(C)","pos":[0,10]}]},{"pos":[2383,2417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2474,2508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2757,2772],"content":"Insert(Int32,C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,C)","pos":[0,15]}]},{"pos":[3142,3176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3225,3259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3506,3521],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[3885,3919],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4170,4186],"content":"SetItem(Int32,C)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetItem(Int32,C)","pos":[0,16]}]},{"pos":[4560,4594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4644,4678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4907,4921],"content":"GetItem(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetItem(Int32)","pos":[0,14]}]},{"pos":[5097,5098],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[5196,5201],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5406,5416],"content":"IndexOf(C)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(C)","pos":[0,10]}]},{"pos":[5600,5605],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5702,5703],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[5905,5920],"content":"Insert(Int32,C)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,C)","pos":[0,15]}]},{"pos":[6114,6119],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6216,6217],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]},{"pos":[6418,6433],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[6627,6632],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6850,6866],"content":"SetItem(Int32,C)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetItem(Int32,C)","pos":[0,16]}]},{"pos":[7062,7067],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7164,7165],"content":"C","needQuote":true,"needEscape":true,"nodes":[{"content":"C","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.Collections.IListContract`1\n  id: IListContract`1\n  children:\n  - System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  - System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  - System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  - System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  - System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  langs:\n  - csharp\n  name: IListContract<C>\n  nameWithType: IListContract<C>\n  fullName: System.AddIn.Contract.Collections.IListContract<C>\n  type: Interface\n  syntax:\n    content: 'public interface IListContract<C> : System.AddIn.Contract.Collections.ICollectionContract<C>, System.AddIn.Contract.Collections.IEnumerableContract<C> where C : IContract'\n    typeParameters:\n    - id: C\n      description: Parameter description to be filled\n  implements:\n  - System.AddIn.Contract.Collections.ICollectionContract<C>\n  - System.AddIn.Contract.Collections.IEnumerableContract<C>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  id: GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: GetItem(Int32)\n  nameWithType: IListContract<C>.GetItem(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.GetItem(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public C GetItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: C\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: IndexOf(C)\n  nameWithType: IListContract<C>.IndexOf(C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.IndexOf(C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public int IndexOf (C item);\n    parameters:\n    - id: item\n      type: C\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: Insert(Int32,C)\n  nameWithType: IListContract<C>.Insert(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.Insert(Int32,C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void Insert (int index, C item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: C\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<C>.RemoveAt(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  langs:\n  - csharp\n  name: SetItem(Int32,C)\n  nameWithType: IListContract<C>.SetItem(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.SetItem(Int32,C)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract.Collections\n  syntax:\n    content: public void SetItem (int index, C value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: C\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.AddIn.Contract.Collections.IListContract`1.GetItem(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: GetItem(Int32)\n  nameWithType: IListContract<C>.GetItem(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.GetItem(Int32)\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IListContract`1.IndexOf(`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: IndexOf(C)\n  nameWithType: IListContract<C>.IndexOf(C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.IndexOf(C)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.AddIn.Contract.Collections.IListContract`1.Insert(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: Insert(Int32,C)\n  nameWithType: IListContract<C>.Insert(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.Insert(Int32,C)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n- uid: System.AddIn.Contract.Collections.IListContract`1.RemoveAt(System.Int32)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: IListContract<C>.RemoveAt(Int32)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.Collections.IListContract`1.SetItem(System.Int32,`0)\n  parent: System.AddIn.Contract.Collections.IListContract`1\n  isExternal: false\n  name: SetItem(Int32,C)\n  nameWithType: IListContract<C>.SetItem(Int32,C)\n  fullName: System.AddIn.Contract.Collections.IListContract<C>.SetItem(Int32,C)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: C\n  parent: ''\n  isExternal: true\n  name: C\n  nameWithType: C\n  fullName: C\n"}