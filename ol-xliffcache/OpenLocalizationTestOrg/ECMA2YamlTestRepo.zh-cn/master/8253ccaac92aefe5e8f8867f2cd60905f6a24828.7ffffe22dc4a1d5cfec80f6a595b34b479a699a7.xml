{"nodes":[{"pos":[2554,2567],"content":"Collection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"Collection<T>"},{"pos":[3259,3293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4100,4112],"content":"Collection()","needQuote":true,"needEscape":true,"nodes":[{"content":"Collection()","pos":[0,12]}]},{"pos":[4655,4675],"content":"Collection(IList<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Collection(IList<T>)"},{"pos":[5078,5112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5317,5323],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[5624,5658],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5859,5866],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[6330,6342],"content":"ClearItems()","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearItems()","pos":[0,12]}]},{"pos":[6836,6847],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[7163,7197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7256,7290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7531,7548],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[7891,7925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7986,8020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8221,8226],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[8519,8553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8770,8785],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[9184,9218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9431,9441],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[9753,9787],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9844,9878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10115,10130],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[10475,10509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10558,10592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10837,10856],"content":"InsertItem(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertItem(Int32,T)","pos":[0,19]}]},{"pos":[11224,11258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11307,11341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11568,11579],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[11917,11951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11997,12031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12232,12237],"content":"Items","needQuote":true,"needEscape":true,"nodes":[{"content":"Items","pos":[0,5]}]},{"pos":[12587,12621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12832,12841],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[13151,13185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13244,13278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13513,13528],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[13867,13901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14140,14157],"content":"RemoveItem(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveItem(Int32)","pos":[0,17]}]},{"pos":[14513,14547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14786,14802],"content":"SetItem(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetItem(Int32,T)","pos":[0,16]}]},{"pos":[15161,15195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15244,15278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15587,15625],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[16027,16061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16394,16444],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[16869,16903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16964,16998],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17293,17338],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[17747,17781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18064,18103],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[18495,18529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18822,18868],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[19313,19347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19638,19674],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[20052,20086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20143,20177],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20478,20519],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[20913,20947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21006,21040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21339,21379],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[21769,21803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21860,21894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22217,22262],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[22672,22706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22768,22802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23079,23115],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[23497,23531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23806,23841],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[24220,24254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24545,24581],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[24992,25026],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25084,25118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25415,25454],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[25842,25876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25987,26000],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[26140,26152],"content":"Collection()","needQuote":true,"needEscape":true,"nodes":[{"content":"Collection()","pos":[0,12]}]},{"pos":[26441,26461],"content":"Collection(IList<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Collection(IList<T>)"},{"pos":[26698,26706],"content":"IList<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<T>"},{"pos":[26921,26927],"content":"Add(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(T)","pos":[0,6]}]},{"pos":[27078,27079],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[27251,27258],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[27506,27518],"content":"ClearItems()","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearItems()","pos":[0,12]}]},{"pos":[27778,27789],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[27968,27975],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28076,28077],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28269,28286],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[28459,28460],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28560,28565],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28752,28757],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[28922,28927],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29122,29137],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[29370,29384],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[29615,29625],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[29800,29805],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29902,29903],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30093,30108],"content":"Insert(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,T)","pos":[0,15]}]},{"pos":[30293,30298],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30395,30396],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30590,30609],"content":"InsertItem(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"InsertItem(Int32,T)","pos":[0,19]}]},{"pos":[30802,30807],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30904,30905],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[31090,31101],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[31262,31263],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[31361,31366],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31553,31558],"content":"Items","needQuote":true,"needEscape":true,"nodes":[{"content":"Items","pos":[0,5]}]},{"pos":[31765,31773],"content":"IList<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<T>"},{"pos":[31991,32000],"content":"Remove(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(T)","pos":[0,9]}]},{"pos":[32175,32182],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[32283,32284],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[32473,32488],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[32673,32678],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32884,32901],"content":"RemoveItem(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveItem(Int32)","pos":[0,17]}]},{"pos":[33090,33095],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33301,33317],"content":"SetItem(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetItem(Int32,T)","pos":[0,16]}]},{"pos":[33504,33509],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33606,33607],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33826,33864],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[34097,34104],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[34354,34404],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[34659,34664],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[34777,34782],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35009,35054],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[35301,35308],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[35533,35572],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[35806,35812],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36040,36086],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[36363,36374],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[36623,36659],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[36886,36891],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37005,37011],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37243,37284],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[37523,37530],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[37648,37654],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37885,37925],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[38160,38165],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38279,38285],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38528,38573],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[38818,38823],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38937,38943],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39163,39199],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[39428,39435],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39656,39691],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[39918,39925],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40154,40190],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[40418,40424],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40539,40544],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40772,40811],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[41045,41051],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.ObjectModel.Collection`1\n  id: Collection`1\n  children:\n  - System.Collections.ObjectModel.Collection`1.#ctor\n  - System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList`1)\n  - System.Collections.ObjectModel.Collection`1.Add(`0)\n  - System.Collections.ObjectModel.Collection`1.Clear\n  - System.Collections.ObjectModel.Collection`1.ClearItems\n  - System.Collections.ObjectModel.Collection`1.Contains(`0)\n  - System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)\n  - System.Collections.ObjectModel.Collection`1.Count\n  - System.Collections.ObjectModel.Collection`1.GetEnumerator\n  - System.Collections.ObjectModel.Collection`1.IndexOf(`0)\n  - System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)\n  - System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)\n  - System.Collections.ObjectModel.Collection`1.Item(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.Items\n  - System.Collections.ObjectModel.Collection`1.Remove(`0)\n  - System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: Collection<T>\n  nameWithType: Collection<T>\n  fullName: System.Collections.ObjectModel.Collection<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class Collection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.IReadOnlyList<T>, System.Collections.IList\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IList<T>\n  - System.Collections.Generic.IReadOnlyCollection<T>\n  - System.Collections.Generic.IReadOnlyList<T>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Collection()\n  nameWithType: Collection<T>.Collection()\n  fullName: System.Collections.ObjectModel.Collection<T>.Collection()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public Collection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList`1)\n  id: '#ctor(System.Collections.Generic.IList`1)'\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Collection(IList<T>)\n  nameWithType: Collection<T>.Collection(IList<T>)\n  fullName: System.Collections.ObjectModel.Collection<T>.Collection(IList<T>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public Collection (System.Collections.Generic.IList<T> list);\n    parameters:\n    - id: list\n      type: System.Collections.Generic.IList`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Add(`0)\n  id: Add(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Add(T)\n  nameWithType: Collection<T>.Add(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void Add (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Clear\n  id: Clear\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: Collection<T>.Clear()\n  fullName: System.Collections.ObjectModel.Collection<T>.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.ClearItems\n  id: ClearItems\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: ClearItems()\n  nameWithType: Collection<T>.ClearItems()\n  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected virtual void ClearItems ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: Collection<T>.Contains(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public bool Contains (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: Collection<T>.CopyTo(T[],Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Count\n  id: Count\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: Collection<T>.Count\n  fullName: System.Collections.ObjectModel.Collection<T>.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: Collection<T>.GetEnumerator()\n  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: Collection<T>.IndexOf(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public int IndexOf (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)\n  id: Insert(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Insert(Int32,T)\n  nameWithType: Collection<T>.Insert(Int32,T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Insert(Int32,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void Insert (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)\n  id: InsertItem(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: InsertItem(Int32,T)\n  nameWithType: Collection<T>.InsertItem(Int32,T)\n  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(Int32,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected virtual void InsertItem (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: Collection<T>.Item(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public T this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Items\n  id: Items\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Items\n  nameWithType: Collection<T>.Items\n  fullName: System.Collections.ObjectModel.Collection<T>.Items\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected System.Collections.Generic.IList<T> Items { get; }\n    return:\n      type: System.Collections.Generic.IList`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)\n  id: Remove(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: Remove(T)\n  nameWithType: Collection<T>.Remove(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public bool Remove (T item);\n    parameters:\n    - id: item\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: Collection<T>.RemoveAt(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)\n  id: RemoveItem(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: RemoveItem(Int32)\n  nameWithType: Collection<T>.RemoveItem(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected virtual void RemoveItem (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)\n  id: SetItem(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: SetItem(Int32,T)\n  nameWithType: Collection<T>.SetItem(Int32,T)\n  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(Int32,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected virtual void SetItem (int index, T item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: Collection<T>.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: Collection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: Collection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Collection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: Collection<T>.System.Collections.IList.Add(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: Collection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: Collection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: Collection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: Collection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: Collection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: Collection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.Collection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: Collection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.ObjectModel.Collection`1.#ctor\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Collection()\n  nameWithType: Collection<T>.Collection()\n  fullName: System.Collections.ObjectModel.Collection<T>.Collection()\n- uid: System.Collections.ObjectModel.Collection`1.#ctor(System.Collections.Generic.IList`1)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Collection(IList<T>)\n  nameWithType: Collection<T>.Collection(IList<T>)\n  fullName: System.Collections.ObjectModel.Collection<T>.Collection(IList<T>)\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.ObjectModel.Collection`1.Add(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Add(T)\n  nameWithType: Collection<T>.Add(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Add(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.Clear\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Clear()\n  nameWithType: Collection<T>.Clear()\n  fullName: System.Collections.ObjectModel.Collection<T>.Clear()\n- uid: System.Collections.ObjectModel.Collection`1.ClearItems\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: ClearItems()\n  nameWithType: Collection<T>.ClearItems()\n  fullName: System.Collections.ObjectModel.Collection<T>.ClearItems()\n- uid: System.Collections.ObjectModel.Collection`1.Contains(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: Collection<T>.Contains(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: Collection<T>.CopyTo(T[],Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.CopyTo(T[],Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.Count\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Count\n  nameWithType: Collection<T>.Count\n  fullName: System.Collections.ObjectModel.Collection<T>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.GetEnumerator\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: Collection<T>.GetEnumerator()\n  fullName: System.Collections.ObjectModel.Collection<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.ObjectModel.Collection`1.IndexOf(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: Collection<T>.IndexOf(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.IndexOf(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Insert(Int32,T)\n  nameWithType: Collection<T>.Insert(Int32,T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Insert(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: InsertItem(Int32,T)\n  nameWithType: Collection<T>.InsertItem(Int32,T)\n  fullName: System.Collections.ObjectModel.Collection<T>.InsertItem(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.Item(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: Collection<T>.Item(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.Item(Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.Items\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Items\n  nameWithType: Collection<T>.Items\n  fullName: System.Collections.ObjectModel.Collection<T>.Items\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.ObjectModel.Collection`1.Remove(`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: Remove(T)\n  nameWithType: Collection<T>.Remove(T)\n  fullName: System.Collections.ObjectModel.Collection<T>.Remove(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: Collection<T>.RemoveAt(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: RemoveItem(Int32)\n  nameWithType: Collection<T>.RemoveItem(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.RemoveItem(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: SetItem(Int32,T)\n  nameWithType: Collection<T>.SetItem(Int32,T)\n  fullName: System.Collections.ObjectModel.Collection<T>.SetItem(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: Collection<T>.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: Collection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: Collection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: Collection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: Collection<T>.System.Collections.IList.Add(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: Collection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: Collection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: Collection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: Collection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: Collection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: Collection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.ObjectModel.Collection`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: Collection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Collections.ObjectModel.Collection<T>.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}