{"nodes":[{"pos":[2943,2964],"content":"ReadOnlyCollection<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection<T>"},{"pos":[3680,3714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4609,4637],"content":"ReadOnlyCollection(IList<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection(IList<T>)"},{"pos":[5080,5114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5345,5356],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[5690,5724],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5783,5817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6074,6091],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[6450,6484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6545,6579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6796,6801],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[7110,7144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7377,7392],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[7807,7841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8070,8080],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[8410,8444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8501,8535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8778,8789],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[9138,9172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9218,9252],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9469,9474],"content":"Items","needQuote":true,"needEscape":true,"nodes":[{"content":"Items","pos":[0,5]}]},{"pos":[9840,9874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10193,10234],"content":"System.Collections.Generic.ICollection(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(T)","pos":[0,41]}]},{"pos":[10631,10665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10980,11020],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[11688,11726],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[12144,12178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12503,12544],"content":"System.Collections.Generic.ICollection(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(T)","pos":[0,41]}]},{"pos":[12944,12978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13037,13071],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13410,13451],"content":"System.Collections.Generic.IList(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IList(Int32,T)","pos":[0,41]}]},{"pos":[13867,13901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13951,13985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14314,14353],"content":"System.Collections.Generic.IList(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IList(Int32)","pos":[0,39]}]},{"pos":[14792,14826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14872,14906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15243,15282],"content":"System.Collections.Generic.IList(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IList(Int32)","pos":[0,39]}]},{"pos":[15687,15721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16070,16120],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[16561,16595],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16656,16690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17001,17046],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[17471,17505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17804,17843],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[18251,18285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18594,18640],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[19101,19135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19442,19478],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[19872,19906],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19963,19997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20278,20310],"content":"System.Collections.IList.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Clear()","pos":[0,32]}]},{"pos":[20945,20986],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[21396,21430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21489,21523],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21838,21878],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[22284,22318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22375,22409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22748,22793],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[23219,23253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23315,23349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23642,23678],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[24076,24110],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24401,24436],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[24831,24865],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25172,25208],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[25635,25669],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25727,25761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26074,26113],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[26517,26551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26866,26906],"content":"System.Collections.IList.RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.RemoveAt(Int32)","pos":[0,40]}]},{"pos":[27310,27344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27455,27468],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[27660,27688],"content":"ReadOnlyCollection(IList<ph id=\"ph1\">&lt;T&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ReadOnlyCollection(IList<T>)"},{"pos":[27957,27965],"content":"IList<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<T>"},{"pos":[28201,28212],"content":"Contains(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(T)","pos":[0,11]}]},{"pos":[28407,28414],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[28515,28516],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[28724,28741],"content":"CopyTo(T[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(T[],Int32)","pos":[0,17]}]},{"pos":[28930,28931],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[29031,29036],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29239,29244],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[29425,29430],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29641,29656],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[29905,29919],"content":"IEnumerator<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<T>"},{"pos":[30166,30176],"content":"IndexOf(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(T)","pos":[0,10]}]},{"pos":[30367,30372],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30469,30470],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30671,30682],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[30859,30860],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[30958,30963],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31166,31171],"content":"Items","needQuote":true,"needEscape":true,"nodes":[{"content":"Items","pos":[0,5]}]},{"pos":[31394,31402],"content":"IList<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<T>"},{"pos":[31675,31716],"content":"System.Collections.Generic.ICollection(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(T)","pos":[0,41]}]},{"pos":[31953,31954],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[32184,32224],"content":"System.Collections.Generic.ICollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection()","pos":[0,40]}]},{"pos":[32612,32650],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[32899,32906],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33160,33201],"content":"System.Collections.Generic.ICollection(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(T)","pos":[0,41]}]},{"pos":[33456,33463],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33564,33565],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[33807,33848],"content":"System.Collections.Generic.IList(Int32,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IList(Int32,T)","pos":[0,41]}]},{"pos":[34101,34106],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34203,34204],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34441,34480],"content":"System.Collections.Generic.IList(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IList(Int32)","pos":[0,39]}]},{"pos":[34713,34714],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[34812,34817],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35073,35112],"content":"System.Collections.Generic.IList(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IList(Int32)","pos":[0,39]}]},{"pos":[35361,35366],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35628,35678],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[35949,35954],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[36067,36072],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36315,36360],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[36623,36630],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36871,36910],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[37160,37166],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[37410,37456],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[37749,37760],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[38025,38061],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[38304,38309],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38423,38429],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[38659,38691],"content":"System.Collections.IList.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Clear()","pos":[0,32]}]},{"pos":[39059,39100],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[39355,39362],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[39480,39486],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[39733,39773],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[40024,40029],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40143,40149],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[40408,40453],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[40714,40719],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40833,40839],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[41075,41111],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[41356,41363],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[41600,41635],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[41878,41885],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42130,42166],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[42410,42416],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[42531,42536],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42780,42819],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[43069,43075],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[43322,43362],"content":"System.Collections.IList.RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.RemoveAt(Int32)","pos":[0,40]}]},{"pos":[43613,43618],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  id: ReadOnlyCollection`1\n  children:\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList`1)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  langs:\n  - csharp\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Count = {Count}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.Mscorlib_CollectionDebugView`1))]\n\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class ReadOnlyCollection<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IList<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.IReadOnlyList<T>, System.Collections.IList\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<T>\n  - System.Collections.Generic.IEnumerable<T>\n  - System.Collections.Generic.IList<T>\n  - System.Collections.Generic.IReadOnlyCollection<T>\n  - System.Collections.Generic.IReadOnlyList<T>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList`1)\n  id: '#ctor(System.Collections.Generic.IList`1)'\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: ReadOnlyCollection(IList<T>)\n  nameWithType: ReadOnlyCollection<T>.ReadOnlyCollection(IList<T>)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(IList<T>)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public ReadOnlyCollection (System.Collections.Generic.IList<T> list);\n    parameters:\n    - id: list\n      type: System.Collections.Generic.IList`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  id: Contains(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Contains(T)\n  nameWithType: ReadOnlyCollection<T>.Contains(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public bool Contains (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  id: CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: CopyTo(T[],Int32)\n  nameWithType: ReadOnlyCollection<T>.CopyTo(T[],Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public void CopyTo (T[] array, int index);\n    parameters:\n    - id: array\n      type: T[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  id: Count\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ReadOnlyCollection<T>.Count\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  id: GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<T> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  id: IndexOf(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: IndexOf(T)\n  nameWithType: ReadOnlyCollection<T>.IndexOf(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public int IndexOf (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.Item(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: public T this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  id: Items\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: Items\n  nameWithType: ReadOnlyCollection<T>.Items\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: protected System.Collections.Generic.IList<T> Items { get; }\n    return:\n      type: System.Collections.Generic.IList`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  id: System#Collections#Generic#ICollection{T}#Add(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<T>.Add (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear\n  id: System#Collections#Generic#ICollection{T}#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection<T>.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  id: System#Collections#Generic#ICollection{T}#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  id: System#Collections#Generic#ICollection{T}#Remove(`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool ICollection<T>.Remove (T value);\n    parameters:\n    - id: value\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  id: System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IList(Int32,T)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32,T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList<T>.Insert (int index, T value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)\n  id: System#Collections#Generic#IList{T}#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IList(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: T System.Collections.Generic.IList<T>.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: T\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  id: System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.Generic.IList(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList<T>.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Add(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  id: System#Collections#IList#Clear\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Clear()\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Clear()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  id: System#Collections#IList#RemoveAt(System.Int32)\n  isEii: true\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  langs:\n  - csharp\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.ObjectModel\n  syntax:\n    content: void IList.RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList`1)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: ReadOnlyCollection(IList<T>)\n  nameWithType: ReadOnlyCollection<T>.ReadOnlyCollection(IList<T>)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(IList<T>)\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Contains(T)\n  nameWithType: ReadOnlyCollection<T>.Contains(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: CopyTo(T[],Int32)\n  nameWithType: ReadOnlyCollection<T>.CopyTo(T[],Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[],Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Count\n  nameWithType: ReadOnlyCollection<T>.Count\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<T>\n  nameWithType: IEnumerator<T>\n  fullName: System.Collections.Generic.IEnumerator<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: IndexOf(T)\n  nameWithType: ReadOnlyCollection<T>.IndexOf(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.Item(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item(Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: Items\n  nameWithType: ReadOnlyCollection<T>.Items\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items\n- uid: System.Collections.Generic.IList`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<T>\n  nameWithType: IList<T>\n  fullName: System.Collections.Generic.IList<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection()\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.ICollection(T)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection(T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IList(Int32,T)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32,T)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32,T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IList(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.Generic.IList(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Add(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Clear()\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Clear()\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Contains(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IndexOf(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Item(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.Remove(Object)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)\n  parent: System.Collections.ObjectModel.ReadOnlyCollection`1\n  isExternal: false\n  name: System.Collections.IList.RemoveAt(Int32)\n  nameWithType: ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(Int32)\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}