{"nodes":[{"pos":[667,678],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[1137,1142],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[1473,1507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1722,1736],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[2060,2094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2153,2187],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2499,2518],"content":"Equals(MethodToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(MethodToken)","pos":[0,19]}]},{"pos":[2892,2926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2985,3019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3269,3282],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3598,3632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3969,4005],"content":"op_Equality(MethodToken,MethodToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(MethodToken,MethodToken)","pos":[0,36]}]},{"pos":[4461,4495],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4574,4608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4667,4701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5042,5080],"content":"op_Inequality(MethodToken,MethodToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(MethodToken,MethodToken)","pos":[0,38]}]},{"pos":[5542,5576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5655,5689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5748,5782],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5965,5970],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[6243,6277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6391,6407],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6529,6534],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[6725,6736],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[6949,6963],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7136,7143],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7261,7267],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7475,7494],"content":"Equals(MethodToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(MethodToken)","pos":[0,19]}]},{"pos":[7677,7684],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7839,7850],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[8053,8066],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8235,8240],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8486,8522],"content":"op_Equality(MethodToken,MethodToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(MethodToken,MethodToken)","pos":[0,36]}]},{"pos":[8739,8746],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8901,8912],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[9091,9102],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[9378,9416],"content":"op_Inequality(MethodToken,MethodToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(MethodToken,MethodToken)","pos":[0,38]}]},{"pos":[9637,9644],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9799,9810],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[9989,10000],"content":"MethodToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodToken","pos":[0,11]}]},{"pos":[10197,10202],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[10355,10360],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.MethodToken\n  id: MethodToken\n  children:\n  - System.Reflection.Emit.MethodToken.Empty\n  - System.Reflection.Emit.MethodToken.Equals(System.Object)\n  - System.Reflection.Emit.MethodToken.Equals(System.Reflection.Emit.MethodToken)\n  - System.Reflection.Emit.MethodToken.GetHashCode\n  - System.Reflection.Emit.MethodToken.op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  - System.Reflection.Emit.MethodToken.op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  - System.Reflection.Emit.MethodToken.Token\n  langs:\n  - csharp\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct MethodToken\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.Empty\n  id: Empty\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: MethodToken.Empty\n  fullName: System.Reflection.Emit.MethodToken.Empty\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static readonly System.Reflection.Emit.MethodToken Empty;\n    return:\n      type: System.Reflection.Emit.MethodToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: MethodToken.Equals(Object)\n  fullName: System.Reflection.Emit.MethodToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.MethodToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Reflection.Emit.MethodToken)\n  id: Equals(System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Equals(MethodToken)\n  nameWithType: MethodToken.Equals(MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.Equals(MethodToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.MethodToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.MethodToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.MethodToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: MethodToken.GetHashCode()\n  fullName: System.Reflection.Emit.MethodToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  id: op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: op_Equality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Equality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Equality(MethodToken,MethodToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.MethodToken a, System.Reflection.Emit.MethodToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.MethodToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.MethodToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  id: op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: op_Inequality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Inequality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Inequality(MethodToken,MethodToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.MethodToken a, System.Reflection.Emit.MethodToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.MethodToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.MethodToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.MethodToken.Token\n  id: Token\n  parent: System.Reflection.Emit.MethodToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: MethodToken.Token\n  fullName: System.Reflection.Emit.MethodToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.MethodToken.Empty\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Empty\n  nameWithType: MethodToken.Empty\n  fullName: System.Reflection.Emit.MethodToken.Empty\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Object)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: MethodToken.Equals(Object)\n  fullName: System.Reflection.Emit.MethodToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.MethodToken.Equals(System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Equals(MethodToken)\n  nameWithType: MethodToken.Equals(MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.Equals(MethodToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken.GetHashCode\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: MethodToken.GetHashCode()\n  fullName: System.Reflection.Emit.MethodToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.MethodToken.op_Equality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: op_Equality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Equality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Equality(MethodToken,MethodToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken.op_Inequality(System.Reflection.Emit.MethodToken,System.Reflection.Emit.MethodToken)\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: op_Inequality(MethodToken,MethodToken)\n  nameWithType: MethodToken.op_Inequality(MethodToken,MethodToken)\n  fullName: System.Reflection.Emit.MethodToken.op_Inequality(MethodToken,MethodToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: MethodToken\n  nameWithType: MethodToken\n  fullName: System.Reflection.Emit.MethodToken\n- uid: System.Reflection.Emit.MethodToken.Token\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  name: Token\n  nameWithType: MethodToken.Token\n  fullName: System.Reflection.Emit.MethodToken.Token\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.MethodToken.Equals*\n  parent: System.Reflection.Emit.MethodToken\n  isExternal: false\n  nameWithType: MethodToken.\n"}