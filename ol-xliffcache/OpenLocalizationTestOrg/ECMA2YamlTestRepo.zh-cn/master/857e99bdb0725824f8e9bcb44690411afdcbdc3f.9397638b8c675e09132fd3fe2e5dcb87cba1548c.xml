{"nodes":[{"pos":[1580,1592],"content":"CryptoStream","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoStream","pos":[0,12]}]},{"pos":[4054,4108],"content":"CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)","pos":[0,54]}]},{"pos":[4651,4685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4783,4817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4910,4944],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5145,5152],"content":"CanRead","needQuote":true,"needEscape":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[5457,5491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5692,5699],"content":"CanSeek","needQuote":true,"needEscape":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[6004,6038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6241,6249],"content":"CanWrite","needQuote":true,"needEscape":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[6557,6591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6788,6795],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[7275,7291],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[7648,7682],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7879,7886],"content":"Flush()","needQuote":true,"needEscape":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[8421,8450],"content":"FlushAsync(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[8922,8956],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9028,9062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9279,9296],"content":"FlushFinalBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushFinalBlock()","pos":[0,17]}]},{"pos":[9800,9820],"content":"HasFlushedFinalBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"HasFlushedFinalBlock","pos":[0,20]}]},{"pos":[10155,10189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10388,10394],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[10694,10728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10931,10939],"content":"Position","needQuote":true,"needEscape":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[11250,11284],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11561,11585],"content":"Read(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Byte[],Int32,Int32)","pos":[0,24]}]},{"pos":[11969,12003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12065,12099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12160,12194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12251,12285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12642,12689],"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,47]}]},{"pos":[13207,13241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13303,13337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13398,13432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13527,13561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13647,13681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13946,13968],"content":"Seek(Int64,SeekOrigin)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(Int64,SeekOrigin)","pos":[0,22]}]},{"pos":[14352,14386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14456,14490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14547,14581],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14814,14830],"content":"SetLength(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[15176,15210],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15489,15514],"content":"Write(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(Byte[],Int32,Int32)","pos":[0,25]}]},{"pos":[15902,15936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15998,16032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16093,16127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16486,16534],"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,48]}]},{"pos":[17050,17084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17146,17180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17241,17275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17370,17404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17476,17510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17624,17640],"content":"System.IO.Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IO.Stream","pos":[0,16]}]},{"pos":[17886,17940],"content":"CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)","pos":[0,54]}]},{"pos":[18206,18212],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[18385,18401],"content":"ICryptoTransform","needQuote":true,"needEscape":true,"nodes":[{"content":"ICryptoTransform","pos":[0,16]}]},{"pos":[18613,18629],"content":"CryptoStreamMode","needQuote":true,"needEscape":true,"nodes":[{"content":"CryptoStreamMode","pos":[0,16]}]},{"pos":[18858,18865],"content":"CanRead","needQuote":true,"needEscape":true,"nodes":[{"content":"CanRead","pos":[0,7]}]},{"pos":[19032,19039],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19228,19235],"content":"CanSeek","needQuote":true,"needEscape":true,"nodes":[{"content":"CanSeek","pos":[0,7]}]},{"pos":[19402,19409],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19599,19607],"content":"CanWrite","needQuote":true,"needEscape":true,"nodes":[{"content":"CanWrite","pos":[0,8]}]},{"pos":[19776,19783],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19970,19977],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[20230,20246],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[20431,20438],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20625,20632],"content":"Flush()","needQuote":true,"needEscape":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[20908,20937],"content":"FlushAsync(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushAsync(CancellationToken)","pos":[0,29]}]},{"pos":[21177,21181],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[21340,21357],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[21584,21601],"content":"FlushFinalBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"FlushFinalBlock()","pos":[0,17]}]},{"pos":[21871,21891],"content":"HasFlushedFinalBlock","needQuote":true,"needEscape":true,"nodes":[{"content":"HasFlushedFinalBlock","pos":[0,20]}]},{"pos":[22084,22091],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22279,22285],"content":"Length","needQuote":true,"needEscape":true,"nodes":[{"content":"Length","pos":[0,6]}]},{"pos":[22448,22453],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[22639,22647],"content":"Position","needQuote":true,"needEscape":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[22814,22819],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[23042,23066],"content":"Read(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Read(Byte[],Int32,Int32)","pos":[0,24]}]},{"pos":[23265,23270],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23382,23386],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[23499,23504],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23617,23622],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23885,23932],"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReadAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,47]}]},{"pos":[24222,24233],"content":"Task<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Int32>"},{"pos":[24380,24384],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[24497,24502],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24615,24620],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24765,24782],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[25033,25055],"content":"Seek(Int64,SeekOrigin)","needQuote":true,"needEscape":true,"nodes":[{"content":"Seek(Int64,SeekOrigin)","pos":[0,22]}]},{"pos":[25250,25255],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[25368,25373],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[25497,25507],"content":"SeekOrigin","needQuote":true,"needEscape":true,"nodes":[{"content":"SeekOrigin","pos":[0,10]}]},{"pos":[25721,25737],"content":"SetLength(Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetLength(Int64)","pos":[0,16]}]},{"pos":[25920,25925],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[26149,26174],"content":"Write(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(Byte[],Int32,Int32)","pos":[0,25]}]},{"pos":[26374,26378],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[26491,26496],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26609,26614],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26878,26926],"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteAsync(Byte[],Int32,Int32,CancellationToken)","pos":[0,48]}]},{"pos":[27204,27208],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[27334,27338],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[27451,27456],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27569,27574],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27719,27736],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CryptoStream\n  id: CryptoStream\n  children:\n  - System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)\n  - System.Security.Cryptography.CryptoStream.CanRead\n  - System.Security.Cryptography.CryptoStream.CanSeek\n  - System.Security.Cryptography.CryptoStream.CanWrite\n  - System.Security.Cryptography.CryptoStream.Clear\n  - System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  - System.Security.Cryptography.CryptoStream.Flush\n  - System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  - System.Security.Cryptography.CryptoStream.FlushFinalBlock\n  - System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  - System.Security.Cryptography.CryptoStream.Length\n  - System.Security.Cryptography.CryptoStream.Position\n  - System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  - System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  langs:\n  - csharp\n  name: CryptoStream\n  nameWithType: CryptoStream\n  fullName: System.Security.Cryptography.CryptoStream\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class CryptoStream : System.IO.Stream\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.IO.Stream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.IO.Stream.CanTimeout\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.EndRead(System.IAsyncResult)\n  - System.IO.Stream.EndWrite(System.IAsyncResult)\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.ReadTimeout\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.IO.Stream.WriteTimeout\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)\n  id: '#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)'\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)\n  nameWithType: CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)\n  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public CryptoStream (System.IO.Stream stream, System.Security.Cryptography.ICryptoTransform transform, System.Security.Cryptography.CryptoStreamMode mode);\n    parameters:\n    - id: stream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: transform\n      type: System.Security.Cryptography.ICryptoTransform\n      description: Parameter description to be filled\n    - id: mode\n      type: System.Security.Cryptography.CryptoStreamMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.CanRead\n  id: CanRead\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: CryptoStream.CanRead\n  fullName: System.Security.Cryptography.CryptoStream.CanRead\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.CanSeek\n  id: CanSeek\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: CryptoStream.CanSeek\n  fullName: System.Security.Cryptography.CryptoStream.CanSeek\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.CanWrite\n  id: CanWrite\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: CryptoStream.CanWrite\n  fullName: System.Security.Cryptography.CryptoStream.CanWrite\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Clear\n  id: Clear\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: CryptoStream.Clear()\n  fullName: System.Security.Cryptography.CryptoStream.Clear()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: CryptoStream.Dispose(Boolean)\n  fullName: System.Security.Cryptography.CryptoStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Flush\n  id: Flush\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: CryptoStream.Flush()\n  fullName: System.Security.Cryptography.CryptoStream.Flush()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: FlushAsync(CancellationToken)\n  nameWithType: CryptoStream.FlushAsync(CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock\n  id: FlushFinalBlock\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: FlushFinalBlock()\n  nameWithType: CryptoStream.FlushFinalBlock()\n  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void FlushFinalBlock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  id: HasFlushedFinalBlock\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: HasFlushedFinalBlock\n  nameWithType: CryptoStream.HasFlushedFinalBlock\n  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool HasFlushedFinalBlock { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Length\n  id: Length\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: CryptoStream.Length\n  fullName: System.Security.Cryptography.CryptoStream.Length\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Position\n  id: Position\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: CryptoStream.Position\n  fullName: System.Security.Cryptography.CryptoStream.Position\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: CryptoStream.Read(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.CryptoStream.Read(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Threading.Tasks.Task<int> ReadAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: CryptoStream.Seek(Int64,SeekOrigin)\n  fullName: System.Security.Cryptography.CryptoStream.Seek(Int64,SeekOrigin)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: Parameter description to be filled\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: CryptoStream.SetLength(Int64)\n  fullName: System.Security.Cryptography.CryptoStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: CryptoStream.Write(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.CryptoStream.Write(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  id: WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  langs:\n  - csharp\n  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Threading.Tasks.Task WriteAsync (byte[] buffer, int offset, int count, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.IO.Stream\n  isExternal: false\n  name: System.IO.Stream\n- uid: System.Security.Cryptography.CryptoStream.#ctor(System.IO.Stream,System.Security.Cryptography.ICryptoTransform,System.Security.Cryptography.CryptoStreamMode)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)\n  nameWithType: CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)\n  fullName: System.Security.Cryptography.CryptoStream.CryptoStream(Stream,ICryptoTransform,CryptoStreamMode)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.CryptoStreamMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptoStreamMode\n  nameWithType: CryptoStreamMode\n  fullName: System.Security.Cryptography.CryptoStreamMode\n- uid: System.Security.Cryptography.CryptoStream.CanRead\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: CanRead\n  nameWithType: CryptoStream.CanRead\n  fullName: System.Security.Cryptography.CryptoStream.CanRead\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoStream.CanSeek\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: CryptoStream.CanSeek\n  fullName: System.Security.Cryptography.CryptoStream.CanSeek\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoStream.CanWrite\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: CryptoStream.CanWrite\n  fullName: System.Security.Cryptography.CryptoStream.CanWrite\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoStream.Clear\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Clear()\n  nameWithType: CryptoStream.Clear()\n  fullName: System.Security.Cryptography.CryptoStream.Clear()\n- uid: System.Security.Cryptography.CryptoStream.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CryptoStream.Dispose(Boolean)\n  fullName: System.Security.Cryptography.CryptoStream.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoStream.Flush\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Flush()\n  nameWithType: CryptoStream.Flush()\n  fullName: System.Security.Cryptography.CryptoStream.Flush()\n- uid: System.Security.Cryptography.CryptoStream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: CryptoStream.FlushAsync(CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.FlushAsync(CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Security.Cryptography.CryptoStream.FlushFinalBlock\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: FlushFinalBlock()\n  nameWithType: CryptoStream.FlushFinalBlock()\n  fullName: System.Security.Cryptography.CryptoStream.FlushFinalBlock()\n- uid: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: HasFlushedFinalBlock\n  nameWithType: CryptoStream.HasFlushedFinalBlock\n  fullName: System.Security.Cryptography.CryptoStream.HasFlushedFinalBlock\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CryptoStream.Length\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Length\n  nameWithType: CryptoStream.Length\n  fullName: System.Security.Cryptography.CryptoStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Security.Cryptography.CryptoStream.Position\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Position\n  nameWithType: CryptoStream.Position\n  fullName: System.Security.Cryptography.CryptoStream.Position\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Security.Cryptography.CryptoStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Read(Byte[],Int32,Int32)\n  nameWithType: CryptoStream.Read(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.CryptoStream.Read(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CryptoStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.ReadAsync(Byte[],Int32,Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task{System.Int32}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Int32>\n  nameWithType: Task<Int32>\n  fullName: System.Threading.Tasks.Task<System.Int32>\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Security.Cryptography.CryptoStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Seek(Int64,SeekOrigin)\n  nameWithType: CryptoStream.Seek(Int64,SeekOrigin)\n  fullName: System.Security.Cryptography.CryptoStream.Seek(Int64,SeekOrigin)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Security.Cryptography.CryptoStream.SetLength(System.Int64)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: CryptoStream.SetLength(Int64)\n  fullName: System.Security.Cryptography.CryptoStream.SetLength(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Security.Cryptography.CryptoStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: Write(Byte[],Int32,Int32)\n  nameWithType: CryptoStream.Write(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.CryptoStream.Write(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CryptoStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.Security.Cryptography.CryptoStream\n  isExternal: false\n  name: WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  nameWithType: CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n  fullName: System.Security.Cryptography.CryptoStream.WriteAsync(Byte[],Int32,Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n"}