{"nodes":[{"pos":[636,655],"content":"EqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"EqualityComparer<T>"},{"pos":[971,1005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1646,1664],"content":"EqualityComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"EqualityComparer()","pos":[0,18]}]},{"pos":[2166,2173],"content":"Default","needQuote":true,"needEscape":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[2559,2593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2814,2825],"content":"Equals(T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(T,T)","pos":[0,11]}]},{"pos":[3151,3185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3231,3265],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3324,3358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3583,3597],"content":"GetHashCode(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(T)","pos":[0,14]}]},{"pos":[3932,3966],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4023,4057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4410,4468],"content":"System.Collections.IEqualityComparer.Equals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEqualityComparer.Equals(Object,Object)","pos":[0,58]}]},{"pos":[4912,4946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5004,5038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5097,5131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5466,5522],"content":"System.Collections.IEqualityComparer.GetHashCode(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEqualityComparer.GetHashCode(Object)","pos":[0,56]}]},{"pos":[5960,5994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6051,6085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6196,6209],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6353,6371],"content":"EqualityComparer()","needQuote":true,"needEscape":true,"nodes":[{"content":"EqualityComparer()","pos":[0,18]}]},{"pos":[6650,6657],"content":"Default","needQuote":true,"needEscape":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[6887,6906],"content":"EqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"EqualityComparer<T>"},{"pos":[7153,7164],"content":"Equals(T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(T,T)","pos":[0,11]}]},{"pos":[7351,7358],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7459,7460],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[7542,7543],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[7729,7743],"content":"GetHashCode(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(T)","pos":[0,14]}]},{"pos":[7934,7939],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8036,8037],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[8280,8338],"content":"System.Collections.IEqualityComparer.Equals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEqualityComparer.Equals(Object,Object)","pos":[0,58]}]},{"pos":[8619,8626],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8744,8750],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8866,8872],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9123,9179],"content":"System.Collections.IEqualityComparer.GetHashCode(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEqualityComparer.GetHashCode(Object)","pos":[0,56]}]},{"pos":[9454,9459],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9573,9579],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.EqualityComparer`1\n  id: EqualityComparer`1\n  children:\n  - System.Collections.Generic.EqualityComparer`1.#ctor\n  - System.Collections.Generic.EqualityComparer`1.Default\n  - System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  - System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  - System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  - System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  langs:\n  - csharp\n  name: EqualityComparer<T>\n  nameWithType: EqualityComparer<T>\n  fullName: System.Collections.Generic.EqualityComparer<T>\n  type: Class\n  syntax:\n    content: 'public abstract class EqualityComparer<T> : System.Collections.Generic.IEqualityComparer<T>, System.Collections.IEqualityComparer'\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.IEqualityComparer<T>\n  - System.Collections.IEqualityComparer\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.EqualityComparer`1.#ctor\n  id: '#ctor'\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: EqualityComparer()\n  nameWithType: EqualityComparer<T>.EqualityComparer()\n  fullName: System.Collections.Generic.EqualityComparer<T>.EqualityComparer()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: protected EqualityComparer ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.EqualityComparer`1.Default\n  id: Default\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: Default\n  nameWithType: EqualityComparer<T>.Default\n  fullName: System.Collections.Generic.EqualityComparer<T>.Default\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public static System.Collections.Generic.EqualityComparer<T> Default { get; }\n    return:\n      type: System.Collections.Generic.EqualityComparer`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  id: Equals(`0,`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: Equals(T,T)\n  nameWithType: EqualityComparer<T>.Equals(T,T)\n  fullName: System.Collections.Generic.EqualityComparer<T>.Equals(T,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public abstract bool Equals (T x, T y);\n    parameters:\n    - id: x\n      type: T\n      description: Parameter description to be filled\n    - id: y\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  id: GetHashCode(`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: GetHashCode(T)\n  nameWithType: EqualityComparer<T>.GetHashCode(T)\n  fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public abstract int GetHashCode (T obj);\n    parameters:\n    - id: obj\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  id: System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  isEii: true\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: System.Collections.IEqualityComparer.Equals(Object,Object)\n  nameWithType: EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(Object,Object)\n  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(Object,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: bool IEqualityComparer.Equals (object x, object y);\n    parameters:\n    - id: x\n      type: System.Object\n      description: Parameter description to be filled\n    - id: y\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  id: System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  isEii: true\n  parent: System.Collections.Generic.EqualityComparer`1\n  langs:\n  - csharp\n  name: System.Collections.IEqualityComparer.GetHashCode(Object)\n  nameWithType: EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(Object)\n  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: int IEqualityComparer.GetHashCode (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Collections.Generic.EqualityComparer`1.#ctor\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: EqualityComparer()\n  nameWithType: EqualityComparer<T>.EqualityComparer()\n  fullName: System.Collections.Generic.EqualityComparer<T>.EqualityComparer()\n- uid: System.Collections.Generic.EqualityComparer`1.Default\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: Default\n  nameWithType: EqualityComparer<T>.Default\n  fullName: System.Collections.Generic.EqualityComparer<T>.Default\n- uid: System.Collections.Generic.EqualityComparer`1\n  parent: System.Collections.Generic\n  isExternal: false\n  name: EqualityComparer<T>\n  nameWithType: EqualityComparer<T>\n  fullName: System.Collections.Generic.EqualityComparer<T>\n- uid: System.Collections.Generic.EqualityComparer`1.Equals(`0,`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: Equals(T,T)\n  nameWithType: EqualityComparer<T>.Equals(T,T)\n  fullName: System.Collections.Generic.EqualityComparer<T>.Equals(T,T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.EqualityComparer`1.GetHashCode(`0)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: GetHashCode(T)\n  nameWithType: EqualityComparer<T>.GetHashCode(T)\n  fullName: System.Collections.Generic.EqualityComparer<T>.GetHashCode(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#Equals(System.Object,System.Object)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: System.Collections.IEqualityComparer.Equals(Object,Object)\n  nameWithType: EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(Object,Object)\n  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.Equals(Object,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.Generic.EqualityComparer`1.System#Collections#IEqualityComparer#GetHashCode(System.Object)\n  parent: System.Collections.Generic.EqualityComparer`1\n  isExternal: false\n  name: System.Collections.IEqualityComparer.GetHashCode(Object)\n  nameWithType: EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(Object)\n  fullName: System.Collections.Generic.EqualityComparer<T>.System.Collections.IEqualityComparer.GetHashCode(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}