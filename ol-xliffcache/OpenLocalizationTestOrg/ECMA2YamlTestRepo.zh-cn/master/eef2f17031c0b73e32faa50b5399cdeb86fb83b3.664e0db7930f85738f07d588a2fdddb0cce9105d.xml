{"nodes":[{"pos":[3295,3303],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[5201,5207],"content":"Bounds","needQuote":true,"needEscape":true,"nodes":[{"content":"Bounds","pos":[0,6]}]},{"pos":[5512,5546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5719,5726],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[6056,6090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6287,6306],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[6672,6706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7149,7205],"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform)","pos":[0,56]}]},{"pos":[7820,7854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7936,7970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8058,8092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8175,8209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8287,8321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8913,8990],"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)","pos":[0,77]}]},{"pos":[9706,9740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9822,9856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9944,9978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10061,10095],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10161,10195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10277,10311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10389,10423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10647,10652],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[10973,11007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11256,11278],"content":"FillContains(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Geometry)","pos":[0,22]}]},{"pos":[11662,11696],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11755,11789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12076,12095],"content":"FillContains(Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Point)","pos":[0,19]}]},{"pos":[12455,12489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12548,12582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12985,13028],"content":"FillContains(Geometry,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Geometry,Double,ToleranceType)","pos":[0,43]}]},{"pos":[13513,13547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13613,13647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13729,13763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13822,13856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14241,14281],"content":"FillContains(Point,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Point,Double,ToleranceType)","pos":[0,40]}]},{"pos":[14742,14776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14842,14876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14958,14992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15051,15085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15410,15442],"content":"FillContainsWithDetail(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContainsWithDetail(Geometry)","pos":[0,32]}]},{"pos":[15891,15925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16009,16043],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16476,16529],"content":"FillContainsWithDetail(Geometry,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContainsWithDetail(Geometry,Double,ToleranceType)","pos":[0,53]}]},{"pos":[17087,17121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17187,17221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17303,17337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17421,17455],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17698,17707],"content":"GetArea()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArea()","pos":[0,9]}]},{"pos":[18004,18038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18366,18395],"content":"GetArea(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArea(Double,ToleranceType)","pos":[0,29]}]},{"pos":[18802,18836],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18918,18952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19010,19044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19306,19332],"content":"GetFlattenedPathGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFlattenedPathGeometry()","pos":[0,26]}]},{"pos":[19727,19761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20140,20186],"content":"GetFlattenedPathGeometry(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFlattenedPathGeometry(Double,ToleranceType)","pos":[0,46]}]},{"pos":[20671,20705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20787,20821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20899,20933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21210,21235],"content":"GetOutlinedPathGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOutlinedPathGeometry()","pos":[0,25]}]},{"pos":[21627,21661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22037,22082],"content":"GetOutlinedPathGeometry(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOutlinedPathGeometry(Double,ToleranceType)","pos":[0,45]}]},{"pos":[22564,22598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22680,22714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22792,22826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23138,23158],"content":"GetRenderBounds(Pen)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRenderBounds(Pen)","pos":[0,20]}]},{"pos":[23536,23570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23634,23668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24070,24111],"content":"GetRenderBounds(Pen,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRenderBounds(Pen,Double,ToleranceType)","pos":[0,41]}]},{"pos":[24598,24632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24698,24732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24814,24848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24912,24946],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25264,25291],"content":"GetWidenedPathGeometry(Pen)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetWidenedPathGeometry(Pen)","pos":[0,27]}]},{"pos":[25704,25738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25816,25850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26273,26321],"content":"GetWidenedPathGeometry(Pen,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetWidenedPathGeometry(Pen,Double,ToleranceType)","pos":[0,48]}]},{"pos":[26843,26877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26943,26977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27059,27093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27171,27205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27448,27457],"content":"IsEmpty()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty()","pos":[0,9]}]},{"pos":[27762,27796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27985,28000],"content":"MayHaveCurves()","needQuote":true,"needEscape":true,"nodes":[{"content":"MayHaveCurves()","pos":[0,15]}]},{"pos":[28323,28357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28560,28573],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[28921,28955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29029,29063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29274,29300],"content":"ShouldSerializeTransform()","needQuote":true,"needEscape":true,"nodes":[{"content":"ShouldSerializeTransform()","pos":[0,26]}]},{"pos":[29647,29681],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29898,29925],"content":"StandardFlatteningTolerance","needQuote":true,"needEscape":true,"nodes":[{"content":"StandardFlatteningTolerance","pos":[0,27]}]},{"pos":[30273,30307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30592,30617],"content":"StrokeContains(Pen,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContains(Pen,Point)","pos":[0,25]}]},{"pos":[31020,31054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31126,31160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31219,31253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31694,31740],"content":"StrokeContains(Pen,Point,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContains(Pen,Point,Double,ToleranceType)","pos":[0,46]}]},{"pos":[32244,32278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32350,32384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32450,32484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32566,32600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32659,32693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33074,33112],"content":"StrokeContainsWithDetail(Pen,Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContainsWithDetail(Pen,Geometry)","pos":[0,38]}]},{"pos":[33595,33629],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33710,33744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33828,33862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34351,34410],"content":"StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)","pos":[0,59]}]},{"pos":[34994,35028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35109,35143],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35209,35243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35325,35359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35443,35477],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35854,35906],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[36337,36371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36445,36479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36537,36571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36750,36760],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[37069,37103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37382,37407],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[37774,37808],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37866,37900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38133,38142],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[38475,38509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38706,38723],"content":"TransformProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformProperty","pos":[0,17]}]},{"pos":[39086,39120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39259,39300],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[39413,39419],"content":"Bounds","needQuote":true,"needEscape":true,"nodes":[{"content":"Bounds","pos":[0,6]}]},{"pos":[39580,39584],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[39749,39756],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[39936,39944],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[40135,40154],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[40358,40366],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[40680,40736],"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform)","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform)","pos":[0,56]}]},{"pos":[41018,41030],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[41202,41210],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[41374,41382],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[41557,41576],"content":"GeometryCombineMode","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCombineMode","pos":[0,19]}]},{"pos":[41763,41772],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[42137,42214],"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)","pos":[0,77]}]},{"pos":[42538,42550],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[42722,42730],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[42894,42902],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[43077,43096],"content":"GeometryCombineMode","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCombineMode","pos":[0,19]}]},{"pos":[43283,43292],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[43428,43434],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[43585,43598],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[43787,43792],"content":"Empty","needQuote":true,"needEscape":true,"nodes":[{"content":"Empty","pos":[0,5]}]},{"pos":[43968,43976],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[44193,44215],"content":"FillContains(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Geometry)","pos":[0,22]}]},{"pos":[44396,44403],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[44551,44559],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[44767,44786],"content":"FillContains(Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Point)","pos":[0,19]}]},{"pos":[44961,44968],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45100,45105],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[45359,45402],"content":"FillContains(Geometry,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Geometry,Double,ToleranceType)","pos":[0,43]}]},{"pos":[45625,45632],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45780,45788],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[45922,45928],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[46079,46092],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[46359,46399],"content":"FillContains(Point,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContains(Point,Double,ToleranceType)","pos":[0,40]}]},{"pos":[46616,46623],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46755,46760],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[46882,46888],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[47039,47052],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[47289,47321],"content":"FillContainsWithDetail(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContainsWithDetail(Geometry)","pos":[0,32]}]},{"pos":[47561,47579],"content":"IntersectionDetail","needQuote":true,"needEscape":true,"nodes":[{"content":"IntersectionDetail","pos":[0,18]}]},{"pos":[47763,47771],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[48047,48100],"content":"FillContainsWithDetail(Geometry,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"FillContainsWithDetail(Geometry,Double,ToleranceType)","pos":[0,53]}]},{"pos":[48382,48400],"content":"IntersectionDetail","needQuote":true,"needEscape":true,"nodes":[{"content":"IntersectionDetail","pos":[0,18]}]},{"pos":[48584,48592],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[48726,48732],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[48883,48896],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[49087,49096],"content":"GetArea()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArea()","pos":[0,9]}]},{"pos":[49250,49256],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[49469,49498],"content":"GetArea(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetArea(Double,ToleranceType)","pos":[0,29]}]},{"pos":[49692,49698],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[49814,49820],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[49971,49984],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[50192,50218],"content":"GetFlattenedPathGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFlattenedPathGeometry()","pos":[0,26]}]},{"pos":[50440,50452],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[50708,50754],"content":"GetFlattenedPathGeometry(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFlattenedPathGeometry(Double,ToleranceType)","pos":[0,46]}]},{"pos":[51016,51028],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[51170,51176],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[51327,51340],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[51547,51572],"content":"GetOutlinedPathGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOutlinedPathGeometry()","pos":[0,25]}]},{"pos":[51792,51804],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[52059,52104],"content":"GetOutlinedPathGeometry(Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOutlinedPathGeometry(Double,ToleranceType)","pos":[0,45]}]},{"pos":[52364,52376],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[52518,52524],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[52675,52688],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[52913,52933],"content":"GetRenderBounds(Pen)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRenderBounds(Pen)","pos":[0,20]}]},{"pos":[53122,53126],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[53271,53274],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[53528,53569],"content":"GetRenderBounds(Pen,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetRenderBounds(Pen,Double,ToleranceType)","pos":[0,41]}]},{"pos":[53800,53804],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[53949,53952],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[54076,54082],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[54233,54246],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[54478,54505],"content":"GetWidenedPathGeometry(Pen)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetWidenedPathGeometry(Pen)","pos":[0,27]}]},{"pos":[54729,54741],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[54908,54911],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[55172,55220],"content":"GetWidenedPathGeometry(Pen,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetWidenedPathGeometry(Pen,Double,ToleranceType)","pos":[0,48]}]},{"pos":[55486,55498],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[55665,55668],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[55792,55798],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[55949,55962],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[56153,56162],"content":"IsEmpty()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty()","pos":[0,9]}]},{"pos":[56317,56324],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56495,56510],"content":"MayHaveCurves()","needQuote":true,"needEscape":true,"nodes":[{"content":"MayHaveCurves()","pos":[0,15]}]},{"pos":[56677,56684],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56862,56875],"content":"Parse(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Parse(String)","pos":[0,13]}]},{"pos":[57067,57075],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[57209,57215],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[57395,57421],"content":"ShouldSerializeTransform()","needQuote":true,"needEscape":true,"nodes":[{"content":"ShouldSerializeTransform()","pos":[0,26]}]},{"pos":[57610,57617],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57802,57829],"content":"StandardFlatteningTolerance","needQuote":true,"needEscape":true,"nodes":[{"content":"StandardFlatteningTolerance","pos":[0,27]}]},{"pos":[58019,58025],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[58242,58267],"content":"StrokeContains(Pen,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContains(Pen,Point)","pos":[0,25]}]},{"pos":[58454,58461],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58604,58607],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[58745,58750],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[59022,59068],"content":"StrokeContains(Pen,Point,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContains(Pen,Point,Double,ToleranceType)","pos":[0,46]}]},{"pos":[59297,59304],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59447,59450],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[59588,59593],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[59715,59721],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[59872,59885],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[60149,60187],"content":"StrokeContainsWithDetail(Pen,Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContainsWithDetail(Pen,Geometry)","pos":[0,38]}]},{"pos":[60439,60457],"content":"IntersectionDetail","needQuote":true,"needEscape":true,"nodes":[{"content":"IntersectionDetail","pos":[0,18]}]},{"pos":[60636,60639],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[60793,60801],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[61104,61163],"content":"StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)","needQuote":true,"needEscape":true,"nodes":[{"content":"StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)","pos":[0,59]}]},{"pos":[61457,61475],"content":"IntersectionDetail","needQuote":true,"needEscape":true,"nodes":[{"content":"IntersectionDetail","pos":[0,18]}]},{"pos":[61654,61657],"content":"Pen","needQuote":true,"needEscape":true,"nodes":[{"content":"Pen","pos":[0,3]}]},{"pos":[61811,61819],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[61953,61959],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[62110,62123],"content":"ToleranceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ToleranceType","pos":[0,13]}]},{"pos":[62373,62425],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[62665,62671],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[62787,62793],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[62918,62933],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[63115,63125],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[63281,63287],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63475,63500],"content":"ToString(IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString(IFormatProvider)","pos":[0,25]}]},{"pos":[63686,63692],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63817,63832],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[64015,64024],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[64209,64218],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[64411,64428],"content":"TransformProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"TransformProperty","pos":[0,17]}]},{"pos":[64625,64643],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Geometry\n  id: Geometry\n  children:\n  - System.Windows.Media.Geometry.Bounds\n  - System.Windows.Media.Geometry.Clone\n  - System.Windows.Media.Geometry.CloneCurrentValue\n  - System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)\n  - System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.Empty\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Point)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetArea\n  - System.Windows.Media.Geometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetFlattenedPathGeometry\n  - System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetOutlinedPathGeometry\n  - System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)\n  - System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)\n  - System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.IsEmpty\n  - System.Windows.Media.Geometry.MayHaveCurves\n  - System.Windows.Media.Geometry.Parse(System.String)\n  - System.Windows.Media.Geometry.ShouldSerializeTransform\n  - System.Windows.Media.Geometry.StandardFlatteningTolerance\n  - System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)\n  - System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Geometry.ToString\n  - System.Windows.Media.Geometry.ToString(System.IFormatProvider)\n  - System.Windows.Media.Geometry.Transform\n  - System.Windows.Media.Geometry.TransformProperty\n  langs:\n  - csharp\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n  type: Class\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Media.GeometryConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]\n\n      [System.Windows.Markup.ValueSerializer(typeof(System.Windows.Media.Converters.GeometryValueSerializer))]\n\n      public abstract class Geometry : System.Windows.Media.Animation.Animatable, IFormattable\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.IFormattable\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Bounds\n  id: Bounds\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Bounds\n  nameWithType: Geometry.Bounds\n  fullName: System.Windows.Media.Geometry.Bounds\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual System.Windows.Rect Bounds { get; }\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Clone\n  id: Clone\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Geometry.Clone()\n  fullName: System.Windows.Media.Geometry.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Geometry Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: Geometry.CloneCurrentValue()\n  fullName: System.Windows.Media.Geometry.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Geometry CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)\n  id: Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Combine(Geometry,Geometry,GeometryCombineMode,Transform)\n  nameWithType: Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform)\n  fullName: System.Windows.Media.Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.PathGeometry Combine (System.Windows.Media.Geometry geometry1, System.Windows.Media.Geometry geometry2, System.Windows.Media.GeometryCombineMode mode, System.Windows.Media.Transform transform);\n    parameters:\n    - id: geometry1\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: geometry2\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: mode\n      type: System.Windows.Media.GeometryCombineMode\n      description: Parameter description to be filled\n    - id: transform\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.Combine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)\n  id: Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)\n  nameWithType: Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.PathGeometry Combine (System.Windows.Media.Geometry geometry1, System.Windows.Media.Geometry geometry2, System.Windows.Media.GeometryCombineMode mode, System.Windows.Media.Transform transform, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: geometry1\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: geometry2\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: mode\n      type: System.Windows.Media.GeometryCombineMode\n      description: Parameter description to be filled\n    - id: transform\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.Combine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Empty\n  id: Empty\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Empty\n  nameWithType: Geometry.Empty\n  fullName: System.Windows.Media.Geometry.Empty\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Geometry Empty { get; }\n    return:\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)\n  id: FillContains(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: FillContains(Geometry)\n  nameWithType: Geometry.FillContains(Geometry)\n  fullName: System.Windows.Media.Geometry.FillContains(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool FillContains (System.Windows.Media.Geometry geometry);\n    parameters:\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.FillContains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Point)\n  id: FillContains(System.Windows.Point)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: FillContains(Point)\n  nameWithType: Geometry.FillContains(Point)\n  fullName: System.Windows.Media.Geometry.FillContains(Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool FillContains (System.Windows.Point hitPoint);\n    parameters:\n    - id: hitPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.FillContains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  id: FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: FillContains(Geometry,Double,ToleranceType)\n  nameWithType: Geometry.FillContains(Geometry,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.FillContains(Geometry,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool FillContains (System.Windows.Media.Geometry geometry, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.FillContains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  id: FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: FillContains(Point,Double,ToleranceType)\n  nameWithType: Geometry.FillContains(Point,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.FillContains(Point,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool FillContains (System.Windows.Point hitPoint, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: hitPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.FillContains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)\n  id: FillContainsWithDetail(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: FillContainsWithDetail(Geometry)\n  nameWithType: Geometry.FillContainsWithDetail(Geometry)\n  fullName: System.Windows.Media.Geometry.FillContainsWithDetail(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.IntersectionDetail FillContainsWithDetail (System.Windows.Media.Geometry geometry);\n    parameters:\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.IntersectionDetail\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.FillContainsWithDetail*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  id: FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: FillContainsWithDetail(Geometry,Double,ToleranceType)\n  nameWithType: Geometry.FillContainsWithDetail(Geometry,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.FillContainsWithDetail(Geometry,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual System.Windows.Media.IntersectionDetail FillContainsWithDetail (System.Windows.Media.Geometry geometry, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.IntersectionDetail\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.FillContainsWithDetail*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetArea\n  id: GetArea\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetArea()\n  nameWithType: Geometry.GetArea()\n  fullName: System.Windows.Media.Geometry.GetArea()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double GetArea ();\n    parameters: []\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetArea*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  id: GetArea(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetArea(Double,ToleranceType)\n  nameWithType: Geometry.GetArea(Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetArea(Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual double GetArea (double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetArea*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetFlattenedPathGeometry\n  id: GetFlattenedPathGeometry\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetFlattenedPathGeometry()\n  nameWithType: Geometry.GetFlattenedPathGeometry()\n  fullName: System.Windows.Media.Geometry.GetFlattenedPathGeometry()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathGeometry GetFlattenedPathGeometry ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetFlattenedPathGeometry*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  id: GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetFlattenedPathGeometry(Double,ToleranceType)\n  nameWithType: Geometry.GetFlattenedPathGeometry(Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetFlattenedPathGeometry(Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual System.Windows.Media.PathGeometry GetFlattenedPathGeometry (double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetFlattenedPathGeometry*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetOutlinedPathGeometry\n  id: GetOutlinedPathGeometry\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetOutlinedPathGeometry()\n  nameWithType: Geometry.GetOutlinedPathGeometry()\n  fullName: System.Windows.Media.Geometry.GetOutlinedPathGeometry()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathGeometry GetOutlinedPathGeometry ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetOutlinedPathGeometry*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  id: GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetOutlinedPathGeometry(Double,ToleranceType)\n  nameWithType: Geometry.GetOutlinedPathGeometry(Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetOutlinedPathGeometry(Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual System.Windows.Media.PathGeometry GetOutlinedPathGeometry (double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetOutlinedPathGeometry*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)\n  id: GetRenderBounds(System.Windows.Media.Pen)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetRenderBounds(Pen)\n  nameWithType: Geometry.GetRenderBounds(Pen)\n  fullName: System.Windows.Media.Geometry.GetRenderBounds(Pen)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Rect GetRenderBounds (System.Windows.Media.Pen pen);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetRenderBounds*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  id: GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetRenderBounds(Pen,Double,ToleranceType)\n  nameWithType: Geometry.GetRenderBounds(Pen,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetRenderBounds(Pen,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual System.Windows.Rect GetRenderBounds (System.Windows.Media.Pen pen, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetRenderBounds*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)\n  id: GetWidenedPathGeometry(System.Windows.Media.Pen)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetWidenedPathGeometry(Pen)\n  nameWithType: Geometry.GetWidenedPathGeometry(Pen)\n  fullName: System.Windows.Media.Geometry.GetWidenedPathGeometry(Pen)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathGeometry GetWidenedPathGeometry (System.Windows.Media.Pen pen);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetWidenedPathGeometry*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  id: GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: GetWidenedPathGeometry(Pen,Double,ToleranceType)\n  nameWithType: Geometry.GetWidenedPathGeometry(Pen,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetWidenedPathGeometry(Pen,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public virtual System.Windows.Media.PathGeometry GetWidenedPathGeometry (System.Windows.Media.Pen pen, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.GetWidenedPathGeometry*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: IsEmpty()\n  nameWithType: Geometry.IsEmpty()\n  fullName: System.Windows.Media.Geometry.IsEmpty()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public abstract bool IsEmpty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.MayHaveCurves\n  id: MayHaveCurves\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: MayHaveCurves()\n  nameWithType: Geometry.MayHaveCurves()\n  fullName: System.Windows.Media.Geometry.MayHaveCurves()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public abstract bool MayHaveCurves ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Geometry.Parse(String)\n  fullName: System.Windows.Media.Geometry.Parse(String)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.Geometry Parse (string source);\n    parameters:\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.ShouldSerializeTransform\n  id: ShouldSerializeTransform\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: ShouldSerializeTransform()\n  nameWithType: Geometry.ShouldSerializeTransform()\n  fullName: System.Windows.Media.Geometry.ShouldSerializeTransform()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool ShouldSerializeTransform ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.StandardFlatteningTolerance\n  id: StandardFlatteningTolerance\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: StandardFlatteningTolerance\n  nameWithType: Geometry.StandardFlatteningTolerance\n  fullName: System.Windows.Media.Geometry.StandardFlatteningTolerance\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static double StandardFlatteningTolerance { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)\n  id: StrokeContains(System.Windows.Media.Pen,System.Windows.Point)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: StrokeContains(Pen,Point)\n  nameWithType: Geometry.StrokeContains(Pen,Point)\n  fullName: System.Windows.Media.Geometry.StrokeContains(Pen,Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool StrokeContains (System.Windows.Media.Pen pen, System.Windows.Point hitPoint);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    - id: hitPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.StrokeContains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  id: StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: StrokeContains(Pen,Point,Double,ToleranceType)\n  nameWithType: Geometry.StrokeContains(Pen,Point,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.StrokeContains(Pen,Point,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool StrokeContains (System.Windows.Media.Pen pen, System.Windows.Point hitPoint, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    - id: hitPoint\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.StrokeContains*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)\n  id: StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: StrokeContainsWithDetail(Pen,Geometry)\n  nameWithType: Geometry.StrokeContainsWithDetail(Pen,Geometry)\n  fullName: System.Windows.Media.Geometry.StrokeContainsWithDetail(Pen,Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.IntersectionDetail StrokeContainsWithDetail (System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.IntersectionDetail\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.StrokeContainsWithDetail*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  id: StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)\n  nameWithType: Geometry.StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.IntersectionDetail StrokeContainsWithDetail (System.Windows.Media.Pen pen, System.Windows.Media.Geometry geometry, double tolerance, System.Windows.Media.ToleranceType type);\n    parameters:\n    - id: pen\n      type: System.Windows.Media.Pen\n      description: Parameter description to be filled\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    - id: tolerance\n      type: System.Double\n      description: Parameter description to be filled\n    - id: type\n      type: System.Windows.Media.ToleranceType\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.IntersectionDetail\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.StrokeContainsWithDetail*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Geometry.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Geometry.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.ToString\n  id: ToString\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Geometry.ToString()\n  fullName: System.Windows.Media.Geometry.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Geometry.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Geometry.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Windows.Media.Geometry.ToString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.Transform\n  id: Transform\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: Transform\n  nameWithType: Geometry.Transform\n  fullName: System.Windows.Media.Geometry.Transform\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Transform Transform { get; set; }\n    return:\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Geometry.TransformProperty\n  id: TransformProperty\n  parent: System.Windows.Media.Geometry\n  langs:\n  - csharp\n  name: TransformProperty\n  nameWithType: Geometry.TransformProperty\n  fullName: System.Windows.Media.Geometry.TransformProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty TransformProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.Geometry.Bounds\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Bounds\n  nameWithType: Geometry.Bounds\n  fullName: System.Windows.Media.Geometry.Bounds\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Geometry.Clone\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Clone()\n  nameWithType: Geometry.Clone()\n  fullName: System.Windows.Media.Geometry.Clone()\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry.CloneCurrentValue\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Geometry.CloneCurrentValue()\n  fullName: System.Windows.Media.Geometry.CloneCurrentValue()\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Combine(Geometry,Geometry,GeometryCombineMode,Transform)\n  nameWithType: Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform)\n  fullName: System.Windows.Media.Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCombineMode\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeometryCombineMode\n  nameWithType: GeometryCombineMode\n  fullName: System.Windows.Media.GeometryCombineMode\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)\n  nameWithType: Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.Combine(Geometry,Geometry,GeometryCombineMode,Transform,Double,ToleranceType)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCombineMode\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeometryCombineMode\n  nameWithType: GeometryCombineMode\n  fullName: System.Windows.Media.GeometryCombineMode\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.Empty\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Empty\n  nameWithType: Geometry.Empty\n  fullName: System.Windows.Media.Geometry.Empty\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: FillContains(Geometry)\n  nameWithType: Geometry.FillContains(Geometry)\n  fullName: System.Windows.Media.Geometry.FillContains(Geometry)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Point)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: FillContains(Point)\n  nameWithType: Geometry.FillContains(Point)\n  fullName: System.Windows.Media.Geometry.FillContains(Point)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: FillContains(Geometry,Double,ToleranceType)\n  nameWithType: Geometry.FillContains(Geometry,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.FillContains(Geometry,Double,ToleranceType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: FillContains(Point,Double,ToleranceType)\n  nameWithType: Geometry.FillContains(Point,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.FillContains(Point,Double,ToleranceType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: FillContainsWithDetail(Geometry)\n  nameWithType: Geometry.FillContainsWithDetail(Geometry)\n  fullName: System.Windows.Media.Geometry.FillContainsWithDetail(Geometry)\n- uid: System.Windows.Media.IntersectionDetail\n  parent: System.Windows.Media\n  isExternal: false\n  name: IntersectionDetail\n  nameWithType: IntersectionDetail\n  fullName: System.Windows.Media.IntersectionDetail\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: FillContainsWithDetail(Geometry,Double,ToleranceType)\n  nameWithType: Geometry.FillContainsWithDetail(Geometry,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.FillContainsWithDetail(Geometry,Double,ToleranceType)\n- uid: System.Windows.Media.IntersectionDetail\n  parent: System.Windows.Media\n  isExternal: false\n  name: IntersectionDetail\n  nameWithType: IntersectionDetail\n  fullName: System.Windows.Media.IntersectionDetail\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.GetArea\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetArea()\n  nameWithType: Geometry.GetArea()\n  fullName: System.Windows.Media.Geometry.GetArea()\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Geometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetArea(Double,ToleranceType)\n  nameWithType: Geometry.GetArea(Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetArea(Double,ToleranceType)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.GetFlattenedPathGeometry\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetFlattenedPathGeometry()\n  nameWithType: Geometry.GetFlattenedPathGeometry()\n  fullName: System.Windows.Media.Geometry.GetFlattenedPathGeometry()\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetFlattenedPathGeometry(Double,ToleranceType)\n  nameWithType: Geometry.GetFlattenedPathGeometry(Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetFlattenedPathGeometry(Double,ToleranceType)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.GetOutlinedPathGeometry\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetOutlinedPathGeometry()\n  nameWithType: Geometry.GetOutlinedPathGeometry()\n  fullName: System.Windows.Media.Geometry.GetOutlinedPathGeometry()\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetOutlinedPathGeometry(Double,ToleranceType)\n  nameWithType: Geometry.GetOutlinedPathGeometry(Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetOutlinedPathGeometry(Double,ToleranceType)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetRenderBounds(Pen)\n  nameWithType: Geometry.GetRenderBounds(Pen)\n  fullName: System.Windows.Media.Geometry.GetRenderBounds(Pen)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetRenderBounds(Pen,Double,ToleranceType)\n  nameWithType: Geometry.GetRenderBounds(Pen,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetRenderBounds(Pen,Double,ToleranceType)\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetWidenedPathGeometry(Pen)\n  nameWithType: Geometry.GetWidenedPathGeometry(Pen)\n  fullName: System.Windows.Media.Geometry.GetWidenedPathGeometry(Pen)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: GetWidenedPathGeometry(Pen,Double,ToleranceType)\n  nameWithType: Geometry.GetWidenedPathGeometry(Pen,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.GetWidenedPathGeometry(Pen,Double,ToleranceType)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.IsEmpty\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: IsEmpty()\n  nameWithType: Geometry.IsEmpty()\n  fullName: System.Windows.Media.Geometry.IsEmpty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry.MayHaveCurves\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: MayHaveCurves()\n  nameWithType: Geometry.MayHaveCurves()\n  fullName: System.Windows.Media.Geometry.MayHaveCurves()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry.Parse(System.String)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Geometry.Parse(String)\n  fullName: System.Windows.Media.Geometry.Parse(String)\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Geometry.ShouldSerializeTransform\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: ShouldSerializeTransform()\n  nameWithType: Geometry.ShouldSerializeTransform()\n  fullName: System.Windows.Media.Geometry.ShouldSerializeTransform()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry.StandardFlatteningTolerance\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: StandardFlatteningTolerance\n  nameWithType: Geometry.StandardFlatteningTolerance\n  fullName: System.Windows.Media.Geometry.StandardFlatteningTolerance\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: StrokeContains(Pen,Point)\n  nameWithType: Geometry.StrokeContains(Pen,Point)\n  fullName: System.Windows.Media.Geometry.StrokeContains(Pen,Point)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: StrokeContains(Pen,Point,Double,ToleranceType)\n  nameWithType: Geometry.StrokeContains(Pen,Point,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.StrokeContains(Pen,Point,Double,ToleranceType)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: StrokeContainsWithDetail(Pen,Geometry)\n  nameWithType: Geometry.StrokeContainsWithDetail(Pen,Geometry)\n  fullName: System.Windows.Media.Geometry.StrokeContainsWithDetail(Pen,Geometry)\n- uid: System.Windows.Media.IntersectionDetail\n  parent: System.Windows.Media\n  isExternal: false\n  name: IntersectionDetail\n  nameWithType: IntersectionDetail\n  fullName: System.Windows.Media.IntersectionDetail\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)\n  nameWithType: Geometry.StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)\n  fullName: System.Windows.Media.Geometry.StrokeContainsWithDetail(Pen,Geometry,Double,ToleranceType)\n- uid: System.Windows.Media.IntersectionDetail\n  parent: System.Windows.Media\n  isExternal: false\n  name: IntersectionDetail\n  nameWithType: IntersectionDetail\n  fullName: System.Windows.Media.IntersectionDetail\n- uid: System.Windows.Media.Pen\n  parent: System.Windows.Media\n  isExternal: false\n  name: Pen\n  nameWithType: Pen\n  fullName: System.Windows.Media.Pen\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.ToleranceType\n  parent: System.Windows.Media\n  isExternal: false\n  name: ToleranceType\n  nameWithType: ToleranceType\n  fullName: System.Windows.Media.ToleranceType\n- uid: System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: Geometry.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.Media.Geometry.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Geometry.ToString\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: ToString()\n  nameWithType: Geometry.ToString()\n  fullName: System.Windows.Media.Geometry.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.Geometry.ToString(System.IFormatProvider)\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Geometry.ToString(IFormatProvider)\n  fullName: System.Windows.Media.Geometry.ToString(IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.Media.Geometry.Transform\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: Transform\n  nameWithType: Geometry.Transform\n  fullName: System.Windows.Media.Geometry.Transform\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.Geometry.TransformProperty\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  name: TransformProperty\n  nameWithType: Geometry.TransformProperty\n  fullName: System.Windows.Media.Geometry.TransformProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Geometry.Combine*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.FillContains*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.FillContainsWithDetail*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.GetArea*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.GetFlattenedPathGeometry*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.GetOutlinedPathGeometry*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.GetRenderBounds*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.GetWidenedPathGeometry*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.StrokeContains*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.StrokeContainsWithDetail*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n- uid: System.Windows.Media.Geometry.ToString*\n  parent: System.Windows.Media.Geometry\n  isExternal: false\n  nameWithType: Geometry.\n"}