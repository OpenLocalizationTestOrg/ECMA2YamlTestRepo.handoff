{"nodes":[{"pos":[670,692],"content":"IGeoPositionWatcher<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IGeoPositionWatcher<T>"},{"pos":[922,956],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1182,1190],"content":"Position","needQuote":true,"needEscape":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[1557,1591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1814,1829],"content":"PositionChanged","needQuote":true,"needEscape":true,"nodes":[{"content":"PositionChanged","pos":[0,15]}]},{"pos":[2280,2314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2517,2524],"content":"Start()","needQuote":true,"needEscape":true,"nodes":[{"content":"Start()","pos":[0,7]}]},{"pos":[3083,3097],"content":"Start(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Start(Boolean)","pos":[0,14]}]},{"pos":[3479,3513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3782,3788],"content":"Status","needQuote":true,"needEscape":true,"nodes":[{"content":"Status","pos":[0,6]}]},{"pos":[4156,4190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4409,4422],"content":"StatusChanged","needQuote":true,"needEscape":true,"nodes":[{"content":"StatusChanged","pos":[0,13]}]},{"pos":[4873,4907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5108,5114],"content":"Stop()","needQuote":true,"needEscape":true,"nodes":[{"content":"Stop()","pos":[0,6]}]},{"pos":[5646,5672],"content":"TryStart(Boolean,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryStart(Boolean,TimeSpan)","pos":[0,26]}]},{"pos":[6099,6133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6199,6233],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6292,6326],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6532,6540],"content":"Position","needQuote":true,"needEscape":true,"nodes":[{"content":"Position","pos":[0,8]}]},{"pos":[6761,6775],"content":"GeoPosition<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"GeoPosition<T>"},{"pos":[7008,7023],"content":"PositionChanged","needQuote":true,"needEscape":true,"nodes":[{"content":"PositionChanged","pos":[0,15]}]},{"pos":[7280,7324],"content":"EventHandler&lt;GeoPositionChangedEventArgs<ph id=\"ph1\">&lt;T&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<GeoPositionChangedEventArgs<T>>"},{"pos":[7614,7621],"content":"Start()","needQuote":true,"needEscape":true,"nodes":[{"content":"Start()","pos":[0,7]}]},{"pos":[7892,7906],"content":"Start(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Start(Boolean)","pos":[0,14]}]},{"pos":[8101,8108],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8302,8308],"content":"Status","needQuote":true,"needEscape":true,"nodes":[{"content":"Status","pos":[0,6]}]},{"pos":[8529,8546],"content":"GeoPositionStatus","needQuote":true,"needEscape":true,"nodes":[{"content":"GeoPositionStatus","pos":[0,17]}]},{"pos":[8783,8796],"content":"StatusChanged","needQuote":true,"needEscape":true,"nodes":[{"content":"StatusChanged","pos":[0,13]}]},{"pos":[9052,9099],"content":"EventHandler<ph id=\"ph1\">&lt;GeoPositionStatusChangedEventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<GeoPositionStatusChangedEventArgs>"},{"pos":[9394,9400],"content":"Stop()","needQuote":true,"needEscape":true,"nodes":[{"content":"Stop()","pos":[0,6]}]},{"pos":[9689,9715],"content":"TryStart(Boolean,TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryStart(Boolean,TimeSpan)","pos":[0,26]}]},{"pos":[9934,9941],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10060,10067],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10187,10195],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Device.Location.IGeoPositionWatcher`1\n  id: IGeoPositionWatcher`1\n  children:\n  - System.Device.Location.IGeoPositionWatcher`1.Position\n  - System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  - System.Device.Location.IGeoPositionWatcher`1.Start\n  - System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  - System.Device.Location.IGeoPositionWatcher`1.Status\n  - System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  - System.Device.Location.IGeoPositionWatcher`1.Stop\n  - System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.`0imeSpan)\n  langs:\n  - csharp\n  name: IGeoPositionWatcher<T>\n  nameWithType: IGeoPositionWatcher<T>\n  fullName: System.Device.Location.IGeoPositionWatcher<T>\n  type: Interface\n  syntax:\n    content: public interface IGeoPositionWatcher<T>\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.Position\n  id: Position\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Position\n  nameWithType: IGeoPositionWatcher<T>.Position\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Position\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public System.Device.Location.GeoPosition<T> Position { get; }\n    return:\n      type: System.Device.Location.GeoPosition`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  id: PositionChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: PositionChanged\n  nameWithType: IGeoPositionWatcher<T>.PositionChanged\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.PositionChanged\n  type: Event\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public event EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>> PositionChanged;\n    return:\n      type: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{T}}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start\n  id: Start\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: IGeoPositionWatcher<T>.Start()\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public void Start ();\n    parameters: []\n  overload: System.Device.Location.IGeoPositionWatcher`1.Start*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  id: Start(System.Boolean)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Start(Boolean)\n  nameWithType: IGeoPositionWatcher<T>.Start(Boolean)\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start(Boolean)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public void Start (bool suppressPermissionPrompt);\n    parameters:\n    - id: suppressPermissionPrompt\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Device.Location.IGeoPositionWatcher`1.Start*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.Status\n  id: Status\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Status\n  nameWithType: IGeoPositionWatcher<T>.Status\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Status\n  type: Property\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public System.Device.Location.GeoPositionStatus Status { get; }\n    return:\n      type: System.Device.Location.GeoPositionStatus\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  id: StatusChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: StatusChanged\n  nameWithType: IGeoPositionWatcher<T>.StatusChanged\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.StatusChanged\n  type: Event\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public event EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs> StatusChanged;\n    return:\n      type: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.Stop\n  id: Stop\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: Stop()\n  nameWithType: IGeoPositionWatcher<T>.Stop()\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Stop()\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public void Stop ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.`0imeSpan)\n  id: TryStart(System.Boolean,System.`0imeSpan)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  langs:\n  - csharp\n  name: TryStart(Boolean,TimeSpan)\n  nameWithType: IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)\n  type: Method\n  assemblies:\n  - System.Device\n  namespace: System.Device.Location\n  syntax:\n    content: public bool TryStart (bool suppressPermissionPrompt, TimeSpan timeout);\n    parameters:\n    - id: suppressPermissionPrompt\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Device.Location.IGeoPositionWatcher`1.Position\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Position\n  nameWithType: IGeoPositionWatcher<T>.Position\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Position\n- uid: System.Device.Location.GeoPosition`1\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPosition<T>\n  nameWithType: GeoPosition<T>\n  fullName: System.Device.Location.GeoPosition<T>\n- uid: System.Device.Location.IGeoPositionWatcher`1.PositionChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: PositionChanged\n  nameWithType: IGeoPositionWatcher<T>.PositionChanged\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.PositionChanged\n- uid: System.EventHandler{System.Device.Location.GeoPositionChangedEventArgs{T}}\n  parent: System\n  isExternal: false\n  name: EventHandler<GeoPositionChangedEventArgs<T>>\n  nameWithType: EventHandler<GeoPositionChangedEventArgs<T>>\n  fullName: System.EventHandler<System.Device.Location.GeoPositionChangedEventArgs<T>>\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Start()\n  nameWithType: IGeoPositionWatcher<T>.Start()\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start()\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start(System.Boolean)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Start(Boolean)\n  nameWithType: IGeoPositionWatcher<T>.Start(Boolean)\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Start(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Device.Location.IGeoPositionWatcher`1.Status\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Status\n  nameWithType: IGeoPositionWatcher<T>.Status\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Status\n- uid: System.Device.Location.GeoPositionStatus\n  parent: System.Device.Location\n  isExternal: false\n  name: GeoPositionStatus\n  nameWithType: GeoPositionStatus\n  fullName: System.Device.Location.GeoPositionStatus\n- uid: System.Device.Location.IGeoPositionWatcher`1.StatusChanged\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: StatusChanged\n  nameWithType: IGeoPositionWatcher<T>.StatusChanged\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.StatusChanged\n- uid: System.EventHandler{System.Device.Location.GeoPositionStatusChangedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<GeoPositionStatusChangedEventArgs>\n  nameWithType: EventHandler<GeoPositionStatusChangedEventArgs>\n  fullName: System.EventHandler<System.Device.Location.GeoPositionStatusChangedEventArgs>\n- uid: System.Device.Location.IGeoPositionWatcher`1.Stop\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: Stop()\n  nameWithType: IGeoPositionWatcher<T>.Stop()\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.Stop()\n- uid: System.Device.Location.IGeoPositionWatcher`1.TryStart(System.Boolean,System.`0imeSpan)\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  name: TryStart(Boolean,TimeSpan)\n  nameWithType: IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)\n  fullName: System.Device.Location.IGeoPositionWatcher<T>.TryStart(Boolean,TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Device.Location.IGeoPositionWatcher`1.Start*\n  parent: System.Device.Location.IGeoPositionWatcher`1\n  isExternal: false\n  nameWithType: IGeoPositionWatcher<T>.\n"}