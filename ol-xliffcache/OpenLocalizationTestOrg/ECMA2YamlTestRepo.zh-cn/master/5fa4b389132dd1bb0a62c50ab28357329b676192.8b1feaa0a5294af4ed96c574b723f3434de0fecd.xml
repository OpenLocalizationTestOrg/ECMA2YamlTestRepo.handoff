{"nodes":[{"pos":[1043,1049],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[1865,1873],"content":"Binder()","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder()","pos":[0,8]}]},{"pos":[2485,2541],"content":"BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)","pos":[0,56]}]},{"pos":[3107,3141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3219,3253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3315,3349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3432,3466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3538,3572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4113,4209],"content":"BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)","pos":[0,96]}]},{"pos":[4946,4980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5059,5093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5156,5190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5280,5314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5397,5431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5495,5529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5591,5625],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5698,5732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6025,6060],"content":"ChangeType(Object,Type,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ChangeType(Object,Type,CultureInfo)","pos":[0,35]}]},{"pos":[6469,6503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6562,6596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6679,6713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6771,6805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7062,7099],"content":"ReorderArgumentArray(Object[],Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReorderArgumentArray(Object[],Object)","pos":[0,37]}]},{"pos":[7487,7521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7583,7617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8024,8090],"content":"SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])","pos":[0,66]}]},{"pos":[8686,8720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8799,8833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8895,8929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9019,9053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9126,9160],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9599,9674],"content":"SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])","pos":[0,75]}]},{"pos":[10313,10347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10428,10462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10527,10561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10625,10659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10749,10783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10858,10892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11003,11016],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11118,11126],"content":"Binder()","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder()","pos":[0,8]}]},{"pos":[11421,11477],"content":"BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)","pos":[0,56]}]},{"pos":[11743,11752],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[11913,11925],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[12089,12098],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[12233,12239],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[12388,12399],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[12763,12859],"content":"BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)","pos":[0,96]}]},{"pos":[13206,13216],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[13379,13391],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[13556,13566],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[13703,13709],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13860,13877],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[14061,14072],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[14212,14218],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14336,14342],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14558,14593],"content":"ChangeType(Object,Type,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ChangeType(Object,Type,CultureInfo)","pos":[0,35]}]},{"pos":[14792,14798],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14914,14920],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15034,15038],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[15183,15194],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[15416,15453],"content":"ReorderArgumentArray(Object[],Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReorderArgumentArray(Object[],Object)","pos":[0,37]}]},{"pos":[15656,15662],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15780,15786],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[16059,16125],"content":"SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])","pos":[0,66]}]},{"pos":[16412,16422],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[16585,16597],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[16762,16772],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[16907,16911],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[17058,17075],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[17399,17474],"content":"SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])","pos":[0,75]}]},{"pos":[17781,17793],"content":"PropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[17960,17972],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[18139,18151],"content":"PropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyInfo","pos":[0,12]}]},{"pos":[18290,18294],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18404,18408],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[18555,18572],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Binder\n  id: Binder\n  children:\n  - System.Reflection.Binder.#ctor\n  - System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)\n  - System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)\n  - System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)\n  - System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)\n  - System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  langs:\n  - csharp\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Binder\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: Binder()\n  nameWithType: Binder.Binder()\n  fullName: System.Reflection.Binder.Binder()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected Binder ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)\n  id: BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)\n  nameWithType: Binder.BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)\n  fullName: System.Reflection.Binder.BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: match\n      type: System.Reflection.FieldInfo[]\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)\n  id: BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)\n  nameWithType: Binder.BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)\n  fullName: System.Reflection.Binder.BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: match\n      type: System.Reflection.MethodBase[]\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: names\n      type: System.String[]\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)\n  id: ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: ChangeType(Object,Type,CultureInfo)\n  nameWithType: Binder.ChangeType(Object,Type,CultureInfo)\n  fullName: System.Reflection.Binder.ChangeType(Object,Type,CultureInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: type\n      type: System.Type\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)\n  id: ReorderArgumentArray(System.Object[]@,System.Object)\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: ReorderArgumentArray(Object[],Object)\n  nameWithType: Binder.ReorderArgumentArray(Object[],Object)\n  fullName: System.Reflection.Binder.ReorderArgumentArray(Object[],Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract void ReorderArgumentArray (ref object[] args, object state);\n    parameters:\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])\n  id: SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])\n  nameWithType: Binder.SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])\n  fullName: System.Reflection.Binder.SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: match\n      type: System.Reflection.MethodBase[]\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  id: SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Binder\n  langs:\n  - csharp\n  name: SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])\n  nameWithType: Binder.SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])\n  fullName: System.Reflection.Binder.SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: match\n      type: System.Reflection.PropertyInfo[]\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: indexes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.PropertyInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.Binder.#ctor\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: Binder()\n  nameWithType: Binder.Binder()\n  fullName: System.Reflection.Binder.Binder()\n- uid: System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)\n  nameWithType: Binder.BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)\n  fullName: System.Reflection.Binder.BindToField(BindingFlags,FieldInfo[],Object,CultureInfo)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)\n  nameWithType: Binder.BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)\n  fullName: System.Reflection.Binder.BindToMethod(BindingFlags,MethodBase[],Object[],ParameterModifier[],CultureInfo,String[],Object)\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: ChangeType(Object,Type,CultureInfo)\n  nameWithType: Binder.ChangeType(Object,Type,CultureInfo)\n  fullName: System.Reflection.Binder.ChangeType(Object,Type,CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: ReorderArgumentArray(Object[],Object)\n  nameWithType: Binder.ReorderArgumentArray(Object[],Object)\n  fullName: System.Reflection.Binder.ReorderArgumentArray(Object[],Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])\n  nameWithType: Binder.SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])\n  fullName: System.Reflection.Binder.SelectMethod(BindingFlags,MethodBase[],Type[],ParameterModifier[])\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Binder\n  isExternal: false\n  name: SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])\n  nameWithType: Binder.SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])\n  fullName: System.Reflection.Binder.SelectProperty(BindingFlags,PropertyInfo[],Type,Type[],ParameterModifier[])\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.PropertyInfo\n  parent: System.Reflection\n  isExternal: false\n  name: PropertyInfo\n  nameWithType: PropertyInfo\n  fullName: System.Reflection.PropertyInfo[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n"}