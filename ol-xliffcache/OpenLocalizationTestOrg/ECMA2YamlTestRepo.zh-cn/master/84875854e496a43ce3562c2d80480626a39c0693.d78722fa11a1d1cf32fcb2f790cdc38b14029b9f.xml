{"nodes":[{"pos":[10752,10761],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[11929,11946],"content":"ActivationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivationContext","pos":[0,17]}]},{"pos":[12245,12279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12480,12505],"content":"AppendPrivatePath(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AppendPrivatePath(String)","pos":[0,25]}]},{"pos":[12819,12853],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13028,13047],"content":"ApplicationIdentity","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationIdentity","pos":[0,19]}]},{"pos":[13356,13390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13559,13575],"content":"ApplicationTrust","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationTrust","pos":[0,16]}]},{"pos":[13908,13942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14131,14150],"content":"ApplyPolicy(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplyPolicy(String)","pos":[0,19]}]},{"pos":[14464,14498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14556,14590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14751,14763],"content":"AssemblyLoad","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyLoad","pos":[0,12]}]},{"pos":[15056,15090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15257,15272],"content":"AssemblyResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyResolve","pos":[0,15]}]},{"pos":[15564,15598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15761,15774],"content":"BaseDirectory","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseDirectory","pos":[0,13]}]},{"pos":[16039,16073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16242,16260],"content":"ClearPrivatePath()","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearPrivatePath()","pos":[0,18]}]},{"pos":[16665,16686],"content":"ClearShadowCopyPath()","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearShadowCopyPath()","pos":[0,21]}]},{"pos":[17162,17198],"content":"CreateComInstanceFrom(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateComInstanceFrom(String,String)","pos":[0,36]}]},{"pos":[17603,17637],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17702,17736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17817,17851],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18276,18341],"content":"CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)","pos":[0,65]}]},{"pos":[18891,18925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18990,19024],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19090,19124],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19234,19268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19349,19383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19626,19646],"content":"CreateDomain(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String)","pos":[0,20]}]},{"pos":[19973,20007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20068,20102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20400,20429],"content":"CreateDomain(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence)","pos":[0,29]}]},{"pos":[20820,20854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20941,20975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21036,21070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21412,21456],"content":"CreateDomain(String,Evidence,AppDomainSetup)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,AppDomainSetup)","pos":[0,44]}]},{"pos":[21898,21932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22019,22053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22122,22156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22217,22251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22725,22796],"content":"CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])","pos":[0,71]}]},{"pos":[23389,23423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23510,23544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23613,23647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23728,23762],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23860,23894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23955,23989],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24373,24424],"content":"CreateDomain(String,Evidence,String,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,String,String,Boolean)","pos":[0,51]}]},{"pos":[24931,24965],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25052,25086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25154,25188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25266,25300],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25373,25407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25468,25502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25974,26055],"content":"CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])","pos":[0,81]}]},{"pos":[26672,26706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26793,26827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26895,26929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27007,27041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27114,27148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27225,27259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27328,27362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27423,27457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27723,27752],"content":"CreateInstance(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String)","pos":[0,29]}]},{"pos":[28136,28170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28235,28269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28350,28384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28684,28722],"content":"CreateInstance(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String,Object[])","pos":[0,38]}]},{"pos":[29155,29189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29254,29288],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29367,29401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29482,29516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30056,30143],"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,87]}]},{"pos":[30825,30859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30924,30958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31026,31060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31145,31179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31253,31287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31350,31384],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31467,31501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31580,31614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31695,31729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32333,32429],"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,96]}]},{"pos":[33181,33215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33280,33314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33382,33416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33501,33535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33609,33643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33706,33740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33823,33857],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33936,33970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34063,34097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34178,34212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34498,34536],"content":"CreateInstanceAndUnwrap(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String)","pos":[0,38]}]},{"pos":[34917,34951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35016,35050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35108,35142],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35469,35516],"content":"CreateInstanceAndUnwrap(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String,Object[])","pos":[0,47]}]},{"pos":[35946,35980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36045,36079],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36158,36192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36250,36284],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36851,36947],"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,96]}]},{"pos":[37626,37660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37725,37759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37827,37861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37946,37980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38054,38088],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38151,38185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38268,38302],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38381,38415],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38473,38507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39138,39243],"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,105]}]},{"pos":[39992,40026],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40091,40125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40193,40227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40312,40346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40420,40454],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40517,40551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40634,40668],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40747,40781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40874,40908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40966,41000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41285,41318],"content":"CreateInstanceFrom(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String)","pos":[0,33]}]},{"pos":[41714,41748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41813,41847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41928,41962],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42274,42316],"content":"CreateInstanceFrom(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String,Object[])","pos":[0,42]}]},{"pos":[42761,42795],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42860,42894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42973,43007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43088,43122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43674,43765],"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,91]}]},{"pos":[44459,44493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44558,44592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44660,44694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44779,44813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44887,44921],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44984,45018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45101,45135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45214,45248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45329,45363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45979,46079],"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,100]}]},{"pos":[46843,46877],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46942,46976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47044,47078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47163,47197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47271,47305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47368,47402],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47485,47519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47598,47632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47725,47759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47840,47874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48172,48214],"content":"CreateInstanceFromAndUnwrap(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String)","pos":[0,42]}]},{"pos":[48607,48641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48706,48740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48798,48832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49171,49222],"content":"CreateInstanceFromAndUnwrap(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String,Object[])","pos":[0,51]}]},{"pos":[49664,49698],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49763,49797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49876,49910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49968,50002],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50581,50681],"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,100]}]},{"pos":[51372,51406],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51471,51505],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51573,51607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51692,51726],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51800,51834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51897,51931],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52014,52048],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52127,52161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52219,52253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52896,53005],"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,109]}]},{"pos":[53766,53800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53865,53899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53967,54001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54086,54120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54194,54228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54291,54325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54408,54442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54521,54555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54648,54682],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54740,54774],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54995,55008],"content":"CurrentDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentDomain","pos":[0,13]}]},{"pos":[55286,55320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55653,55710],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)","pos":[0,57]}]},{"pos":[56220,56254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56348,56382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56465,56499],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57056,57149],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)"},{"pos":[57837,57871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57965,57999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58146,58180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58263,58297],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58746,58812],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)","pos":[0,66]}]},{"pos":[59382,59416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59510,59544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59627,59661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59744,59778],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60191,60255],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)","pos":[0,64]}]},{"pos":[60791,60825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60919,60953],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61013,61047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61130,61164],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61797,61912],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>,SecurityContextSource)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)"},{"pos":[62705,62739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62833,62867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63014,63048],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63150,63184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63267,63301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63778,63851],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)","pos":[0,73]}]},{"pos":[64447,64481],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64575,64609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64669,64703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64786,64820],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64903,64937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65502,65601],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)","pos":[0,99]}]},{"pos":[66347,66381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66475,66509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66601,66635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66727,66761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66852,66886],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66969,67003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67618,67726],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)"},{"pos":[68477,68511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68605,68639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68699,68733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68805,68839],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68986,69020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69103,69137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69766,69874],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)","pos":[0,108]}]},{"pos":[70680,70714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70808,70842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[70925,70959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71051,71085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71177,71211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71302,71336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71419,71453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72046,72152],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)","pos":[0,106]}]},{"pos":[72924,72958],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73052,73086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73146,73180],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73272,73306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73398,73432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73523,73557],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73640,73674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74331,74446],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)","pos":[0,115]}]},{"pos":[75278,75312],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75406,75440],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75500,75534],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75617,75651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75743,75777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75869,75903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75994,76028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76111,76145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76832,76955],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)","pos":[0,123]}]},{"pos":[77824,77858],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77952,77986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78046,78080],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78163,78197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78289,78323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78415,78449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78540,78574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78646,78680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78763,78797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79656,79815],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)"},{"pos":[80862,80896],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80990,81024],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81084,81118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81201,81235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81327,81361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81453,81487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81578,81612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81684,81718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81865,81899],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81982,82016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82287,82321],"content":"DoCallBack(CrossAppDomainDelegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"DoCallBack(CrossAppDomainDelegate)","pos":[0,34]}]},{"pos":[82702,82736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82899,82912],"content":"DomainManager","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainManager","pos":[0,13]}]},{"pos":[83197,83231],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83392,83404],"content":"DomainUnload","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainUnload","pos":[0,12]}]},{"pos":[83673,83707],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83876,83892],"content":"DynamicDirectory","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicDirectory","pos":[0,16]}]},{"pos":[84166,84200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84353,84361],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[84654,84688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84885,84908],"content":"ExecuteAssembly(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String)","pos":[0,23]}]},{"pos":[85231,85265],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85322,85356],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85663,85695],"content":"ExecuteAssembly(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,Evidence)","pos":[0,32]}]},{"pos":[86086,86120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86211,86245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86302,86336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86611,86643],"content":"ExecuteAssembly(String,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,String[])","pos":[0,32]}]},{"pos":[86999,87033],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87096,87130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87187,87221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87560,87601],"content":"ExecuteAssembly(String,Evidence,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,Evidence,String[])","pos":[0,41]}]},{"pos":[88025,88059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88150,88184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88247,88281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88338,88372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88783,88844],"content":"ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)","pos":[0,61]}]},{"pos":[89345,89379],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89442,89476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89542,89576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89686,89720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89777,89811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90286,90356],"content":"ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)","pos":[0,70]}]},{"pos":[90925,90959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91050,91084],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91147,91181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91247,91281],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91391,91425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91482,91516],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91771,91800],"content":"ExecuteAssemblyByName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String)","pos":[0,29]}]},{"pos":[92141,92175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92232,92266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92593,92637],"content":"ExecuteAssemblyByName(AssemblyName,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(AssemblyName,String[])","pos":[0,44]}]},{"pos":[93064,93098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93161,93195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93252,93286],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93611,93649],"content":"ExecuteAssemblyByName(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String,Evidence)","pos":[0,38]}]},{"pos":[94058,94092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94183,94217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94274,94308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94601,94639],"content":"ExecuteAssemblyByName(String,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String,String[])","pos":[0,38]}]},{"pos":[95013,95047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95110,95144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95201,95235],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95626,95679],"content":"ExecuteAssemblyByName(AssemblyName,Evidence,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(AssemblyName,Evidence,String[])","pos":[0,53]}]},{"pos":[96174,96208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96299,96333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96396,96430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96487,96521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96878,96925],"content":"ExecuteAssemblyByName(String,Evidence,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String,Evidence,String[])","pos":[0,47]}]},{"pos":[97367,97401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97492,97526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97589,97623],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97680,97714],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[97943,97963],"content":"FirstChanceException","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstChanceException","pos":[0,20]}]},{"pos":[98384,98418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[98579,98591],"content":"FriendlyName","needQuote":true,"needEscape":true,"nodes":[{"content":"FriendlyName","pos":[0,12]}]},{"pos":[98853,98887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99050,99065],"content":"GetAssemblies()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblies()","pos":[0,15]}]},{"pos":[99383,99417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[99590,99610],"content":"GetCurrentThreadId()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentThreadId()","pos":[0,20]}]},{"pos":[99909,99943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100124,100139],"content":"GetData(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetData(String)","pos":[0,15]}]},{"pos":[100425,100459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100517,100551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[100702,100711],"content":"GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[100970,101004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101145,101147],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[101375,101409],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[101596,101623],"content":"InitializeLifetimeService()","needQuote":true,"needEscape":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[101949,101983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102198,102230],"content":"IsCompatibilitySwitchSet(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCompatibilitySwitchSet(String)","pos":[0,32]}]},{"pos":[102577,102611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102687,102721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[102894,102914],"content":"IsDefaultAppDomain()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefaultAppDomain()","pos":[0,20]}]},{"pos":[103209,103243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103422,103445],"content":"IsFinalizingForUnload()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFinalizingForUnload()","pos":[0,23]}]},{"pos":[103749,103783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[103948,103962],"content":"IsFullyTrusted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFullyTrusted","pos":[0,14]}]},{"pos":[104229,104263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[104424,104436],"content":"IsHomogenous","needQuote":true,"needEscape":true,"nodes":[{"content":"IsHomogenous","pos":[0,12]}]},{"pos":[104697,104731],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[104906,104918],"content":"Load(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[])","pos":[0,12]}]},{"pos":[105229,105263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105334,105368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[105612,105630],"content":"Load(AssemblyName)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName)","pos":[0,18]}]},{"pos":[105994,106028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106099,106133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106343,106355],"content":"Load(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[106672,106706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[106777,106811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107049,107068],"content":"Load(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[])","pos":[0,19]}]},{"pos":[107416,107450],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107521,107555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107626,107660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[107968,107995],"content":"Load(AssemblyName,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName,Evidence)","pos":[0,27]}]},{"pos":[108427,108461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108552,108586],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108657,108691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[108965,108986],"content":"Load(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String,Evidence)","pos":[0,21]}]},{"pos":[109371,109405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109496,109530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109601,109635],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[109937,109965],"content":"Load(Byte[],Byte[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[],Evidence)","pos":[0,28]}]},{"pos":[110381,110415],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110486,110520],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110611,110645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110716,110750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[110960,110979],"content":"MonitoringIsEnabled","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringIsEnabled","pos":[0,19]}]},{"pos":[111273,111307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[111500,111528],"content":"MonitoringSurvivedMemorySize","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringSurvivedMemorySize","pos":[0,28]}]},{"pos":[111835,111869],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112076,112111],"content":"MonitoringSurvivedProcessMemorySize","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringSurvivedProcessMemorySize","pos":[0,35]}]},{"pos":[112446,112480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[112685,112719],"content":"MonitoringTotalAllocatedMemorySize","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringTotalAllocatedMemorySize","pos":[0,34]}]},{"pos":[113044,113078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113271,113299],"content":"MonitoringTotalProcessorTime","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringTotalProcessorTime","pos":[0,28]}]},{"pos":[113613,113647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[113810,113823],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[114127,114161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114320,114331],"content":"ProcessExit","needQuote":true,"needEscape":true,"nodes":[{"content":"ProcessExit","pos":[0,11]}]},{"pos":[114597,114631],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[114826,114855],"content":"ReflectionOnlyAssemblyResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyAssemblyResolve","pos":[0,29]}]},{"pos":[115189,115223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[115414,115443],"content":"ReflectionOnlyGetAssemblies()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyGetAssemblies()","pos":[0,29]}]},{"pos":[115803,115837],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116010,116028],"content":"RelativeSearchPath","needQuote":true,"needEscape":true,"nodes":[{"content":"RelativeSearchPath","pos":[0,18]}]},{"pos":[116308,116342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[116509,116524],"content":"ResourceResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"ResourceResolve","pos":[0,15]}]},{"pos":[116816,116850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117095,117126],"content":"SetAppDomainPolicy(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAppDomainPolicy(PolicyLevel)","pos":[0,31]}]},{"pos":[117518,117552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[117743,117763],"content":"SetCachePath(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetCachePath(String)","pos":[0,20]}]},{"pos":[118062,118096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118305,118327],"content":"SetData(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetData(String,Object)","pos":[0,22]}]},{"pos":[118638,118672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[118733,118767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119070,119104],"content":"SetData(String,Object,IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetData(String,Object,IPermission)","pos":[0,34]}]},{"pos":[119479,119513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119574,119608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119689,119723],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[119956,119978],"content":"SetDynamicBase(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetDynamicBase(String)","pos":[0,22]}]},{"pos":[120283,120317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[120576,120611],"content":"SetPrincipalPolicy(PrincipalPolicy)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPrincipalPolicy(PrincipalPolicy)","pos":[0,35]}]},{"pos":[121013,121047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[121220,121240],"content":"SetShadowCopyFiles()","needQuote":true,"needEscape":true,"nodes":[{"content":"SetShadowCopyFiles()","pos":[0,20]}]},{"pos":[121677,121702],"content":"SetShadowCopyPath(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetShadowCopyPath(String)","pos":[0,25]}]},{"pos":[122016,122050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122299,122329],"content":"SetThreadPrincipal(IPrincipal)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetThreadPrincipal(IPrincipal)","pos":[0,30]}]},{"pos":[122717,122751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[122920,122936],"content":"SetupInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"SetupInformation","pos":[0,16]}]},{"pos":[123226,123260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[123427,123442],"content":"ShadowCopyFiles","needQuote":true,"needEscape":true,"nodes":[{"content":"ShadowCopyFiles","pos":[0,15]}]},{"pos":[123712,123746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124099,124164],"content":"System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,65]}]},{"pos":[124617,124651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124717,124751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124814,124848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[124909,124943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125008,125042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125337,125388],"content":"System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,51]}]},{"pos":[125781,125815],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125876,125910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[125974,126008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[126259,126301],"content":"System._AppDomain.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.GetTypeInfoCount(UInt32)","pos":[0,42]}]},{"pos":[126660,126694],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127115,127193],"content":"System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,78]}]},{"pos":[127735,127769],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127828,127862],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[127923,127957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128019,128053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128121,128155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128222,128256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128323,128357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128422,128456],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[128609,128619],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[128894,128928],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129087,129098],"content":"TypeResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeResolve","pos":[0,11]}]},{"pos":[129378,129412],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[129585,129603],"content":"UnhandledException","needQuote":true,"needEscape":true,"nodes":[{"content":"UnhandledException","pos":[0,18]}]},{"pos":[129926,129960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130145,130162],"content":"Unload(AppDomain)","needQuote":true,"needEscape":true,"nodes":[{"content":"Unload(AppDomain)","pos":[0,17]}]},{"pos":[130466,130500],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[130623,130648],"content":"System.MarshalByRefObject","needQuote":true,"needEscape":true,"nodes":[{"content":"System.MarshalByRefObject","pos":[0,25]}]},{"pos":[130746,130763],"content":"ActivationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivationContext","pos":[0,17]}]},{"pos":[130932,130949],"content":"ActivationContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ActivationContext","pos":[0,17]}]},{"pos":[131133,131158],"content":"AppendPrivatePath(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"AppendPrivatePath(String)","pos":[0,25]}]},{"pos":[131332,131338],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[131487,131506],"content":"ApplicationIdentity","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationIdentity","pos":[0,19]}]},{"pos":[131681,131700],"content":"ApplicationIdentity","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationIdentity","pos":[0,19]}]},{"pos":[131872,131888],"content":"ApplicationTrust","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationTrust","pos":[0,16]}]},{"pos":[132086,132102],"content":"ApplicationTrust","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplicationTrust","pos":[0,16]}]},{"pos":[132294,132313],"content":"ApplyPolicy(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ApplyPolicy(String)","pos":[0,19]}]},{"pos":[132475,132481],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[132597,132603],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[132745,132757],"content":"AssemblyLoad","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyLoad","pos":[0,12]}]},{"pos":[132923,132947],"content":"AssemblyLoadEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyLoadEventHandler","pos":[0,24]}]},{"pos":[133128,133143],"content":"AssemblyResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyResolve","pos":[0,15]}]},{"pos":[133310,133329],"content":"ResolveEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveEventHandler","pos":[0,19]}]},{"pos":[133498,133511],"content":"BaseDirectory","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseDirectory","pos":[0,13]}]},{"pos":[133661,133667],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[133813,133831],"content":"ClearPrivatePath()","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearPrivatePath()","pos":[0,18]}]},{"pos":[134024,134045],"content":"ClearShadowCopyPath()","needQuote":true,"needEscape":true,"nodes":[{"content":"ClearShadowCopyPath()","pos":[0,21]}]},{"pos":[134275,134311],"content":"CreateComInstanceFrom(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateComInstanceFrom(String,String)","pos":[0,36]}]},{"pos":[134547,134559],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[134704,134710],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[134826,134832],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[135080,135145],"content":"CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)","pos":[0,65]}]},{"pos":[135439,135451],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[135596,135602],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[135718,135724],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[135838,135842],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[136021,136042],"content":"AssemblyHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[136254,136274],"content":"CreateDomain(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String)","pos":[0,20]}]},{"pos":[136441,136450],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[136572,136578],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[136767,136796],"content":"CreateDomain(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence)","pos":[0,29]}]},{"pos":[136981,136990],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[137112,137118],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[137268,137276],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[137507,137551],"content":"CreateDomain(String,Evidence,AppDomainSetup)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,AppDomainSetup)","pos":[0,44]}]},{"pos":[137766,137775],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[137897,137903],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[138053,138061],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[138205,138219],"content":"AppDomainSetup","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomainSetup","pos":[0,14]}]},{"pos":[138512,138583],"content":"CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])","pos":[0,71]}]},{"pos":[138852,138861],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[138983,138989],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[139139,139147],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[139291,139305],"content":"AppDomainSetup","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomainSetup","pos":[0,14]}]},{"pos":[139462,139475],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[139650,139660],"content":"StrongName","needQuote":true,"needEscape":true,"nodes":[{"content":"StrongName","pos":[0,10]}]},{"pos":[139918,139969],"content":"CreateDomain(String,Evidence,String,String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,String,String,Boolean)","pos":[0,51]}]},{"pos":[140198,140207],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[140329,140335],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[140485,140493],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[140629,140635],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[140751,140757],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[140874,140881],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[141159,141240],"content":"CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])","pos":[0,81]}]},{"pos":[141529,141538],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[141660,141666],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[141816,141824],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[141960,141966],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[142082,142088],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[142205,142212],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[142344,142364],"content":"AppDomainInitializer","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomainInitializer","pos":[0,20]}]},{"pos":[142508,142514],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[142689,142718],"content":"CreateInstance(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String)","pos":[0,29]}]},{"pos":[142940,142952],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[143097,143103],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[143219,143225],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[143414,143452],"content":"CreateInstance(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String,Object[])","pos":[0,38]}]},{"pos":[143692,143704],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[143849,143855],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[143971,143977],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[144093,144099],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[144410,144497],"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,87]}]},{"pos":[144835,144847],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[144992,144998],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[145114,145120],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[145237,145244],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[145390,145402],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[145563,145569],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[145696,145702],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[145853,145864],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[146004,146010],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[146353,146449],"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,96]}]},{"pos":[146805,146817],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[146962,146968],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[147084,147090],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[147207,147214],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[147360,147372],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[147533,147539],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[147666,147672],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[147823,147834],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[147974,147980],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[148132,148140],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[148342,148380],"content":"CreateInstanceAndUnwrap(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String)","pos":[0,38]}]},{"pos":[148580,148586],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[148702,148708],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[148824,148830],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[149028,149075],"content":"CreateInstanceAndUnwrap(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String,Object[])","pos":[0,47]}]},{"pos":[149293,149299],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[149415,149421],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[149537,149543],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[149659,149665],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[149985,150081],"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,96]}]},{"pos":[150397,150403],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[150519,150525],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[150641,150647],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[150764,150771],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[150917,150929],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[151090,151096],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[151223,151229],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[151380,151391],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[151531,151537],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[151889,151994],"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,105]}]},{"pos":[152328,152334],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[152450,152456],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[152572,152578],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[152695,152702],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[152848,152860],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[153021,153027],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[153154,153160],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[153311,153322],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[153462,153468],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[153620,153628],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[153825,153858],"content":"CreateInstanceFrom(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String)","pos":[0,33]}]},{"pos":[154088,154100],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[154245,154251],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[154367,154373],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[154566,154608],"content":"CreateInstanceFrom(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String,Object[])","pos":[0,42]}]},{"pos":[154856,154868],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[155013,155019],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[155135,155141],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[155257,155263],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[155578,155669],"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,91]}]},{"pos":[156015,156027],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[156172,156178],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[156294,156300],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[156417,156424],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[156570,156582],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[156743,156749],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[156876,156882],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157033,157044],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[157184,157190],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[157537,157637],"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,100]}]},{"pos":[158001,158013],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[158158,158164],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[158280,158286],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[158403,158410],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[158556,158568],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[158729,158735],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[158862,158868],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159019,159030],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[159170,159176],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159328,159336],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[159542,159584],"content":"CreateInstanceFromAndUnwrap(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String)","pos":[0,42]}]},{"pos":[159792,159798],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[159914,159920],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[160036,160042],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[160244,160295],"content":"CreateInstanceFromAndUnwrap(String,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String,Object[])","pos":[0,51]}]},{"pos":[160521,160527],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[160643,160649],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[160765,160771],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[160887,160893],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161217,161317],"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])","pos":[0,100]}]},{"pos":[161641,161647],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[161763,161769],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[161885,161891],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[162008,162015],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[162161,162173],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[162334,162340],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[162467,162473],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[162624,162635],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[162775,162781],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[163137,163246],"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)","pos":[0,109]}]},{"pos":[163588,163594],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[163710,163716],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[163832,163838],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[163955,163962],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[164108,164120],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[164281,164287],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[164414,164420],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[164571,164582],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[164722,164728],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[164880,164888],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[165051,165064],"content":"CurrentDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentDomain","pos":[0,13]}]},{"pos":[165217,165226],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]},{"pos":[165460,165517],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)","pos":[0,57]}]},{"pos":[165796,165811],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[165989,166001],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[166187,166208],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[166568,166661],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)"},{"pos":[167012,167027],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[167205,167217],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[167403,167424],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[167678,167713],"content":"IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CustomAttributeBuilder>"},{"pos":[168074,168140],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)","pos":[0,66]}]},{"pos":[168437,168452],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[168630,168642],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[168828,168849],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[169045,169053],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[169315,169379],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)","pos":[0,64]}]},{"pos":[169672,169687],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[169865,169877],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[170063,170084],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[170246,170252],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[170604,170719],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>,SecurityContextSource)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)"},{"pos":[171114,171129],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[171307,171319],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[171505,171526],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[171780,171815],"content":"IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CustomAttributeBuilder>"},{"pos":[172065,172086],"content":"SecurityContextSource","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityContextSource","pos":[0,21]}]},{"pos":[172399,172472],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)","pos":[0,73]}]},{"pos":[172783,172798],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[172976,172988],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[173174,173195],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[173357,173363],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[173513,173521],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[173859,173958],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)","pos":[0,99]}]},{"pos":[174321,174336],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[174514,174526],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[174712,174733],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[174920,174933],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[175097,175110],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[175274,175287],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[175653,175761],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)"},{"pos":[176142,176157],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[176335,176347],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[176533,176554],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[176716,176722],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[176839,176846],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[177056,177091],"content":"IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CustomAttributeBuilder>"},{"pos":[177542,177650],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)","pos":[0,108]}]},{"pos":[178031,178046],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[178224,178236],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[178422,178443],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[178639,178647],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[178808,178821],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[178985,178998],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[179162,179175],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[179530,179636],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)","pos":[0,106]}]},{"pos":[180013,180028],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[180206,180218],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[180404,180425],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[180587,180593],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[180734,180747],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[180911,180924],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[181088,181101],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[181488,181603],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)","pos":[0,115]}]},{"pos":[181998,182013],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[182191,182203],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[182389,182410],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[182572,182578],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[182728,182736],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[182897,182910],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[183074,183087],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[183251,183264],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[183666,183789],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)","pos":[0,123]}]},{"pos":[184200,184215],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[184393,184405],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[184591,184612],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[184774,184780],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[184930,184938],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[185099,185112],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[185276,185289],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[185453,185466],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[185606,185613],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[186080,186239],"content":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>)","needQuote":true,"needEscape":true,"source":"DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)"},{"pos":[186722,186737],"content":"AssemblyBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilder","pos":[0,15]}]},{"pos":[186915,186927],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[187113,187134],"content":"AssemblyBuilderAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyBuilderAccess","pos":[0,21]}]},{"pos":[187296,187302],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[187452,187460],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[187621,187634],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[187798,187811],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[187975,187988],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[188128,188135],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[188345,188380],"content":"IEnumerable<ph id=\"ph1\">&lt;CustomAttributeBuilder&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CustomAttributeBuilder>"},{"pos":[188652,188686],"content":"DoCallBack(CrossAppDomainDelegate)","needQuote":true,"needEscape":true,"nodes":[{"content":"DoCallBack(CrossAppDomainDelegate)","pos":[0,34]}]},{"pos":[188894,188916],"content":"CrossAppDomainDelegate","needQuote":true,"needEscape":true,"nodes":[{"content":"CrossAppDomainDelegate","pos":[0,22]}]},{"pos":[189091,189104],"content":"DomainManager","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainManager","pos":[0,13]}]},{"pos":[189264,189280],"content":"AppDomainManager","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomainManager","pos":[0,16]}]},{"pos":[189442,189454],"content":"DomainUnload","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainUnload","pos":[0,12]}]},{"pos":[189608,189620],"content":"EventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[189778,189794],"content":"DynamicDirectory","needQuote":true,"needEscape":true,"nodes":[{"content":"DynamicDirectory","pos":[0,16]}]},{"pos":[189950,189956],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[190094,190102],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[190276,190284],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[190464,190487],"content":"ExecuteAssembly(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String)","pos":[0,23]}]},{"pos":[190656,190661],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[190775,190781],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[190973,191005],"content":"ExecuteAssembly(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,Evidence)","pos":[0,32]}]},{"pos":[191192,191197],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[191311,191317],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[191467,191475],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[191671,191703],"content":"ExecuteAssembly(String,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,String[])","pos":[0,32]}]},{"pos":[191890,191895],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[192009,192015],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[192131,192137],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[192347,192388],"content":"ExecuteAssembly(String,Evidence,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,Evidence,String[])","pos":[0,41]}]},{"pos":[192593,192598],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[192712,192718],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[192868,192876],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[193012,193018],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[193264,193325],"content":"ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)","pos":[0,61]}]},{"pos":[193570,193575],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[193689,193695],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[193811,193817],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[193933,193937],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[194116,194137],"content":"AssemblyHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[194468,194538],"content":"ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)","pos":[0,70]}]},{"pos":[194801,194806],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[194920,194926],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[195076,195084],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[195220,195226],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[195342,195346],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[195525,195546],"content":"AssemblyHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyHashAlgorithm","pos":[0,21]}]},{"pos":[195767,195796],"content":"ExecuteAssemblyByName(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String)","pos":[0,29]}]},{"pos":[195977,195982],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[196096,196102],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[196301,196345],"content":"ExecuteAssemblyByName(AssemblyName,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(AssemblyName,String[])","pos":[0,44]}]},{"pos":[196556,196561],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[196703,196715],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[196854,196860],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[197060,197098],"content":"ExecuteAssemblyByName(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String,Evidence)","pos":[0,38]}]},{"pos":[197297,197302],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[197416,197422],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[197572,197580],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[197782,197820],"content":"ExecuteAssemblyByName(String,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String,String[])","pos":[0,38]}]},{"pos":[198019,198024],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[198138,198144],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[198260,198266],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[198499,198552],"content":"ExecuteAssemblyByName(AssemblyName,Evidence,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(AssemblyName,Evidence,String[])","pos":[0,53]}]},{"pos":[198781,198786],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[198928,198940],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[199113,199121],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[199257,199263],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[199479,199526],"content":"ExecuteAssemblyByName(String,Evidence,String[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ExecuteAssemblyByName(String,Evidence,String[])","pos":[0,47]}]},{"pos":[199743,199748],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[199862,199868],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[200018,200026],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[200162,200168],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[200320,200340],"content":"FirstChanceException","needQuote":true,"needEscape":true,"nodes":[{"content":"FirstChanceException","pos":[0,20]}]},{"pos":[200574,200617],"content":"EventHandler<ph id=\"ph1\">&lt;FirstChanceExceptionEventArgs&gt;</ph>","needQuote":true,"needEscape":true,"source":"EventHandler<FirstChanceExceptionEventArgs>"},{"pos":[200866,200878],"content":"FriendlyName","needQuote":true,"needEscape":true,"nodes":[{"content":"FriendlyName","pos":[0,12]}]},{"pos":[201026,201032],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[201175,201190],"content":"GetAssemblies()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAssemblies()","pos":[0,15]}]},{"pos":[201368,201376],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[201541,201561],"content":"GetCurrentThreadId()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentThreadId()","pos":[0,20]}]},{"pos":[201724,201729],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[201879,201894],"content":"GetData(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetData(String)","pos":[0,15]}]},{"pos":[202048,202054],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[202170,202176],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[202313,202322],"content":"GetType()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType()","pos":[0,9]}]},{"pos":[202462,202466],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[202594,202596],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[202723,202728],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[202881,202908],"content":"InitializeLifetimeService()","needQuote":true,"needEscape":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[203086,203092],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[203261,203293],"content":"IsCompatibilitySwitchSet(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCompatibilitySwitchSet(String)","pos":[0,32]}]},{"pos":[203499,203516],"content":"Nullable<ph id=\"ph1\">&lt;Boolean&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Boolean>"},{"pos":[203661,203667],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[203815,203835],"content":"IsDefaultAppDomain()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefaultAppDomain()","pos":[0,20]}]},{"pos":[204000,204007],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[204160,204183],"content":"IsFinalizingForUnload()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFinalizingForUnload()","pos":[0,23]}]},{"pos":[204354,204361],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[204507,204521],"content":"IsFullyTrusted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFullyTrusted","pos":[0,14]}]},{"pos":[204674,204681],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[204825,204837],"content":"IsHomogenous","needQuote":true,"needEscape":true,"nodes":[{"content":"IsHomogenous","pos":[0,12]}]},{"pos":[204986,204993],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[205144,205156],"content":"Load(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[])","pos":[0,12]}]},{"pos":[205328,205336],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[205465,205469],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[205633,205651],"content":"Load(AssemblyName)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName)","pos":[0,18]}]},{"pos":[205835,205843],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[206002,206014],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[206186,206198],"content":"Load(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String)","pos":[0,12]}]},{"pos":[206370,206378],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[206509,206515],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[206678,206697],"content":"Load(Byte[],Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[])","pos":[0,19]}]},{"pos":[206883,206891],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[207020,207024],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[207136,207140],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[207336,207363],"content":"Load(AssemblyName,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(AssemblyName,Evidence)","pos":[0,27]}]},{"pos":[207565,207573],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[207732,207744],"content":"AssemblyName","needQuote":true,"needEscape":true,"nodes":[{"content":"AssemblyName","pos":[0,12]}]},{"pos":[207917,207925],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[208126,208147],"content":"Load(String,Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(String,Evidence)","pos":[0,21]}]},{"pos":[208337,208345],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[208476,208482],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[208632,208640],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[208855,208883],"content":"Load(Byte[],Byte[],Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Load(Byte[],Byte[],Evidence)","pos":[0,28]}]},{"pos":[209087,209095],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[209224,209228],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[209340,209344],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[209492,209500],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[209669,209688],"content":"MonitoringIsEnabled","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringIsEnabled","pos":[0,19]}]},{"pos":[209851,209858],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[210018,210046],"content":"MonitoringSurvivedMemorySize","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringSurvivedMemorySize","pos":[0,28]}]},{"pos":[210225,210230],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[210393,210428],"content":"MonitoringSurvivedProcessMemorySize","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringSurvivedProcessMemorySize","pos":[0,35]}]},{"pos":[210621,210626],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[210788,210822],"content":"MonitoringTotalAllocatedMemorySize","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringTotalAllocatedMemorySize","pos":[0,34]}]},{"pos":[211013,211018],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[211174,211202],"content":"MonitoringTotalProcessorTime","needQuote":true,"needEscape":true,"nodes":[{"content":"MonitoringTotalProcessorTime","pos":[0,28]}]},{"pos":[211384,211392],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[211539,211552],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[211727,211740],"content":"PermissionSet","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSet","pos":[0,13]}]},{"pos":[211904,211915],"content":"ProcessExit","needQuote":true,"needEscape":true,"nodes":[{"content":"ProcessExit","pos":[0,11]}]},{"pos":[212067,212079],"content":"EventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"EventHandler","pos":[0,12]}]},{"pos":[212250,212279],"content":"ReflectionOnlyAssemblyResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyAssemblyResolve","pos":[0,29]}]},{"pos":[212474,212493],"content":"ResolveEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveEventHandler","pos":[0,19]}]},{"pos":[212676,212705],"content":"ReflectionOnlyGetAssemblies()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionOnlyGetAssemblies()","pos":[0,29]}]},{"pos":[212911,212919],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[213084,213102],"content":"RelativeSearchPath","needQuote":true,"needEscape":true,"nodes":[{"content":"RelativeSearchPath","pos":[0,18]}]},{"pos":[213262,213268],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[213413,213428],"content":"ResourceResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"ResourceResolve","pos":[0,15]}]},{"pos":[213595,213614],"content":"ResolveEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveEventHandler","pos":[0,19]}]},{"pos":[213824,213855],"content":"SetAppDomainPolicy(PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetAppDomainPolicy(PolicyLevel)","pos":[0,31]}]},{"pos":[214078,214089],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[214272,214292],"content":"SetCachePath(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetCachePath(String)","pos":[0,20]}]},{"pos":[214456,214462],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[214628,214650],"content":"SetData(String,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetData(String,Object)","pos":[0,22]}]},{"pos":[214818,214824],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[214940,214946],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[215140,215174],"content":"SetData(String,Object,IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetData(String,Object,IPermission)","pos":[0,34]}]},{"pos":[215366,215372],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[215488,215494],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[215633,215644],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[215822,215844],"content":"SetDynamicBase(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetDynamicBase(String)","pos":[0,22]}]},{"pos":[216012,216018],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[216209,216244],"content":"SetPrincipalPolicy(PrincipalPolicy)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetPrincipalPolicy(PrincipalPolicy)","pos":[0,35]}]},{"pos":[216485,216500],"content":"PrincipalPolicy","needQuote":true,"needEscape":true,"nodes":[{"content":"PrincipalPolicy","pos":[0,15]}]},{"pos":[216685,216705],"content":"SetShadowCopyFiles()","needQuote":true,"needEscape":true,"nodes":[{"content":"SetShadowCopyFiles()","pos":[0,20]}]},{"pos":[216915,216940],"content":"SetShadowCopyPath(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetShadowCopyPath(String)","pos":[0,25]}]},{"pos":[217114,217120],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[217306,217336],"content":"SetThreadPrincipal(IPrincipal)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetThreadPrincipal(IPrincipal)","pos":[0,30]}]},{"pos":[217562,217572],"content":"IPrincipal","needQuote":true,"needEscape":true,"nodes":[{"content":"IPrincipal","pos":[0,10]}]},{"pos":[217745,217761],"content":"SetupInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"SetupInformation","pos":[0,16]}]},{"pos":[217925,217939],"content":"AppDomainSetup","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomainSetup","pos":[0,14]}]},{"pos":[218100,218115],"content":"ShadowCopyFiles","needQuote":true,"needEscape":true,"nodes":[{"content":"ShadowCopyFiles","pos":[0,15]}]},{"pos":[218270,218277],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[218510,218575],"content":"System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,65]}]},{"pos":[218827,218831],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[218943,218949],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[219065,219071],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[219187,219193],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[219309,219315],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[219517,219568],"content":"System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,51]}]},{"pos":[219794,219800],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[219916,219922],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[220038,220044],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[220224,220266],"content":"System._AppDomain.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.GetTypeInfoCount(UInt32)","pos":[0,42]}]},{"pos":[220474,220480],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[220745,220823],"content":"System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,78]}]},{"pos":[221103,221109],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[221223,221227],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[221339,221345],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[221460,221465],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[221579,221585],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[221701,221707],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[221823,221829],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[221945,221951],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[222089,222099],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[222243,222249],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[222390,222401],"content":"TypeResolve","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeResolve","pos":[0,11]}]},{"pos":[222560,222579],"content":"ResolveEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveEventHandler","pos":[0,19]}]},{"pos":[222753,222771],"content":"UnhandledException","needQuote":true,"needEscape":true,"nodes":[{"content":"UnhandledException","pos":[0,18]}]},{"pos":[222955,222985],"content":"UnhandledExceptionEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"UnhandledExceptionEventHandler","pos":[0,30]}]},{"pos":[223187,223204],"content":"Unload(AppDomain)","needQuote":true,"needEscape":true,"nodes":[{"content":"Unload(AppDomain)","pos":[0,17]}]},{"pos":[223365,223374],"content":"AppDomain","needQuote":true,"needEscape":true,"nodes":[{"content":"AppDomain","pos":[0,9]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AppDomain\n  id: AppDomain\n  children:\n  - System.AppDomain.ActivationContext\n  - System.AppDomain.AppendPrivatePath(System.String)\n  - System.AppDomain.ApplicationIdentity\n  - System.AppDomain.ApplicationTrust\n  - System.AppDomain.ApplyPolicy(System.String)\n  - System.AppDomain.AssemblyLoad\n  - System.AppDomain.AssemblyResolve\n  - System.AppDomain.BaseDirectory\n  - System.AppDomain.ClearPrivatePath\n  - System.AppDomain.ClearShadowCopyPath\n  - System.AppDomain.CreateComInstanceFrom(System.String,System.String)\n  - System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.AppDomain.CreateDomain(System.String)\n  - System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence)\n  - System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)\n  - System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])\n  - System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)\n  - System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])\n  - System.AppDomain.CreateInstance(System.String,System.String)\n  - System.AppDomain.CreateInstance(System.String,System.String,System.Object[])\n  - System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  - System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)\n  - System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])\n  - System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  - System.AppDomain.CreateInstanceFrom(System.String,System.String)\n  - System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])\n  - System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  - System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)\n  - System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])\n  - System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  - System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  - System.AppDomain.CurrentDomain\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  - System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  - System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)\n  - System.AppDomain.DomainManager\n  - System.AppDomain.DomainUnload\n  - System.AppDomain.DynamicDirectory\n  - System.AppDomain.Evidence\n  - System.AppDomain.ExecuteAssembly(System.String)\n  - System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  - System.AppDomain.ExecuteAssembly(System.String,System.String[])\n  - System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  - System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  - System.AppDomain.ExecuteAssemblyByName(System.String)\n  - System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])\n  - System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)\n  - System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])\n  - System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])\n  - System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])\n  - System.AppDomain.FirstChanceException\n  - System.AppDomain.FriendlyName\n  - System.AppDomain.GetAssemblies\n  - System.AppDomain.GetCurrentThreadId\n  - System.AppDomain.GetData(System.String)\n  - System.AppDomain.GetType\n  - System.AppDomain.Id\n  - System.AppDomain.InitializeLifetimeService\n  - System.AppDomain.IsCompatibilitySwitchSet(System.String)\n  - System.AppDomain.IsDefaultAppDomain\n  - System.AppDomain.IsFinalizingForUnload\n  - System.AppDomain.IsFullyTrusted\n  - System.AppDomain.IsHomogenous\n  - System.AppDomain.Load(System.Byte[])\n  - System.AppDomain.Load(System.Reflection.AssemblyName)\n  - System.AppDomain.Load(System.String)\n  - System.AppDomain.Load(System.Byte[],System.Byte[])\n  - System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  - System.AppDomain.Load(System.String,System.Security.Policy.Evidence)\n  - System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  - System.AppDomain.MonitoringIsEnabled\n  - System.AppDomain.MonitoringSurvivedMemorySize\n  - System.AppDomain.MonitoringSurvivedProcessMemorySize\n  - System.AppDomain.MonitoringTotalAllocatedMemorySize\n  - System.AppDomain.MonitoringTotalProcessorTime\n  - System.AppDomain.PermissionSet\n  - System.AppDomain.ProcessExit\n  - System.AppDomain.ReflectionOnlyAssemblyResolve\n  - System.AppDomain.ReflectionOnlyGetAssemblies\n  - System.AppDomain.RelativeSearchPath\n  - System.AppDomain.ResourceResolve\n  - System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  - System.AppDomain.SetCachePath(System.String)\n  - System.AppDomain.SetData(System.String,System.Object)\n  - System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)\n  - System.AppDomain.SetDynamicBase(System.String)\n  - System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  - System.AppDomain.SetShadowCopyFiles\n  - System.AppDomain.SetShadowCopyPath(System.String)\n  - System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  - System.AppDomain.SetupInformation\n  - System.AppDomain.ShadowCopyFiles\n  - System.AppDomain.System#_AppDomain#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.AppDomain.System#_AppDomain#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.AppDomain.System#_AppDomain#GetTypeInfoCount(System.UInt32@)\n  - System.AppDomain.System#_AppDomain#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.AppDomain.ToString\n  - System.AppDomain.TypeResolve\n  - System.AppDomain.UnhandledException\n  - System.AppDomain.Unload(System.AppDomain)\n  langs:\n  - csharp\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System._AppDomain))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class AppDomain : MarshalByRefObject, _AppDomain, System.Security.IEvidenceFactory\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System._AppDomain\n  - System.Security.IEvidenceFactory\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ActivationContext\n  id: ActivationContext\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ActivationContext\n  nameWithType: AppDomain.ActivationContext\n  fullName: System.AppDomain.ActivationContext\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ActivationContext ActivationContext { get; }\n    return:\n      type: System.ActivationContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.AppendPrivatePath(System.String)\n  id: AppendPrivatePath(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: AppendPrivatePath(String)\n  nameWithType: AppDomain.AppendPrivatePath(String)\n  fullName: System.AppDomain.AppendPrivatePath(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void AppendPrivatePath (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ApplicationIdentity\n  id: ApplicationIdentity\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ApplicationIdentity\n  nameWithType: AppDomain.ApplicationIdentity\n  fullName: System.AppDomain.ApplicationIdentity\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ApplicationIdentity ApplicationIdentity { get; }\n    return:\n      type: System.ApplicationIdentity\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ApplicationTrust\n  id: ApplicationTrust\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ApplicationTrust\n  nameWithType: AppDomain.ApplicationTrust\n  fullName: System.AppDomain.ApplicationTrust\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Security.Policy.ApplicationTrust ApplicationTrust { get; }\n    return:\n      type: System.Security.Policy.ApplicationTrust\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ApplyPolicy(System.String)\n  id: ApplyPolicy(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ApplyPolicy(String)\n  nameWithType: AppDomain.ApplyPolicy(String)\n  fullName: System.AppDomain.ApplyPolicy(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string ApplyPolicy (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.AssemblyLoad\n  id: AssemblyLoad\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: AssemblyLoad\n  nameWithType: AppDomain.AssemblyLoad\n  fullName: System.AppDomain.AssemblyLoad\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event AssemblyLoadEventHandler AssemblyLoad;\n    return:\n      type: System.AssemblyLoadEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.AssemblyResolve\n  id: AssemblyResolve\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: AssemblyResolve\n  nameWithType: AppDomain.AssemblyResolve\n  fullName: System.AppDomain.AssemblyResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler AssemblyResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.BaseDirectory\n  id: BaseDirectory\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: BaseDirectory\n  nameWithType: AppDomain.BaseDirectory\n  fullName: System.AppDomain.BaseDirectory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string BaseDirectory { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ClearPrivatePath\n  id: ClearPrivatePath\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ClearPrivatePath()\n  nameWithType: AppDomain.ClearPrivatePath()\n  fullName: System.AppDomain.ClearPrivatePath()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void ClearPrivatePath ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ClearShadowCopyPath\n  id: ClearShadowCopyPath\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ClearShadowCopyPath()\n  nameWithType: AppDomain.ClearShadowCopyPath()\n  fullName: System.AppDomain.ClearShadowCopyPath()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void ClearShadowCopyPath ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateComInstanceFrom(System.String,System.String)\n  id: CreateComInstanceFrom(System.String,System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateComInstanceFrom(String,String)\n  nameWithType: AppDomain.CreateComInstanceFrom(String,String)\n  fullName: System.AppDomain.CreateComInstanceFrom(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyName, string typeName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateComInstanceFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  id: CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)\n  nameWithType: AppDomain.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)\n  fullName: System.AppDomain.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateComInstanceFrom (string assemblyFile, string typeName, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: hashValue\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateComInstanceFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateDomain(System.String)\n  id: CreateDomain(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateDomain(String)\n  nameWithType: AppDomain.CreateDomain(String)\n  fullName: System.AppDomain.CreateDomain(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CreateDomain (string friendlyName);\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateDomain*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence)\n  id: CreateDomain(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateDomain(String,Evidence)\n  nameWithType: AppDomain.CreateDomain(String,Evidence)\n  fullName: System.AppDomain.CreateDomain(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo);\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityInfo\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateDomain*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)\n  id: CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateDomain(String,Evidence,AppDomainSetup)\n  nameWithType: AppDomain.CreateDomain(String,Evidence,AppDomainSetup)\n  fullName: System.AppDomain.CreateDomain(String,Evidence,AppDomainSetup)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup info);\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityInfo\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: info\n      type: System.AppDomainSetup\n      description: Parameter description to be filled\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateDomain*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])\n  id: CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])\n  nameWithType: AppDomain.CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])\n  fullName: System.AppDomain.CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup info, System.Security.PermissionSet grantSet, System.Security.Policy.StrongName[] fullTrustAssemblies);\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityInfo\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: info\n      type: System.AppDomainSetup\n      description: Parameter description to be filled\n    - id: grantSet\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: fullTrustAssemblies\n      type: System.Security.Policy.StrongName[]\n      description: Parameter description to be filled\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateDomain*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)\n  id: CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateDomain(String,Evidence,String,String,Boolean)\n  nameWithType: AppDomain.CreateDomain(String,Evidence,String,String,Boolean)\n  fullName: System.AppDomain.CreateDomain(String,Evidence,String,String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles);\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityInfo\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: appBasePath\n      type: System.String\n      description: Parameter description to be filled\n    - id: appRelativeSearchPath\n      type: System.String\n      description: Parameter description to be filled\n    - id: shadowCopyFiles\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateDomain*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])\n  id: CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])\n  nameWithType: AppDomain.CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])\n  fullName: System.AppDomain.CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, string appBasePath, string appRelativeSearchPath, bool shadowCopyFiles, AppDomainInitializer adInit, string[] adInitArgs);\n    parameters:\n    - id: friendlyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: securityInfo\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: appBasePath\n      type: System.String\n      description: Parameter description to be filled\n    - id: appRelativeSearchPath\n      type: System.String\n      description: Parameter description to be filled\n    - id: shadowCopyFiles\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: adInit\n      type: System.AppDomainInitializer\n      description: Parameter description to be filled\n    - id: adInitArgs\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateDomain*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstance(System.String,System.String)\n  id: CreateInstance(System.String,System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String)\n  nameWithType: AppDomain.CreateInstance(String,String)\n  fullName: System.AppDomain.CreateInstance(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstance(System.String,System.String,System.Object[])\n  id: CreateInstance(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String,Object[])\n  nameWithType: AppDomain.CreateInstance(String,String,Object[])\n  fullName: System.AppDomain.CreateInstance(String,String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, object[] activationAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstance (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: securityAttributes\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)\n  id: CreateInstanceAndUnwrap(System.String,System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceAndUnwrap(String,String)\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String)\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceAndUnwrap (string assemblyName, string typeName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])\n  id: CreateInstanceAndUnwrap(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceAndUnwrap(String,String,Object[])\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String,Object[])\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceAndUnwrap (string assemblyName, string typeName, object[] activationAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  id: CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceAndUnwrap (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  id: CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceAndUnwrap (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: securityAttributes\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String)\n  id: CreateInstanceFrom(System.String,System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String)\n  nameWithType: AppDomain.CreateInstanceFrom(String,String)\n  fullName: System.AppDomain.CreateInstanceFrom(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])\n  id: CreateInstanceFrom(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String,Object[])\n  nameWithType: AppDomain.CreateInstanceFrom(String,String,Object[])\n  fullName: System.AppDomain.CreateInstanceFrom(String,String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, object[] activationAttributes);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Runtime.Remoting.ObjectHandle CreateInstanceFrom (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: securityAttributes\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFrom*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)\n  id: CreateInstanceFromAndUnwrap(System.String,System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFromAndUnwrap(String,String)\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String)\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceFromAndUnwrap (string assemblyName, string typeName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFromAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])\n  id: CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFromAndUnwrap(String,String,Object[])\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String,Object[])\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceFromAndUnwrap (string assemblyName, string typeName, object[] activationAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFromAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  id: CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceFromAndUnwrap (string assemblyFile, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFromAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  id: CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object CreateInstanceFromAndUnwrap (string assemblyName, string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes, System.Security.Policy.Evidence securityAttributes);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: typeName\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: activationAttributes\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: securityAttributes\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.CreateInstanceFromAndUnwrap*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.CurrentDomain\n  id: CurrentDomain\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: CurrentDomain\n  nameWithType: AppDomain.CurrentDomain\n  fullName: System.AppDomain.CurrentDomain\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static AppDomain CurrentDomain { get; }\n    return:\n      type: System.AppDomain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder> assemblyAttributes);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: assemblyAttributes\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder> assemblyAttributes, System.Security.SecurityContextSource securityContextSource);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: assemblyAttributes\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n      description: Parameter description to be filled\n    - id: securityContextSource\n      type: System.Security.SecurityContextSource\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, bool isSynchronized, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder> assemblyAttributes);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    - id: isSynchronized\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: assemblyAttributes\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: isSynchronized\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  id: DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, string dir, System.Security.Policy.Evidence evidence, System.Security.PermissionSet requiredPermissions, System.Security.PermissionSet optionalPermissions, System.Security.PermissionSet refusedPermissions, bool isSynchronized, System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder> assemblyAttributes);\n    parameters:\n    - id: name\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: access\n      type: System.Reflection.Emit.AssemblyBuilderAccess\n      description: Parameter description to be filled\n    - id: dir\n      type: System.String\n      description: Parameter description to be filled\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: requiredPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: optionalPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: refusedPermissions\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n    - id: isSynchronized\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: assemblyAttributes\n      type: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.AssemblyBuilder\n      description: Parameter description to be filled\n  overload: System.AppDomain.DefineDynamicAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)\n  id: DoCallBack(System.CrossAppDomainDelegate)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DoCallBack(CrossAppDomainDelegate)\n  nameWithType: AppDomain.DoCallBack(CrossAppDomainDelegate)\n  fullName: System.AppDomain.DoCallBack(CrossAppDomainDelegate)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void DoCallBack (CrossAppDomainDelegate callBackDelegate);\n    parameters:\n    - id: callBackDelegate\n      type: System.CrossAppDomainDelegate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DomainManager\n  id: DomainManager\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DomainManager\n  nameWithType: AppDomain.DomainManager\n  fullName: System.AppDomain.DomainManager\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public AppDomainManager DomainManager { get; }\n    return:\n      type: System.AppDomainManager\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DomainUnload\n  id: DomainUnload\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DomainUnload\n  nameWithType: AppDomain.DomainUnload\n  fullName: System.AppDomain.DomainUnload\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event EventHandler DomainUnload;\n    return:\n      type: System.EventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.DynamicDirectory\n  id: DynamicDirectory\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: DynamicDirectory\n  nameWithType: AppDomain.DynamicDirectory\n  fullName: System.AppDomain.DynamicDirectory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string DynamicDirectory { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Evidence\n  id: Evidence\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Evidence\n  nameWithType: AppDomain.Evidence\n  fullName: System.AppDomain.Evidence\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Security.Policy.Evidence Evidence { get; }\n    return:\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssembly(System.String)\n  id: ExecuteAssembly(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String)\n  nameWithType: AppDomain.ExecuteAssembly(String)\n  fullName: System.AppDomain.ExecuteAssembly(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,Evidence)\n  nameWithType: AppDomain.ExecuteAssembly(String,Evidence)\n  fullName: System.AppDomain.ExecuteAssembly(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.String[])\n  id: ExecuteAssembly(System.String,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,String[])\n  nameWithType: AppDomain.ExecuteAssembly(String,String[])\n  fullName: System.AppDomain.ExecuteAssembly(String,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, string[] args);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,Evidence,String[])\n  nameWithType: AppDomain.ExecuteAssembly(String,Evidence,String[])\n  fullName: System.AppDomain.ExecuteAssembly(String,Evidence,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  id: ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)\n  nameWithType: AppDomain.ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)\n  fullName: System.AppDomain.ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, string[] args, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    - id: hashValue\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  id: ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)\n  nameWithType: AppDomain.ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)\n  fullName: System.AppDomain.ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssembly (string assemblyFile, System.Security.Policy.Evidence assemblySecurity, string[] args, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);\n    parameters:\n    - id: assemblyFile\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    - id: hashValue\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Configuration.Assemblies.AssemblyHashAlgorithm\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssembly*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String)\n  id: ExecuteAssemblyByName(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssemblyByName(String)\n  nameWithType: AppDomain.ExecuteAssemblyByName(String)\n  fullName: System.AppDomain.ExecuteAssemblyByName(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssemblyByName (string assemblyName);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssemblyByName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])\n  id: ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssemblyByName(AssemblyName,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(AssemblyName,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(AssemblyName,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssemblyByName (System.Reflection.AssemblyName assemblyName, string[] args);\n    parameters:\n    - id: assemblyName\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssemblyByName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)\n  id: ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssemblyByName(String,Evidence)\n  nameWithType: AppDomain.ExecuteAssemblyByName(String,Evidence)\n  fullName: System.AppDomain.ExecuteAssemblyByName(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssemblyByName (string assemblyName, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssemblyByName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])\n  id: ExecuteAssemblyByName(System.String,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssemblyByName(String,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(String,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(String,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssemblyByName (string assemblyName, string[] args);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssemblyByName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])\n  id: ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssemblyByName(AssemblyName,Evidence,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(AssemblyName,Evidence,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(AssemblyName,Evidence,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssemblyByName (System.Reflection.AssemblyName assemblyName, System.Security.Policy.Evidence assemblySecurity, string[] args);\n    parameters:\n    - id: assemblyName\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssemblyByName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])\n  id: ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ExecuteAssemblyByName(String,Evidence,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(String,Evidence,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(String,Evidence,String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int ExecuteAssemblyByName (string assemblyName, System.Security.Policy.Evidence assemblySecurity, string[] args);\n    parameters:\n    - id: assemblyName\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    - id: args\n      type: System.String[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.AppDomain.ExecuteAssemblyByName*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.FirstChanceException\n  id: FirstChanceException\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: FirstChanceException\n  nameWithType: AppDomain.FirstChanceException\n  fullName: System.AppDomain.FirstChanceException\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event EventHandler<System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs> FirstChanceException;\n    return:\n      type: System.EventHandler{System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.FriendlyName\n  id: FriendlyName\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: FriendlyName\n  nameWithType: AppDomain.FriendlyName\n  fullName: System.AppDomain.FriendlyName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string FriendlyName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.GetAssemblies\n  id: GetAssemblies\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: GetAssemblies()\n  nameWithType: AppDomain.GetAssemblies()\n  fullName: System.AppDomain.GetAssemblies()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly[] GetAssemblies ();\n    parameters: []\n    return:\n      type: System.Reflection.Assembly[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.GetCurrentThreadId\n  id: GetCurrentThreadId\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: GetCurrentThreadId()\n  nameWithType: AppDomain.GetCurrentThreadId()\n  fullName: System.AppDomain.GetCurrentThreadId()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static int GetCurrentThreadId ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.GetData(System.String)\n  id: GetData(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: GetData(String)\n  nameWithType: AppDomain.GetData(String)\n  fullName: System.AppDomain.GetData(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public object GetData (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.GetType\n  id: GetType\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: GetType()\n  nameWithType: AppDomain.GetType()\n  fullName: System.AppDomain.GetType()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public Type GetType ();\n    parameters: []\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Id\n  id: Id\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Id\n  nameWithType: AppDomain.Id\n  fullName: System.AppDomain.Id\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int Id { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: AppDomain.InitializeLifetimeService()\n  fullName: System.AppDomain.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.IsCompatibilitySwitchSet(System.String)\n  id: IsCompatibilitySwitchSet(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: IsCompatibilitySwitchSet(String)\n  nameWithType: AppDomain.IsCompatibilitySwitchSet(String)\n  fullName: System.AppDomain.IsCompatibilitySwitchSet(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public Nullable<bool> IsCompatibilitySwitchSet (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Nullable{System.Boolean}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.IsDefaultAppDomain\n  id: IsDefaultAppDomain\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: IsDefaultAppDomain()\n  nameWithType: AppDomain.IsDefaultAppDomain()\n  fullName: System.AppDomain.IsDefaultAppDomain()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsDefaultAppDomain ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.IsFinalizingForUnload\n  id: IsFinalizingForUnload\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: IsFinalizingForUnload()\n  nameWithType: AppDomain.IsFinalizingForUnload()\n  fullName: System.AppDomain.IsFinalizingForUnload()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsFinalizingForUnload ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.IsFullyTrusted\n  id: IsFullyTrusted\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: IsFullyTrusted\n  nameWithType: AppDomain.IsFullyTrusted\n  fullName: System.AppDomain.IsFullyTrusted\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsFullyTrusted { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.IsHomogenous\n  id: IsHomogenous\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: IsHomogenous\n  nameWithType: AppDomain.IsHomogenous\n  fullName: System.AppDomain.IsHomogenous\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool IsHomogenous { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.Byte[])\n  id: Load(System.Byte[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(Byte[])\n  nameWithType: AppDomain.Load(Byte[])\n  fullName: System.AppDomain.Load(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (byte[] rawAssembly);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.Reflection.AssemblyName)\n  id: Load(System.Reflection.AssemblyName)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(AssemblyName)\n  nameWithType: AppDomain.Load(AssemblyName)\n  fullName: System.AppDomain.Load(AssemblyName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);\n    parameters:\n    - id: assemblyRef\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.String)\n  id: Load(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(String)\n  nameWithType: AppDomain.Load(String)\n  fullName: System.AppDomain.Load(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (string assemblyString);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.Byte[],System.Byte[])\n  id: Load(System.Byte[],System.Byte[])\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[])\n  nameWithType: AppDomain.Load(Byte[],Byte[])\n  fullName: System.AppDomain.Load(Byte[],Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  id: Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(AssemblyName,Evidence)\n  nameWithType: AppDomain.Load(AssemblyName,Evidence)\n  fullName: System.AppDomain.Load(AssemblyName,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyRef\n      type: System.Reflection.AssemblyName\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.String,System.Security.Policy.Evidence)\n  id: Load(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(String,Evidence)\n  nameWithType: AppDomain.Load(String,Evidence)\n  fullName: System.AppDomain.Load(String,Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);\n    parameters:\n    - id: assemblyString\n      type: System.String\n      description: Parameter description to be filled\n    - id: assemblySecurity\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  id: Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Load(Byte[],Byte[],Evidence)\n  nameWithType: AppDomain.Load(Byte[],Byte[],Evidence)\n  fullName: System.AppDomain.Load(Byte[],Byte[],Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);\n    parameters:\n    - id: rawAssembly\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: rawSymbolStore\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: securityEvidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  overload: System.AppDomain.Load*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.MonitoringIsEnabled\n  id: MonitoringIsEnabled\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: MonitoringIsEnabled\n  nameWithType: AppDomain.MonitoringIsEnabled\n  fullName: System.AppDomain.MonitoringIsEnabled\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static bool MonitoringIsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.MonitoringSurvivedMemorySize\n  id: MonitoringSurvivedMemorySize\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: MonitoringSurvivedMemorySize\n  nameWithType: AppDomain.MonitoringSurvivedMemorySize\n  fullName: System.AppDomain.MonitoringSurvivedMemorySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long MonitoringSurvivedMemorySize { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.MonitoringSurvivedProcessMemorySize\n  id: MonitoringSurvivedProcessMemorySize\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: MonitoringSurvivedProcessMemorySize\n  nameWithType: AppDomain.MonitoringSurvivedProcessMemorySize\n  fullName: System.AppDomain.MonitoringSurvivedProcessMemorySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static long MonitoringSurvivedProcessMemorySize { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.MonitoringTotalAllocatedMemorySize\n  id: MonitoringTotalAllocatedMemorySize\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: MonitoringTotalAllocatedMemorySize\n  nameWithType: AppDomain.MonitoringTotalAllocatedMemorySize\n  fullName: System.AppDomain.MonitoringTotalAllocatedMemorySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public long MonitoringTotalAllocatedMemorySize { get; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.MonitoringTotalProcessorTime\n  id: MonitoringTotalProcessorTime\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: MonitoringTotalProcessorTime\n  nameWithType: AppDomain.MonitoringTotalProcessorTime\n  fullName: System.AppDomain.MonitoringTotalProcessorTime\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public TimeSpan MonitoringTotalProcessorTime { get; }\n    return:\n      type: System.TimeSpan\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.PermissionSet\n  id: PermissionSet\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: PermissionSet\n  nameWithType: AppDomain.PermissionSet\n  fullName: System.AppDomain.PermissionSet\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Security.PermissionSet PermissionSet { get; }\n    return:\n      type: System.Security.PermissionSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ProcessExit\n  id: ProcessExit\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ProcessExit\n  nameWithType: AppDomain.ProcessExit\n  fullName: System.AppDomain.ProcessExit\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event EventHandler ProcessExit;\n    return:\n      type: System.EventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ReflectionOnlyAssemblyResolve\n  id: ReflectionOnlyAssemblyResolve\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ReflectionOnlyAssemblyResolve\n  nameWithType: AppDomain.ReflectionOnlyAssemblyResolve\n  fullName: System.AppDomain.ReflectionOnlyAssemblyResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler ReflectionOnlyAssemblyResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ReflectionOnlyGetAssemblies\n  id: ReflectionOnlyGetAssemblies\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ReflectionOnlyGetAssemblies()\n  nameWithType: AppDomain.ReflectionOnlyGetAssemblies()\n  fullName: System.AppDomain.ReflectionOnlyGetAssemblies()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public System.Reflection.Assembly[] ReflectionOnlyGetAssemblies ();\n    parameters: []\n    return:\n      type: System.Reflection.Assembly[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.RelativeSearchPath\n  id: RelativeSearchPath\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: RelativeSearchPath\n  nameWithType: AppDomain.RelativeSearchPath\n  fullName: System.AppDomain.RelativeSearchPath\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public string RelativeSearchPath { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ResourceResolve\n  id: ResourceResolve\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ResourceResolve\n  nameWithType: AppDomain.ResourceResolve\n  fullName: System.AppDomain.ResourceResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler ResourceResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  id: SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetAppDomainPolicy(PolicyLevel)\n  nameWithType: AppDomain.SetAppDomainPolicy(PolicyLevel)\n  fullName: System.AppDomain.SetAppDomainPolicy(PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetAppDomainPolicy (System.Security.Policy.PolicyLevel domainPolicy);\n    parameters:\n    - id: domainPolicy\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetCachePath(System.String)\n  id: SetCachePath(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetCachePath(String)\n  nameWithType: AppDomain.SetCachePath(String)\n  fullName: System.AppDomain.SetCachePath(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetCachePath (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetData(System.String,System.Object)\n  id: SetData(System.String,System.Object)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetData(String,Object)\n  nameWithType: AppDomain.SetData(String,Object)\n  fullName: System.AppDomain.SetData(String,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetData (string name, object data);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: data\n      type: System.Object\n      description: Parameter description to be filled\n  overload: System.AppDomain.SetData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)\n  id: SetData(System.String,System.Object,System.Security.IPermission)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetData(String,Object,IPermission)\n  nameWithType: AppDomain.SetData(String,Object,IPermission)\n  fullName: System.AppDomain.SetData(String,Object,IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetData (string name, object data, System.Security.IPermission permission);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: data\n      type: System.Object\n      description: Parameter description to be filled\n    - id: permission\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  overload: System.AppDomain.SetData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetDynamicBase(System.String)\n  id: SetDynamicBase(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetDynamicBase(String)\n  nameWithType: AppDomain.SetDynamicBase(String)\n  fullName: System.AppDomain.SetDynamicBase(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetDynamicBase (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  id: SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetPrincipalPolicy(PrincipalPolicy)\n  nameWithType: AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n  fullName: System.AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetPrincipalPolicy (System.Security.Principal.PrincipalPolicy policy);\n    parameters:\n    - id: policy\n      type: System.Security.Principal.PrincipalPolicy\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetShadowCopyFiles\n  id: SetShadowCopyFiles\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetShadowCopyFiles()\n  nameWithType: AppDomain.SetShadowCopyFiles()\n  fullName: System.AppDomain.SetShadowCopyFiles()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetShadowCopyFiles ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetShadowCopyPath(System.String)\n  id: SetShadowCopyPath(System.String)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetShadowCopyPath(String)\n  nameWithType: AppDomain.SetShadowCopyPath(String)\n  fullName: System.AppDomain.SetShadowCopyPath(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetShadowCopyPath (string path);\n    parameters:\n    - id: path\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  id: SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetThreadPrincipal(IPrincipal)\n  nameWithType: AppDomain.SetThreadPrincipal(IPrincipal)\n  fullName: System.AppDomain.SetThreadPrincipal(IPrincipal)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public void SetThreadPrincipal (System.Security.Principal.IPrincipal principal);\n    parameters:\n    - id: principal\n      type: System.Security.Principal.IPrincipal\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.SetupInformation\n  id: SetupInformation\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: SetupInformation\n  nameWithType: AppDomain.SetupInformation\n  fullName: System.AppDomain.SetupInformation\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public AppDomainSetup SetupInformation { get; }\n    return:\n      type: System.AppDomainSetup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ShadowCopyFiles\n  id: ShadowCopyFiles\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ShadowCopyFiles\n  nameWithType: AppDomain.ShadowCopyFiles\n  fullName: System.AppDomain.ShadowCopyFiles\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool ShadowCopyFiles { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.System#_AppDomain#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#_AppDomain#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: AppDomain.System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.AppDomain.System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void _AppDomain.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.System#_AppDomain#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#_AppDomain#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: AppDomain.System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.AppDomain.System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void _AppDomain.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.System#_AppDomain#GetTypeInfoCount(System.UInt32@)\n  id: System#_AppDomain#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: System._AppDomain.GetTypeInfoCount(UInt32)\n  nameWithType: AppDomain.System._AppDomain.GetTypeInfoCount(UInt32)\n  fullName: System.AppDomain.System._AppDomain.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void _AppDomain.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.System#_AppDomain#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#_AppDomain#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: AppDomain.System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.AppDomain.System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: void _AppDomain.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.ToString\n  id: ToString\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: AppDomain.ToString()\n  fullName: System.AppDomain.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.TypeResolve\n  id: TypeResolve\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: TypeResolve\n  nameWithType: AppDomain.TypeResolve\n  fullName: System.AppDomain.TypeResolve\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event ResolveEventHandler TypeResolve;\n    return:\n      type: System.ResolveEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.UnhandledException\n  id: UnhandledException\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: UnhandledException\n  nameWithType: AppDomain.UnhandledException\n  fullName: System.AppDomain.UnhandledException\n  type: Event\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public event UnhandledExceptionEventHandler UnhandledException;\n    return:\n      type: System.UnhandledExceptionEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.AppDomain.Unload(System.AppDomain)\n  id: Unload(System.AppDomain)\n  parent: System.AppDomain\n  langs:\n  - csharp\n  name: Unload(AppDomain)\n  nameWithType: AppDomain.Unload(AppDomain)\n  fullName: System.AppDomain.Unload(AppDomain)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public static void Unload (AppDomain domain);\n    parameters:\n    - id: domain\n      type: System.AppDomain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.AppDomain.ActivationContext\n  parent: System.AppDomain\n  isExternal: false\n  name: ActivationContext\n  nameWithType: AppDomain.ActivationContext\n  fullName: System.AppDomain.ActivationContext\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.AppDomain.AppendPrivatePath(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: AppendPrivatePath(String)\n  nameWithType: AppDomain.AppendPrivatePath(String)\n  fullName: System.AppDomain.AppendPrivatePath(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.ApplicationIdentity\n  parent: System.AppDomain\n  isExternal: false\n  name: ApplicationIdentity\n  nameWithType: AppDomain.ApplicationIdentity\n  fullName: System.AppDomain.ApplicationIdentity\n- uid: System.ApplicationIdentity\n  parent: System\n  isExternal: false\n  name: ApplicationIdentity\n  nameWithType: ApplicationIdentity\n  fullName: System.ApplicationIdentity\n- uid: System.AppDomain.ApplicationTrust\n  parent: System.AppDomain\n  isExternal: false\n  name: ApplicationTrust\n  nameWithType: AppDomain.ApplicationTrust\n  fullName: System.AppDomain.ApplicationTrust\n- uid: System.Security.Policy.ApplicationTrust\n  parent: System.Security.Policy\n  isExternal: false\n  name: ApplicationTrust\n  nameWithType: ApplicationTrust\n  fullName: System.Security.Policy.ApplicationTrust\n- uid: System.AppDomain.ApplyPolicy(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: ApplyPolicy(String)\n  nameWithType: AppDomain.ApplyPolicy(String)\n  fullName: System.AppDomain.ApplyPolicy(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.AssemblyLoad\n  parent: System.AppDomain\n  isExternal: false\n  name: AssemblyLoad\n  nameWithType: AppDomain.AssemblyLoad\n  fullName: System.AppDomain.AssemblyLoad\n- uid: System.AssemblyLoadEventHandler\n  parent: System\n  isExternal: false\n  name: AssemblyLoadEventHandler\n  nameWithType: AssemblyLoadEventHandler\n  fullName: System.AssemblyLoadEventHandler\n- uid: System.AppDomain.AssemblyResolve\n  parent: System.AppDomain\n  isExternal: false\n  name: AssemblyResolve\n  nameWithType: AppDomain.AssemblyResolve\n  fullName: System.AppDomain.AssemblyResolve\n- uid: System.ResolveEventHandler\n  parent: System\n  isExternal: false\n  name: ResolveEventHandler\n  nameWithType: ResolveEventHandler\n  fullName: System.ResolveEventHandler\n- uid: System.AppDomain.BaseDirectory\n  parent: System.AppDomain\n  isExternal: false\n  name: BaseDirectory\n  nameWithType: AppDomain.BaseDirectory\n  fullName: System.AppDomain.BaseDirectory\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.ClearPrivatePath\n  parent: System.AppDomain\n  isExternal: false\n  name: ClearPrivatePath()\n  nameWithType: AppDomain.ClearPrivatePath()\n  fullName: System.AppDomain.ClearPrivatePath()\n- uid: System.AppDomain.ClearShadowCopyPath\n  parent: System.AppDomain\n  isExternal: false\n  name: ClearShadowCopyPath()\n  nameWithType: AppDomain.ClearShadowCopyPath()\n  fullName: System.AppDomain.ClearShadowCopyPath()\n- uid: System.AppDomain.CreateComInstanceFrom(System.String,System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateComInstanceFrom(String,String)\n  nameWithType: AppDomain.CreateComInstanceFrom(String,String)\n  fullName: System.AppDomain.CreateComInstanceFrom(String,String)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)\n  nameWithType: AppDomain.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)\n  fullName: System.AppDomain.CreateComInstanceFrom(String,String,Byte[],AssemblyHashAlgorithm)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.AppDomain.CreateDomain(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateDomain(String)\n  nameWithType: AppDomain.CreateDomain(String)\n  fullName: System.AppDomain.CreateDomain(String)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateDomain(String,Evidence)\n  nameWithType: AppDomain.CreateDomain(String,Evidence)\n  fullName: System.AppDomain.CreateDomain(String,Evidence)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateDomain(String,Evidence,AppDomainSetup)\n  nameWithType: AppDomain.CreateDomain(String,Evidence,AppDomainSetup)\n  fullName: System.AppDomain.CreateDomain(String,Evidence,AppDomainSetup)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomainSetup\n  parent: System\n  isExternal: false\n  name: AppDomainSetup\n  nameWithType: AppDomainSetup\n  fullName: System.AppDomainSetup\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup,System.Security.PermissionSet,System.Security.Policy.StrongName[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])\n  nameWithType: AppDomain.CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])\n  fullName: System.AppDomain.CreateDomain(String,Evidence,AppDomainSetup,PermissionSet,StrongName[])\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomainSetup\n  parent: System\n  isExternal: false\n  name: AppDomainSetup\n  nameWithType: AppDomainSetup\n  fullName: System.AppDomainSetup\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.Policy.StrongName\n  parent: System.Security.Policy\n  isExternal: false\n  name: StrongName\n  nameWithType: StrongName\n  fullName: System.Security.Policy.StrongName[]\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateDomain(String,Evidence,String,String,Boolean)\n  nameWithType: AppDomain.CreateDomain(String,Evidence,String,String,Boolean)\n  fullName: System.AppDomain.CreateDomain(String,Evidence,String,String,Boolean)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.CreateDomain(System.String,System.Security.Policy.Evidence,System.String,System.String,System.Boolean,System.AppDomainInitializer,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])\n  nameWithType: AppDomain.CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])\n  fullName: System.AppDomain.CreateDomain(String,Evidence,String,String,Boolean,AppDomainInitializer,String[])\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomainInitializer\n  parent: System\n  isExternal: false\n  name: AppDomainInitializer\n  nameWithType: AppDomainInitializer\n  fullName: System.AppDomainInitializer\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.CreateInstance(System.String,System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstance(String,String)\n  nameWithType: AppDomain.CreateInstance(String,String)\n  fullName: System.AppDomain.CreateInstance(String,String)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.CreateInstance(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstance(String,String,Object[])\n  nameWithType: AppDomain.CreateInstance(String,String,Object[])\n  fullName: System.AppDomain.CreateInstance(String,String,Object[])\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstance(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceAndUnwrap(String,String)\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String)\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceAndUnwrap(String,String,Object[])\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String,Object[])\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String,Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstanceAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstanceAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String)\n  nameWithType: AppDomain.CreateInstanceFrom(String,String)\n  fullName: System.AppDomain.CreateInstanceFrom(String,String)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String,Object[])\n  nameWithType: AppDomain.CreateInstanceFrom(String,String,Object[])\n  fullName: System.AppDomain.CreateInstanceFrom(String,String,Object[])\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstanceFrom(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFromAndUnwrap(String,String)\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String)\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFromAndUnwrap(String,String,Object[])\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String,Object[])\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String,Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[])\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  nameWithType: AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n  fullName: System.AppDomain.CreateInstanceFromAndUnwrap(String,String,Boolean,BindingFlags,Binder,Object[],CultureInfo,Object[],Evidence)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.CurrentDomain\n  parent: System.AppDomain\n  isExternal: false\n  name: CurrentDomain\n  nameWithType: AppDomain.CurrentDomain\n  fullName: System.AppDomain.CurrentDomain\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeBuilder>\n  nameWithType: IEnumerable<CustomAttributeBuilder>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder},System.Security.SecurityContextSource)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable<CustomAttributeBuilder>,SecurityContextSource)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeBuilder>\n  nameWithType: IEnumerable<CustomAttributeBuilder>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>\n- uid: System.Security.SecurityContextSource\n  parent: System.Security\n  isExternal: false\n  name: SecurityContextSource\n  nameWithType: SecurityContextSource\n  fullName: System.Security.SecurityContextSource\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Boolean,IEnumerable<CustomAttributeBuilder>)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeBuilder>\n  nameWithType: IEnumerable<CustomAttributeBuilder>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,Evidence,PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean)\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.String,System.Security.Policy.Evidence,System.Security.PermissionSet,System.Security.PermissionSet,System.Security.PermissionSet,System.Boolean,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})\n  parent: System.AppDomain\n  isExternal: false\n  name: DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)\n  nameWithType: AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)\n  fullName: System.AppDomain.DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,String,Evidence,PermissionSet,PermissionSet,PermissionSet,Boolean,IEnumerable<CustomAttributeBuilder>)\n- uid: System.Reflection.Emit.AssemblyBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilder\n  nameWithType: AssemblyBuilder\n  fullName: System.Reflection.Emit.AssemblyBuilder\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Reflection.Emit.AssemblyBuilderAccess\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: AssemblyBuilderAccess\n  nameWithType: AssemblyBuilderAccess\n  fullName: System.Reflection.Emit.AssemblyBuilderAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeBuilder>\n  nameWithType: IEnumerable<CustomAttributeBuilder>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Emit.CustomAttributeBuilder>\n- uid: System.AppDomain.DoCallBack(System.CrossAppDomainDelegate)\n  parent: System.AppDomain\n  isExternal: false\n  name: DoCallBack(CrossAppDomainDelegate)\n  nameWithType: AppDomain.DoCallBack(CrossAppDomainDelegate)\n  fullName: System.AppDomain.DoCallBack(CrossAppDomainDelegate)\n- uid: System.CrossAppDomainDelegate\n  parent: System\n  isExternal: false\n  name: CrossAppDomainDelegate\n  nameWithType: CrossAppDomainDelegate\n  fullName: System.CrossAppDomainDelegate\n- uid: System.AppDomain.DomainManager\n  parent: System.AppDomain\n  isExternal: false\n  name: DomainManager\n  nameWithType: AppDomain.DomainManager\n  fullName: System.AppDomain.DomainManager\n- uid: System.AppDomainManager\n  parent: System\n  isExternal: false\n  name: AppDomainManager\n  nameWithType: AppDomainManager\n  fullName: System.AppDomainManager\n- uid: System.AppDomain.DomainUnload\n  parent: System.AppDomain\n  isExternal: false\n  name: DomainUnload\n  nameWithType: AppDomain.DomainUnload\n  fullName: System.AppDomain.DomainUnload\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.AppDomain.DynamicDirectory\n  parent: System.AppDomain\n  isExternal: false\n  name: DynamicDirectory\n  nameWithType: AppDomain.DynamicDirectory\n  fullName: System.AppDomain.DynamicDirectory\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.Evidence\n  parent: System.AppDomain\n  isExternal: false\n  name: Evidence\n  nameWithType: AppDomain.Evidence\n  fullName: System.AppDomain.Evidence\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.ExecuteAssembly(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String)\n  nameWithType: AppDomain.ExecuteAssembly(String)\n  fullName: System.AppDomain.ExecuteAssembly(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,Evidence)\n  nameWithType: AppDomain.ExecuteAssembly(String,Evidence)\n  fullName: System.AppDomain.ExecuteAssembly(String,Evidence)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,String[])\n  nameWithType: AppDomain.ExecuteAssembly(String,String[])\n  fullName: System.AppDomain.ExecuteAssembly(String,String[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,Evidence,String[])\n  nameWithType: AppDomain.ExecuteAssembly(String,Evidence,String[])\n  fullName: System.AppDomain.ExecuteAssembly(String,Evidence,String[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)\n  nameWithType: AppDomain.ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)\n  fullName: System.AppDomain.ExecuteAssembly(String,String[],Byte[],AssemblyHashAlgorithm)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.AppDomain.ExecuteAssembly(System.String,System.Security.Policy.Evidence,System.String[],System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)\n  nameWithType: AppDomain.ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)\n  fullName: System.AppDomain.ExecuteAssembly(String,Evidence,String[],Byte[],AssemblyHashAlgorithm)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm\n  parent: System.Configuration.Assemblies\n  isExternal: false\n  name: AssemblyHashAlgorithm\n  nameWithType: AssemblyHashAlgorithm\n  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssemblyByName(String)\n  nameWithType: AppDomain.ExecuteAssemblyByName(String)\n  fullName: System.AppDomain.ExecuteAssemblyByName(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssemblyByName(AssemblyName,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(AssemblyName,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(AssemblyName,String[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssemblyByName(String,Evidence)\n  nameWithType: AppDomain.ExecuteAssemblyByName(String,Evidence)\n  fullName: System.AppDomain.ExecuteAssemblyByName(String,Evidence)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssemblyByName(String,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(String,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(String,String[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.ExecuteAssemblyByName(System.Reflection.AssemblyName,System.Security.Policy.Evidence,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssemblyByName(AssemblyName,Evidence,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(AssemblyName,Evidence,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(AssemblyName,Evidence,String[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.ExecuteAssemblyByName(System.String,System.Security.Policy.Evidence,System.String[])\n  parent: System.AppDomain\n  isExternal: false\n  name: ExecuteAssemblyByName(String,Evidence,String[])\n  nameWithType: AppDomain.ExecuteAssemblyByName(String,Evidence,String[])\n  fullName: System.AppDomain.ExecuteAssemblyByName(String,Evidence,String[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: System.AppDomain.FirstChanceException\n  parent: System.AppDomain\n  isExternal: false\n  name: FirstChanceException\n  nameWithType: AppDomain.FirstChanceException\n  fullName: System.AppDomain.FirstChanceException\n- uid: System.EventHandler{System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<FirstChanceExceptionEventArgs>\n  nameWithType: EventHandler<FirstChanceExceptionEventArgs>\n  fullName: System.EventHandler<System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>\n- uid: System.AppDomain.FriendlyName\n  parent: System.AppDomain\n  isExternal: false\n  name: FriendlyName\n  nameWithType: AppDomain.FriendlyName\n  fullName: System.AppDomain.FriendlyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.GetAssemblies\n  parent: System.AppDomain\n  isExternal: false\n  name: GetAssemblies()\n  nameWithType: AppDomain.GetAssemblies()\n  fullName: System.AppDomain.GetAssemblies()\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly[]\n- uid: System.AppDomain.GetCurrentThreadId\n  parent: System.AppDomain\n  isExternal: false\n  name: GetCurrentThreadId()\n  nameWithType: AppDomain.GetCurrentThreadId()\n  fullName: System.AppDomain.GetCurrentThreadId()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AppDomain.GetData(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: GetData(String)\n  nameWithType: AppDomain.GetData(String)\n  fullName: System.AppDomain.GetData(String)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.GetType\n  parent: System.AppDomain\n  isExternal: false\n  name: GetType()\n  nameWithType: AppDomain.GetType()\n  fullName: System.AppDomain.GetType()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.AppDomain.Id\n  parent: System.AppDomain\n  isExternal: false\n  name: Id\n  nameWithType: AppDomain.Id\n  fullName: System.AppDomain.Id\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AppDomain.InitializeLifetimeService\n  parent: System.AppDomain\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: AppDomain.InitializeLifetimeService()\n  fullName: System.AppDomain.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.AppDomain.IsCompatibilitySwitchSet(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: IsCompatibilitySwitchSet(String)\n  nameWithType: AppDomain.IsCompatibilitySwitchSet(String)\n  fullName: System.AppDomain.IsCompatibilitySwitchSet(String)\n- uid: System.Nullable{System.Boolean}\n  parent: System\n  isExternal: false\n  name: Nullable<Boolean>\n  nameWithType: Nullable<Boolean>\n  fullName: System.Nullable<System.Boolean>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.IsDefaultAppDomain\n  parent: System.AppDomain\n  isExternal: false\n  name: IsDefaultAppDomain()\n  nameWithType: AppDomain.IsDefaultAppDomain()\n  fullName: System.AppDomain.IsDefaultAppDomain()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.IsFinalizingForUnload\n  parent: System.AppDomain\n  isExternal: false\n  name: IsFinalizingForUnload()\n  nameWithType: AppDomain.IsFinalizingForUnload()\n  fullName: System.AppDomain.IsFinalizingForUnload()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.IsFullyTrusted\n  parent: System.AppDomain\n  isExternal: false\n  name: IsFullyTrusted\n  nameWithType: AppDomain.IsFullyTrusted\n  fullName: System.AppDomain.IsFullyTrusted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.IsHomogenous\n  parent: System.AppDomain\n  isExternal: false\n  name: IsHomogenous\n  nameWithType: AppDomain.IsHomogenous\n  fullName: System.AppDomain.IsHomogenous\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.Load(System.Byte[])\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(Byte[])\n  nameWithType: AppDomain.Load(Byte[])\n  fullName: System.AppDomain.Load(Byte[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.AppDomain.Load(System.Reflection.AssemblyName)\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(AssemblyName)\n  nameWithType: AppDomain.Load(AssemblyName)\n  fullName: System.AppDomain.Load(AssemblyName)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.AppDomain.Load(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(String)\n  nameWithType: AppDomain.Load(String)\n  fullName: System.AppDomain.Load(String)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.Load(System.Byte[],System.Byte[])\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(Byte[],Byte[])\n  nameWithType: AppDomain.Load(Byte[],Byte[])\n  fullName: System.AppDomain.Load(Byte[],Byte[])\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.AppDomain.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(AssemblyName,Evidence)\n  nameWithType: AppDomain.Load(AssemblyName,Evidence)\n  fullName: System.AppDomain.Load(AssemblyName,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.AssemblyName\n  parent: System.Reflection\n  isExternal: false\n  name: AssemblyName\n  nameWithType: AssemblyName\n  fullName: System.Reflection.AssemblyName\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.Load(System.String,System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(String,Evidence)\n  nameWithType: AppDomain.Load(String,Evidence)\n  fullName: System.AppDomain.Load(String,Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)\n  parent: System.AppDomain\n  isExternal: false\n  name: Load(Byte[],Byte[],Evidence)\n  nameWithType: AppDomain.Load(Byte[],Byte[],Evidence)\n  fullName: System.AppDomain.Load(Byte[],Byte[],Evidence)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.AppDomain.MonitoringIsEnabled\n  parent: System.AppDomain\n  isExternal: false\n  name: MonitoringIsEnabled\n  nameWithType: AppDomain.MonitoringIsEnabled\n  fullName: System.AppDomain.MonitoringIsEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.MonitoringSurvivedMemorySize\n  parent: System.AppDomain\n  isExternal: false\n  name: MonitoringSurvivedMemorySize\n  nameWithType: AppDomain.MonitoringSurvivedMemorySize\n  fullName: System.AppDomain.MonitoringSurvivedMemorySize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.AppDomain.MonitoringSurvivedProcessMemorySize\n  parent: System.AppDomain\n  isExternal: false\n  name: MonitoringSurvivedProcessMemorySize\n  nameWithType: AppDomain.MonitoringSurvivedProcessMemorySize\n  fullName: System.AppDomain.MonitoringSurvivedProcessMemorySize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.AppDomain.MonitoringTotalAllocatedMemorySize\n  parent: System.AppDomain\n  isExternal: false\n  name: MonitoringTotalAllocatedMemorySize\n  nameWithType: AppDomain.MonitoringTotalAllocatedMemorySize\n  fullName: System.AppDomain.MonitoringTotalAllocatedMemorySize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.AppDomain.MonitoringTotalProcessorTime\n  parent: System.AppDomain\n  isExternal: false\n  name: MonitoringTotalProcessorTime\n  nameWithType: AppDomain.MonitoringTotalProcessorTime\n  fullName: System.AppDomain.MonitoringTotalProcessorTime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AppDomain.PermissionSet\n  parent: System.AppDomain\n  isExternal: false\n  name: PermissionSet\n  nameWithType: AppDomain.PermissionSet\n  fullName: System.AppDomain.PermissionSet\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.AppDomain.ProcessExit\n  parent: System.AppDomain\n  isExternal: false\n  name: ProcessExit\n  nameWithType: AppDomain.ProcessExit\n  fullName: System.AppDomain.ProcessExit\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.AppDomain.ReflectionOnlyAssemblyResolve\n  parent: System.AppDomain\n  isExternal: false\n  name: ReflectionOnlyAssemblyResolve\n  nameWithType: AppDomain.ReflectionOnlyAssemblyResolve\n  fullName: System.AppDomain.ReflectionOnlyAssemblyResolve\n- uid: System.ResolveEventHandler\n  parent: System\n  isExternal: false\n  name: ResolveEventHandler\n  nameWithType: ResolveEventHandler\n  fullName: System.ResolveEventHandler\n- uid: System.AppDomain.ReflectionOnlyGetAssemblies\n  parent: System.AppDomain\n  isExternal: false\n  name: ReflectionOnlyGetAssemblies()\n  nameWithType: AppDomain.ReflectionOnlyGetAssemblies()\n  fullName: System.AppDomain.ReflectionOnlyGetAssemblies()\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly[]\n- uid: System.AppDomain.RelativeSearchPath\n  parent: System.AppDomain\n  isExternal: false\n  name: RelativeSearchPath\n  nameWithType: AppDomain.RelativeSearchPath\n  fullName: System.AppDomain.RelativeSearchPath\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.ResourceResolve\n  parent: System.AppDomain\n  isExternal: false\n  name: ResourceResolve\n  nameWithType: AppDomain.ResourceResolve\n  fullName: System.AppDomain.ResourceResolve\n- uid: System.ResolveEventHandler\n  parent: System\n  isExternal: false\n  name: ResolveEventHandler\n  nameWithType: ResolveEventHandler\n  fullName: System.ResolveEventHandler\n- uid: System.AppDomain.SetAppDomainPolicy(System.Security.Policy.PolicyLevel)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetAppDomainPolicy(PolicyLevel)\n  nameWithType: AppDomain.SetAppDomainPolicy(PolicyLevel)\n  fullName: System.AppDomain.SetAppDomainPolicy(PolicyLevel)\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.AppDomain.SetCachePath(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetCachePath(String)\n  nameWithType: AppDomain.SetCachePath(String)\n  fullName: System.AppDomain.SetCachePath(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.SetData(System.String,System.Object)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetData(String,Object)\n  nameWithType: AppDomain.SetData(String,Object)\n  fullName: System.AppDomain.SetData(String,Object)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.AppDomain.SetData(System.String,System.Object,System.Security.IPermission)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetData(String,Object,IPermission)\n  nameWithType: AppDomain.SetData(String,Object,IPermission)\n  fullName: System.AppDomain.SetData(String,Object,IPermission)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.AppDomain.SetDynamicBase(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetDynamicBase(String)\n  nameWithType: AppDomain.SetDynamicBase(String)\n  fullName: System.AppDomain.SetDynamicBase(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.SetPrincipalPolicy(System.Security.Principal.PrincipalPolicy)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetPrincipalPolicy(PrincipalPolicy)\n  nameWithType: AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n  fullName: System.AppDomain.SetPrincipalPolicy(PrincipalPolicy)\n- uid: System.Security.Principal.PrincipalPolicy\n  parent: System.Security.Principal\n  isExternal: false\n  name: PrincipalPolicy\n  nameWithType: PrincipalPolicy\n  fullName: System.Security.Principal.PrincipalPolicy\n- uid: System.AppDomain.SetShadowCopyFiles\n  parent: System.AppDomain\n  isExternal: false\n  name: SetShadowCopyFiles()\n  nameWithType: AppDomain.SetShadowCopyFiles()\n  fullName: System.AppDomain.SetShadowCopyFiles()\n- uid: System.AppDomain.SetShadowCopyPath(System.String)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetShadowCopyPath(String)\n  nameWithType: AppDomain.SetShadowCopyPath(String)\n  fullName: System.AppDomain.SetShadowCopyPath(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.SetThreadPrincipal(System.Security.Principal.IPrincipal)\n  parent: System.AppDomain\n  isExternal: false\n  name: SetThreadPrincipal(IPrincipal)\n  nameWithType: AppDomain.SetThreadPrincipal(IPrincipal)\n  fullName: System.AppDomain.SetThreadPrincipal(IPrincipal)\n- uid: System.Security.Principal.IPrincipal\n  parent: System.Security.Principal\n  isExternal: false\n  name: IPrincipal\n  nameWithType: IPrincipal\n  fullName: System.Security.Principal.IPrincipal\n- uid: System.AppDomain.SetupInformation\n  parent: System.AppDomain\n  isExternal: false\n  name: SetupInformation\n  nameWithType: AppDomain.SetupInformation\n  fullName: System.AppDomain.SetupInformation\n- uid: System.AppDomainSetup\n  parent: System\n  isExternal: false\n  name: AppDomainSetup\n  nameWithType: AppDomainSetup\n  fullName: System.AppDomainSetup\n- uid: System.AppDomain.ShadowCopyFiles\n  parent: System.AppDomain\n  isExternal: false\n  name: ShadowCopyFiles\n  nameWithType: AppDomain.ShadowCopyFiles\n  fullName: System.AppDomain.ShadowCopyFiles\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AppDomain.System#_AppDomain#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.AppDomain\n  isExternal: false\n  name: System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: AppDomain.System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.AppDomain.System._AppDomain.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.AppDomain.System#_AppDomain#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.AppDomain\n  isExternal: false\n  name: System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: AppDomain.System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.AppDomain.System._AppDomain.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.AppDomain.System#_AppDomain#GetTypeInfoCount(System.UInt32@)\n  parent: System.AppDomain\n  isExternal: false\n  name: System._AppDomain.GetTypeInfoCount(UInt32)\n  nameWithType: AppDomain.System._AppDomain.GetTypeInfoCount(UInt32)\n  fullName: System.AppDomain.System._AppDomain.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.AppDomain.System#_AppDomain#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.AppDomain\n  isExternal: false\n  name: System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: AppDomain.System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.AppDomain.System._AppDomain.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.AppDomain.ToString\n  parent: System.AppDomain\n  isExternal: false\n  name: ToString()\n  nameWithType: AppDomain.ToString()\n  fullName: System.AppDomain.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AppDomain.TypeResolve\n  parent: System.AppDomain\n  isExternal: false\n  name: TypeResolve\n  nameWithType: AppDomain.TypeResolve\n  fullName: System.AppDomain.TypeResolve\n- uid: System.ResolveEventHandler\n  parent: System\n  isExternal: false\n  name: ResolveEventHandler\n  nameWithType: ResolveEventHandler\n  fullName: System.ResolveEventHandler\n- uid: System.AppDomain.UnhandledException\n  parent: System.AppDomain\n  isExternal: false\n  name: UnhandledException\n  nameWithType: AppDomain.UnhandledException\n  fullName: System.AppDomain.UnhandledException\n- uid: System.UnhandledExceptionEventHandler\n  parent: System\n  isExternal: false\n  name: UnhandledExceptionEventHandler\n  nameWithType: UnhandledExceptionEventHandler\n  fullName: System.UnhandledExceptionEventHandler\n- uid: System.AppDomain.Unload(System.AppDomain)\n  parent: System.AppDomain\n  isExternal: false\n  name: Unload(AppDomain)\n  nameWithType: AppDomain.Unload(AppDomain)\n  fullName: System.AppDomain.Unload(AppDomain)\n- uid: System.AppDomain\n  parent: System\n  isExternal: false\n  name: AppDomain\n  nameWithType: AppDomain\n  fullName: System.AppDomain\n- uid: System.AppDomain.CreateComInstanceFrom*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.CreateDomain*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.CreateInstance*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.CreateInstanceAndUnwrap*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.CreateInstanceFrom*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.CreateInstanceFromAndUnwrap*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.DefineDynamicAssembly*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.ExecuteAssembly*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.ExecuteAssemblyByName*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.Load*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n- uid: System.AppDomain.SetData*\n  parent: System.AppDomain\n  isExternal: false\n  nameWithType: AppDomain.\n"}