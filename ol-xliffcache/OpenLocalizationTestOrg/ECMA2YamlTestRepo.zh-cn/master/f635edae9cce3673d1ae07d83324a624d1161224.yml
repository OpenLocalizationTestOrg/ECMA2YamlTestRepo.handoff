### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  id: SafeMemoryMappedViewHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  langs:
  - csharp
  name: SafeMemoryMappedViewHandle
  nameWithType: SafeMemoryMappedViewHandle
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  type: Class
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeMemoryMappedViewHandle : System.Runtime.InteropServices.SafeBuffer
  inheritance:
  - System.Object
  - System.Runtime.ConstrainedExecution.CriticalFinalizerObject
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  - System.Runtime.InteropServices.SafeBuffer
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)
  - System.Runtime.InteropServices.SafeBuffer.ByteLength
  - System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)
  - System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)
  - System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)
  - System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)
  - System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  - System.Runtime.InteropServices.SafeBuffer.ReleasePointer
  - System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)
  - System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)
  - System.Runtime.InteropServices.SafeHandle.Close
  - System.Runtime.InteropServices.SafeHandle.DangerousAddRef(System.Boolean@)
  - System.Runtime.InteropServices.SafeHandle.DangerousGetHandle
  - System.Runtime.InteropServices.SafeHandle.DangerousRelease
  - System.Runtime.InteropServices.SafeHandle.Dispose
  - System.Runtime.InteropServices.SafeHandle.Dispose(System.Boolean)
  - System.Runtime.InteropServices.SafeHandle.handle
  - System.Runtime.InteropServices.SafeHandle.IsClosed
  - System.Runtime.InteropServices.SafeHandle.SetHandle(System.IntPtr)
  - System.Runtime.InteropServices.SafeHandle.SetHandleAsInvalid
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  id: ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  langs:
  - csharp
  name: ReleaseHandle()
  nameWithType: SafeMemoryMappedViewHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Runtime.InteropServices.SafeBuffer
  isExternal: false
  name: System.Runtime.InteropServices.SafeBuffer
- uid: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle
  parent: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
  isExternal: false
  name: ReleaseHandle()
  nameWithType: SafeMemoryMappedViewHandle.ReleaseHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
