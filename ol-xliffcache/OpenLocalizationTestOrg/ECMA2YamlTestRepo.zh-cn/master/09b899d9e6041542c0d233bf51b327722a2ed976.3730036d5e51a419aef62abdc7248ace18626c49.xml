{"nodes":[{"pos":[1746,1754],"content":"D3DImage","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage","pos":[0,8]}]},{"pos":[3523,3533],"content":"D3DImage()","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage()","pos":[0,10]}]},{"pos":[4014,4037],"content":"D3DImage(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage(Double,Double)","pos":[0,23]}]},{"pos":[4389,4423],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4484,4518],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4761,4784],"content":"AddDirtyRect(Int32Rect)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddDirtyRect(Int32Rect)","pos":[0,23]}]},{"pos":[5166,5200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5377,5384],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[5722,5756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5993,6013],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[6410,6444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6645,6664],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[7038,7072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7333,7365],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[7798,7832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8027,8043],"content":"CopyBackBuffer()","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyBackBuffer()","pos":[0,16]}]},{"pos":[8439,8473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8676,8696],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[9071,9105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9288,9298],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[9750,9769],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[10132,10166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10225,10259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10508,10534],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[10949,10983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11256,11294],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[11745,11779],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11958,11964],"content":"Height","needQuote":true,"needEscape":true,"nodes":[{"content":"Height","pos":[0,6]}]},{"pos":[12262,12296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12507,12529],"content":"IsFrontBufferAvailable","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFrontBufferAvailable","pos":[0,22]}]},{"pos":[12858,12892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13117,13146],"content":"IsFrontBufferAvailableChanged","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFrontBufferAvailableChanged","pos":[0,29]}]},{"pos":[13577,13611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13838,13868],"content":"IsFrontBufferAvailableProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFrontBufferAvailableProperty","pos":[0,30]}]},{"pos":[14274,14308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14483,14489],"content":"Lock()","needQuote":true,"needEscape":true,"nodes":[{"content":"Lock()","pos":[0,6]}]},{"pos":[14904,14912],"content":"Metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata","pos":[0,8]}]},{"pos":[15265,15299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15488,15499],"content":"PixelHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelHeight","pos":[0,11]}]},{"pos":[15792,15826],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16013,16023],"content":"PixelWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelWidth","pos":[0,10]}]},{"pos":[16313,16347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16648,16685],"content":"SetBackBuffer(D3DResourceType,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetBackBuffer(D3DResourceType,IntPtr)","pos":[0,37]}]},{"pos":[17153,17187],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17254,17288],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17678,17723],"content":"SetBackBuffer(D3DResourceType,IntPtr,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetBackBuffer(D3DResourceType,IntPtr,Boolean)","pos":[0,45]}]},{"pos":[18236,18270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18337,18371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18451,18485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18775,18792],"content":"TryLock(Duration)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryLock(Duration)","pos":[0,17]}]},{"pos":[19151,19185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19244,19278],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19457,19465],"content":"Unlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"Unlock()","pos":[0,8]}]},{"pos":[19880,19885],"content":"Width","needQuote":true,"needEscape":true,"nodes":[{"content":"Width","pos":[0,5]}]},{"pos":[20180,20214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20344,20376],"content":"System.Windows.Media.ImageSource","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.ImageSource","pos":[0,32]}]},{"pos":[20492,20502],"content":"D3DImage()","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage()","pos":[0,10]}]},{"pos":[20738,20761],"content":"D3DImage(Double,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage(Double,Double)","pos":[0,23]}]},{"pos":[20945,20951],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[21067,21073],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[21271,21294],"content":"AddDirtyRect(Int32Rect)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddDirtyRect(Int32Rect)","pos":[0,23]}]},{"pos":[21496,21505],"content":"Int32Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32Rect","pos":[0,9]}]},{"pos":[21684,21691],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[21877,21885],"content":"D3DImage","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage","pos":[0,8]}]},{"pos":[22100,22120],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[22316,22325],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[22516,22535],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[22745,22753],"content":"D3DImage","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DImage","pos":[0,8]}]},{"pos":[22980,23012],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[23232,23241],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[23429,23445],"content":"CopyBackBuffer()","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyBackBuffer()","pos":[0,16]}]},{"pos":[23665,23677],"content":"BitmapSource","needQuote":true,"needEscape":true,"nodes":[{"content":"BitmapSource","pos":[0,12]}]},{"pos":[23889,23909],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[24105,24114],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[24296,24306],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[24534,24553],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[24730,24737],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24856,24863],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25066,25092],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[25300,25309],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[25536,25574],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[25806,25815],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[25995,26001],"content":"Height","needQuote":true,"needEscape":true,"nodes":[{"content":"Height","pos":[0,6]}]},{"pos":[26151,26157],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[26339,26361],"content":"IsFrontBufferAvailable","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFrontBufferAvailable","pos":[0,22]}]},{"pos":[26544,26551],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26742,26771],"content":"IsFrontBufferAvailableChanged","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFrontBufferAvailableChanged","pos":[0,29]}]},{"pos":[27013,27050],"content":"DependencyPropertyChangedEventHandler","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyPropertyChangedEventHandler","pos":[0,37]}]},{"pos":[27310,27340],"content":"IsFrontBufferAvailableProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFrontBufferAvailableProperty","pos":[0,30]}]},{"pos":[27565,27583],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[27779,27785],"content":"Lock()","needQuote":true,"needEscape":true,"nodes":[{"content":"Lock()","pos":[0,6]}]},{"pos":[27987,27995],"content":"Metadata","needQuote":true,"needEscape":true,"nodes":[{"content":"Metadata","pos":[0,8]}]},{"pos":[28184,28197],"content":"ImageMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"ImageMetadata","pos":[0,13]}]},{"pos":[28396,28407],"content":"PixelHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelHeight","pos":[0,11]}]},{"pos":[28566,28571],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28739,28749],"content":"PixelWidth","needQuote":true,"needEscape":true,"nodes":[{"content":"PixelWidth","pos":[0,10]}]},{"pos":[28906,28911],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29136,29173],"content":"SetBackBuffer(D3DResourceType,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetBackBuffer(D3DResourceType,IntPtr)","pos":[0,37]}]},{"pos":[29426,29441],"content":"D3DResourceType","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DResourceType","pos":[0,15]}]},{"pos":[29591,29597],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[29839,29884],"content":"SetBackBuffer(D3DResourceType,IntPtr,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetBackBuffer(D3DResourceType,IntPtr,Boolean)","pos":[0,45]}]},{"pos":[30153,30168],"content":"D3DResourceType","needQuote":true,"needEscape":true,"nodes":[{"content":"D3DResourceType","pos":[0,15]}]},{"pos":[30318,30324],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[30441,30448],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30642,30659],"content":"TryLock(Duration)","needQuote":true,"needEscape":true,"nodes":[{"content":"TryLock(Duration)","pos":[0,17]}]},{"pos":[30832,30839],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30975,30983],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[31161,31169],"content":"Unlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"Unlock()","pos":[0,8]}]},{"pos":[31372,31377],"content":"Width","needQuote":true,"needEscape":true,"nodes":[{"content":"Width","pos":[0,5]}]},{"pos":[31525,31531],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Interop.D3DImage\n  id: D3DImage\n  children:\n  - System.Windows.Interop.D3DImage.#ctor\n  - System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)\n  - System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)\n  - System.Windows.Interop.D3DImage.Clone\n  - System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)\n  - System.Windows.Interop.D3DImage.CloneCurrentValue\n  - System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Interop.D3DImage.CopyBackBuffer\n  - System.Windows.Interop.D3DImage.CreateInstanceCore\n  - System.Windows.Interop.D3DImage.Finalize\n  - System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)\n  - System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Interop.D3DImage.Height\n  - System.Windows.Interop.D3DImage.IsFrontBufferAvailable\n  - System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged\n  - System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty\n  - System.Windows.Interop.D3DImage.Lock\n  - System.Windows.Interop.D3DImage.Metadata\n  - System.Windows.Interop.D3DImage.PixelHeight\n  - System.Windows.Interop.D3DImage.PixelWidth\n  - System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)\n  - System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)\n  - System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)\n  - System.Windows.Interop.D3DImage.Unlock\n  - System.Windows.Interop.D3DImage.Width\n  langs:\n  - csharp\n  name: D3DImage\n  nameWithType: D3DImage\n  fullName: System.Windows.Interop.D3DImage\n  type: Class\n  syntax:\n    content: 'public class D3DImage : System.Windows.Media.ImageSource'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.ImageSource\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.ImageSource.PixelsToDIPs(System.Double,System.Int32)\n  - System.Windows.Media.ImageSource.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.ImageSource.ToString\n  - System.Windows.Media.ImageSource.ToString(System.IFormatProvider)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.#ctor\n  id: '#ctor'\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: D3DImage()\n  nameWithType: D3DImage.D3DImage()\n  fullName: System.Windows.Interop.D3DImage.D3DImage()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public D3DImage ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: D3DImage(Double,Double)\n  nameWithType: D3DImage.D3DImage(Double,Double)\n  fullName: System.Windows.Interop.D3DImage.D3DImage(Double,Double)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public D3DImage (double dpiX, double dpiY);\n    parameters:\n    - id: dpiX\n      type: System.Double\n      description: Parameter description to be filled\n    - id: dpiY\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)\n  id: AddDirtyRect(System.Windows.Int32Rect)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: AddDirtyRect(Int32Rect)\n  nameWithType: D3DImage.AddDirtyRect(Int32Rect)\n  fullName: System.Windows.Interop.D3DImage.AddDirtyRect(Int32Rect)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public void AddDirtyRect (System.Windows.Int32Rect dirtyRect);\n    parameters:\n    - id: dirtyRect\n      type: System.Windows.Int32Rect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Clone\n  id: Clone\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: D3DImage.Clone()\n  fullName: System.Windows.Interop.D3DImage.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public System.Windows.Interop.D3DImage Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Interop.D3DImage\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: D3DImage.CloneCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: D3DImage.CloneCurrentValue()\n  fullName: System.Windows.Interop.D3DImage.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public System.Windows.Interop.D3DImage CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Interop.D3DImage\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: D3DImage.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.CopyBackBuffer\n  id: CopyBackBuffer\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: CopyBackBuffer()\n  nameWithType: D3DImage.CopyBackBuffer()\n  fullName: System.Windows.Interop.D3DImage.CopyBackBuffer()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected virtual System.Windows.Media.Imaging.BitmapSource CopyBackBuffer ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Imaging.BitmapSource\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: D3DImage.CreateInstanceCore()\n  fullName: System.Windows.Interop.D3DImage.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Finalize\n  id: Finalize\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: D3DImage.Finalize()\n  fullName: System.Windows.Interop.D3DImage.Finalize()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: ~D3DImage ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: D3DImage.FreezeCore(Boolean)\n  fullName: System.Windows.Interop.D3DImage.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected override sealed bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: D3DImage.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: D3DImage.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);\n    parameters:\n    - id: sourceFreezable\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Height\n  id: Height\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Height\n  nameWithType: D3DImage.Height\n  fullName: System.Windows.Interop.D3DImage.Height\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public override sealed double Height { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.IsFrontBufferAvailable\n  id: IsFrontBufferAvailable\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: IsFrontBufferAvailable\n  nameWithType: D3DImage.IsFrontBufferAvailable\n  fullName: System.Windows.Interop.D3DImage.IsFrontBufferAvailable\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public bool IsFrontBufferAvailable { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged\n  id: IsFrontBufferAvailableChanged\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: IsFrontBufferAvailableChanged\n  nameWithType: D3DImage.IsFrontBufferAvailableChanged\n  fullName: System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged\n  type: Event\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public event System.Windows.DependencyPropertyChangedEventHandler IsFrontBufferAvailableChanged;\n    return:\n      type: System.Windows.DependencyPropertyChangedEventHandler\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty\n  id: IsFrontBufferAvailableProperty\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: IsFrontBufferAvailableProperty\n  nameWithType: D3DImage.IsFrontBufferAvailableProperty\n  fullName: System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsFrontBufferAvailableProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Lock\n  id: Lock\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Lock()\n  nameWithType: D3DImage.Lock()\n  fullName: System.Windows.Interop.D3DImage.Lock()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public void Lock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Metadata\n  id: Metadata\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Metadata\n  nameWithType: D3DImage.Metadata\n  fullName: System.Windows.Interop.D3DImage.Metadata\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public override sealed System.Windows.Media.ImageMetadata Metadata { get; }\n    return:\n      type: System.Windows.Media.ImageMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.PixelHeight\n  id: PixelHeight\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: PixelHeight\n  nameWithType: D3DImage.PixelHeight\n  fullName: System.Windows.Interop.D3DImage.PixelHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public int PixelHeight { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.PixelWidth\n  id: PixelWidth\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: PixelWidth\n  nameWithType: D3DImage.PixelWidth\n  fullName: System.Windows.Interop.D3DImage.PixelWidth\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public int PixelWidth { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)\n  id: SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: SetBackBuffer(D3DResourceType,IntPtr)\n  nameWithType: D3DImage.SetBackBuffer(D3DResourceType,IntPtr)\n  fullName: System.Windows.Interop.D3DImage.SetBackBuffer(D3DResourceType,IntPtr)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer);\n    parameters:\n    - id: backBufferType\n      type: System.Windows.Interop.D3DResourceType\n      description: Parameter description to be filled\n    - id: backBuffer\n      type: System.IntPtr\n      description: Parameter description to be filled\n  overload: System.Windows.Interop.D3DImage.SetBackBuffer*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)\n  id: SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: SetBackBuffer(D3DResourceType,IntPtr,Boolean)\n  nameWithType: D3DImage.SetBackBuffer(D3DResourceType,IntPtr,Boolean)\n  fullName: System.Windows.Interop.D3DImage.SetBackBuffer(D3DResourceType,IntPtr,Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public void SetBackBuffer (System.Windows.Interop.D3DResourceType backBufferType, IntPtr backBuffer, bool enableSoftwareFallback);\n    parameters:\n    - id: backBufferType\n      type: System.Windows.Interop.D3DResourceType\n      description: Parameter description to be filled\n    - id: backBuffer\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: enableSoftwareFallback\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Interop.D3DImage.SetBackBuffer*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)\n  id: TryLock(System.Windows.Duration)\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: TryLock(Duration)\n  nameWithType: D3DImage.TryLock(Duration)\n  fullName: System.Windows.Interop.D3DImage.TryLock(Duration)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public bool TryLock (System.Windows.Duration timeout);\n    parameters:\n    - id: timeout\n      type: System.Windows.Duration\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Unlock\n  id: Unlock\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Unlock()\n  nameWithType: D3DImage.Unlock()\n  fullName: System.Windows.Interop.D3DImage.Unlock()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public void Unlock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Interop.D3DImage.Width\n  id: Width\n  parent: System.Windows.Interop.D3DImage\n  langs:\n  - csharp\n  name: Width\n  nameWithType: D3DImage.Width\n  fullName: System.Windows.Interop.D3DImage.Width\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Interop\n  syntax:\n    content: public override sealed double Width { get; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.ImageSource\n  isExternal: false\n  name: System.Windows.Media.ImageSource\n- uid: System.Windows.Interop.D3DImage.#ctor\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: D3DImage()\n  nameWithType: D3DImage.D3DImage()\n  fullName: System.Windows.Interop.D3DImage.D3DImage()\n- uid: System.Windows.Interop.D3DImage.#ctor(System.Double,System.Double)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: D3DImage(Double,Double)\n  nameWithType: D3DImage.D3DImage(Double,Double)\n  fullName: System.Windows.Interop.D3DImage.D3DImage(Double,Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Interop.D3DImage.AddDirtyRect(System.Windows.Int32Rect)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: AddDirtyRect(Int32Rect)\n  nameWithType: D3DImage.AddDirtyRect(Int32Rect)\n  fullName: System.Windows.Interop.D3DImage.AddDirtyRect(Int32Rect)\n- uid: System.Windows.Int32Rect\n  parent: System.Windows\n  isExternal: true\n  name: Int32Rect\n  nameWithType: Int32Rect\n  fullName: System.Windows.Int32Rect\n- uid: System.Windows.Interop.D3DImage.Clone\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Clone()\n  nameWithType: D3DImage.Clone()\n  fullName: System.Windows.Interop.D3DImage.Clone()\n- uid: System.Windows.Interop.D3DImage\n  parent: System.Windows.Interop\n  isExternal: false\n  name: D3DImage\n  nameWithType: D3DImage\n  fullName: System.Windows.Interop.D3DImage\n- uid: System.Windows.Interop.D3DImage.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: D3DImage.CloneCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Interop.D3DImage.CloneCurrentValue\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: D3DImage.CloneCurrentValue()\n  fullName: System.Windows.Interop.D3DImage.CloneCurrentValue()\n- uid: System.Windows.Interop.D3DImage\n  parent: System.Windows.Interop\n  isExternal: false\n  name: D3DImage\n  nameWithType: D3DImage\n  fullName: System.Windows.Interop.D3DImage\n- uid: System.Windows.Interop.D3DImage.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: D3DImage.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Interop.D3DImage.CopyBackBuffer\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: CopyBackBuffer()\n  nameWithType: D3DImage.CopyBackBuffer()\n  fullName: System.Windows.Interop.D3DImage.CopyBackBuffer()\n- uid: System.Windows.Media.Imaging.BitmapSource\n  parent: System.Windows.Media.Imaging\n  isExternal: false\n  name: BitmapSource\n  nameWithType: BitmapSource\n  fullName: System.Windows.Media.Imaging.BitmapSource\n- uid: System.Windows.Interop.D3DImage.CreateInstanceCore\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: D3DImage.CreateInstanceCore()\n  fullName: System.Windows.Interop.D3DImage.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Interop.D3DImage.Finalize\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Finalize()\n  nameWithType: D3DImage.Finalize()\n  fullName: System.Windows.Interop.D3DImage.Finalize()\n- uid: System.Windows.Interop.D3DImage.FreezeCore(System.Boolean)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: D3DImage.FreezeCore(Boolean)\n  fullName: System.Windows.Interop.D3DImage.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Interop.D3DImage.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: D3DImage.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: D3DImage.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Interop.D3DImage.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Interop.D3DImage.Height\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Height\n  nameWithType: D3DImage.Height\n  fullName: System.Windows.Interop.D3DImage.Height\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Interop.D3DImage.IsFrontBufferAvailable\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: IsFrontBufferAvailable\n  nameWithType: D3DImage.IsFrontBufferAvailable\n  fullName: System.Windows.Interop.D3DImage.IsFrontBufferAvailable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: IsFrontBufferAvailableChanged\n  nameWithType: D3DImage.IsFrontBufferAvailableChanged\n  fullName: System.Windows.Interop.D3DImage.IsFrontBufferAvailableChanged\n- uid: System.Windows.DependencyPropertyChangedEventHandler\n  parent: System.Windows\n  isExternal: true\n  name: DependencyPropertyChangedEventHandler\n  nameWithType: DependencyPropertyChangedEventHandler\n  fullName: System.Windows.DependencyPropertyChangedEventHandler\n- uid: System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: IsFrontBufferAvailableProperty\n  nameWithType: D3DImage.IsFrontBufferAvailableProperty\n  fullName: System.Windows.Interop.D3DImage.IsFrontBufferAvailableProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Interop.D3DImage.Lock\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Lock()\n  nameWithType: D3DImage.Lock()\n  fullName: System.Windows.Interop.D3DImage.Lock()\n- uid: System.Windows.Interop.D3DImage.Metadata\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Metadata\n  nameWithType: D3DImage.Metadata\n  fullName: System.Windows.Interop.D3DImage.Metadata\n- uid: System.Windows.Media.ImageMetadata\n  parent: System.Windows.Media\n  isExternal: false\n  name: ImageMetadata\n  nameWithType: ImageMetadata\n  fullName: System.Windows.Media.ImageMetadata\n- uid: System.Windows.Interop.D3DImage.PixelHeight\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: PixelHeight\n  nameWithType: D3DImage.PixelHeight\n  fullName: System.Windows.Interop.D3DImage.PixelHeight\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Interop.D3DImage.PixelWidth\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: PixelWidth\n  nameWithType: D3DImage.PixelWidth\n  fullName: System.Windows.Interop.D3DImage.PixelWidth\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: SetBackBuffer(D3DResourceType,IntPtr)\n  nameWithType: D3DImage.SetBackBuffer(D3DResourceType,IntPtr)\n  fullName: System.Windows.Interop.D3DImage.SetBackBuffer(D3DResourceType,IntPtr)\n- uid: System.Windows.Interop.D3DResourceType\n  parent: System.Windows.Interop\n  isExternal: false\n  name: D3DResourceType\n  nameWithType: D3DResourceType\n  fullName: System.Windows.Interop.D3DResourceType\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Windows.Interop.D3DImage.SetBackBuffer(System.Windows.Interop.D3DResourceType,System.IntPtr,System.Boolean)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: SetBackBuffer(D3DResourceType,IntPtr,Boolean)\n  nameWithType: D3DImage.SetBackBuffer(D3DResourceType,IntPtr,Boolean)\n  fullName: System.Windows.Interop.D3DImage.SetBackBuffer(D3DResourceType,IntPtr,Boolean)\n- uid: System.Windows.Interop.D3DResourceType\n  parent: System.Windows.Interop\n  isExternal: false\n  name: D3DResourceType\n  nameWithType: D3DResourceType\n  fullName: System.Windows.Interop.D3DResourceType\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Interop.D3DImage.TryLock(System.Windows.Duration)\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: TryLock(Duration)\n  nameWithType: D3DImage.TryLock(Duration)\n  fullName: System.Windows.Interop.D3DImage.TryLock(Duration)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Interop.D3DImage.Unlock\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Unlock()\n  nameWithType: D3DImage.Unlock()\n  fullName: System.Windows.Interop.D3DImage.Unlock()\n- uid: System.Windows.Interop.D3DImage.Width\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  name: Width\n  nameWithType: D3DImage.Width\n  fullName: System.Windows.Interop.D3DImage.Width\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Interop.D3DImage.SetBackBuffer*\n  parent: System.Windows.Interop.D3DImage\n  isExternal: false\n  nameWithType: D3DImage.\n"}