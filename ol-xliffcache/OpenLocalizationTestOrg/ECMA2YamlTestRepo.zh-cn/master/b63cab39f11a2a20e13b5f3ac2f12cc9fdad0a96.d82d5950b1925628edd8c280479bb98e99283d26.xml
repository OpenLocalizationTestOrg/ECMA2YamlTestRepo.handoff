{"nodes":[{"pos":[1048,1074],"content":"ManipulationDeltaEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationDeltaEventArgs","pos":[0,26]}]},{"pos":[2320,2328],"content":"Cancel()","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel()","pos":[0,8]}]},{"pos":[2657,2691],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2906,2916],"content":"Complete()","needQuote":true,"needEscape":true,"nodes":[{"content":"Complete()","pos":[0,10]}]},{"pos":[3435,3457],"content":"CumulativeManipulation","needQuote":true,"needEscape":true,"nodes":[{"content":"CumulativeManipulation","pos":[0,22]}]},{"pos":[3876,3910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4143,4160],"content":"DeltaManipulation","needQuote":true,"needEscape":true,"nodes":[{"content":"DeltaManipulation","pos":[0,17]}]},{"pos":[4564,4598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4895,4930],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[5393,5427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5497,5531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5750,5760],"content":"IsInertial","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInertial","pos":[0,10]}]},{"pos":[6085,6119],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6360,6381],"content":"ManipulationContainer","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationContainer","pos":[0,21]}]},{"pos":[6777,6811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7046,7064],"content":"ManipulationOrigin","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationOrigin","pos":[0,18]}]},{"pos":[7435,7469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7692,7704],"content":"Manipulators","needQuote":true,"needEscape":true,"nodes":[{"content":"Manipulators","pos":[0,12]}]},{"pos":[8163,8197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8520,8561],"content":"ReportBoundaryFeedback(ManipulationDelta)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportBoundaryFeedback(ManipulationDelta)","pos":[0,41]}]},{"pos":[9067,9101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9324,9338],"content":"StartInertia()","needQuote":true,"needEscape":true,"nodes":[{"content":"StartInertia()","pos":[0,14]}]},{"pos":[9845,9855],"content":"Velocities","needQuote":true,"needEscape":true,"nodes":[{"content":"Velocities","pos":[0,10]}]},{"pos":[10248,10282],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10415,10450],"content":"System.Windows.Input.InputEventArgs","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Input.InputEventArgs","pos":[0,35]}]},{"pos":[10599,10607],"content":"Cancel()","needQuote":true,"needEscape":true,"nodes":[{"content":"Cancel()","pos":[0,8]}]},{"pos":[10796,10803],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11005,11015],"content":"Complete()","needQuote":true,"needEscape":true,"nodes":[{"content":"Complete()","pos":[0,10]}]},{"pos":[11305,11327],"content":"CumulativeManipulation","needQuote":true,"needEscape":true,"nodes":[{"content":"CumulativeManipulation","pos":[0,22]}]},{"pos":[11582,11599],"content":"ManipulationDelta","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationDelta","pos":[0,17]}]},{"pos":[11844,11861],"content":"DeltaManipulation","needQuote":true,"needEscape":true,"nodes":[{"content":"DeltaManipulation","pos":[0,17]}]},{"pos":[12106,12123],"content":"ManipulationDelta","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationDelta","pos":[0,17]}]},{"pos":[12400,12435],"content":"InvokeEventHandler(Delegate,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"InvokeEventHandler(Delegate,Object)","pos":[0,35]}]},{"pos":[12679,12687],"content":"Delegate","needQuote":true,"needEscape":true,"nodes":[{"content":"Delegate","pos":[0,8]}]},{"pos":[12807,12813],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[13015,13025],"content":"IsInertial","needQuote":true,"needEscape":true,"nodes":[{"content":"IsInertial","pos":[0,10]}]},{"pos":[13218,13225],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13440,13461],"content":"ManipulationContainer","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationContainer","pos":[0,21]}]},{"pos":[13698,13711],"content":"IInputElement","needQuote":true,"needEscape":true,"nodes":[{"content":"IInputElement","pos":[0,13]}]},{"pos":[13943,13961],"content":"ManipulationOrigin","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationOrigin","pos":[0,18]}]},{"pos":[14183,14188],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[14398,14410],"content":"Manipulators","needQuote":true,"needEscape":true,"nodes":[{"content":"Manipulators","pos":[0,12]}]},{"pos":[14686,14711],"content":"IEnumerable<ph id=\"ph1\">&lt;IManipulator&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<IManipulator>"},{"pos":[15044,15085],"content":"ReportBoundaryFeedback(ManipulationDelta)","needQuote":true,"needEscape":true,"nodes":[{"content":"ReportBoundaryFeedback(ManipulationDelta)","pos":[0,41]}]},{"pos":[15378,15395],"content":"ManipulationDelta","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationDelta","pos":[0,17]}]},{"pos":[15635,15649],"content":"StartInertia()","needQuote":true,"needEscape":true,"nodes":[{"content":"StartInertia()","pos":[0,14]}]},{"pos":[15935,15945],"content":"Velocities","needQuote":true,"needEscape":true,"nodes":[{"content":"Velocities","pos":[0,10]}]},{"pos":[16181,16203],"content":"ManipulationVelocities","needQuote":true,"needEscape":true,"nodes":[{"content":"ManipulationVelocities","pos":[0,22]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Input.ManipulationDeltaEventArgs\n  id: ManipulationDeltaEventArgs\n  children:\n  - System.Windows.Input.ManipulationDeltaEventArgs.Cancel\n  - System.Windows.Input.ManipulationDeltaEventArgs.Complete\n  - System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation\n  - System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation\n  - System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  - System.Windows.Input.ManipulationDeltaEventArgs.IsInertial\n  - System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer\n  - System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin\n  - System.Windows.Input.ManipulationDeltaEventArgs.Manipulators\n  - System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)\n  - System.Windows.Input.ManipulationDeltaEventArgs.StartInertia\n  - System.Windows.Input.ManipulationDeltaEventArgs.Velocities\n  langs:\n  - csharp\n  name: ManipulationDeltaEventArgs\n  nameWithType: ManipulationDeltaEventArgs\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs\n  type: Class\n  syntax:\n    content: 'public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  - System.Windows.RoutedEventArgs\n  - System.Windows.Input.InputEventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.Input.InputEventArgs.Device\n  - System.Windows.Input.InputEventArgs.Timestamp\n  - System.Windows.RoutedEventArgs.Handled\n  - System.Windows.RoutedEventArgs.OnSetSource(System.Object)\n  - System.Windows.RoutedEventArgs.OriginalSource\n  - System.Windows.RoutedEventArgs.RoutedEvent\n  - System.Windows.RoutedEventArgs.Source\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Cancel\n  id: Cancel\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: Cancel()\n  nameWithType: ManipulationDeltaEventArgs.Cancel()\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Cancel()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public bool Cancel ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Complete\n  id: Complete\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: Complete()\n  nameWithType: ManipulationDeltaEventArgs.Complete()\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Complete()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public void Complete ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation\n  id: CumulativeManipulation\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: CumulativeManipulation\n  nameWithType: ManipulationDeltaEventArgs.CumulativeManipulation\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }\n    return:\n      type: System.Windows.Input.ManipulationDelta\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation\n  id: DeltaManipulation\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: DeltaManipulation\n  nameWithType: ManipulationDeltaEventArgs.DeltaManipulation\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }\n    return:\n      type: System.Windows.Input.ManipulationDelta\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  id: InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationDeltaEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(Delegate,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);\n    parameters:\n    - id: genericHandler\n      type: System.Delegate\n      description: Parameter description to be filled\n    - id: genericTarget\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial\n  id: IsInertial\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: IsInertial\n  nameWithType: ManipulationDeltaEventArgs.IsInertial\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public bool IsInertial { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer\n  id: ManipulationContainer\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: ManipulationContainer\n  nameWithType: ManipulationDeltaEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.IInputElement ManipulationContainer { get; }\n    return:\n      type: System.Windows.IInputElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin\n  id: ManipulationOrigin\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: ManipulationOrigin\n  nameWithType: ManipulationDeltaEventArgs.ManipulationOrigin\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Point ManipulationOrigin { get; }\n    return:\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators\n  id: Manipulators\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: Manipulators\n  nameWithType: ManipulationDeltaEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator> Manipulators { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)\n  id: ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: ReportBoundaryFeedback(ManipulationDelta)\n  nameWithType: ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);\n    parameters:\n    - id: unusedManipulation\n      type: System.Windows.Input.ManipulationDelta\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia\n  id: StartInertia\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: StartInertia()\n  nameWithType: ManipulationDeltaEventArgs.StartInertia()\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public void StartInertia ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Velocities\n  id: Velocities\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  langs:\n  - csharp\n  name: Velocities\n  nameWithType: ManipulationDeltaEventArgs.Velocities\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Velocities\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Input\n  syntax:\n    content: public System.Windows.Input.ManipulationVelocities Velocities { get; }\n    return:\n      type: System.Windows.Input.ManipulationVelocities\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Input.InputEventArgs\n  isExternal: false\n  name: System.Windows.Input.InputEventArgs\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Cancel\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: Cancel()\n  nameWithType: ManipulationDeltaEventArgs.Cancel()\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Cancel()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Complete\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: Complete()\n  nameWithType: ManipulationDeltaEventArgs.Complete()\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Complete()\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: CumulativeManipulation\n  nameWithType: ManipulationDeltaEventArgs.CumulativeManipulation\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation\n- uid: System.Windows.Input.ManipulationDelta\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: DeltaManipulation\n  nameWithType: ManipulationDeltaEventArgs.DeltaManipulation\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation\n- uid: System.Windows.Input.ManipulationDelta\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: InvokeEventHandler(Delegate,Object)\n  nameWithType: ManipulationDeltaEventArgs.InvokeEventHandler(Delegate,Object)\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(Delegate,Object)\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: IsInertial\n  nameWithType: ManipulationDeltaEventArgs.IsInertial\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.IsInertial\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: ManipulationContainer\n  nameWithType: ManipulationDeltaEventArgs.ManipulationContainer\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer\n- uid: System.Windows.IInputElement\n  parent: System.Windows\n  isExternal: false\n  name: IInputElement\n  nameWithType: IInputElement\n  fullName: System.Windows.IInputElement\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: ManipulationOrigin\n  nameWithType: ManipulationDeltaEventArgs.ManipulationOrigin\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: Manipulators\n  nameWithType: ManipulationDeltaEventArgs.Manipulators\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Manipulators\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Input.IManipulator}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<IManipulator>\n  nameWithType: IEnumerable<IManipulator>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Input.IManipulator>\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: ReportBoundaryFeedback(ManipulationDelta)\n  nameWithType: ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(ManipulationDelta)\n- uid: System.Windows.Input.ManipulationDelta\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationDelta\n  nameWithType: ManipulationDelta\n  fullName: System.Windows.Input.ManipulationDelta\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: StartInertia()\n  nameWithType: ManipulationDeltaEventArgs.StartInertia()\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.StartInertia()\n- uid: System.Windows.Input.ManipulationDeltaEventArgs.Velocities\n  parent: System.Windows.Input.ManipulationDeltaEventArgs\n  isExternal: false\n  name: Velocities\n  nameWithType: ManipulationDeltaEventArgs.Velocities\n  fullName: System.Windows.Input.ManipulationDeltaEventArgs.Velocities\n- uid: System.Windows.Input.ManipulationVelocities\n  parent: System.Windows.Input\n  isExternal: false\n  name: ManipulationVelocities\n  nameWithType: ManipulationVelocities\n  fullName: System.Windows.Input.ManipulationVelocities\n"}