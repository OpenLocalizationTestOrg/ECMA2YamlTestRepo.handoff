{"nodes":[{"pos":[703,721],"content":"ThicknessConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessConverter","pos":[0,18]}]},{"pos":[1189,1209],"content":"ThicknessConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessConverter()","pos":[0,20]}]},{"pos":[1807,1850],"content":"CanConvertFrom(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext,Type)","pos":[0,43]}]},{"pos":[2373,2407],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2472,2506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2565,2599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2910,2951],"content":"CanConvertTo(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext,Type)","pos":[0,41]}]},{"pos":[3473,3507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3577,3611],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3670,3704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4083,4137],"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","pos":[0,54]}]},{"pos":[4725,4759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4846,4880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4943,4977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5035,5069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5468,5525],"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","pos":[0,57]}]},{"pos":[6138,6172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6259,6293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6355,6389],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6459,6493],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6551,6585],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6718,6753],"content":"System.ComponentModel.TypeConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ComponentModel.TypeConverter","pos":[0,35]}]},{"pos":[6873,6893],"content":"ThicknessConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessConverter()","pos":[0,20]}]},{"pos":[7203,7246],"content":"CanConvertFrom(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertFrom(ITypeDescriptorContext,Type)","pos":[0,43]}]},{"pos":[7483,7490],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7653,7675],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[7836,7840],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[8070,8111],"content":"CanConvertTo(ITypeDescriptorContext,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"CanConvertTo(ITypeDescriptorContext,Type)","pos":[0,41]}]},{"pos":[8344,8351],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8514,8536],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[8697,8701],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[8965,9019],"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)","pos":[0,54]}]},{"pos":[9277,9283],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9444,9466],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[9662,9673],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[9813,9819],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10097,10154],"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)","pos":[0,57]}]},{"pos":[10418,10424],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[10585,10607],"content":"ITypeDescriptorContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ITypeDescriptorContext","pos":[0,22]}]},{"pos":[10803,10814],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[10954,10960],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[11074,11078],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.ThicknessConverter\n  id: ThicknessConverter\n  children:\n  - System.Windows.ThicknessConverter.#ctor\n  - System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: ThicknessConverter\n  nameWithType: ThicknessConverter\n  fullName: System.Windows.ThicknessConverter\n  type: Class\n  syntax:\n    content: 'public class ThicknessConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.ThicknessConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.ThicknessConverter\n  langs:\n  - csharp\n  name: ThicknessConverter()\n  nameWithType: ThicknessConverter.ThicknessConverter()\n  fullName: System.Windows.ThicknessConverter.ThicknessConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public ThicknessConverter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ThicknessConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ThicknessConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ThicknessConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: sourceType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ThicknessConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ThicknessConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ThicknessConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: destinationType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.ThicknessConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ThicknessConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.ThicknessConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: source\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.ThicknessConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ThicknessConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.ThicknessConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  syntax:\n    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Parameter description to be filled\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: destinationType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: System.ComponentModel.TypeConverter\n- uid: System.Windows.ThicknessConverter.#ctor\n  parent: System.Windows.ThicknessConverter\n  isExternal: false\n  name: ThicknessConverter()\n  nameWithType: ThicknessConverter.ThicknessConverter()\n  fullName: System.Windows.ThicknessConverter.ThicknessConverter()\n- uid: System.Windows.ThicknessConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ThicknessConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext,Type)\n  nameWithType: ThicknessConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ThicknessConverter.CanConvertFrom(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.ThicknessConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.ThicknessConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext,Type)\n  nameWithType: ThicknessConverter.CanConvertTo(ITypeDescriptorContext,Type)\n  fullName: System.Windows.ThicknessConverter.CanConvertTo(ITypeDescriptorContext,Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.ThicknessConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.ThicknessConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  nameWithType: ThicknessConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n  fullName: System.Windows.ThicknessConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.ThicknessConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.ThicknessConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  nameWithType: ThicknessConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n  fullName: System.Windows.ThicknessConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: true\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}