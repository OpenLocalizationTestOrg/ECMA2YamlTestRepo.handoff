{"nodes":[{"pos":[476,486],"content":"MethodBody","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBody","pos":[0,10]}]},{"pos":[1198,1210],"content":"MethodBody()","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBody()","pos":[0,12]}]},{"pos":[1658,1682],"content":"ExceptionHandlingClauses","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionHandlingClauses","pos":[0,24]}]},{"pos":[2143,2177],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2370,2388],"content":"GetILAsByteArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetILAsByteArray()","pos":[0,18]}]},{"pos":[2710,2744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2925,2935],"content":"InitLocals","needQuote":true,"needEscape":true,"nodes":[{"content":"InitLocals","pos":[0,10]}]},{"pos":[3222,3256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3471,3498],"content":"LocalSignatureMetadataToken","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalSignatureMetadataToken","pos":[0,27]}]},{"pos":[3833,3867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4056,4070],"content":"LocalVariables","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalVariables","pos":[0,14]}]},{"pos":[4489,4523],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4708,4720],"content":"MaxStackSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxStackSize","pos":[0,12]}]},{"pos":[5010,5044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5155,5168],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5278,5290],"content":"MethodBody()","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBody()","pos":[0,12]}]},{"pos":[5513,5537],"content":"ExceptionHandlingClauses","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionHandlingClauses","pos":[0,24]}]},{"pos":[5804,5834],"content":"IList<ph id=\"ph1\">&lt;ExceptionHandlingClause&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<ExceptionHandlingClause>"},{"pos":[6090,6108],"content":"GetILAsByteArray()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetILAsByteArray()","pos":[0,18]}]},{"pos":[6279,6283],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6445,6455],"content":"InitLocals","needQuote":true,"needEscape":true,"nodes":[{"content":"InitLocals","pos":[0,10]}]},{"pos":[6613,6620],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6803,6830],"content":"LocalSignatureMetadataToken","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalSignatureMetadataToken","pos":[0,27]}]},{"pos":[7020,7025],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7191,7205],"content":"LocalVariables","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalVariables","pos":[0,14]}]},{"pos":[7446,7470],"content":"IList<ph id=\"ph1\">&lt;LocalVariableInfo&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<LocalVariableInfo>"},{"pos":[7710,7722],"content":"MaxStackSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxStackSize","pos":[0,12]}]},{"pos":[7882,7887],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.MethodBody\n  id: MethodBody\n  children:\n  - System.Reflection.MethodBody.#ctor\n  - System.Reflection.MethodBody.ExceptionHandlingClauses\n  - System.Reflection.MethodBody.GetILAsByteArray\n  - System.Reflection.MethodBody.InitLocals\n  - System.Reflection.MethodBody.LocalSignatureMetadataToken\n  - System.Reflection.MethodBody.LocalVariables\n  - System.Reflection.MethodBody.MaxStackSize\n  langs:\n  - csharp\n  name: MethodBody\n  nameWithType: MethodBody\n  fullName: System.Reflection.MethodBody\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MethodBody\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.#ctor\n  id: '#ctor'\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: MethodBody()\n  nameWithType: MethodBody.MethodBody()\n  fullName: System.Reflection.MethodBody.MethodBody()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected MethodBody ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.ExceptionHandlingClauses\n  id: ExceptionHandlingClauses\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: ExceptionHandlingClauses\n  nameWithType: MethodBody.ExceptionHandlingClauses\n  fullName: System.Reflection.MethodBody.ExceptionHandlingClauses\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IList<System.Reflection.ExceptionHandlingClause> ExceptionHandlingClauses { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.ExceptionHandlingClause}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.GetILAsByteArray\n  id: GetILAsByteArray\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: GetILAsByteArray()\n  nameWithType: MethodBody.GetILAsByteArray()\n  fullName: System.Reflection.MethodBody.GetILAsByteArray()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual byte[] GetILAsByteArray ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.InitLocals\n  id: InitLocals\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: InitLocals\n  nameWithType: MethodBody.InitLocals\n  fullName: System.Reflection.MethodBody.InitLocals\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool InitLocals { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.LocalSignatureMetadataToken\n  id: LocalSignatureMetadataToken\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: LocalSignatureMetadataToken\n  nameWithType: MethodBody.LocalSignatureMetadataToken\n  fullName: System.Reflection.MethodBody.LocalSignatureMetadataToken\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int LocalSignatureMetadataToken { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.LocalVariables\n  id: LocalVariables\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: LocalVariables\n  nameWithType: MethodBody.LocalVariables\n  fullName: System.Reflection.MethodBody.LocalVariables\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IList<System.Reflection.LocalVariableInfo> LocalVariables { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.LocalVariableInfo}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.MethodBody.MaxStackSize\n  id: MaxStackSize\n  parent: System.Reflection.MethodBody\n  langs:\n  - csharp\n  name: MaxStackSize\n  nameWithType: MethodBody.MaxStackSize\n  fullName: System.Reflection.MethodBody.MaxStackSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int MaxStackSize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.MethodBody.#ctor\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: MethodBody()\n  nameWithType: MethodBody.MethodBody()\n  fullName: System.Reflection.MethodBody.MethodBody()\n- uid: System.Reflection.MethodBody.ExceptionHandlingClauses\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: ExceptionHandlingClauses\n  nameWithType: MethodBody.ExceptionHandlingClauses\n  fullName: System.Reflection.MethodBody.ExceptionHandlingClauses\n- uid: System.Collections.Generic.IList{System.Reflection.ExceptionHandlingClause}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<ExceptionHandlingClause>\n  nameWithType: IList<ExceptionHandlingClause>\n  fullName: System.Collections.Generic.IList<System.Reflection.ExceptionHandlingClause>\n- uid: System.Reflection.MethodBody.GetILAsByteArray\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: GetILAsByteArray()\n  nameWithType: MethodBody.GetILAsByteArray()\n  fullName: System.Reflection.MethodBody.GetILAsByteArray()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Reflection.MethodBody.InitLocals\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: InitLocals\n  nameWithType: MethodBody.InitLocals\n  fullName: System.Reflection.MethodBody.InitLocals\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MethodBody.LocalSignatureMetadataToken\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: LocalSignatureMetadataToken\n  nameWithType: MethodBody.LocalSignatureMetadataToken\n  fullName: System.Reflection.MethodBody.LocalSignatureMetadataToken\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.MethodBody.LocalVariables\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: LocalVariables\n  nameWithType: MethodBody.LocalVariables\n  fullName: System.Reflection.MethodBody.LocalVariables\n- uid: System.Collections.Generic.IList{System.Reflection.LocalVariableInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<LocalVariableInfo>\n  nameWithType: IList<LocalVariableInfo>\n  fullName: System.Collections.Generic.IList<System.Reflection.LocalVariableInfo>\n- uid: System.Reflection.MethodBody.MaxStackSize\n  parent: System.Reflection.MethodBody\n  isExternal: false\n  name: MaxStackSize\n  nameWithType: MethodBody.MaxStackSize\n  fullName: System.Reflection.MethodBody.MaxStackSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}