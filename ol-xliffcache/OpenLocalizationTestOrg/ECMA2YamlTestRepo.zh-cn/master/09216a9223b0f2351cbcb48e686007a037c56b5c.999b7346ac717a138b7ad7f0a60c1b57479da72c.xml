{"nodes":[{"pos":[542,578],"content":"DirectoryServicesPermissionAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryServicesPermissionAttribute","pos":[0,36]}]},{"pos":[5397,5449],"content":"DirectoryServicesPermissionAttribute(SecurityAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryServicesPermissionAttribute(SecurityAction)","pos":[0,52]}]},{"pos":[6011,6045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6304,6322],"content":"CreatePermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreatePermission()","pos":[0,18]}]},{"pos":[6762,6796],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7031,7035],"content":"Path","needQuote":true,"needEscape":true,"nodes":[{"content":"Path","pos":[0,4]}]},{"pos":[7384,7418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7677,7693],"content":"PermissionAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionAccess","pos":[0,16]}]},{"pos":[8175,8209],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8362,8417],"content":"System.Security.Permissions.CodeAccessSecurityAttribute","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Permissions.CodeAccessSecurityAttribute","pos":[0,55]}]},{"pos":[8637,8689],"content":"DirectoryServicesPermissionAttribute(SecurityAction)","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryServicesPermissionAttribute(SecurityAction)","pos":[0,52]}]},{"pos":[9039,9053],"content":"SecurityAction","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityAction","pos":[0,14]}]},{"pos":[9326,9344],"content":"CreatePermission()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreatePermission()","pos":[0,18]}]},{"pos":[9599,9610],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[9853,9857],"content":"Path","needQuote":true,"needEscape":true,"nodes":[{"content":"Path","pos":[0,4]}]},{"pos":[10061,10067],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10303,10319],"content":"PermissionAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionAccess","pos":[0,16]}]},{"pos":[10610,10643],"content":"DirectoryServicesPermissionAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryServicesPermissionAccess","pos":[0,33]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  id: DirectoryServicesPermissionAttribute\n  children:\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  - System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  langs:\n  - csharp\n  name: DirectoryServicesPermissionAttribute\n  nameWithType: DirectoryServicesPermissionAttribute\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  type: Class\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Event, AllowMultiple=true, Inherited=false)]\n\n      public class DirectoryServicesPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - System.Security.Permissions.SecurityAttribute\n  - System.Security.Permissions.CodeAccessSecurityAttribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Permissions.SecurityAttribute.Action\n  - System.Security.Permissions.SecurityAttribute.Unrestricted\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  id: '#ctor(System.Security.Permissions.SecurityAction)'\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: DirectoryServicesPermissionAttribute(SecurityAction)\n  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public DirectoryServicesPermissionAttribute (System.Security.Permissions.SecurityAction action);\n    parameters:\n    - id: action\n      type: System.Security.Permissions.SecurityAction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission\n  id: CreatePermission\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: CreatePermission()\n  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission()\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public override System.Security.IPermission CreatePermission ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  id: Path\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: Path\n  nameWithType: DirectoryServicesPermissionAttribute.Path\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public string Path { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  id: PermissionAccess\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  langs:\n  - csharp\n  name: PermissionAccess\n  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.DirectoryServices.DirectoryServicesPermissionAccess PermissionAccess { get; set; }\n    return:\n      type: System.DirectoryServices.DirectoryServicesPermissionAccess\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Permissions.CodeAccessSecurityAttribute\n  isExternal: false\n  name: System.Security.Permissions.CodeAccessSecurityAttribute\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: DirectoryServicesPermissionAttribute(SecurityAction)\n  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)\n- uid: System.Security.Permissions.SecurityAction\n  parent: System.Security.Permissions\n  isExternal: false\n  name: SecurityAction\n  nameWithType: SecurityAction\n  fullName: System.Security.Permissions.SecurityAction\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: CreatePermission()\n  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission()\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: Path\n  nameWithType: DirectoryServicesPermissionAttribute.Path\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute\n  isExternal: false\n  name: PermissionAccess\n  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess\n- uid: System.DirectoryServices.DirectoryServicesPermissionAccess\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryServicesPermissionAccess\n  nameWithType: DirectoryServicesPermissionAccess\n  fullName: System.DirectoryServices.DirectoryServicesPermissionAccess\n"}