{"nodes":[{"pos":[924,939],"content":"XamlTaskFactory","needQuote":true,"needEscape":true,"nodes":[{"content":"XamlTaskFactory","pos":[0,15]}]},{"pos":[1705,1722],"content":"XamlTaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"XamlTaskFactory()","pos":[0,17]}]},{"pos":[2276,2294],"content":"CleanupTask(ITask)","needQuote":true,"needEscape":true,"nodes":[{"content":"CleanupTask(ITask)","pos":[0,18]}]},{"pos":[2691,2725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3004,3028],"content":"CreateTask(IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTask(IBuildEngine)","pos":[0,24]}]},{"pos":[3513,3547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3623,3657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3858,3869],"content":"FactoryName","needQuote":true,"needEscape":true,"nodes":[{"content":"FactoryName","pos":[0,11]}]},{"pos":[4188,4222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4435,4454],"content":"GetTaskParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTaskParameters()","pos":[0,19]}]},{"pos":[4876,4910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5439,5514],"content":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(String,IDictionary&lt;String,TaskPropertyInfo&gt;,String,IBuildEngine)","pos":[0,75],"source":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)"}]},{"pos":[6186,6220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6374,6408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6484,6518],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6622,6656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6715,6749],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6966,6985],"content":"TaskElementContents","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskElementContents","pos":[0,19]}]},{"pos":[7328,7362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7557,7565],"content":"TaskName","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskName","pos":[0,8]}]},{"pos":[7875,7909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8114,8127],"content":"TaskNamespace","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskNamespace","pos":[0,13]}]},{"pos":[8452,8486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8681,8689],"content":"TaskType","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskType","pos":[0,8]}]},{"pos":[8995,9029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9140,9153],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[9281,9298],"content":"XamlTaskFactory()","needQuote":true,"needEscape":true,"nodes":[{"content":"XamlTaskFactory()","pos":[0,17]}]},{"pos":[9583,9601],"content":"CleanupTask(ITask)","needQuote":true,"needEscape":true,"nodes":[{"content":"CleanupTask(ITask)","pos":[0,18]}]},{"pos":[9825,9830],"content":"ITask","needQuote":true,"needEscape":true,"nodes":[{"content":"ITask","pos":[0,5]}]},{"pos":[10069,10093],"content":"CreateTask(IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTask(IBuildEngine)","pos":[0,24]}]},{"pos":[10329,10334],"content":"ITask","needQuote":true,"needEscape":true,"nodes":[{"content":"ITask","pos":[0,5]}]},{"pos":[10511,10523],"content":"IBuildEngine","needQuote":true,"needEscape":true,"nodes":[{"content":"IBuildEngine","pos":[0,12]}]},{"pos":[10737,10748],"content":"FactoryName","needQuote":true,"needEscape":true,"nodes":[{"content":"FactoryName","pos":[0,11]}]},{"pos":[10921,10927],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[11116,11135],"content":"GetTaskParameters()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTaskParameters()","pos":[0,19]}]},{"pos":[11372,11388],"content":"TaskPropertyInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskPropertyInfo","pos":[0,16]}]},{"pos":[11776,11851],"content":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize(String,IDictionary&lt;String,TaskPropertyInfo&gt;,String,IBuildEngine)","pos":[0,75],"source":"Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)"}]},{"pos":[12153,12160],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[12278,12284],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12503,12539],"content":"IDictionary<String,TaskPropertyInfo>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;String,TaskPropertyInfo&gt;","pos":[0,36],"source":"IDictionary<String,TaskPropertyInfo>"}]},{"pos":[12768,12774],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12934,12946],"content":"IBuildEngine","needQuote":true,"needEscape":true,"nodes":[{"content":"IBuildEngine","pos":[0,12]}]},{"pos":[13168,13187],"content":"TaskElementContents","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskElementContents","pos":[0,19]}]},{"pos":[13376,13382],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13562,13570],"content":"TaskName","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskName","pos":[0,8]}]},{"pos":[13737,13743],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13928,13941],"content":"TaskNamespace","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskNamespace","pos":[0,13]}]},{"pos":[14118,14124],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14304,14312],"content":"TaskType","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskType","pos":[0,8]}]},{"pos":[14477,14481],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.Build.Tasks.XamlTaskFactory\n  id: XamlTaskFactory\n  children:\n  - Microsoft.Build.Tasks.XamlTaskFactory.#ctor\n  - Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  - Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  - Microsoft.Build.Tasks.XamlTaskFactory.FactoryName\n  - Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters\n  - Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  - Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents\n  - Microsoft.Build.Tasks.XamlTaskFactory.TaskName\n  - Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace\n  - Microsoft.Build.Tasks.XamlTaskFactory.TaskType\n  langs:\n  - csharp\n  name: XamlTaskFactory\n  nameWithType: XamlTaskFactory\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory\n  type: Class\n  syntax:\n    content: 'public class XamlTaskFactory : Microsoft.Build.Framework.ITaskFactory'\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.Build.Framework.ITaskFactory\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.#ctor\n  id: '#ctor'\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: XamlTaskFactory()\n  nameWithType: XamlTaskFactory.XamlTaskFactory()\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.XamlTaskFactory()\n  type: Constructor\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public XamlTaskFactory ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  id: CleanupTask(Microsoft.Build.Framework.ITask)\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: CleanupTask(ITask)\n  nameWithType: XamlTaskFactory.CleanupTask(ITask)\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(ITask)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public void CleanupTask (Microsoft.Build.Framework.ITask task);\n    parameters:\n    - id: task\n      type: Microsoft.Build.Framework.ITask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  id: CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: CreateTask(IBuildEngine)\n  nameWithType: XamlTaskFactory.CreateTask(IBuildEngine)\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(IBuildEngine)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public Microsoft.Build.Framework.ITask CreateTask (Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);\n    parameters:\n    - id: taskFactoryLoggingHost\n      type: Microsoft.Build.Framework.IBuildEngine\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.Build.Framework.ITask\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName\n  id: FactoryName\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: FactoryName\n  nameWithType: XamlTaskFactory.FactoryName\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public string FactoryName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters\n  id: GetTaskParameters\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: GetTaskParameters()\n  nameWithType: XamlTaskFactory.GetTaskParameters()\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters()\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public Microsoft.Build.Framework.TaskPropertyInfo[] GetTaskParameters ();\n    parameters: []\n    return:\n      type: Microsoft.Build.Framework.TaskPropertyInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  id: Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  nameWithType: XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  type: Method\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public bool Initialize (string taskName, System.Collections.Generic.IDictionary<string,Microsoft.Build.Framework.TaskPropertyInfo> taskParameters, string taskElementContents, Microsoft.Build.Framework.IBuildEngine taskFactoryLoggingHost);\n    parameters:\n    - id: taskName\n      type: System.String\n      description: Parameter description to be filled\n    - id: taskParameters\n      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}\n      description: Parameter description to be filled\n    - id: taskElementContents\n      type: System.String\n      description: Parameter description to be filled\n    - id: taskFactoryLoggingHost\n      type: Microsoft.Build.Framework.IBuildEngine\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents\n  id: TaskElementContents\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: TaskElementContents\n  nameWithType: XamlTaskFactory.TaskElementContents\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public string TaskElementContents { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskName\n  id: TaskName\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: TaskName\n  nameWithType: XamlTaskFactory.TaskName\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskName\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public string TaskName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace\n  id: TaskNamespace\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: TaskNamespace\n  nameWithType: XamlTaskFactory.TaskNamespace\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public string TaskNamespace { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskType\n  id: TaskType\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  langs:\n  - csharp\n  name: TaskType\n  nameWithType: XamlTaskFactory.TaskType\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskType\n  type: Property\n  assemblies:\n  - Microsoft.Build.Tasks.v4.0\n  namespace: Microsoft.Build.Tasks\n  syntax:\n    content: public Type TaskType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.#ctor\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: XamlTaskFactory()\n  nameWithType: XamlTaskFactory.XamlTaskFactory()\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.XamlTaskFactory()\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(Microsoft.Build.Framework.ITask)\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: CleanupTask(ITask)\n  nameWithType: XamlTaskFactory.CleanupTask(ITask)\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CleanupTask(ITask)\n- uid: Microsoft.Build.Framework.ITask\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITask\n  nameWithType: ITask\n  fullName: Microsoft.Build.Framework.ITask\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: CreateTask(IBuildEngine)\n  nameWithType: XamlTaskFactory.CreateTask(IBuildEngine)\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.CreateTask(IBuildEngine)\n- uid: Microsoft.Build.Framework.ITask\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: ITask\n  nameWithType: ITask\n  fullName: Microsoft.Build.Framework.ITask\n- uid: Microsoft.Build.Framework.IBuildEngine\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine\n  nameWithType: IBuildEngine\n  fullName: Microsoft.Build.Framework.IBuildEngine\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: FactoryName\n  nameWithType: XamlTaskFactory.FactoryName\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.FactoryName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: GetTaskParameters()\n  nameWithType: XamlTaskFactory.GetTaskParameters()\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.GetTaskParameters()\n- uid: Microsoft.Build.Framework.TaskPropertyInfo\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: TaskPropertyInfo\n  nameWithType: TaskPropertyInfo\n  fullName: Microsoft.Build.Framework.TaskPropertyInfo[]\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(System.String,System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo},System.String,Microsoft.Build.Framework.IBuildEngine)\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  nameWithType: XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.Initialize(String,IDictionary<String,TaskPropertyInfo>,String,IBuildEngine)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Framework.TaskPropertyInfo}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,TaskPropertyInfo>\n  nameWithType: IDictionary<String,TaskPropertyInfo>\n  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Framework.TaskPropertyInfo>\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Framework.IBuildEngine\n  parent: Microsoft.Build.Framework\n  isExternal: false\n  name: IBuildEngine\n  nameWithType: IBuildEngine\n  fullName: Microsoft.Build.Framework.IBuildEngine\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: TaskElementContents\n  nameWithType: XamlTaskFactory.TaskElementContents\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskElementContents\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskName\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: TaskName\n  nameWithType: XamlTaskFactory.TaskName\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: TaskNamespace\n  nameWithType: XamlTaskFactory.TaskNamespace\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskNamespace\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.Build.Tasks.XamlTaskFactory.TaskType\n  parent: Microsoft.Build.Tasks.XamlTaskFactory\n  isExternal: false\n  name: TaskType\n  nameWithType: XamlTaskFactory.TaskType\n  fullName: Microsoft.Build.Tasks.XamlTaskFactory.TaskType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n"}