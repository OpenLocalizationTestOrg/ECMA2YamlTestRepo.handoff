{"nodes":[{"pos":[4005,4011],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[5097,5105],"content":"Module()","needQuote":true,"needEscape":true,"nodes":[{"content":"Module()","pos":[0,8]}]},{"pos":[5493,5501],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[5808,5842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6027,6043],"content":"CustomAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[6476,6510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6705,6719],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[7019,7053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7112,7146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7327,7341],"content":"FilterTypeName","needQuote":true,"needEscape":true,"nodes":[{"content":"FilterTypeName","pos":[0,14]}]},{"pos":[7667,7701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7902,7926],"content":"FilterTypeNameIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"FilterTypeNameIgnoreCase","pos":[0,24]}]},{"pos":[8282,8316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8575,8603],"content":"FindTypes(TypeFilter,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindTypes(TypeFilter,Object)","pos":[0,28]}]},{"pos":[9005,9039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9110,9144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9202,9236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9425,9443],"content":"FullyQualifiedName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullyQualifiedName","pos":[0,18]}]},{"pos":[9747,9781],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10004,10032],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[10387,10421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10481,10515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10820,10853],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[11241,11275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11340,11374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11434,11468],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11725,11750],"content":"GetCustomAttributesData()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[12208,12242],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12441,12457],"content":"GetField(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetField(String)","pos":[0,16]}]},{"pos":[12783,12817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12889,12923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13231,13260],"content":"GetField(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetField(String,BindingFlags)","pos":[0,29]}]},{"pos":[13664,13698],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13783,13817],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13889,13923],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14141,14152],"content":"GetFields()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFields()","pos":[0,11]}]},{"pos":[14476,14510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14793,14816],"content":"GetFields(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[15224,15258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15332,15366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15589,15602],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15898,15932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16133,16150],"content":"GetMethod(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(String)","pos":[0,17]}]},{"pos":[16480,16514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16587,16621],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16898,16922],"content":"GetMethod(String,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(String,Type[])","pos":[0,24]}]},{"pos":[17280,17314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17376,17410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17483,17517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18056,18139],"content":"GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,83]}]},{"pos":[18794,18828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18913,18947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19021,19055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19149,19183],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19245,19279],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19369,19403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19476,19510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20057,20144],"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,87]}]},{"pos":[20822,20856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20941,20975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21049,21083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21177,21211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21273,21307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21397,21431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21504,21538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21711,21723],"content":"GetMethods()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethods()","pos":[0,12]}]},{"pos":[22052,22086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22372,22396],"content":"GetMethods(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[22808,22842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22917,22951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23367,23416],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[23926,23960],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24056,24090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24421,24472],"content":"GetPEKind(PortableExecutableKinds,ImageFileMachine)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPEKind(PortableExecutableKinds,ImageFileMachine)","pos":[0,51]}]},{"pos":[24973,25007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25092,25126],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25319,25341],"content":"GetSignerCertificate()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSignerCertificate()","pos":[0,22]}]},{"pos":[25770,25804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26001,26016],"content":"GetType(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[26334,26368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26424,26458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26731,26754],"content":"GetType(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean)","pos":[0,23]}]},{"pos":[27105,27139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27207,27241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27297,27331],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27634,27665],"content":"GetType(String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean,Boolean)","pos":[0,31]}]},{"pos":[28051,28085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28155,28189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28257,28291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28347,28381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28596,28606],"content":"GetTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[28896,28930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29157,29180],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[29534,29568],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29633,29667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29726,29760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29933,29945],"content":"IsResource()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsResource()","pos":[0,12]}]},{"pos":[30240,30274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30457,30472],"content":"MDStreamVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"MDStreamVersion","pos":[0,15]}]},{"pos":[30763,30797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30976,30989],"content":"MetadataToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[31274,31308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31485,31497],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[31787,31821],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32004,32019],"content":"ModuleVersionId","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleVersionId","pos":[0,15]}]},{"pos":[32310,32344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32505,32509],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[32771,32805],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33082,33108],"content":"op_Equality(Module,Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Module,Module)","pos":[0,26]}]},{"pos":[33504,33538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33611,33645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33704,33738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34019,34047],"content":"op_Inequality(Module,Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Module,Module)","pos":[0,28]}]},{"pos":[34449,34483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34556,34590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34649,34683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34888,34907],"content":"ResolveField(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveField(Int32)","pos":[0,19]}]},{"pos":[35257,35291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35363,35397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35709,35742],"content":"ResolveField(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveField(Int32,Type[],Type[])","pos":[0,33]}]},{"pos":[36188,36222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36299,36333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36412,36446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36518,36552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36810,36830],"content":"ResolveMember(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMember(Int32)","pos":[0,20]}]},{"pos":[37184,37218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37291,37325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37640,37674],"content":"ResolveMember(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMember(Int32,Type[],Type[])","pos":[0,34]}]},{"pos":[38124,38158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38235,38269],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38348,38382],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38455,38489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38748,38768],"content":"ResolveMethod(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethod(Int32)","pos":[0,20]}]},{"pos":[39122,39156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39229,39263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39578,39612],"content":"ResolveMethod(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethod(Int32,Type[],Type[])","pos":[0,34]}]},{"pos":[40062,40096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40173,40207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40286,40320],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40393,40427],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40692,40715],"content":"ResolveSignature(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveSignature(Int32)","pos":[0,23]}]},{"pos":[41064,41098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41156,41190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41397,41417],"content":"ResolveString(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveString(Int32)","pos":[0,20]}]},{"pos":[41757,41791],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41849,41883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42086,42104],"content":"ResolveType(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveType(Int32)","pos":[0,18]}]},{"pos":[42428,42462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42518,42552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42861,42893],"content":"ResolveType(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveType(Int32,Type[],Type[])","pos":[0,32]}]},{"pos":[43313,43347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43424,43458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43537,43571],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43627,43661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43882,43891],"content":"ScopeName","needQuote":true,"needEscape":true,"nodes":[{"content":"ScopeName","pos":[0,9]}]},{"pos":[44168,44202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44613,44699],"content":"System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,86]}]},{"pos":[45207,45241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45307,45341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45404,45438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45499,45533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45598,45632],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45985,46057],"content":"System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,72]}]},{"pos":[46505,46539],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46600,46634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46698,46732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47041,47104],"content":"System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)","pos":[0,63]}]},{"pos":[47518,47552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48031,48130],"content":"System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,99]}]},{"pos":[48727,48761],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48820,48854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48915,48949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49011,49045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49113,49147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49214,49248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49315,49349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49414,49448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49617,49627],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[49918,49952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50063,50076],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[50178,50186],"content":"Module()","needQuote":true,"needEscape":true,"nodes":[{"content":"Module()","pos":[0,8]}]},{"pos":[50369,50377],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[50546,50554],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[50731,50747],"content":"CustomAttributes","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomAttributes","pos":[0,16]}]},{"pos":[50992,51024],"content":"IEnumerable<ph id=\"ph1\">&lt;CustomAttributeData&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<CustomAttributeData>"},{"pos":[51281,51295],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[51453,51460],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[51578,51584],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51744,51758],"content":"FilterTypeName","needQuote":true,"needEscape":true,"nodes":[{"content":"FilterTypeName","pos":[0,14]}]},{"pos":[51941,51951],"content":"TypeFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"pos":[52140,52164],"content":"FilterTypeNameIgnoreCase","needQuote":true,"needEscape":true,"nodes":[{"content":"FilterTypeNameIgnoreCase","pos":[0,24]}]},{"pos":[52367,52377],"content":"TypeFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"pos":[52595,52623],"content":"FindTypes(TypeFilter,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindTypes(TypeFilter,Object)","pos":[0,28]}]},{"pos":[52806,52810],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[52950,52960],"content":"TypeFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeFilter","pos":[0,10]}]},{"pos":[53095,53101],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53265,53283],"content":"FullyQualifiedName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullyQualifiedName","pos":[0,18]}]},{"pos":[53448,53454],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53635,53663],"content":"GetCustomAttributes(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Boolean)","pos":[0,28]}]},{"pos":[53848,53854],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53973,53980],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54175,54208],"content":"GetCustomAttributes(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributes(Type,Boolean)","pos":[0,33]}]},{"pos":[54403,54409],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54525,54529],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[54642,54649],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[54820,54845],"content":"GetCustomAttributesData()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCustomAttributesData()","pos":[0,25]}]},{"pos":[55102,55128],"content":"IList<ph id=\"ph1\">&lt;CustomAttributeData&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<CustomAttributeData>"},{"pos":[55375,55391],"content":"GetField(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetField(String)","pos":[0,16]}]},{"pos":[55577,55586],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[55719,55725],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[55925,55954],"content":"GetField(String,BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetField(String,BindingFlags)","pos":[0,29]}]},{"pos":[56166,56175],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[56308,56314],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[56458,56470],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[56648,56659],"content":"GetFields()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFields()","pos":[0,11]}]},{"pos":[56835,56844],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[57050,57073],"content":"GetFields(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetFields(BindingFlags)","pos":[0,23]}]},{"pos":[57273,57282],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[57445,57457],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[57637,57650],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[57804,57809],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57977,57994],"content":"GetMethod(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(String)","pos":[0,17]}]},{"pos":[58183,58193],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[58328,58334],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[58518,58542],"content":"GetMethod(String,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(String,Type[])","pos":[0,24]}]},{"pos":[58745,58755],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[58890,58896],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59010,59014],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59327,59410],"content":"GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,83]}]},{"pos":[59731,59741],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[59876,59882],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[60026,60038],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[60199,60205],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[60366,60384],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[60533,60537],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[60684,60701],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[61055,61142],"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])","pos":[0,87]}]},{"pos":[61471,61481],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[61616,61622],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61766,61778],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[61939,61945],"content":"Binder","needQuote":true,"needEscape":true,"nodes":[{"content":"Binder","pos":[0,6]}]},{"pos":[62106,62124],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[62273,62277],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[62424,62441],"content":"ParameterModifier","needQuote":true,"needEscape":true,"nodes":[{"content":"ParameterModifier","pos":[0,17]}]},{"pos":[62632,62644],"content":"GetMethods()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethods()","pos":[0,12]}]},{"pos":[62823,62833],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[63042,63066],"content":"GetMethods(BindingFlags)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMethods(BindingFlags)","pos":[0,24]}]},{"pos":[63269,63279],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[63444,63456],"content":"BindingFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"BindingFlags","pos":[0,12]}]},{"pos":[63732,63781],"content":"GetObjectData(SerializationInfo,StreamingContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetObjectData(SerializationInfo,StreamingContext)","pos":[0,49]}]},{"pos":[64063,64080],"content":"SerializationInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"SerializationInfo","pos":[0,17]}]},{"pos":[64294,64310],"content":"StreamingContext","needQuote":true,"needEscape":true,"nodes":[{"content":"StreamingContext","pos":[0,16]}]},{"pos":[64587,64638],"content":"GetPEKind(PortableExecutableKinds,ImageFileMachine)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPEKind(PortableExecutableKinds,ImageFileMachine)","pos":[0,51]}]},{"pos":[64908,64931],"content":"PortableExecutableKinds","needQuote":true,"needEscape":true,"nodes":[{"content":"PortableExecutableKinds","pos":[0,23]}]},{"pos":[65124,65140],"content":"ImageFileMachine","needQuote":true,"needEscape":true,"nodes":[{"content":"ImageFileMachine","pos":[0,16]}]},{"pos":[65337,65359],"content":"GetSignerCertificate()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSignerCertificate()","pos":[0,22]}]},{"pos":[65619,65634],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[65859,65874],"content":"GetType(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String)","pos":[0,15]}]},{"pos":[66031,66035],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[66147,66153],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66336,66359],"content":"GetType(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean)","pos":[0,23]}]},{"pos":[66532,66536],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[66648,66654],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66771,66778],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[66978,67009],"content":"GetType(String,Boolean,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetType(String,Boolean,Boolean)","pos":[0,31]}]},{"pos":[67198,67202],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[67314,67320],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67437,67444],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67563,67570],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67726,67736],"content":"GetTypes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypes()","pos":[0,10]}]},{"pos":[67883,67887],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[68068,68091],"content":"IsDefined(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsDefined(Type,Boolean)","pos":[0,23]}]},{"pos":[68267,68274],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68390,68394],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[68507,68514],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68672,68684],"content":"IsResource()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsResource()","pos":[0,12]}]},{"pos":[68838,68845],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[69008,69023],"content":"MDStreamVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"MDStreamVersion","pos":[0,15]}]},{"pos":[69181,69186],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69343,69356],"content":"MetadataToken","needQuote":true,"needEscape":true,"nodes":[{"content":"MetadataToken","pos":[0,13]}]},{"pos":[69510,69515],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69671,69683],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[69842,69854],"content":"ModuleHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleHandle","pos":[0,12]}]},{"pos":[70027,70042],"content":"ModuleVersionId","needQuote":true,"needEscape":true,"nodes":[{"content":"ModuleVersionId","pos":[0,15]}]},{"pos":[70199,70203],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[70349,70353],"content":"Name","needQuote":true,"needEscape":true,"nodes":[{"content":"Name","pos":[0,4]}]},{"pos":[70490,70496],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[70704,70730],"content":"op_Equality(Module,Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(Module,Module)","pos":[0,26]}]},{"pos":[70912,70919],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71059,71065],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[71214,71220],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[71441,71469],"content":"op_Inequality(Module,Module)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(Module,Module)","pos":[0,28]}]},{"pos":[71655,71662],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[71802,71808],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[71957,71963],"content":"Module","needQuote":true,"needEscape":true,"nodes":[{"content":"Module","pos":[0,6]}]},{"pos":[72146,72165],"content":"ResolveField(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveField(Int32)","pos":[0,19]}]},{"pos":[72357,72366],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[72498,72503],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72701,72734],"content":"ResolveField(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveField(Int32,Type[],Type[])","pos":[0,33]}]},{"pos":[72954,72963],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[73095,73100],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73212,73216],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[73328,73332],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[73503,73523],"content":"ResolveMember(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMember(Int32)","pos":[0,20]}]},{"pos":[73718,73728],"content":"MemberInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[73862,73867],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74066,74100],"content":"ResolveMember(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMember(Int32,Type[],Type[])","pos":[0,34]}]},{"pos":[74323,74333],"content":"MemberInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MemberInfo","pos":[0,10]}]},{"pos":[74467,74472],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74584,74588],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[74700,74704],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[74875,74895],"content":"ResolveMethod(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethod(Int32)","pos":[0,20]}]},{"pos":[75090,75100],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[75234,75239],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[75438,75472],"content":"ResolveMethod(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMethod(Int32,Type[],Type[])","pos":[0,34]}]},{"pos":[75695,75705],"content":"MethodBase","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodBase","pos":[0,10]}]},{"pos":[75839,75844],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[75956,75960],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[76072,76076],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[76250,76273],"content":"ResolveSignature(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveSignature(Int32)","pos":[0,23]}]},{"pos":[76446,76450],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[76563,76568],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[76739,76759],"content":"ResolveString(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveString(Int32)","pos":[0,20]}]},{"pos":[76928,76934],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[77049,77054],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77223,77241],"content":"ResolveType(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveType(Int32)","pos":[0,18]}]},{"pos":[77404,77408],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[77519,77524],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77721,77753],"content":"ResolveType(Int32,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveType(Int32,Type[],Type[])","pos":[0,32]}]},{"pos":[77944,77948],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78059,78064],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[78176,78180],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78292,78296],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[78449,78458],"content":"ScopeName","needQuote":true,"needEscape":true,"nodes":[{"content":"ScopeName","pos":[0,9]}]},{"pos":[78605,78611],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[78879,78965],"content":"System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,86]}]},{"pos":[79264,79268],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[79380,79386],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[79502,79508],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[79624,79630],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[79746,79752],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[79991,80063],"content":"System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,72]}]},{"pos":[80336,80342],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[80458,80464],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[80580,80586],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[80803,80866],"content":"System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)","pos":[0,63]}]},{"pos":[81121,81127],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[81429,81528],"content":"System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,99]}]},{"pos":[81855,81861],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[81975,81979],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[82091,82097],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[82212,82217],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[82331,82337],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[82453,82459],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[82575,82581],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[82697,82703],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[82857,82867],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[83016,83022],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Module\n  id: Module\n  children:\n  - System.Reflection.Module.#ctor\n  - System.Reflection.Module.Assembly\n  - System.Reflection.Module.CustomAttributes\n  - System.Reflection.Module.Equals(System.Object)\n  - System.Reflection.Module.FilterTypeName\n  - System.Reflection.Module.FilterTypeNameIgnoreCase\n  - System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  - System.Reflection.Module.FullyQualifiedName\n  - System.Reflection.Module.GetCustomAttributes(System.Boolean)\n  - System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n  - System.Reflection.Module.GetCustomAttributesData\n  - System.Reflection.Module.GetField(System.String)\n  - System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n  - System.Reflection.Module.GetFields\n  - System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n  - System.Reflection.Module.GetHashCode\n  - System.Reflection.Module.GetMethod(System.String)\n  - System.Reflection.Module.GetMethod(System.String,System.Type[])\n  - System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  - System.Reflection.Module.GetMethods\n  - System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n  - System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  - System.Reflection.Module.GetSignerCertificate\n  - System.Reflection.Module.GetType(System.String)\n  - System.Reflection.Module.GetType(System.String,System.Boolean)\n  - System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n  - System.Reflection.Module.GetTypes\n  - System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n  - System.Reflection.Module.IsResource\n  - System.Reflection.Module.MDStreamVersion\n  - System.Reflection.Module.MetadataToken\n  - System.Reflection.Module.ModuleHandle\n  - System.Reflection.Module.ModuleVersionId\n  - System.Reflection.Module.Name\n  - System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)\n  - System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)\n  - System.Reflection.Module.ResolveField(System.Int32)\n  - System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveMember(System.Int32)\n  - System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveMethod(System.Int32)\n  - System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ResolveSignature(System.Int32)\n  - System.Reflection.Module.ResolveString(System.Int32)\n  - System.Reflection.Module.ResolveType(System.Int32)\n  - System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n  - System.Reflection.Module.ScopeName\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.Module.ToString\n  langs:\n  - csharp\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Module))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Module : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Module, System.Runtime.Serialization.ISerializable\n  inheritance:\n  - System.Object\n  implements:\n  - System.Reflection.ICustomAttributeProvider\n  - System.Runtime.InteropServices._Module\n  - System.Runtime.Serialization.ISerializable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.#ctor\n  id: '#ctor'\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: Module()\n  nameWithType: Module.Module()\n  fullName: System.Reflection.Module.Module()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected Module ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.Assembly\n  id: Assembly\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: Assembly\n  nameWithType: Module.Assembly\n  fullName: System.Reflection.Module.Assembly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.Assembly Assembly { get; }\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.CustomAttributes\n  id: CustomAttributes\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: CustomAttributes\n  nameWithType: Module.CustomAttributes\n  fullName: System.Reflection.Module.CustomAttributes\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData> CustomAttributes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Module.Equals(Object)\n  fullName: System.Reflection.Module.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.FilterTypeName\n  id: FilterTypeName\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: FilterTypeName\n  nameWithType: Module.FilterTypeName\n  fullName: System.Reflection.Module.FilterTypeName\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static readonly System.Reflection.TypeFilter FilterTypeName;\n    return:\n      type: System.Reflection.TypeFilter\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.FilterTypeNameIgnoreCase\n  id: FilterTypeNameIgnoreCase\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: FilterTypeNameIgnoreCase\n  nameWithType: Module.FilterTypeNameIgnoreCase\n  fullName: System.Reflection.Module.FilterTypeNameIgnoreCase\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static readonly System.Reflection.TypeFilter FilterTypeNameIgnoreCase;\n    return:\n      type: System.Reflection.TypeFilter\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  id: FindTypes(System.Reflection.TypeFilter,System.Object)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: FindTypes(TypeFilter,Object)\n  nameWithType: Module.FindTypes(TypeFilter,Object)\n  fullName: System.Reflection.Module.FindTypes(TypeFilter,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] FindTypes (System.Reflection.TypeFilter filter, object filterCriteria);\n    parameters:\n    - id: filter\n      type: System.Reflection.TypeFilter\n      description: Parameter description to be filled\n    - id: filterCriteria\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.FullyQualifiedName\n  id: FullyQualifiedName\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: FullyQualifiedName\n  nameWithType: Module.FullyQualifiedName\n  fullName: System.Reflection.Module.FullyQualifiedName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string FullyQualifiedName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)\n  id: GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetCustomAttributes(Boolean)\n  nameWithType: Module.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Module.GetCustomAttributes(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object[] GetCustomAttributes (bool inherit);\n    parameters:\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n  id: GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: Module.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.Module.GetCustomAttributes(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetCustomAttributes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetCustomAttributesData\n  id: GetCustomAttributesData\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetCustomAttributesData()\n  nameWithType: Module.GetCustomAttributesData()\n  fullName: System.Reflection.Module.GetCustomAttributesData()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Collections.Generic.IList<System.Reflection.CustomAttributeData> GetCustomAttributesData ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetField(System.String)\n  id: GetField(System.String)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetField(String)\n  nameWithType: Module.GetField(String)\n  fullName: System.Reflection.Module.GetField(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.FieldInfo GetField (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetField*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n  id: GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetField(String,BindingFlags)\n  nameWithType: Module.GetField(String,BindingFlags)\n  fullName: System.Reflection.Module.GetField(String,BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetField*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetFields\n  id: GetFields\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetFields()\n  nameWithType: Module.GetFields()\n  fullName: System.Reflection.Module.GetFields()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.FieldInfo[] GetFields ();\n    parameters: []\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetFields*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n  id: GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetFields(BindingFlags)\n  nameWithType: Module.GetFields(BindingFlags)\n  fullName: System.Reflection.Module.GetFields(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingFlags);\n    parameters:\n    - id: bindingFlags\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetFields*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Module.GetHashCode()\n  fullName: System.Reflection.Module.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetMethod(System.String)\n  id: GetMethod(System.String)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetMethod(String)\n  nameWithType: Module.GetMethod(String)\n  fullName: System.Reflection.Module.GetMethod(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetMethod(System.String,System.Type[])\n  id: GetMethod(System.String,System.Type[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetMethod(String,Type[])\n  nameWithType: Module.GetMethod(String,Type[])\n  fullName: System.Reflection.Module.GetMethod(String,Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  id: GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected virtual System.Reflection.MethodInfo GetMethodImpl (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: bindingAttr\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    - id: binder\n      type: System.Reflection.Binder\n      description: Parameter description to be filled\n    - id: callConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: types\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: modifiers\n      type: System.Reflection.ParameterModifier[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetMethods\n  id: GetMethods\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetMethods()\n  nameWithType: Module.GetMethods()\n  fullName: System.Reflection.Module.GetMethods()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodInfo[] GetMethods ();\n    parameters: []\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetMethods*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n  id: GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetMethods(BindingFlags)\n  nameWithType: Module.GetMethods(BindingFlags)\n  fullName: System.Reflection.Module.GetMethods(BindingFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingFlags);\n    parameters:\n    - id: bindingFlags\n      type: System.Reflection.BindingFlags\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodInfo[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetMethods*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Module.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.Module.GetObjectData(SerializationInfo,StreamingContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);\n    parameters:\n    - id: info\n      type: System.Runtime.Serialization.SerializationInfo\n      description: Parameter description to be filled\n    - id: context\n      type: System.Runtime.Serialization.StreamingContext\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  id: GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetPEKind(PortableExecutableKinds,ImageFileMachine)\n  nameWithType: Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)\n  fullName: System.Reflection.Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual void GetPEKind (out System.Reflection.PortableExecutableKinds peKind, out System.Reflection.ImageFileMachine machine);\n    parameters:\n    - id: peKind\n      type: System.Reflection.PortableExecutableKinds\n      description: Parameter description to be filled\n    - id: machine\n      type: System.Reflection.ImageFileMachine\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetSignerCertificate\n  id: GetSignerCertificate\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetSignerCertificate()\n  nameWithType: Module.GetSignerCertificate()\n  fullName: System.Reflection.Module.GetSignerCertificate()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate GetSignerCertificate ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetType(System.String)\n  id: GetType(System.String)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetType(String)\n  nameWithType: Module.GetType(String)\n  fullName: System.Reflection.Module.GetType(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetType (string className);\n    parameters:\n    - id: className\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetType(System.String,System.Boolean)\n  id: GetType(System.String,System.Boolean)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetType(String,Boolean)\n  nameWithType: Module.GetType(String,Boolean)\n  fullName: System.Reflection.Module.GetType(String,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetType (string className, bool ignoreCase);\n    parameters:\n    - id: className\n      type: System.String\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n  id: GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetType(String,Boolean,Boolean)\n  nameWithType: Module.GetType(String,Boolean,Boolean)\n  fullName: System.Reflection.Module.GetType(String,Boolean,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type GetType (string className, bool throwOnError, bool ignoreCase);\n    parameters:\n    - id: className\n      type: System.String\n      description: Parameter description to be filled\n    - id: throwOnError\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: ignoreCase\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.GetType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.GetTypes\n  id: GetTypes\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: GetTypes()\n  nameWithType: Module.GetTypes()\n  fullName: System.Reflection.Module.GetTypes()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type[] GetTypes ();\n    parameters: []\n    return:\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n  id: IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: IsDefined(Type,Boolean)\n  nameWithType: Module.IsDefined(Type,Boolean)\n  fullName: System.Reflection.Module.IsDefined(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsDefined (Type attributeType, bool inherit);\n    parameters:\n    - id: attributeType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: inherit\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.IsResource\n  id: IsResource\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: IsResource()\n  nameWithType: Module.IsResource()\n  fullName: System.Reflection.Module.IsResource()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual bool IsResource ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.MDStreamVersion\n  id: MDStreamVersion\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: MDStreamVersion\n  nameWithType: Module.MDStreamVersion\n  fullName: System.Reflection.Module.MDStreamVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int MDStreamVersion { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.MetadataToken\n  id: MetadataToken\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: MetadataToken\n  nameWithType: Module.MetadataToken\n  fullName: System.Reflection.Module.MetadataToken\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int MetadataToken { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ModuleHandle\n  id: ModuleHandle\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ModuleHandle\n  nameWithType: Module.ModuleHandle\n  fullName: System.Reflection.Module.ModuleHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public ModuleHandle ModuleHandle { get; }\n    return:\n      type: System.ModuleHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ModuleVersionId\n  id: ModuleVersionId\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ModuleVersionId\n  nameWithType: Module.ModuleVersionId\n  fullName: System.Reflection.Module.ModuleVersionId\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Guid ModuleVersionId { get; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.Name\n  id: Name\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: Name\n  nameWithType: Module.Name\n  fullName: System.Reflection.Module.Name\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string Name { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)\n  id: op_Equality(System.Reflection.Module,System.Reflection.Module)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: op_Equality(Module,Module)\n  nameWithType: Module.op_Equality(Module,Module)\n  fullName: System.Reflection.Module.op_Equality(Module,Module)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Module left, System.Reflection.Module right);\n    parameters:\n    - id: left\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)\n  id: op_Inequality(System.Reflection.Module,System.Reflection.Module)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: op_Inequality(Module,Module)\n  nameWithType: Module.op_Inequality(Module,Module)\n  fullName: System.Reflection.Module.op_Inequality(Module,Module)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Module left, System.Reflection.Module right);\n    parameters:\n    - id: left\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    - id: right\n      type: System.Reflection.Module\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveField(System.Int32)\n  id: ResolveField(System.Int32)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveField(Int32)\n  nameWithType: Module.ResolveField(Int32)\n  fullName: System.Reflection.Module.ResolveField(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.FieldInfo ResolveField (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveField*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n  id: ResolveField(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveField(Int32,Type[],Type[])\n  nameWithType: Module.ResolveField(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveField(Int32,Type[],Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.FieldInfo ResolveField (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveField*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveMember(System.Int32)\n  id: ResolveMember(System.Int32)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveMember(Int32)\n  nameWithType: Module.ResolveMember(Int32)\n  fullName: System.Reflection.Module.ResolveMember(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MemberInfo ResolveMember (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MemberInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveMember*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n  id: ResolveMember(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveMember(Int32,Type[],Type[])\n  nameWithType: Module.ResolveMember(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveMember(Int32,Type[],Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MemberInfo ResolveMember (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MemberInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveMember*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveMethod(System.Int32)\n  id: ResolveMethod(System.Int32)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveMethod(Int32)\n  nameWithType: Module.ResolveMethod(Int32)\n  fullName: System.Reflection.Module.ResolveMethod(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public System.Reflection.MethodBase ResolveMethod (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  id: ResolveMethod(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveMethod(Int32,Type[],Type[])\n  nameWithType: Module.ResolveMethod(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveMethod(Int32,Type[],Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.MethodBase ResolveMethod (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.MethodBase\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveMethod*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveSignature(System.Int32)\n  id: ResolveSignature(System.Int32)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveSignature(Int32)\n  nameWithType: Module.ResolveSignature(Int32)\n  fullName: System.Reflection.Module.ResolveSignature(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual byte[] ResolveSignature (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveString(System.Int32)\n  id: ResolveString(System.Int32)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveString(Int32)\n  nameWithType: Module.ResolveString(Int32)\n  fullName: System.Reflection.Module.ResolveString(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string ResolveString (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveType(System.Int32)\n  id: ResolveType(System.Int32)\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveType(Int32)\n  nameWithType: Module.ResolveType(Int32)\n  fullName: System.Reflection.Module.ResolveType(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public Type ResolveType (int metadataToken);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n  id: ResolveType(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ResolveType(Int32,Type[],Type[])\n  nameWithType: Module.ResolveType(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveType(Int32,Type[],Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type ResolveType (int metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments);\n    parameters:\n    - id: metadataToken\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: genericTypeArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: genericMethodArguments\n      type: System.Type[]\n      description: Parameter description to be filled\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Module.ResolveType*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ScopeName\n  id: ScopeName\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ScopeName\n  nameWithType: Module.ScopeName\n  fullName: System.Reflection.Module.ScopeName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual string ScopeName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _Module.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _Module.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _Module.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: void _Module.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Module.ToString\n  id: ToString\n  parent: System.Reflection.Module\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Module.ToString()\n  fullName: System.Reflection.Module.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.Module.#ctor\n  parent: System.Reflection.Module\n  isExternal: false\n  name: Module()\n  nameWithType: Module.Module()\n  fullName: System.Reflection.Module.Module()\n- uid: System.Reflection.Module.Assembly\n  parent: System.Reflection.Module\n  isExternal: false\n  name: Assembly\n  nameWithType: Module.Assembly\n  fullName: System.Reflection.Module.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Module.CustomAttributes\n  parent: System.Reflection.Module\n  isExternal: false\n  name: CustomAttributes\n  nameWithType: Module.CustomAttributes\n  fullName: System.Reflection.Module.CustomAttributes\n- uid: System.Collections.Generic.IEnumerable{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<CustomAttributeData>\n  nameWithType: IEnumerable<CustomAttributeData>\n  fullName: System.Collections.Generic.IEnumerable<System.Reflection.CustomAttributeData>\n- uid: System.Reflection.Module.Equals(System.Object)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Module.Equals(Object)\n  fullName: System.Reflection.Module.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Module.FilterTypeName\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FilterTypeName\n  nameWithType: Module.FilterTypeName\n  fullName: System.Reflection.Module.FilterTypeName\n- uid: System.Reflection.TypeFilter\n  parent: System.Reflection\n  isExternal: false\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n- uid: System.Reflection.Module.FilterTypeNameIgnoreCase\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FilterTypeNameIgnoreCase\n  nameWithType: Module.FilterTypeNameIgnoreCase\n  fullName: System.Reflection.Module.FilterTypeNameIgnoreCase\n- uid: System.Reflection.TypeFilter\n  parent: System.Reflection\n  isExternal: false\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n- uid: System.Reflection.Module.FindTypes(System.Reflection.TypeFilter,System.Object)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FindTypes(TypeFilter,Object)\n  nameWithType: Module.FindTypes(TypeFilter,Object)\n  fullName: System.Reflection.Module.FindTypes(TypeFilter,Object)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.TypeFilter\n  parent: System.Reflection\n  isExternal: false\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Module.FullyQualifiedName\n  parent: System.Reflection.Module\n  isExternal: false\n  name: FullyQualifiedName\n  nameWithType: Module.FullyQualifiedName\n  fullName: System.Reflection.Module.FullyQualifiedName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.GetCustomAttributes(System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetCustomAttributes(Boolean)\n  nameWithType: Module.GetCustomAttributes(Boolean)\n  fullName: System.Reflection.Module.GetCustomAttributes(Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module.GetCustomAttributes(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetCustomAttributes(Type,Boolean)\n  nameWithType: Module.GetCustomAttributes(Type,Boolean)\n  fullName: System.Reflection.Module.GetCustomAttributes(Type,Boolean)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module.GetCustomAttributesData\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetCustomAttributesData()\n  nameWithType: Module.GetCustomAttributesData()\n  fullName: System.Reflection.Module.GetCustomAttributesData()\n- uid: System.Collections.Generic.IList{System.Reflection.CustomAttributeData}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<CustomAttributeData>\n  nameWithType: IList<CustomAttributeData>\n  fullName: System.Collections.Generic.IList<System.Reflection.CustomAttributeData>\n- uid: System.Reflection.Module.GetField(System.String)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetField(String)\n  nameWithType: Module.GetField(String)\n  fullName: System.Reflection.Module.GetField(String)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.GetField(System.String,System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetField(String,BindingFlags)\n  nameWithType: Module.GetField(String,BindingFlags)\n  fullName: System.Reflection.Module.GetField(String,BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Module.GetFields\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetFields()\n  nameWithType: Module.GetFields()\n  fullName: System.Reflection.Module.GetFields()\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo[]\n- uid: System.Reflection.Module.GetFields(System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetFields(BindingFlags)\n  nameWithType: Module.GetFields(BindingFlags)\n  fullName: System.Reflection.Module.GetFields(BindingFlags)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Module.GetHashCode\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Module.GetHashCode()\n  fullName: System.Reflection.Module.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.GetMethod(System.String)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethod(String)\n  nameWithType: Module.GetMethod(String)\n  fullName: System.Reflection.Module.GetMethod(String)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.GetMethod(System.String,System.Type[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethod(String,Type[])\n  nameWithType: Module.GetMethod(String,Type[])\n  fullName: System.Reflection.Module.GetMethod(String,Type[])\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.Module.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Reflection.Module.GetMethodImpl(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  nameWithType: Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n  fullName: System.Reflection.Module.GetMethodImpl(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Binder\n  parent: System.Reflection\n  isExternal: false\n  name: Binder\n  nameWithType: Binder\n  fullName: System.Reflection.Binder\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.ParameterModifier\n  parent: System.Reflection\n  isExternal: false\n  name: ParameterModifier\n  nameWithType: ParameterModifier\n  fullName: System.Reflection.ParameterModifier[]\n- uid: System.Reflection.Module.GetMethods\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethods()\n  nameWithType: Module.GetMethods()\n  fullName: System.Reflection.Module.GetMethods()\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo[]\n- uid: System.Reflection.Module.GetMethods(System.Reflection.BindingFlags)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetMethods(BindingFlags)\n  nameWithType: Module.GetMethods(BindingFlags)\n  fullName: System.Reflection.Module.GetMethods(BindingFlags)\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo[]\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.Module.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetObjectData(SerializationInfo,StreamingContext)\n  nameWithType: Module.GetObjectData(SerializationInfo,StreamingContext)\n  fullName: System.Reflection.Module.GetObjectData(SerializationInfo,StreamingContext)\n- uid: System.Runtime.Serialization.SerializationInfo\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationInfo\n  nameWithType: SerializationInfo\n  fullName: System.Runtime.Serialization.SerializationInfo\n- uid: System.Runtime.Serialization.StreamingContext\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: StreamingContext\n  nameWithType: StreamingContext\n  fullName: System.Runtime.Serialization.StreamingContext\n- uid: System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetPEKind(PortableExecutableKinds,ImageFileMachine)\n  nameWithType: Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)\n  fullName: System.Reflection.Module.GetPEKind(PortableExecutableKinds,ImageFileMachine)\n- uid: System.Reflection.PortableExecutableKinds\n  parent: System.Reflection\n  isExternal: false\n  name: PortableExecutableKinds\n  nameWithType: PortableExecutableKinds\n  fullName: System.Reflection.PortableExecutableKinds\n- uid: System.Reflection.ImageFileMachine\n  parent: System.Reflection\n  isExternal: false\n  name: ImageFileMachine\n  nameWithType: ImageFileMachine\n  fullName: System.Reflection.ImageFileMachine\n- uid: System.Reflection.Module.GetSignerCertificate\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetSignerCertificate()\n  nameWithType: Module.GetSignerCertificate()\n  fullName: System.Reflection.Module.GetSignerCertificate()\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Reflection.Module.GetType(System.String)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetType(String)\n  nameWithType: Module.GetType(String)\n  fullName: System.Reflection.Module.GetType(String)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.GetType(System.String,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetType(String,Boolean)\n  nameWithType: Module.GetType(String,Boolean)\n  fullName: System.Reflection.Module.GetType(String,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module.GetType(System.String,System.Boolean,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetType(String,Boolean,Boolean)\n  nameWithType: Module.GetType(String,Boolean,Boolean)\n  fullName: System.Reflection.Module.GetType(String,Boolean,Boolean)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module.GetTypes\n  parent: System.Reflection.Module\n  isExternal: false\n  name: GetTypes()\n  nameWithType: Module.GetTypes()\n  fullName: System.Reflection.Module.GetTypes()\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module.IsDefined(System.Type,System.Boolean)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: IsDefined(Type,Boolean)\n  nameWithType: Module.IsDefined(Type,Boolean)\n  fullName: System.Reflection.Module.IsDefined(Type,Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module.IsResource\n  parent: System.Reflection.Module\n  isExternal: false\n  name: IsResource()\n  nameWithType: Module.IsResource()\n  fullName: System.Reflection.Module.IsResource()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module.MDStreamVersion\n  parent: System.Reflection.Module\n  isExternal: false\n  name: MDStreamVersion\n  nameWithType: Module.MDStreamVersion\n  fullName: System.Reflection.Module.MDStreamVersion\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.MetadataToken\n  parent: System.Reflection.Module\n  isExternal: false\n  name: MetadataToken\n  nameWithType: Module.MetadataToken\n  fullName: System.Reflection.Module.MetadataToken\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ModuleHandle\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: Module.ModuleHandle\n  fullName: System.Reflection.Module.ModuleHandle\n- uid: System.ModuleHandle\n  parent: System\n  isExternal: false\n  name: ModuleHandle\n  nameWithType: ModuleHandle\n  fullName: System.ModuleHandle\n- uid: System.Reflection.Module.ModuleVersionId\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ModuleVersionId\n  nameWithType: Module.ModuleVersionId\n  fullName: System.Reflection.Module.ModuleVersionId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Reflection.Module.Name\n  parent: System.Reflection.Module\n  isExternal: false\n  name: Name\n  nameWithType: Module.Name\n  fullName: System.Reflection.Module.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.op_Equality(System.Reflection.Module,System.Reflection.Module)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: op_Equality(Module,Module)\n  nameWithType: Module.op_Equality(Module,Module)\n  fullName: System.Reflection.Module.op_Equality(Module,Module)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Module.op_Inequality(System.Reflection.Module,System.Reflection.Module)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: op_Inequality(Module,Module)\n  nameWithType: Module.op_Inequality(Module,Module)\n  fullName: System.Reflection.Module.op_Inequality(Module,Module)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Module\n  parent: System.Reflection\n  isExternal: false\n  name: Module\n  nameWithType: Module\n  fullName: System.Reflection.Module\n- uid: System.Reflection.Module.ResolveField(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveField(Int32)\n  nameWithType: Module.ResolveField(Int32)\n  fullName: System.Reflection.Module.ResolveField(Int32)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ResolveField(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveField(Int32,Type[],Type[])\n  nameWithType: Module.ResolveField(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveField(Int32,Type[],Type[])\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module.ResolveMember(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveMember(Int32)\n  nameWithType: Module.ResolveMember(Int32)\n  fullName: System.Reflection.Module.ResolveMember(Int32)\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ResolveMember(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveMember(Int32,Type[],Type[])\n  nameWithType: Module.ResolveMember(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveMember(Int32,Type[],Type[])\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module.ResolveMethod(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveMethod(Int32)\n  nameWithType: Module.ResolveMethod(Int32)\n  fullName: System.Reflection.Module.ResolveMethod(Int32)\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ResolveMethod(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveMethod(Int32,Type[],Type[])\n  nameWithType: Module.ResolveMethod(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveMethod(Int32,Type[],Type[])\n- uid: System.Reflection.MethodBase\n  parent: System.Reflection\n  isExternal: false\n  name: MethodBase\n  nameWithType: MethodBase\n  fullName: System.Reflection.MethodBase\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module.ResolveSignature(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveSignature(Int32)\n  nameWithType: Module.ResolveSignature(Int32)\n  fullName: System.Reflection.Module.ResolveSignature(Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ResolveString(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveString(Int32)\n  nameWithType: Module.ResolveString(Int32)\n  fullName: System.Reflection.Module.ResolveString(Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ResolveType(System.Int32)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveType(Int32)\n  nameWithType: Module.ResolveType(Int32)\n  fullName: System.Reflection.Module.ResolveType(Int32)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Module.ResolveType(System.Int32,System.Type[],System.Type[])\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ResolveType(Int32,Type[],Type[])\n  nameWithType: Module.ResolveType(Int32,Type[],Type[])\n  fullName: System.Reflection.Module.ResolveType(Int32,Type[],Type[])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Module.ScopeName\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ScopeName\n  nameWithType: Module.ScopeName\n  fullName: System.Reflection.Module.ScopeName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  nameWithType: Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Module.System#Runtime#InteropServices#_Module#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Module\n  isExternal: false\n  name: System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.Module.System.Runtime.InteropServices._Module.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Module.ToString\n  parent: System.Reflection.Module\n  isExternal: false\n  name: ToString()\n  nameWithType: Module.ToString()\n  fullName: System.Reflection.Module.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Module.GetCustomAttributes*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.GetField*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.GetFields*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.GetMethod*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.GetMethods*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.GetType*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.ResolveField*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.ResolveMember*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.ResolveMethod*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n- uid: System.Reflection.Module.ResolveType*\n  parent: System.Reflection.Module\n  isExternal: false\n  nameWithType: Module.\n"}