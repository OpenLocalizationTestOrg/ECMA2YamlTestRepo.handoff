{"nodes":[{"pos":[1247,1258],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[1957,1989],"content":"Compare(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(FontStretch,FontStretch)","pos":[0,32]}]},{"pos":[2408,2442],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2517,2551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2608,2642],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2841,2855],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3171,3205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3264,3298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3570,3589],"content":"Equals(FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FontStretch)","pos":[0,19]}]},{"pos":[3939,3973],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4032,4066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4336,4362],"content":"FromOpenTypeStretch(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromOpenTypeStretch(Int32)","pos":[0,26]}]},{"pos":[4749,4783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4854,4888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5067,5080],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[5388,5422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5711,5747],"content":"op_Equality(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FontStretch,FontStretch)","pos":[0,36]}]},{"pos":[6181,6215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6290,6324],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6383,6417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6712,6751],"content":"op_GreaterThan(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(FontStretch,FontStretch)","pos":[0,39]}]},{"pos":[7194,7228],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7303,7337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7396,7430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7739,7785],"content":"op_GreaterThanOrEqual(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(FontStretch,FontStretch)","pos":[0,46]}]},{"pos":[8249,8283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8358,8392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8451,8485],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8778,8816],"content":"op_Inequality(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FontStretch,FontStretch)","pos":[0,38]}]},{"pos":[9256,9290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9365,9399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9458,9492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9781,9817],"content":"op_LessThan(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(FontStretch,FontStretch)","pos":[0,36]}]},{"pos":[10251,10285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10360,10394],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10453,10487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10790,10833],"content":"op_LessThanOrEqual(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(FontStretch,FontStretch)","pos":[0,43]}]},{"pos":[11288,11322],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11397,11431],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11490,11524],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11827,11879],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[12304,12338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12412,12446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12504,12538],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12729,12748],"content":"ToOpenTypeStretch()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToOpenTypeStretch()","pos":[0,19]}]},{"pos":[13065,13099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13272,13282],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[13585,13619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13733,13749],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[13912,13944],"content":"Compare(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"Compare(FontStretch,FontStretch)","pos":[0,32]}]},{"pos":[14143,14148],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14283,14294],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[14449,14460],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[14649,14663],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[14828,14835],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14953,14959],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15143,15162],"content":"Equals(FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FontStretch)","pos":[0,19]}]},{"pos":[15337,15344],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15483,15494],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[15695,15721],"content":"FromOpenTypeStretch(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromOpenTypeStretch(Int32)","pos":[0,26]}]},{"pos":[15930,15941],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[16074,16079],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16238,16251],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16412,16417],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16631,16667],"content":"op_Equality(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FontStretch,FontStretch)","pos":[0,36]}]},{"pos":[16876,16883],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17022,17033],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[17188,17199],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[17436,17475],"content":"op_GreaterThan(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(FontStretch,FontStretch)","pos":[0,39]}]},{"pos":[17690,17697],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17836,17847],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[18002,18013],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[18257,18303],"content":"op_GreaterThanOrEqual(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(FontStretch,FontStretch)","pos":[0,46]}]},{"pos":[18532,18539],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18678,18689],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[18844,18855],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[19091,19129],"content":"op_Inequality(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FontStretch,FontStretch)","pos":[0,38]}]},{"pos":[19342,19349],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[19488,19499],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[19654,19665],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[19899,19935],"content":"op_LessThan(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(FontStretch,FontStretch)","pos":[0,36]}]},{"pos":[20144,20151],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20290,20301],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[20456,20467],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[20708,20751],"content":"op_LessThanOrEqual(FontStretch,FontStretch)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(FontStretch,FontStretch)","pos":[0,43]}]},{"pos":[20974,20981],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21120,21131],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[21286,21297],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[21531,21583],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[21823,21829],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[21945,21951],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22076,22091],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[22276,22295],"content":"ToOpenTypeStretch()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToOpenTypeStretch()","pos":[0,19]}]},{"pos":[22468,22473],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22629,22639],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[22795,22801],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FontStretch\n  id: FontStretch\n  children:\n  - System.Windows.FontStretch.Compare(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.Equals(System.Object)\n  - System.Windows.FontStretch.Equals(System.Windows.FontStretch)\n  - System.Windows.FontStretch.FromOpenTypeStretch(System.Int32)\n  - System.Windows.FontStretch.GetHashCode\n  - System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.op_GreaterThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.op_GreaterThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.op_LessThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.op_LessThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  - System.Windows.FontStretch.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.FontStretch.ToOpenTypeStretch\n  - System.Windows.FontStretch.ToString\n  langs:\n  - csharp\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.FontStretchConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None)]\n\n      public struct FontStretch : IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.Compare(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: Compare(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: Compare(FontStretch,FontStretch)\n  nameWithType: FontStretch.Compare(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.Compare(FontStretch,FontStretch)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static int Compare (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FontStretch.Equals(Object)\n  fullName: System.Windows.FontStretch.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.FontStretch.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.Equals(System.Windows.FontStretch)\n  id: Equals(System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: Equals(FontStretch)\n  nameWithType: FontStretch.Equals(FontStretch)\n  fullName: System.Windows.FontStretch.Equals(FontStretch)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Equals (System.Windows.FontStretch obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.FontStretch.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.FromOpenTypeStretch(System.Int32)\n  id: FromOpenTypeStretch(System.Int32)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: FromOpenTypeStretch(Int32)\n  nameWithType: FontStretch.FromOpenTypeStretch(Int32)\n  fullName: System.Windows.FontStretch.FromOpenTypeStretch(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static System.Windows.FontStretch FromOpenTypeStretch (int stretchValue);\n    parameters:\n    - id: stretchValue\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FontStretch.GetHashCode()\n  fullName: System.Windows.FontStretch.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: op_Equality(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_Equality(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_Equality(FontStretch,FontStretch)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Equality (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.op_GreaterThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: op_GreaterThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: op_GreaterThan(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_GreaterThan(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_GreaterThan(FontStretch,FontStretch)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_GreaterThan (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.op_GreaterThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: op_GreaterThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_GreaterThanOrEqual(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_GreaterThanOrEqual(FontStretch,FontStretch)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: op_Inequality(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_Inequality(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_Inequality(FontStretch,FontStretch)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Inequality (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.op_LessThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: op_LessThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: op_LessThan(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_LessThan(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_LessThan(FontStretch,FontStretch)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_LessThan (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.op_LessThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  id: op_LessThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_LessThanOrEqual(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_LessThanOrEqual(FontStretch,FontStretch)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_LessThanOrEqual (System.Windows.FontStretch left, System.Windows.FontStretch right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: FontStretch.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.FontStretch.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.ToOpenTypeStretch\n  id: ToOpenTypeStretch\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: ToOpenTypeStretch()\n  nameWithType: FontStretch.ToOpenTypeStretch()\n  fullName: System.Windows.FontStretch.ToOpenTypeStretch()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public int ToOpenTypeStretch ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStretch.ToString\n  id: ToString\n  parent: System.Windows.FontStretch\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FontStretch.ToString()\n  fullName: System.Windows.FontStretch.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.FontStretch.Compare(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: Compare(FontStretch,FontStretch)\n  nameWithType: FontStretch.Compare(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.Compare(FontStretch,FontStretch)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.Equals(System.Object)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FontStretch.Equals(Object)\n  fullName: System.Windows.FontStretch.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FontStretch.Equals(System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: Equals(FontStretch)\n  nameWithType: FontStretch.Equals(FontStretch)\n  fullName: System.Windows.FontStretch.Equals(FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.FromOpenTypeStretch(System.Int32)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: FromOpenTypeStretch(Int32)\n  nameWithType: FontStretch.FromOpenTypeStretch(Int32)\n  fullName: System.Windows.FontStretch.FromOpenTypeStretch(Int32)\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontStretch.GetHashCode\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FontStretch.GetHashCode()\n  fullName: System.Windows.FontStretch.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontStretch.op_Equality(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: op_Equality(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_Equality(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_Equality(FontStretch,FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.op_GreaterThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: op_GreaterThan(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_GreaterThan(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_GreaterThan(FontStretch,FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.op_GreaterThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: op_GreaterThanOrEqual(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_GreaterThanOrEqual(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_GreaterThanOrEqual(FontStretch,FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.op_Inequality(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: op_Inequality(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_Inequality(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_Inequality(FontStretch,FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.op_LessThan(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: op_LessThan(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_LessThan(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_LessThan(FontStretch,FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.op_LessThanOrEqual(System.Windows.FontStretch,System.Windows.FontStretch)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: op_LessThanOrEqual(FontStretch,FontStretch)\n  nameWithType: FontStretch.op_LessThanOrEqual(FontStretch,FontStretch)\n  fullName: System.Windows.FontStretch.op_LessThanOrEqual(FontStretch,FontStretch)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.FontStretch.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: FontStretch.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.FontStretch.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.FontStretch.ToOpenTypeStretch\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: ToOpenTypeStretch()\n  nameWithType: FontStretch.ToOpenTypeStretch()\n  fullName: System.Windows.FontStretch.ToOpenTypeStretch()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontStretch.ToString\n  parent: System.Windows.FontStretch\n  isExternal: false\n  name: ToString()\n  nameWithType: FontStretch.ToString()\n  fullName: System.Windows.FontStretch.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.FontStretch.Equals*\n  parent: System.Windows.FontStretch\n  isExternal: false\n  nameWithType: FontStretch.\n"}