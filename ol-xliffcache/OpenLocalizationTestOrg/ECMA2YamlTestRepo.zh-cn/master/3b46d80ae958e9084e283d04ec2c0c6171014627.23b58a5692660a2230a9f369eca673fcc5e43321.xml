{"nodes":[{"pos":[528,555],"content":"HashEnumerator<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"HashEnumerator&lt;TKey,TValue&gt;","pos":[0,27],"source":"HashEnumerator<TKey,TValue>"}]},{"pos":[906,940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[977,1011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1736,1765],"content":"HashEnumerator(INode<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashEnumerator(INode<TValue>)"},{"pos":[2243,2277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2478,2485],"content":"Current","needQuote":true,"needEscape":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[2826,2860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3061,3070],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[3673,3689],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[4071,4105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4371,4381],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[4743,4777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4974,4981],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]},{"pos":[5418,5474],"content":"Microsoft.VisualC.StlClr.HashEnumeratorBase<TKey,TValue>","needQuote":true,"needEscape":true,"nodes":[{"content":"Microsoft.VisualC.StlClr.HashEnumeratorBase&lt;TKey,TValue&gt;","pos":[0,56],"source":"Microsoft.VisualC.StlClr.HashEnumeratorBase<TKey,TValue>"}]},{"pos":[5652,5681],"content":"HashEnumerator(INode<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"HashEnumerator(INode<TValue>)"},{"pos":[5970,5983],"content":"INode<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"INode<TValue>"},{"pos":[6210,6217],"content":"Current","needQuote":true,"needEscape":true,"nodes":[{"content":"Current","pos":[0,7]}]},{"pos":[6397,6403],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[6583,6592],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[6875,6891],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[7102,7109],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7299,7309],"content":"MoveNext()","needQuote":true,"needEscape":true,"nodes":[{"content":"MoveNext()","pos":[0,10]}]},{"pos":[7508,7515],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7702,7709],"content":"Reset()","needQuote":true,"needEscape":true,"nodes":[{"content":"Reset()","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2\n  id: HashEnumerator`2\n  children:\n  - Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  - Microsoft.VisualC.StlClr.HashEnumerator`2.Current\n  - Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose\n  - Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)\n  - Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext\n  - Microsoft.VisualC.StlClr.HashEnumerator`2.Reset\n  langs:\n  - csharp\n  name: HashEnumerator<TKey,TValue>\n  nameWithType: HashEnumerator<TKey,TValue>\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>\n  type: Class\n  syntax:\n    content: 'public class HashEnumerator<TKey,TValue> : Microsoft.VisualC.StlClr.HashEnumeratorBase<TKey,TValue>, System.Collections.Generic.IEnumerator<TValue>'\n    typeParameters:\n    - id: TKey\n      description: Parameter description to be filled\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - Microsoft.VisualC.StlClr.HashEnumeratorBase`2\n  implements:\n  - System.Collections.Generic.IEnumerator<TValue>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)'\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  langs:\n  - csharp\n  name: HashEnumerator(INode<TValue>)\n  nameWithType: HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public HashEnumerator (Microsoft.VisualC.StlClr.Generic.INode<TValue> _First);\n    parameters:\n    - id: _First\n      type: Microsoft.VisualC.StlClr.Generic.INode`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Current\n  id: Current\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  langs:\n  - csharp\n  name: Current\n  nameWithType: HashEnumerator<TKey,TValue>.Current\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Current\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public virtual TValue Current { get; set; }\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose\n  id: Dispose\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: HashEnumerator<TKey,TValue>.Dispose()\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public override sealed void Dispose ();\n    parameters: []\n  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: HashEnumerator<TKey,TValue>.Dispose(Boolean)\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: protected virtual void Dispose (bool A_0);\n    parameters:\n    - id: A_0\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext\n  id: MoveNext\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  langs:\n  - csharp\n  name: MoveNext()\n  nameWithType: HashEnumerator<TKey,TValue>.MoveNext()\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.MoveNext()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public override bool MoveNext ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Reset\n  id: Reset\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: HashEnumerator<TKey,TValue>.Reset()\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Reset()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.VisualC.StlClr.HashEnumeratorBase`2\n  isExternal: false\n  name: Microsoft.VisualC.StlClr.HashEnumeratorBase<TKey,TValue>\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode`1)\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  name: HashEnumerator(INode<TValue>)\n  nameWithType: HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.HashEnumerator(INode<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.INode`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: INode<TValue>\n  nameWithType: INode<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.INode<TValue>\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Current\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  name: Current\n  nameWithType: HashEnumerator<TKey,TValue>.Current\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Current\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  name: Dispose()\n  nameWithType: HashEnumerator<TKey,TValue>.Dispose()\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose()\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: HashEnumerator<TKey,TValue>.Dispose(Boolean)\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  name: MoveNext()\n  nameWithType: HashEnumerator<TKey,TValue>.MoveNext()\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.MoveNext()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Reset\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  name: Reset()\n  nameWithType: HashEnumerator<TKey,TValue>.Reset()\n  fullName: Microsoft.VisualC.StlClr.HashEnumerator<TKey,TValue>.Reset()\n- uid: Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose*\n  parent: Microsoft.VisualC.StlClr.HashEnumerator`2\n  isExternal: false\n  nameWithType: HashEnumerator<TKey,TValue>.\n"}