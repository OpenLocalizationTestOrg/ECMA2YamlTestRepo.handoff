{"nodes":[{"pos":[1047,1061],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[1666,1682],"content":"FamilyTypeface()","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface()","pos":[0,16]}]},{"pos":[2161,2178],"content":"AdjustedFaceNames","needQuote":true,"needEscape":true,"nodes":[{"content":"AdjustedFaceNames","pos":[0,17]}]},{"pos":[2649,2683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2878,2888],"content":"CapsHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"CapsHeight","pos":[0,10]}]},{"pos":[3195,3229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3456,3482],"content":"DeviceFontCharacterMetrics","needQuote":true,"needEscape":true,"nodes":[{"content":"DeviceFontCharacterMetrics","pos":[0,26]}]},{"pos":[3907,3941],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4144,4158],"content":"DeviceFontName","needQuote":true,"needEscape":true,"nodes":[{"content":"DeviceFontName","pos":[0,14]}]},{"pos":[4477,4511],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4728,4742],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5072,5106],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5165,5199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5516,5538],"content":"Equals(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FamilyTypeface)","pos":[0,22]}]},{"pos":[5940,5974],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6033,6067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6320,6333],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6659,6693],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6882,6889],"content":"Stretch","needQuote":true,"needEscape":true,"nodes":[{"content":"Stretch","pos":[0,7]}]},{"pos":[7220,7254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7471,7492],"content":"StrikethroughPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughPosition","pos":[0,21]}]},{"pos":[7832,7866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8085,8107],"content":"StrikethroughThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughThickness","pos":[0,22]}]},{"pos":[8450,8484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8669,8674],"content":"Style","needQuote":true,"needEscape":true,"nodes":[{"content":"Style","pos":[0,5]}]},{"pos":[8995,9029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9238,9255],"content":"UnderlinePosition","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlinePosition","pos":[0,17]}]},{"pos":[9583,9617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9828,9846],"content":"UnderlineThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlineThickness","pos":[0,18]}]},{"pos":[10177,10211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10398,10404],"content":"Weight","needQuote":true,"needEscape":true,"nodes":[{"content":"Weight","pos":[0,6]}]},{"pos":[10730,10764],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10953,10960],"content":"XHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"XHeight","pos":[0,7]}]},{"pos":[11258,11292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11403,11416],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11540,11556],"content":"FamilyTypeface()","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface()","pos":[0,16]}]},{"pos":[11805,11822],"content":"AdjustedFaceNames","needQuote":true,"needEscape":true,"nodes":[{"content":"AdjustedFaceNames","pos":[0,17]}]},{"pos":[12098,12129],"content":"IDictionary<XmlLanguage,String>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;XmlLanguage,String&gt;","pos":[0,31],"source":"IDictionary<XmlLanguage,String>"}]},{"pos":[12406,12416],"content":"CapsHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"CapsHeight","pos":[0,10]}]},{"pos":[12584,12590],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[12784,12810],"content":"DeviceFontCharacterMetrics","needQuote":true,"needEscape":true,"nodes":[{"content":"DeviceFontCharacterMetrics","pos":[0,26]}]},{"pos":[13058,13084],"content":"CharacterMetricsDictionary","needQuote":true,"needEscape":true,"nodes":[{"content":"CharacterMetricsDictionary","pos":[0,26]}]},{"pos":[13320,13334],"content":"DeviceFontName","needQuote":true,"needEscape":true,"nodes":[{"content":"DeviceFontName","pos":[0,14]}]},{"pos":[13510,13516],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[13705,13719],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13896,13903],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14021,14027],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[14238,14260],"content":"Equals(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FamilyTypeface)","pos":[0,22]}]},{"pos":[14453,14460],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14614,14628],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[14837,14850],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[15023,15028],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[15201,15208],"content":"Stretch","needQuote":true,"needEscape":true,"nodes":[{"content":"Stretch","pos":[0,7]}]},{"pos":[15391,15402],"content":"FontStretch","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStretch","pos":[0,11]}]},{"pos":[15609,15630],"content":"StrikethroughPosition","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughPosition","pos":[0,21]}]},{"pos":[15820,15826],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[16016,16038],"content":"StrikethroughThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"StrikethroughThickness","pos":[0,22]}]},{"pos":[16230,16236],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[16409,16414],"content":"Style","needQuote":true,"needEscape":true,"nodes":[{"content":"Style","pos":[0,5]}]},{"pos":[16591,16600],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[16799,16816],"content":"UnderlinePosition","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlinePosition","pos":[0,17]}]},{"pos":[16998,17004],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[17190,17208],"content":"UnderlineThickness","needQuote":true,"needEscape":true,"nodes":[{"content":"UnderlineThickness","pos":[0,18]}]},{"pos":[17392,17398],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[17572,17578],"content":"Weight","needQuote":true,"needEscape":true,"nodes":[{"content":"Weight","pos":[0,6]}]},{"pos":[17758,17768],"content":"FontWeight","needQuote":true,"needEscape":true,"nodes":[{"content":"FontWeight","pos":[0,10]}]},{"pos":[17959,17966],"content":"XHeight","needQuote":true,"needEscape":true,"nodes":[{"content":"XHeight","pos":[0,7]}]},{"pos":[18128,18134],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.FamilyTypeface\n  id: FamilyTypeface\n  children:\n  - System.Windows.Media.FamilyTypeface.#ctor\n  - System.Windows.Media.FamilyTypeface.AdjustedFaceNames\n  - System.Windows.Media.FamilyTypeface.CapsHeight\n  - System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics\n  - System.Windows.Media.FamilyTypeface.DeviceFontName\n  - System.Windows.Media.FamilyTypeface.Equals(System.Object)\n  - System.Windows.Media.FamilyTypeface.Equals(System.Windows.Media.FamilyTypeface)\n  - System.Windows.Media.FamilyTypeface.GetHashCode\n  - System.Windows.Media.FamilyTypeface.Stretch\n  - System.Windows.Media.FamilyTypeface.StrikethroughPosition\n  - System.Windows.Media.FamilyTypeface.StrikethroughThickness\n  - System.Windows.Media.FamilyTypeface.Style\n  - System.Windows.Media.FamilyTypeface.UnderlinePosition\n  - System.Windows.Media.FamilyTypeface.UnderlineThickness\n  - System.Windows.Media.FamilyTypeface.Weight\n  - System.Windows.Media.FamilyTypeface.XHeight\n  langs:\n  - csharp\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n  type: Class\n  syntax:\n    content: public class FamilyTypeface\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: FamilyTypeface()\n  nameWithType: FamilyTypeface.FamilyTypeface()\n  fullName: System.Windows.Media.FamilyTypeface.FamilyTypeface()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public FamilyTypeface ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.AdjustedFaceNames\n  id: AdjustedFaceNames\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: AdjustedFaceNames\n  nameWithType: FamilyTypeface.AdjustedFaceNames\n  fullName: System.Windows.Media.FamilyTypeface.AdjustedFaceNames\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Collections.Generic.IDictionary<System.Windows.Markup.XmlLanguage,string> AdjustedFaceNames { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.Windows.Markup.XmlLanguage,System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.CapsHeight\n  id: CapsHeight\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: CapsHeight\n  nameWithType: FamilyTypeface.CapsHeight\n  fullName: System.Windows.Media.FamilyTypeface.CapsHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double CapsHeight { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics\n  id: DeviceFontCharacterMetrics\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: DeviceFontCharacterMetrics\n  nameWithType: FamilyTypeface.DeviceFontCharacterMetrics\n  fullName: System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.CharacterMetricsDictionary DeviceFontCharacterMetrics { get; }\n    return:\n      type: System.Windows.Media.CharacterMetricsDictionary\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.DeviceFontName\n  id: DeviceFontName\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: DeviceFontName\n  nameWithType: FamilyTypeface.DeviceFontName\n  fullName: System.Windows.Media.FamilyTypeface.DeviceFontName\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public string DeviceFontName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FamilyTypeface.Equals(Object)\n  fullName: System.Windows.Media.FamilyTypeface.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.FamilyTypeface.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.Equals(System.Windows.Media.FamilyTypeface)\n  id: Equals(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: Equals(FamilyTypeface)\n  nameWithType: FamilyTypeface.Equals(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypeface.Equals(FamilyTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Equals (System.Windows.Media.FamilyTypeface typeface);\n    parameters:\n    - id: typeface\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.Media.FamilyTypeface.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FamilyTypeface.GetHashCode()\n  fullName: System.Windows.Media.FamilyTypeface.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.Stretch\n  id: Stretch\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: Stretch\n  nameWithType: FamilyTypeface.Stretch\n  fullName: System.Windows.Media.FamilyTypeface.Stretch\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.FontStretch Stretch { get; set; }\n    return:\n      type: System.Windows.FontStretch\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.StrikethroughPosition\n  id: StrikethroughPosition\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: StrikethroughPosition\n  nameWithType: FamilyTypeface.StrikethroughPosition\n  fullName: System.Windows.Media.FamilyTypeface.StrikethroughPosition\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double StrikethroughPosition { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.StrikethroughThickness\n  id: StrikethroughThickness\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: StrikethroughThickness\n  nameWithType: FamilyTypeface.StrikethroughThickness\n  fullName: System.Windows.Media.FamilyTypeface.StrikethroughThickness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double StrikethroughThickness { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.Style\n  id: Style\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: Style\n  nameWithType: FamilyTypeface.Style\n  fullName: System.Windows.Media.FamilyTypeface.Style\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.FontStyle Style { get; set; }\n    return:\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.UnderlinePosition\n  id: UnderlinePosition\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: UnderlinePosition\n  nameWithType: FamilyTypeface.UnderlinePosition\n  fullName: System.Windows.Media.FamilyTypeface.UnderlinePosition\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double UnderlinePosition { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.UnderlineThickness\n  id: UnderlineThickness\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: UnderlineThickness\n  nameWithType: FamilyTypeface.UnderlineThickness\n  fullName: System.Windows.Media.FamilyTypeface.UnderlineThickness\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double UnderlineThickness { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.Weight\n  id: Weight\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: Weight\n  nameWithType: FamilyTypeface.Weight\n  fullName: System.Windows.Media.FamilyTypeface.Weight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.FontWeight Weight { get; set; }\n    return:\n      type: System.Windows.FontWeight\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypeface.XHeight\n  id: XHeight\n  parent: System.Windows.Media.FamilyTypeface\n  langs:\n  - csharp\n  name: XHeight\n  nameWithType: FamilyTypeface.XHeight\n  fullName: System.Windows.Media.FamilyTypeface.XHeight\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public double XHeight { get; set; }\n    return:\n      type: System.Double\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.FamilyTypeface.#ctor\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: FamilyTypeface()\n  nameWithType: FamilyTypeface.FamilyTypeface()\n  fullName: System.Windows.Media.FamilyTypeface.FamilyTypeface()\n- uid: System.Windows.Media.FamilyTypeface.AdjustedFaceNames\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: AdjustedFaceNames\n  nameWithType: FamilyTypeface.AdjustedFaceNames\n  fullName: System.Windows.Media.FamilyTypeface.AdjustedFaceNames\n- uid: System.Collections.Generic.IDictionary{System.Windows.Markup.XmlLanguage,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<XmlLanguage,String>\n  nameWithType: IDictionary<XmlLanguage,String>\n  fullName: System.Collections.Generic.IDictionary<System.Windows.Markup.XmlLanguage,System.String>\n- uid: System.Windows.Media.FamilyTypeface.CapsHeight\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: CapsHeight\n  nameWithType: FamilyTypeface.CapsHeight\n  fullName: System.Windows.Media.FamilyTypeface.CapsHeight\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: DeviceFontCharacterMetrics\n  nameWithType: FamilyTypeface.DeviceFontCharacterMetrics\n  fullName: System.Windows.Media.FamilyTypeface.DeviceFontCharacterMetrics\n- uid: System.Windows.Media.CharacterMetricsDictionary\n  parent: System.Windows.Media\n  isExternal: false\n  name: CharacterMetricsDictionary\n  nameWithType: CharacterMetricsDictionary\n  fullName: System.Windows.Media.CharacterMetricsDictionary\n- uid: System.Windows.Media.FamilyTypeface.DeviceFontName\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: DeviceFontName\n  nameWithType: FamilyTypeface.DeviceFontName\n  fullName: System.Windows.Media.FamilyTypeface.DeviceFontName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Media.FamilyTypeface.Equals(System.Object)\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FamilyTypeface.Equals(Object)\n  fullName: System.Windows.Media.FamilyTypeface.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FamilyTypeface.Equals(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: Equals(FamilyTypeface)\n  nameWithType: FamilyTypeface.Equals(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypeface.Equals(FamilyTypeface)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Windows.Media.FamilyTypeface.GetHashCode\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FamilyTypeface.GetHashCode()\n  fullName: System.Windows.Media.FamilyTypeface.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypeface.Stretch\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: Stretch\n  nameWithType: FamilyTypeface.Stretch\n  fullName: System.Windows.Media.FamilyTypeface.Stretch\n- uid: System.Windows.FontStretch\n  parent: System.Windows\n  isExternal: false\n  name: FontStretch\n  nameWithType: FontStretch\n  fullName: System.Windows.FontStretch\n- uid: System.Windows.Media.FamilyTypeface.StrikethroughPosition\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: StrikethroughPosition\n  nameWithType: FamilyTypeface.StrikethroughPosition\n  fullName: System.Windows.Media.FamilyTypeface.StrikethroughPosition\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FamilyTypeface.StrikethroughThickness\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: StrikethroughThickness\n  nameWithType: FamilyTypeface.StrikethroughThickness\n  fullName: System.Windows.Media.FamilyTypeface.StrikethroughThickness\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FamilyTypeface.Style\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: Style\n  nameWithType: FamilyTypeface.Style\n  fullName: System.Windows.Media.FamilyTypeface.Style\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.Media.FamilyTypeface.UnderlinePosition\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: UnderlinePosition\n  nameWithType: FamilyTypeface.UnderlinePosition\n  fullName: System.Windows.Media.FamilyTypeface.UnderlinePosition\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FamilyTypeface.UnderlineThickness\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: UnderlineThickness\n  nameWithType: FamilyTypeface.UnderlineThickness\n  fullName: System.Windows.Media.FamilyTypeface.UnderlineThickness\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FamilyTypeface.Weight\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: Weight\n  nameWithType: FamilyTypeface.Weight\n  fullName: System.Windows.Media.FamilyTypeface.Weight\n- uid: System.Windows.FontWeight\n  parent: System.Windows\n  isExternal: false\n  name: FontWeight\n  nameWithType: FontWeight\n  fullName: System.Windows.FontWeight\n- uid: System.Windows.Media.FamilyTypeface.XHeight\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  name: XHeight\n  nameWithType: FamilyTypeface.XHeight\n  fullName: System.Windows.Media.FamilyTypeface.XHeight\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Media.FamilyTypeface.Equals*\n  parent: System.Windows.Media.FamilyTypeface\n  isExternal: false\n  nameWithType: FamilyTypeface.\n"}