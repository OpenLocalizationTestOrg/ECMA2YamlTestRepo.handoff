{"nodes":[{"pos":[2358,2378],"content":"FileLogTraceListener","needQuote":true,"needEscape":true,"nodes":[{"content":"FileLogTraceListener","pos":[0,20]}]},{"pos":[2960,2982],"content":"FileLogTraceListener()","needQuote":true,"needEscape":true,"nodes":[{"content":"FileLogTraceListener()","pos":[0,22]}]},{"pos":[3552,3580],"content":"FileLogTraceListener(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FileLogTraceListener(String)","pos":[0,28]}]},{"pos":[3984,4018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4235,4241],"content":"Append","needQuote":true,"needEscape":true,"nodes":[{"content":"Append","pos":[0,6]}]},{"pos":[4570,4604],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4827,4836],"content":"AutoFlush","needQuote":true,"needEscape":true,"nodes":[{"content":"AutoFlush","pos":[0,9]}]},{"pos":[5174,5208],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5437,5449],"content":"BaseFileName","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseFileName","pos":[0,12]}]},{"pos":[5797,5831],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6046,6053],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[6573,6587],"content":"CustomLocation","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomLocation","pos":[0,14]}]},{"pos":[6941,6975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7198,7207],"content":"Delimiter","needQuote":true,"needEscape":true,"nodes":[{"content":"Delimiter","pos":[0,9]}]},{"pos":[7546,7580],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7837,7863],"content":"DiskSpaceExhaustedBehavior","needQuote":true,"needEscape":true,"nodes":[{"content":"DiskSpaceExhaustedBehavior","pos":[0,26]}]},{"pos":[8342,8376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8627,8643],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[9031,9065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9286,9294],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[9651,9685],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9900,9907],"content":"Flush()","needQuote":true,"needEscape":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[10429,10444],"content":"FullLogFileName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullLogFileName","pos":[0,15]}]},{"pos":[10796,10830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11079,11103],"content":"GetSupportedAttributes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSupportedAttributes()","pos":[0,24]}]},{"pos":[11508,11542],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11777,11792],"content":"IncludeHostName","needQuote":true,"needEscape":true,"nodes":[{"content":"IncludeHostName","pos":[0,15]}]},{"pos":[12148,12182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12403,12411],"content":"Location","needQuote":true,"needEscape":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[12818,12852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13103,13126],"content":"LogFileCreationSchedule","needQuote":true,"needEscape":true,"nodes":[{"content":"LogFileCreationSchedule","pos":[0,23]}]},{"pos":[13606,13640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13867,13878],"content":"MaxFileSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxFileSize","pos":[0,11]}]},{"pos":[14220,14254],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14491,14507],"content":"ReserveDiskSpace","needQuote":true,"needEscape":true,"nodes":[{"content":"ReserveDiskSpace","pos":[0,16]}]},{"pos":[14864,14898],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15343,15404],"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object)","pos":[0,61]}]},{"pos":[16014,16048],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16111,16145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16231,16265],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16323,16357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16418,16452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16975,17038],"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])","pos":[0,63]}]},{"pos":[17654,17688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17751,17785],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17871,17905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17963,17997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18060,18094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18615,18677],"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)","pos":[0,62]}]},{"pos":[19293,19327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19390,19424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19510,19544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19602,19636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19700,19734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20288,20359],"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])","pos":[0,71]}]},{"pos":[21007,21041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21104,21138],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21224,21258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21316,21350],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21413,21447],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21510,21544],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21864,21877],"content":"Write(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[22251,22285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22538,22555],"content":"WriteLine(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"pos":[22941,22975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23105,23137],"content":"System.Diagnostics.TraceListener","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Diagnostics.TraceListener","pos":[0,32]}]},{"pos":[23291,23313],"content":"FileLogTraceListener()","needQuote":true,"needEscape":true,"nodes":[{"content":"FileLogTraceListener()","pos":[0,22]}]},{"pos":[23628,23656],"content":"FileLogTraceListener(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FileLogTraceListener(String)","pos":[0,28]}]},{"pos":[23881,23887],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[24091,24097],"content":"Append","needQuote":true,"needEscape":true,"nodes":[{"content":"Append","pos":[0,6]}]},{"pos":[24279,24286],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24495,24504],"content":"AutoFlush","needQuote":true,"needEscape":true,"nodes":[{"content":"AutoFlush","pos":[0,9]}]},{"pos":[24692,24699],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24911,24923],"content":"BaseFileName","needQuote":true,"needEscape":true,"nodes":[{"content":"BaseFileName","pos":[0,12]}]},{"pos":[25116,25122],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25325,25332],"content":"Close()","needQuote":true,"needEscape":true,"nodes":[{"content":"Close()","pos":[0,7]}]},{"pos":[25611,25625],"content":"CustomLocation","needQuote":true,"needEscape":true,"nodes":[{"content":"CustomLocation","pos":[0,14]}]},{"pos":[25822,25828],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26035,26044],"content":"Delimiter","needQuote":true,"needEscape":true,"nodes":[{"content":"Delimiter","pos":[0,9]}]},{"pos":[26231,26237],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[26461,26487],"content":"DiskSpaceExhaustedBehavior","needQuote":true,"needEscape":true,"nodes":[{"content":"DiskSpaceExhaustedBehavior","pos":[0,26]}]},{"pos":[26772,26796],"content":"DiskSpaceExhaustedOption","needQuote":true,"needEscape":true,"nodes":[{"content":"DiskSpaceExhaustedOption","pos":[0,24]}]},{"pos":[27076,27092],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[27294,27301],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27509,27517],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[27714,27722],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[27934,27941],"content":"Flush()","needQuote":true,"needEscape":true,"nodes":[{"content":"Flush()","pos":[0,7]}]},{"pos":[28221,28236],"content":"FullLogFileName","needQuote":true,"needEscape":true,"nodes":[{"content":"FullLogFileName","pos":[0,15]}]},{"pos":[28435,28441],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[28661,28685],"content":"GetSupportedAttributes()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSupportedAttributes()","pos":[0,24]}]},{"pos":[28902,28908],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29123,29138],"content":"IncludeHostName","needQuote":true,"needEscape":true,"nodes":[{"content":"IncludeHostName","pos":[0,15]}]},{"pos":[29338,29345],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29553,29561],"content":"Location","needQuote":true,"needEscape":true,"nodes":[{"content":"Location","pos":[0,8]}]},{"pos":[29801,29816],"content":"LogFileLocation","needQuote":true,"needEscape":true,"nodes":[{"content":"LogFileLocation","pos":[0,15]}]},{"pos":[30078,30101],"content":"LogFileCreationSchedule","needQuote":true,"needEscape":true,"nodes":[{"content":"LogFileCreationSchedule","pos":[0,23]}]},{"pos":[30385,30414],"content":"LogFileCreationScheduleOption","needQuote":true,"needEscape":true,"nodes":[{"content":"LogFileCreationScheduleOption","pos":[0,29]}]},{"pos":[30692,30703],"content":"MaxFileSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxFileSize","pos":[0,11]}]},{"pos":[30893,30898],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[31110,31126],"content":"ReserveDiskSpace","needQuote":true,"needEscape":true,"nodes":[{"content":"ReserveDiskSpace","pos":[0,16]}]},{"pos":[31326,31331],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[31647,31708],"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object)","pos":[0,61]}]},{"pos":[32031,32046],"content":"TraceEventCache","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"pos":[32192,32198],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32345,32359],"content":"TraceEventType","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"pos":[32502,32507],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32621,32627],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32947,33010],"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])","pos":[0,63]}]},{"pos":[33337,33352],"content":"TraceEventCache","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"pos":[33498,33504],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[33651,33665],"content":"TraceEventType","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"pos":[33808,33813],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33927,33933],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34254,34316],"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)","pos":[0,62]}]},{"pos":[34641,34656],"content":"TraceEventCache","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"pos":[34802,34808],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[34955,34969],"content":"TraceEventType","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"pos":[35112,35117],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[35231,35237],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35572,35643],"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])","pos":[0,71]}]},{"pos":[35986,36001],"content":"TraceEventCache","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventCache","pos":[0,15]}]},{"pos":[36147,36153],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36300,36314],"content":"TraceEventType","needQuote":true,"needEscape":true,"nodes":[{"content":"TraceEventType","pos":[0,14]}]},{"pos":[36457,36462],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[36576,36582],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36698,36704],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[36924,36937],"content":"Write(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Write(String)","pos":[0,13]}]},{"pos":[37132,37138],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37360,37377],"content":"WriteLine(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"WriteLine(String)","pos":[0,17]}]},{"pos":[37580,37586],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  id: FileLogTraceListener\n  children:\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)\n  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)\n  langs:\n  - csharp\n  name: FileLogTraceListener\n  nameWithType: FileLogTraceListener\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public class FileLogTraceListener : System.Diagnostics.TraceListener\n  inheritance:\n  - System.Diagnostics.TraceListener\n  implements: []\n  inheritedMembers: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: FileLogTraceListener()\n  nameWithType: FileLogTraceListener.FileLogTraceListener()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public FileLogTraceListener ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: FileLogTraceListener(String)\n  nameWithType: FileLogTraceListener.FileLogTraceListener(String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public FileLogTraceListener (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append\n  id: Append\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Append\n  nameWithType: FileLogTraceListener.Append\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public bool Append { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush\n  id: AutoFlush\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: AutoFlush\n  nameWithType: FileLogTraceListener.AutoFlush\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public bool AutoFlush { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName\n  id: BaseFileName\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: BaseFileName\n  nameWithType: FileLogTraceListener.BaseFileName\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public string BaseFileName { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close\n  id: Close\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: FileLogTraceListener.Close()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation\n  id: CustomLocation\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: CustomLocation\n  nameWithType: FileLogTraceListener.CustomLocation\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public string CustomLocation { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter\n  id: Delimiter\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Delimiter\n  nameWithType: FileLogTraceListener.Delimiter\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public string Delimiter { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior\n  id: DiskSpaceExhaustedBehavior\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: DiskSpaceExhaustedBehavior\n  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }\n    return:\n      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: FileLogTraceListener.Dispose(Boolean)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding\n  id: Encoding\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Encoding\n  nameWithType: FileLogTraceListener.Encoding\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public System.Text.Encoding Encoding { get; set; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush\n  id: Flush\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: FileLogTraceListener.Flush()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName\n  id: FullLogFileName\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: FullLogFileName\n  nameWithType: FileLogTraceListener.FullLogFileName\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public string FullLogFileName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes\n  id: GetSupportedAttributes\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: GetSupportedAttributes()\n  nameWithType: FileLogTraceListener.GetSupportedAttributes()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: protected override string[] GetSupportedAttributes ();\n    parameters: []\n    return:\n      type: System.String[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName\n  id: IncludeHostName\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: IncludeHostName\n  nameWithType: FileLogTraceListener.IncludeHostName\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public bool IncludeHostName { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location\n  id: Location\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Location\n  nameWithType: FileLogTraceListener.Location\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }\n    return:\n      type: Microsoft.VisualBasic.Logging.LogFileLocation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule\n  id: LogFileCreationSchedule\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: LogFileCreationSchedule\n  nameWithType: FileLogTraceListener.LogFileCreationSchedule\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }\n    return:\n      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize\n  id: MaxFileSize\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: MaxFileSize\n  nameWithType: FileLogTraceListener.MaxFileSize\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public long MaxFileSize { get; set; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace\n  id: ReserveDiskSpace\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: ReserveDiskSpace\n  nameWithType: FileLogTraceListener.ReserveDiskSpace\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public long ReserveDiskSpace { get; set; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: Parameter description to be filled\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: Parameter description to be filled\n    - id: id\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: data\n      type: System.Object\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: Parameter description to be filled\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: Parameter description to be filled\n    - id: id\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: data\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: Parameter description to be filled\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: Parameter description to be filled\n    - id: id\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);\n    parameters:\n    - id: eventCache\n      type: System.Diagnostics.TraceEventCache\n      description: Parameter description to be filled\n    - id: source\n      type: System.String\n      description: Parameter description to be filled\n    - id: eventType\n      type: System.Diagnostics.TraceEventType\n      description: Parameter description to be filled\n    - id: id\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: args\n      type: System.Object[]\n      description: Parameter description to be filled\n  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)\n  id: Write(System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: Write(String)\n  nameWithType: FileLogTraceListener.Write(String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void Write (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)\n  id: WriteLine(System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  langs:\n  - csharp\n  name: WriteLine(String)\n  nameWithType: FileLogTraceListener.WriteLine(String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)\n  type: Method\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic.Logging\n  syntax:\n    content: public override void WriteLine (string message);\n    parameters:\n    - id: message\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Diagnostics.TraceListener\n  isExternal: false\n  name: System.Diagnostics.TraceListener\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: FileLogTraceListener()\n  nameWithType: FileLogTraceListener.FileLogTraceListener()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener()\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: FileLogTraceListener(String)\n  nameWithType: FileLogTraceListener.FileLogTraceListener(String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FileLogTraceListener(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Append\n  nameWithType: FileLogTraceListener.Append\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: AutoFlush\n  nameWithType: FileLogTraceListener.AutoFlush\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: BaseFileName\n  nameWithType: FileLogTraceListener.BaseFileName\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Close()\n  nameWithType: FileLogTraceListener.Close()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close()\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: CustomLocation\n  nameWithType: FileLogTraceListener.CustomLocation\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Delimiter\n  nameWithType: FileLogTraceListener.Delimiter\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: DiskSpaceExhaustedBehavior\n  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior\n- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption\n  parent: Microsoft.VisualBasic.Logging\n  isExternal: false\n  name: DiskSpaceExhaustedOption\n  nameWithType: DiskSpaceExhaustedOption\n  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: FileLogTraceListener.Dispose(Boolean)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Encoding\n  nameWithType: FileLogTraceListener.Encoding\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Flush()\n  nameWithType: FileLogTraceListener.Flush()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush()\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: FullLogFileName\n  nameWithType: FileLogTraceListener.FullLogFileName\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: GetSupportedAttributes()\n  nameWithType: FileLogTraceListener.GetSupportedAttributes()\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String[]\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: IncludeHostName\n  nameWithType: FileLogTraceListener.IncludeHostName\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Location\n  nameWithType: FileLogTraceListener.Location\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location\n- uid: Microsoft.VisualBasic.Logging.LogFileLocation\n  parent: Microsoft.VisualBasic.Logging\n  isExternal: false\n  name: LogFileLocation\n  nameWithType: LogFileLocation\n  fullName: Microsoft.VisualBasic.Logging.LogFileLocation\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: LogFileCreationSchedule\n  nameWithType: FileLogTraceListener.LogFileCreationSchedule\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule\n- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption\n  parent: Microsoft.VisualBasic.Logging\n  isExternal: false\n  name: LogFileCreationScheduleOption\n  nameWithType: LogFileCreationScheduleOption\n  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: MaxFileSize\n  nameWithType: FileLogTraceListener.MaxFileSize\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: ReserveDiskSpace\n  nameWithType: FileLogTraceListener.ReserveDiskSpace\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  nameWithType: FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])\n- uid: System.Diagnostics.TraceEventCache\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventCache\n  nameWithType: TraceEventCache\n  fullName: System.Diagnostics.TraceEventCache\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceEventType\n  parent: System.Diagnostics\n  isExternal: true\n  name: TraceEventType\n  nameWithType: TraceEventType\n  fullName: System.Diagnostics.TraceEventType\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: Write(String)\n  nameWithType: FileLogTraceListener.Write(String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  name: WriteLine(String)\n  nameWithType: FileLogTraceListener.WriteLine(String)\n  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  nameWithType: FileLogTraceListener.\n- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*\n  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener\n  isExternal: false\n  nameWithType: FileLogTraceListener.\n"}