{"nodes":[{"pos":[338,350],"content":"EventLogLink","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogLink","pos":[0,12]}]},{"pos":[1074,1085],"content":"DisplayName","needQuote":true,"needEscape":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[1409,1443],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1662,1672],"content":"IsImported","needQuote":true,"needEscape":true,"nodes":[{"content":"IsImported","pos":[0,10]}]},{"pos":[1992,2026],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2239,2246],"content":"LogName","needQuote":true,"needEscape":true,"nodes":[{"content":"LogName","pos":[0,7]}]},{"pos":[2558,2592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2703,2716],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[2870,2881],"content":"DisplayName","needQuote":true,"needEscape":true,"nodes":[{"content":"DisplayName","pos":[0,11]}]},{"pos":[3061,3067],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[3269,3279],"content":"IsImported","needQuote":true,"needEscape":true,"nodes":[{"content":"IsImported","pos":[0,10]}]},{"pos":[3458,3465],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[3666,3673],"content":"LogName","needQuote":true,"needEscape":true,"nodes":[{"content":"LogName","pos":[0,7]}]},{"pos":[3845,3851],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink\n  id: EventLogLink\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  - System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  - System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  langs:\n  - csharp\n  name: EventLogLink\n  nameWithType: EventLogLink\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink\n  type: Class\n  syntax:\n    content: public sealed class EventLogLink\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  id: DisplayName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string DisplayName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  id: IsImported\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public bool IsImported { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  id: LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  langs:\n  - csharp\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string LogName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: DisplayName\n  nameWithType: EventLogLink.DisplayName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.DisplayName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: IsImported\n  nameWithType: EventLogLink.IsImported\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.IsImported\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogLink\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogLink.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogLink.LogName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}