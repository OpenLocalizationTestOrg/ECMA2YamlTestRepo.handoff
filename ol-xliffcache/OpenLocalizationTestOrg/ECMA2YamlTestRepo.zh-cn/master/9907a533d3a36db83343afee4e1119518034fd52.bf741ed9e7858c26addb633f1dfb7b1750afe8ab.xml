{"nodes":[{"pos":[1799,1817],"content":"PropertyCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyCollection","pos":[0,18]}]},{"pos":[2625,2641],"content":"Contains(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(String)","pos":[0,16]}]},{"pos":[3014,3048],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3107,3141],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3474,3513],"content":"CopyTo(PropertyValueCollection[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(PropertyValueCollection[],Int32)","pos":[0,39]}]},{"pos":[4008,4042],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4103,4137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4338,4343],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[4650,4684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4901,4916],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[5328,5362],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5591,5603],"content":"Item(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(String)","pos":[0,12]}]},{"pos":[6017,6051],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6144,6178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6395,6408],"content":"PropertyNames","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyNames","pos":[0,13]}]},{"pos":[6784,6818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7151,7201],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[7640,7674],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7735,7769],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8064,8109],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[8532,8566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8849,8888],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[9294,9328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9659,9708],"content":"System.Collections.IDictionary.Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Add(Object,Object)","pos":[0,49]}]},{"pos":[10143,10177],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10239,10273],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10550,10588],"content":"System.Collections.IDictionary.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Clear()","pos":[0,38]}]},{"pos":[11235,11282],"content":"System.Collections.IDictionary.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Contains(Object)","pos":[0,47]}]},{"pos":[11708,11742],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11801,11835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12124,12166],"content":"System.Collections.IDictionary.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsFixedSize","pos":[0,42]}]},{"pos":[12580,12614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12901,12942],"content":"System.Collections.IDictionary.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsReadOnly","pos":[0,41]}]},{"pos":[13353,13387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13692,13735],"content":"System.Collections.IDictionary.Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Item(Object)","pos":[0,43]}]},{"pos":[14180,14214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14272,14306],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14581,14616],"content":"System.Collections.IDictionary.Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Keys","pos":[0,35]}]},{"pos":[15051,15085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15394,15439],"content":"System.Collections.IDictionary.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Remove(Object)","pos":[0,45]}]},{"pos":[15855,15889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16182,16228],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[16687,16721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16924,16930],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[17285,17319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17430,17443],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[17601,17617],"content":"Contains(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(String)","pos":[0,16]}]},{"pos":[17810,17817],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17935,17941],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18196,18235],"content":"CopyTo(PropertyValueCollection[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(PropertyValueCollection[],Int32)","pos":[0,39]}]},{"pos":[18526,18549],"content":"PropertyValueCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyValueCollection","pos":[0,23]}]},{"pos":[18718,18723],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18910,18915],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[19084,19089],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19284,19299],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[19528,19549],"content":"IDictionaryEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionaryEnumerator","pos":[0,21]}]},{"pos":[19794,19806],"content":"Item(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(String)","pos":[0,12]}]},{"pos":[20043,20066],"content":"PropertyValueCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyValueCollection","pos":[0,23]}]},{"pos":[20234,20240],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20437,20450],"content":"PropertyNames","needQuote":true,"needEscape":true,"nodes":[{"content":"PropertyNames","pos":[0,13]}]},{"pos":[20665,20676],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[20946,20996],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[21255,21260],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[21373,21378],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21605,21650],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[21901,21908],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22133,22172],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[22410,22416],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22663,22712],"content":"System.Collections.IDictionary.Add(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Add(Object,Object)","pos":[0,49]}]},{"pos":[22970,22976],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23092,23098],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23318,23356],"content":"System.Collections.IDictionary.Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Clear()","pos":[0,38]}]},{"pos":[23714,23761],"content":"System.Collections.IDictionary.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Contains(Object)","pos":[0,47]}]},{"pos":[24016,24023],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24141,24147],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24373,24415],"content":"System.Collections.IDictionary.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsFixedSize","pos":[0,42]}]},{"pos":[24660,24667],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[24894,24935],"content":"System.Collections.IDictionary.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.IsReadOnly","pos":[0,41]}]},{"pos":[25178,25185],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[25421,25464],"content":"System.Collections.IDictionary.Item(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Item(Object)","pos":[0,43]}]},{"pos":[25710,25716],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[25832,25838],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[26057,26092],"content":"System.Collections.IDictionary.Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Keys","pos":[0,35]}]},{"pos":[26351,26362],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]},{"pos":[26620,26665],"content":"System.Collections.IDictionary.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IDictionary.Remove(Object)","pos":[0,45]}]},{"pos":[26915,26921],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[27149,27195],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[27476,27487],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[27699,27705],"content":"Values","needQuote":true,"needEscape":true,"nodes":[{"content":"Values","pos":[0,6]}]},{"pos":[27906,27917],"content":"ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ICollection","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.PropertyCollection\n  id: PropertyCollection\n  children:\n  - System.DirectoryServices.PropertyCollection.Contains(System.String)\n  - System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)\n  - System.DirectoryServices.PropertyCollection.Count\n  - System.DirectoryServices.PropertyCollection.GetEnumerator\n  - System.DirectoryServices.PropertyCollection.Item(System.String)\n  - System.DirectoryServices.PropertyCollection.PropertyNames\n  - System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized\n  - System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys\n  - System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)\n  - System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.DirectoryServices.PropertyCollection.Values\n  langs:\n  - csharp\n  name: PropertyCollection\n  nameWithType: PropertyCollection\n  fullName: System.DirectoryServices.PropertyCollection\n  type: Class\n  syntax:\n    content: 'public class PropertyCollection : System.Collections.IDictionary'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IDictionary\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.Contains(System.String)\n  id: Contains(System.String)\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: Contains(String)\n  nameWithType: PropertyCollection.Contains(String)\n  fullName: System.DirectoryServices.PropertyCollection.Contains(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public bool Contains (string propertyName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)\n  id: CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: CopyTo(PropertyValueCollection[],Int32)\n  nameWithType: PropertyCollection.CopyTo(PropertyValueCollection[],Int32)\n  fullName: System.DirectoryServices.PropertyCollection.CopyTo(PropertyValueCollection[],Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public void CopyTo (System.DirectoryServices.PropertyValueCollection[] array, int index);\n    parameters:\n    - id: array\n      type: System.DirectoryServices.PropertyValueCollection[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.Count\n  id: Count\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: PropertyCollection.Count\n  fullName: System.DirectoryServices.PropertyCollection.Count\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: PropertyCollection.GetEnumerator()\n  fullName: System.DirectoryServices.PropertyCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IDictionaryEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: PropertyCollection.Item(String)\n  fullName: System.DirectoryServices.PropertyCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.DirectoryServices.PropertyValueCollection this[string propertyName] { get; }\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.PropertyValueCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.PropertyNames\n  id: PropertyNames\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: PropertyNames\n  nameWithType: PropertyCollection.PropertyNames\n  fullName: System.DirectoryServices.PropertyCollection.PropertyNames\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.Collections.ICollection PropertyNames { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PropertyCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PropertyCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)\n  id: System#Collections#IDictionary#Add(System.Object,System.Object)\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Add(Object,Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void IDictionary.Add (object key, object value);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear\n  id: System#Collections#IDictionary#Clear\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Clear()\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Clear()\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Clear()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void IDictionary.Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)\n  id: System#Collections#IDictionary#Contains(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Contains(Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Contains(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool IDictionary.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize\n  id: System#Collections#IDictionary#IsFixedSize\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: PropertyCollection.System.Collections.IDictionary.IsFixedSize\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsFixedSize\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool System.Collections.IDictionary.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly\n  id: System#Collections#IDictionary#IsReadOnly\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: PropertyCollection.System.Collections.IDictionary.IsReadOnly\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsReadOnly\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: bool System.Collections.IDictionary.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)\n  id: System#Collections#IDictionary#Item(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Item(Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Item(Object)\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: object System.Collections.IDictionary.Item[object key] { get; set; }\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys\n  id: System#Collections#IDictionary#Keys\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Keys\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Keys\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Keys\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: System.Collections.ICollection System.Collections.IDictionary.Keys { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)\n  id: System#Collections#IDictionary#Remove(System.Object)\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Remove(Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Remove(Object)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: void IDictionary.Remove (object key);\n    parameters:\n    - id: key\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: PropertyCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.PropertyCollection.Values\n  id: Values\n  parent: System.DirectoryServices.PropertyCollection\n  langs:\n  - csharp\n  name: Values\n  nameWithType: PropertyCollection.Values\n  fullName: System.DirectoryServices.PropertyCollection.Values\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices\n  syntax:\n    content: public System.Collections.ICollection Values { get; }\n    return:\n      type: System.Collections.ICollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.DirectoryServices.PropertyCollection.Contains(System.String)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: Contains(String)\n  nameWithType: PropertyCollection.Contains(String)\n  fullName: System.DirectoryServices.PropertyCollection.Contains(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.PropertyCollection.CopyTo(System.DirectoryServices.PropertyValueCollection[],System.Int32)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: CopyTo(PropertyValueCollection[],Int32)\n  nameWithType: PropertyCollection.CopyTo(PropertyValueCollection[],Int32)\n  fullName: System.DirectoryServices.PropertyCollection.CopyTo(PropertyValueCollection[],Int32)\n- uid: System.DirectoryServices.PropertyValueCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: PropertyValueCollection\n  nameWithType: PropertyValueCollection\n  fullName: System.DirectoryServices.PropertyValueCollection[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.PropertyCollection.Count\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: Count\n  nameWithType: PropertyCollection.Count\n  fullName: System.DirectoryServices.PropertyCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.PropertyCollection.GetEnumerator\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: PropertyCollection.GetEnumerator()\n  fullName: System.DirectoryServices.PropertyCollection.GetEnumerator()\n- uid: System.Collections.IDictionaryEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IDictionaryEnumerator\n  nameWithType: IDictionaryEnumerator\n  fullName: System.Collections.IDictionaryEnumerator\n- uid: System.DirectoryServices.PropertyCollection.Item(System.String)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: PropertyCollection.Item(String)\n  fullName: System.DirectoryServices.PropertyCollection.Item(String)\n- uid: System.DirectoryServices.PropertyValueCollection\n  parent: System.DirectoryServices\n  isExternal: false\n  name: PropertyValueCollection\n  nameWithType: PropertyValueCollection\n  fullName: System.DirectoryServices.PropertyValueCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.PropertyCollection.PropertyNames\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: PropertyNames\n  nameWithType: PropertyCollection.PropertyNames\n  fullName: System.DirectoryServices.PropertyCollection.PropertyNames\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: PropertyCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#ICollection#SyncRoot\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: PropertyCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Add(System.Object,System.Object)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.Add(Object,Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Add(Object,Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Add(Object,Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Clear\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.Clear()\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Clear()\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Clear()\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Contains(System.Object)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.Contains(Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Contains(Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsFixedSize\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.IsFixedSize\n  nameWithType: PropertyCollection.System.Collections.IDictionary.IsFixedSize\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#IsReadOnly\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.IsReadOnly\n  nameWithType: PropertyCollection.System.Collections.IDictionary.IsReadOnly\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Item(System.Object)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.Item(Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Item(Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Item(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Keys\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.Keys\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Keys\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Keys\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IDictionary#Remove(System.Object)\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IDictionary.Remove(Object)\n  nameWithType: PropertyCollection.System.Collections.IDictionary.Remove(Object)\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IDictionary.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.DirectoryServices.PropertyCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: PropertyCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.DirectoryServices.PropertyCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.DirectoryServices.PropertyCollection.Values\n  parent: System.DirectoryServices.PropertyCollection\n  isExternal: false\n  name: Values\n  nameWithType: PropertyCollection.Values\n  fullName: System.DirectoryServices.PropertyCollection.Values\n- uid: System.Collections.ICollection\n  parent: System.Collections\n  isExternal: false\n  name: ICollection\n  nameWithType: ICollection\n  fullName: System.Collections.ICollection\n"}