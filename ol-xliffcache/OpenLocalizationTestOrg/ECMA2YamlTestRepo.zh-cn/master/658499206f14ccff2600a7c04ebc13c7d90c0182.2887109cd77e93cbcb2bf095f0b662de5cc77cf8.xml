{"nodes":[{"pos":[1361,1373],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[5940,5954],"content":"PathGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry()","pos":[0,14]}]},{"pos":[6543,6580],"content":"PathGeometry(IEnumerable<ph id=\"ph1\">&lt;PathFigure&gt;</ph>)","needQuote":true,"needEscape":true,"source":"PathGeometry(IEnumerable<PathFigure>)"},{"pos":[7084,7118],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7569,7625],"content":"PathGeometry(IEnumerable<ph id=\"ph1\">&lt;PathFigure&gt;</ph>,FillRule,Transform)","needQuote":true,"needEscape":true,"source":"PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)"},{"pos":[8249,8283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8364,8398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8481,8515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8770,8791],"content":"AddGeometry(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddGeometry(Geometry)","pos":[0,21]}]},{"pos":[9180,9214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9397,9403],"content":"Bounds","needQuote":true,"needEscape":true,"nodes":[{"content":"Bounds","pos":[0,6]}]},{"pos":[9717,9751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9932,9939],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[10359,10366],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[10712,10746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10951,10970],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[11352,11386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11655,11683],"content":"CreateFromGeometry(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromGeometry(Geometry)","pos":[0,28]}]},{"pos":[12129,12163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12241,12275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12482,12502],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[12881,12915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13100,13107],"content":"Figures","needQuote":true,"needEscape":true,"nodes":[{"content":"Figures","pos":[0,7]}]},{"pos":[13464,13498],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13699,13714],"content":"FiguresProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"FiguresProperty","pos":[0,15]}]},{"pos":[14079,14113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14300,14308],"content":"FillRule","needQuote":true,"needEscape":true,"nodes":[{"content":"FillRule","pos":[0,8]}]},{"pos":[14644,14678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14881,14897],"content":"FillRuleProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"FillRuleProperty","pos":[0,16]}]},{"pos":[15265,15299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15636,15680],"content":"GetPointAtFractionLength(Double,Point,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPointAtFractionLength(Double,Point,Point)","pos":[0,44]}]},{"pos":[16155,16189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16258,16292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16363,16397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16582,16591],"content":"IsEmpty()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty()","pos":[0,9]}]},{"pos":[16904,16938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17135,17150],"content":"MayHaveCurves()","needQuote":true,"needEscape":true,"nodes":[{"content":"MayHaveCurves()","pos":[0,15]}]},{"pos":[17481,17515],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17704,17715],"content":"OnChanged()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnChanged()","pos":[0,11]}]},{"pos":[18105,18134],"content":"System.Windows.Media.Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Geometry","pos":[0,29]}]},{"pos":[18254,18268],"content":"PathGeometry()","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry()","pos":[0,14]}]},{"pos":[18566,18603],"content":"PathGeometry(IEnumerable<ph id=\"ph1\">&lt;PathFigure&gt;</ph>)","needQuote":true,"needEscape":true,"source":"PathGeometry(IEnumerable<PathFigure>)"},{"pos":[18899,18922],"content":"IEnumerable<ph id=\"ph1\">&lt;PathFigure&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<PathFigure>"},{"pos":[19300,19356],"content":"PathGeometry(IEnumerable<ph id=\"ph1\">&lt;PathFigure&gt;</ph>,FillRule,Transform)","needQuote":true,"needEscape":true,"source":"PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)"},{"pos":[19690,19713],"content":"IEnumerable<ph id=\"ph1\">&lt;PathFigure&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<PathFigure>"},{"pos":[19934,19942],"content":"FillRule","needQuote":true,"needEscape":true,"nodes":[{"content":"FillRule","pos":[0,8]}]},{"pos":[20107,20116],"content":"Transform","needQuote":true,"needEscape":true,"nodes":[{"content":"Transform","pos":[0,9]}]},{"pos":[20342,20363],"content":"AddGeometry(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddGeometry(Geometry)","pos":[0,21]}]},{"pos":[20579,20587],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[20775,20781],"content":"Bounds","needQuote":true,"needEscape":true,"nodes":[{"content":"Bounds","pos":[0,6]}]},{"pos":[20950,20954],"content":"Rect","needQuote":true,"needEscape":true,"nodes":[{"content":"Rect","pos":[0,4]}]},{"pos":[21127,21134],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[21345,21352],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[21544,21556],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[21763,21782],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[21998,22010],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[22249,22277],"content":"CreateFromGeometry(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateFromGeometry(Geometry)","pos":[0,28]}]},{"pos":[22511,22523],"content":"PathGeometry","needQuote":true,"needEscape":true,"nodes":[{"content":"PathGeometry","pos":[0,12]}]},{"pos":[22695,22703],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[22903,22923],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[23125,23134],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[23319,23326],"content":"Figures","needQuote":true,"needEscape":true,"nodes":[{"content":"Figures","pos":[0,7]}]},{"pos":[23526,23546],"content":"PathFigureCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"PathFigureCollection","pos":[0,20]}]},{"pos":[23767,23782],"content":"FiguresProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"FiguresProperty","pos":[0,15]}]},{"pos":[23983,24001],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[24205,24213],"content":"FillRule","needQuote":true,"needEscape":true,"nodes":[{"content":"FillRule","pos":[0,8]}]},{"pos":[24403,24411],"content":"FillRule","needQuote":true,"needEscape":true,"nodes":[{"content":"FillRule","pos":[0,8]}]},{"pos":[24609,24625],"content":"FillRuleProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"FillRuleProperty","pos":[0,16]}]},{"pos":[24828,24846],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[25125,25169],"content":"GetPointAtFractionLength(Double,Point,Point)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPointAtFractionLength(Double,Point,Point)","pos":[0,44]}]},{"pos":[25401,25407],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[25537,25542],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[25678,25683],"content":"Point","needQuote":true,"needEscape":true,"nodes":[{"content":"Point","pos":[0,5]}]},{"pos":[25860,25869],"content":"IsEmpty()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEmpty()","pos":[0,9]}]},{"pos":[26032,26039],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26218,26233],"content":"MayHaveCurves()","needQuote":true,"needEscape":true,"nodes":[{"content":"MayHaveCurves()","pos":[0,15]}]},{"pos":[26408,26415],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26590,26601],"content":"OnChanged()","needQuote":true,"needEscape":true,"nodes":[{"content":"OnChanged()","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.PathGeometry\n  id: PathGeometry\n  children:\n  - System.Windows.Media.PathGeometry.#ctor\n  - System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})\n  - System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure},System.Windows.Media.FillRule,System.Windows.Media.Transform)\n  - System.Windows.Media.PathGeometry.AddGeometry(System.Windows.Media.Geometry)\n  - System.Windows.Media.PathGeometry.Bounds\n  - System.Windows.Media.PathGeometry.Clear\n  - System.Windows.Media.PathGeometry.Clone\n  - System.Windows.Media.PathGeometry.CloneCurrentValue\n  - System.Windows.Media.PathGeometry.CreateFromGeometry(System.Windows.Media.Geometry)\n  - System.Windows.Media.PathGeometry.CreateInstanceCore\n  - System.Windows.Media.PathGeometry.Figures\n  - System.Windows.Media.PathGeometry.FiguresProperty\n  - System.Windows.Media.PathGeometry.FillRule\n  - System.Windows.Media.PathGeometry.FillRuleProperty\n  - System.Windows.Media.PathGeometry.GetPointAtFractionLength(System.Double,System.Windows.Point@,System.Windows.Point@)\n  - System.Windows.Media.PathGeometry.IsEmpty\n  - System.Windows.Media.PathGeometry.MayHaveCurves\n  - System.Windows.Media.PathGeometry.OnChanged\n  langs:\n  - csharp\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n  type: Class\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"Figures\")]\n\n      public sealed class PathGeometry : System.Windows.Media.Geometry\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Geometry\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform)\n  - System.Windows.Media.Geometry.Combine(System.Windows.Media.Geometry,System.Windows.Media.Geometry,System.Windows.Media.GeometryCombineMode,System.Windows.Media.Transform,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.Empty\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Point)\n  - System.Windows.Media.Geometry.FillContains(System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.FillContainsWithDetail(System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetArea\n  - System.Windows.Media.Geometry.GetArea(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetFlattenedPathGeometry\n  - System.Windows.Media.Geometry.GetFlattenedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetOutlinedPathGeometry\n  - System.Windows.Media.Geometry.GetOutlinedPathGeometry(System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen)\n  - System.Windows.Media.Geometry.GetRenderBounds(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen)\n  - System.Windows.Media.Geometry.GetWidenedPathGeometry(System.Windows.Media.Pen,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.Parse(System.String)\n  - System.Windows.Media.Geometry.ShouldSerializeTransform\n  - System.Windows.Media.Geometry.StandardFlatteningTolerance\n  - System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point)\n  - System.Windows.Media.Geometry.StrokeContains(System.Windows.Media.Pen,System.Windows.Point,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry)\n  - System.Windows.Media.Geometry.StrokeContainsWithDetail(System.Windows.Media.Pen,System.Windows.Media.Geometry,System.Double,System.Windows.Media.ToleranceType)\n  - System.Windows.Media.Geometry.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.Media.Geometry.ToString\n  - System.Windows.Media.Geometry.ToString(System.IFormatProvider)\n  - System.Windows.Media.Geometry.Transform\n  - System.Windows.Media.Geometry.TransformProperty\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: PathGeometry()\n  nameWithType: PathGeometry.PathGeometry()\n  fullName: System.Windows.Media.PathGeometry.PathGeometry()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public PathGeometry ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})'\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: PathGeometry(IEnumerable<PathFigure>)\n  nameWithType: PathGeometry.PathGeometry(IEnumerable<PathFigure>)\n  fullName: System.Windows.Media.PathGeometry.PathGeometry(IEnumerable<PathFigure>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public PathGeometry (System.Collections.Generic.IEnumerable<System.Windows.Media.PathFigure> figures);\n    parameters:\n    - id: figures\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure},System.Windows.Media.FillRule,System.Windows.Media.Transform)\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure},System.Windows.Media.FillRule,System.Windows.Media.Transform)'\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)\n  nameWithType: PathGeometry.PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)\n  fullName: System.Windows.Media.PathGeometry.PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public PathGeometry (System.Collections.Generic.IEnumerable<System.Windows.Media.PathFigure> figures, System.Windows.Media.FillRule fillRule, System.Windows.Media.Transform transform);\n    parameters:\n    - id: figures\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure}\n      description: Parameter description to be filled\n    - id: fillRule\n      type: System.Windows.Media.FillRule\n      description: Parameter description to be filled\n    - id: transform\n      type: System.Windows.Media.Transform\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.AddGeometry(System.Windows.Media.Geometry)\n  id: AddGeometry(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: AddGeometry(Geometry)\n  nameWithType: PathGeometry.AddGeometry(Geometry)\n  fullName: System.Windows.Media.PathGeometry.AddGeometry(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void AddGeometry (System.Windows.Media.Geometry geometry);\n    parameters:\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.Bounds\n  id: Bounds\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: Bounds\n  nameWithType: PathGeometry.Bounds\n  fullName: System.Windows.Media.PathGeometry.Bounds\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override System.Windows.Rect Bounds { get; }\n    return:\n      type: System.Windows.Rect\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.Clear\n  id: Clear\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: PathGeometry.Clear()\n  fullName: System.Windows.Media.PathGeometry.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.Clone\n  id: Clone\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: PathGeometry.Clone()\n  fullName: System.Windows.Media.PathGeometry.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathGeometry Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: PathGeometry.CloneCurrentValue()\n  fullName: System.Windows.Media.PathGeometry.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathGeometry CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.CreateFromGeometry(System.Windows.Media.Geometry)\n  id: CreateFromGeometry(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: CreateFromGeometry(Geometry)\n  nameWithType: PathGeometry.CreateFromGeometry(Geometry)\n  fullName: System.Windows.Media.PathGeometry.CreateFromGeometry(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static System.Windows.Media.PathGeometry CreateFromGeometry (System.Windows.Media.Geometry geometry);\n    parameters:\n    - id: geometry\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: PathGeometry.CreateInstanceCore()\n  fullName: System.Windows.Media.PathGeometry.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.Figures\n  id: Figures\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: Figures\n  nameWithType: PathGeometry.Figures\n  fullName: System.Windows.Media.PathGeometry.Figures\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.PathFigureCollection Figures { get; set; }\n    return:\n      type: System.Windows.Media.PathFigureCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.FiguresProperty\n  id: FiguresProperty\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: FiguresProperty\n  nameWithType: PathGeometry.FiguresProperty\n  fullName: System.Windows.Media.PathGeometry.FiguresProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FiguresProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.FillRule\n  id: FillRule\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: FillRule\n  nameWithType: PathGeometry.FillRule\n  fullName: System.Windows.Media.PathGeometry.FillRule\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.FillRule FillRule { get; set; }\n    return:\n      type: System.Windows.Media.FillRule\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.FillRuleProperty\n  id: FillRuleProperty\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: FillRuleProperty\n  nameWithType: PathGeometry.FillRuleProperty\n  fullName: System.Windows.Media.PathGeometry.FillRuleProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FillRuleProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.GetPointAtFractionLength(System.Double,System.Windows.Point@,System.Windows.Point@)\n  id: GetPointAtFractionLength(System.Double,System.Windows.Point@,System.Windows.Point@)\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: GetPointAtFractionLength(Double,Point,Point)\n  nameWithType: PathGeometry.GetPointAtFractionLength(Double,Point,Point)\n  fullName: System.Windows.Media.PathGeometry.GetPointAtFractionLength(Double,Point,Point)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void GetPointAtFractionLength (double progress, out System.Windows.Point point, out System.Windows.Point tangent);\n    parameters:\n    - id: progress\n      type: System.Double\n      description: Parameter description to be filled\n    - id: point\n      type: System.Windows.Point\n      description: Parameter description to be filled\n    - id: tangent\n      type: System.Windows.Point\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.IsEmpty\n  id: IsEmpty\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: IsEmpty()\n  nameWithType: PathGeometry.IsEmpty()\n  fullName: System.Windows.Media.PathGeometry.IsEmpty()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool IsEmpty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.MayHaveCurves\n  id: MayHaveCurves\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: MayHaveCurves()\n  nameWithType: PathGeometry.MayHaveCurves()\n  fullName: System.Windows.Media.PathGeometry.MayHaveCurves()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public override bool MayHaveCurves ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.PathGeometry.OnChanged\n  id: OnChanged\n  parent: System.Windows.Media.PathGeometry\n  langs:\n  - csharp\n  name: OnChanged()\n  nameWithType: PathGeometry.OnChanged()\n  fullName: System.Windows.Media.PathGeometry.OnChanged()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void OnChanged ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Geometry\n  isExternal: false\n  name: System.Windows.Media.Geometry\n- uid: System.Windows.Media.PathGeometry.#ctor\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: PathGeometry()\n  nameWithType: PathGeometry.PathGeometry()\n  fullName: System.Windows.Media.PathGeometry.PathGeometry()\n- uid: System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure})\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: PathGeometry(IEnumerable<PathFigure>)\n  nameWithType: PathGeometry.PathGeometry(IEnumerable<PathFigure>)\n  fullName: System.Windows.Media.PathGeometry.PathGeometry(IEnumerable<PathFigure>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<PathFigure>\n  nameWithType: IEnumerable<PathFigure>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.PathFigure>\n- uid: System.Windows.Media.PathGeometry.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure},System.Windows.Media.FillRule,System.Windows.Media.Transform)\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)\n  nameWithType: PathGeometry.PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)\n  fullName: System.Windows.Media.PathGeometry.PathGeometry(IEnumerable<PathFigure>,FillRule,Transform)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.PathFigure}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<PathFigure>\n  nameWithType: IEnumerable<PathFigure>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.PathFigure>\n- uid: System.Windows.Media.FillRule\n  parent: System.Windows.Media\n  isExternal: false\n  name: FillRule\n  nameWithType: FillRule\n  fullName: System.Windows.Media.FillRule\n- uid: System.Windows.Media.Transform\n  parent: System.Windows.Media\n  isExternal: false\n  name: Transform\n  nameWithType: Transform\n  fullName: System.Windows.Media.Transform\n- uid: System.Windows.Media.PathGeometry.AddGeometry(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: AddGeometry(Geometry)\n  nameWithType: PathGeometry.AddGeometry(Geometry)\n  fullName: System.Windows.Media.PathGeometry.AddGeometry(Geometry)\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.PathGeometry.Bounds\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: Bounds\n  nameWithType: PathGeometry.Bounds\n  fullName: System.Windows.Media.PathGeometry.Bounds\n- uid: System.Windows.Rect\n  parent: System.Windows\n  isExternal: true\n  name: Rect\n  nameWithType: Rect\n  fullName: System.Windows.Rect\n- uid: System.Windows.Media.PathGeometry.Clear\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: Clear()\n  nameWithType: PathGeometry.Clear()\n  fullName: System.Windows.Media.PathGeometry.Clear()\n- uid: System.Windows.Media.PathGeometry.Clone\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: Clone()\n  nameWithType: PathGeometry.Clone()\n  fullName: System.Windows.Media.PathGeometry.Clone()\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.PathGeometry.CloneCurrentValue\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: PathGeometry.CloneCurrentValue()\n  fullName: System.Windows.Media.PathGeometry.CloneCurrentValue()\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.PathGeometry.CreateFromGeometry(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: CreateFromGeometry(Geometry)\n  nameWithType: PathGeometry.CreateFromGeometry(Geometry)\n  fullName: System.Windows.Media.PathGeometry.CreateFromGeometry(Geometry)\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.PathGeometry.CreateInstanceCore\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: PathGeometry.CreateInstanceCore()\n  fullName: System.Windows.Media.PathGeometry.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.PathGeometry.Figures\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: Figures\n  nameWithType: PathGeometry.Figures\n  fullName: System.Windows.Media.PathGeometry.Figures\n- uid: System.Windows.Media.PathFigureCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathFigureCollection\n  nameWithType: PathFigureCollection\n  fullName: System.Windows.Media.PathFigureCollection\n- uid: System.Windows.Media.PathGeometry.FiguresProperty\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: FiguresProperty\n  nameWithType: PathGeometry.FiguresProperty\n  fullName: System.Windows.Media.PathGeometry.FiguresProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.PathGeometry.FillRule\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: FillRule\n  nameWithType: PathGeometry.FillRule\n  fullName: System.Windows.Media.PathGeometry.FillRule\n- uid: System.Windows.Media.FillRule\n  parent: System.Windows.Media\n  isExternal: false\n  name: FillRule\n  nameWithType: FillRule\n  fullName: System.Windows.Media.FillRule\n- uid: System.Windows.Media.PathGeometry.FillRuleProperty\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: FillRuleProperty\n  nameWithType: PathGeometry.FillRuleProperty\n  fullName: System.Windows.Media.PathGeometry.FillRuleProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.PathGeometry.GetPointAtFractionLength(System.Double,System.Windows.Point@,System.Windows.Point@)\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: GetPointAtFractionLength(Double,Point,Point)\n  nameWithType: PathGeometry.GetPointAtFractionLength(Double,Point,Point)\n  fullName: System.Windows.Media.PathGeometry.GetPointAtFractionLength(Double,Point,Point)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Point\n  parent: System.Windows\n  isExternal: true\n  name: Point\n  nameWithType: Point\n  fullName: System.Windows.Point\n- uid: System.Windows.Media.PathGeometry.IsEmpty\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: IsEmpty()\n  nameWithType: PathGeometry.IsEmpty()\n  fullName: System.Windows.Media.PathGeometry.IsEmpty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathGeometry.MayHaveCurves\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: MayHaveCurves()\n  nameWithType: PathGeometry.MayHaveCurves()\n  fullName: System.Windows.Media.PathGeometry.MayHaveCurves()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.PathGeometry.OnChanged\n  parent: System.Windows.Media.PathGeometry\n  isExternal: false\n  name: OnChanged()\n  nameWithType: PathGeometry.OnChanged()\n  fullName: System.Windows.Media.PathGeometry.OnChanged()\n"}