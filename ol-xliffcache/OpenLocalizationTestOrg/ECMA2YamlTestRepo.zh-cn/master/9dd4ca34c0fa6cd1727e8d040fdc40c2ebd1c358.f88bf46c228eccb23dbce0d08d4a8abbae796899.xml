{"nodes":[{"pos":[342,365],"content":"ExpandSegmentCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegmentCollection","pos":[0,23]}]},{"pos":[5723,5748],"content":"ExpandSegmentCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegmentCollection()","pos":[0,25]}]},{"pos":[6300,6330],"content":"ExpandSegmentCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegmentCollection(Int32)","pos":[0,30]}]},{"pos":[6732,6766],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6977,6986],"content":"HasFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"HasFilter","pos":[0,9]}]},{"pos":[7306,7340],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7471,7538],"content":"System.Collections.Generic.List<System.Data.Services.ExpandSegment>","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.List&lt;System.Data.Services.ExpandSegment&gt;","pos":[0,67],"source":"System.Collections.Generic.List<System.Data.Services.ExpandSegment>"}]},{"pos":[7680,7705],"content":"ExpandSegmentCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegmentCollection()","pos":[0,25]}]},{"pos":[8010,8040],"content":"ExpandSegmentCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExpandSegmentCollection(Int32)","pos":[0,30]}]},{"pos":[8265,8270],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8463,8472],"content":"HasFilter","needQuote":true,"needEscape":true,"nodes":[{"content":"HasFilter","pos":[0,9]}]},{"pos":[8657,8664],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Services.ExpandSegmentCollection\n  id: ExpandSegmentCollection\n  children:\n  - System.Data.Services.ExpandSegmentCollection.#ctor\n  - System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)\n  - System.Data.Services.ExpandSegmentCollection.HasFilter\n  langs:\n  - csharp\n  name: ExpandSegmentCollection\n  nameWithType: ExpandSegmentCollection\n  fullName: System.Data.Services.ExpandSegmentCollection\n  type: Class\n  syntax:\n    content: 'public class ExpandSegmentCollection : System.Collections.Generic.List<System.Data.Services.ExpandSegment>'\n  inheritance:\n  - System.Object\n  - System.Collections.Generic.List`1\n  implements: []\n  inheritedMembers:\n  - System.Collections.Generic.List`1.Add(`0)\n  - System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.List`1.AsReadOnly\n  - System.Collections.Generic.List`1.BinarySearch(`0)\n  - System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer`1)\n  - System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer`1)\n  - System.Collections.Generic.List`1.Capacity\n  - System.Collections.Generic.List`1.Clear\n  - System.Collections.Generic.List`1.Contains(`0)\n  - System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,`0Output})\n  - System.Collections.Generic.List`1.CopyTo(`0[])\n  - System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)\n  - System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Count\n  - System.Collections.Generic.List`1.Exists(System.Predicate`1)\n  - System.Collections.Generic.List`1.Find(System.Predicate`1)\n  - System.Collections.Generic.List`1.FindAll(System.Predicate`1)\n  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate`1)\n  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate`1)\n  - System.Collections.Generic.List`1.FindIndex(System.Predicate`1)\n  - System.Collections.Generic.List`1.FindLast(System.Predicate`1)\n  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate`1)\n  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate`1)\n  - System.Collections.Generic.List`1.FindLastIndex(System.Predicate`1)\n  - System.Collections.Generic.List`1.ForEach(System.Action`1)\n  - System.Collections.Generic.List`1.GetEnumerator\n  - System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.IndexOf(`0)\n  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32)\n  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Insert(System.Int32,`0)\n  - System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable`1)\n  - System.Collections.Generic.List`1.Item(System.Int32)\n  - System.Collections.Generic.List`1.LastIndexOf(`0)\n  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)\n  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Remove(`0)\n  - System.Collections.Generic.List`1.RemoveAll(System.Predicate`1)\n  - System.Collections.Generic.List`1.RemoveAt(System.Int32)\n  - System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Reverse\n  - System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)\n  - System.Collections.Generic.List`1.Sort\n  - System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer`1)\n  - System.Collections.Generic.List`1.Sort(System.Comparison`1)\n  - System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer`1)\n  - System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly\n  - System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator\n  - System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized\n  - System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot\n  - System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator\n  - System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)\n  - System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)\n  - System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)\n  - System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize\n  - System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly\n  - System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)\n  - System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)\n  - System.Collections.Generic.List`1.ToArray\n  - System.Collections.Generic.List`1.TrimExcess\n  - System.Collections.Generic.List`1.TrueForAll(System.Predicate`1)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor\n  id: '#ctor'\n  parent: System.Data.Services.ExpandSegmentCollection\n  langs:\n  - csharp\n  name: ExpandSegmentCollection()\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection()\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection()\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public ExpandSegmentCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Data.Services.ExpandSegmentCollection\n  langs:\n  - csharp\n  name: ExpandSegmentCollection(Int32)\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n  type: Constructor\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public ExpandSegmentCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Services.ExpandSegmentCollection.HasFilter\n  id: HasFilter\n  parent: System.Data.Services.ExpandSegmentCollection\n  langs:\n  - csharp\n  name: HasFilter\n  nameWithType: ExpandSegmentCollection.HasFilter\n  fullName: System.Data.Services.ExpandSegmentCollection.HasFilter\n  type: Property\n  assemblies:\n  - System.Data.Services\n  namespace: System.Data.Services\n  syntax:\n    content: public bool HasFilter { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.Generic.List`1\n  isExternal: false\n  name: System.Collections.Generic.List<System.Data.Services.ExpandSegment>\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: ExpandSegmentCollection()\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection()\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection()\n- uid: System.Data.Services.ExpandSegmentCollection.#ctor(System.Int32)\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: ExpandSegmentCollection(Int32)\n  nameWithType: ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n  fullName: System.Data.Services.ExpandSegmentCollection.ExpandSegmentCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Services.ExpandSegmentCollection.HasFilter\n  parent: System.Data.Services.ExpandSegmentCollection\n  isExternal: false\n  name: HasFilter\n  nameWithType: ExpandSegmentCollection.HasFilter\n  fullName: System.Data.Services.ExpandSegmentCollection.HasFilter\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n"}