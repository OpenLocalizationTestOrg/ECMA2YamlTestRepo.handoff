{"nodes":[{"pos":[416,427],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[888,894],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[1205,1239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1410,1418],"content":"Demand()","needQuote":true,"needEscape":true,"nodes":[{"content":"Demand()","pos":[0,8]}]},{"pos":[1875,1897],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[2281,2315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2387,2421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2658,2681],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[3045,3079],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3138,3172],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3399,3417],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[3789,3823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3895,3929],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4097,4103],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[4275,4286],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[4463,4471],"content":"Demand()","needQuote":true,"needEscape":true,"nodes":[{"content":"Demand()","pos":[0,8]}]},{"pos":[4698,4720],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[4924,4935],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[5093,5104],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[5314,5337],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[5521,5528],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5669,5680],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[5885,5903],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[6099,6110],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[6268,6279],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.IPermission\n  id: IPermission\n  children:\n  - System.Security.IPermission.Copy\n  - System.Security.IPermission.Demand\n  - System.Security.IPermission.Intersect(System.Security.IPermission)\n  - System.Security.IPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.IPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n  type: Interface\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IPermission : System.Security.ISecurityEncodable\n  implements:\n  - System.Security.ISecurityEncodable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.IPermission.Copy\n  id: Copy\n  parent: System.Security.IPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: IPermission.Copy()\n  fullName: System.Security.IPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.IPermission.Demand\n  id: Demand\n  parent: System.Security.IPermission\n  langs:\n  - csharp\n  name: Demand()\n  nameWithType: IPermission.Demand()\n  fullName: System.Security.IPermission.Demand()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public void Demand ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.IPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.IPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: IPermission.Intersect(IPermission)\n  fullName: System.Security.IPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.IPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.IPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: IPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.IPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.IPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.IPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: IPermission.Union(IPermission)\n  fullName: System.Security.IPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: public System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.IPermission.Copy\n  parent: System.Security.IPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: IPermission.Copy()\n  fullName: System.Security.IPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission.Demand\n  parent: System.Security.IPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: IPermission.Demand()\n  fullName: System.Security.IPermission.Demand()\n- uid: System.Security.IPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.IPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: IPermission.Intersect(IPermission)\n  fullName: System.Security.IPermission.Intersect(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.IPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: IPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.IPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission.Union(System.Security.IPermission)\n  parent: System.Security.IPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: IPermission.Union(IPermission)\n  fullName: System.Security.IPermission.Union(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n"}