{"nodes":[{"pos":[1063,1101],"content":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;","pos":[0,38],"source":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>"}]},{"pos":[1583,1617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1650,1684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1717,1751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1784,1818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1851,1885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1918,1952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1985,2019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2055,2089],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2613,2651],"content":"ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)","pos":[0,38]}]},{"pos":[3101,3135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3186,3220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3271,3305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3356,3390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3441,3475],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3526,3560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3611,3645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3698,3732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3935,3984],"content":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;)","pos":[0,49],"source":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)"}]},{"pos":[4435,4469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4526,4560],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4745,4759],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[5105,5139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5198,5232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5469,5515],"content":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;)","pos":[0,46],"source":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)"}]},{"pos":[5958,5992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6051,6085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6290,6303],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[6641,6675],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6828,6833],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[7106,7140],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7293,7298],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[7571,7605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7758,7763],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[8036,8070],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8223,8228],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[8501,8535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8688,8693],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[8966,9000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9153,9158],"content":"Item6","needQuote":true,"needEscape":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[9431,9465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9618,9623],"content":"Item7","needQuote":true,"needEscape":true,"nodes":[{"content":"Item7","pos":[0,5]}]},{"pos":[9896,9930],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10081,10085],"content":"Rest","needQuote":true,"needEscape":true,"nodes":[{"content":"Rest","pos":[0,4]}]},{"pos":[10361,10395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10740,10808],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[11313,11347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11427,11461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11518,11552],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11905,11977],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[12495,12529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12617,12651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12710,12744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13079,13149],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[13679,13713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13770,13804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14047,14083],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[14475,14509],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14566,14600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14759,14769],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[15102,15136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15250,15266],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[15383,15421],"content":"ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)","pos":[0,38]}]},{"pos":[15663,15665],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[15750,15752],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[15837,15839],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[15924,15926],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[16011,16013],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[16098,16100],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[16185,16187],"content":"T7","needQuote":true,"needEscape":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[16275,16280],"content":"TRest","needQuote":true,"needEscape":true,"nodes":[{"content":"TRest","pos":[0,5]}]},{"pos":[16437,16486],"content":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CompareTo(ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;)","pos":[0,49],"source":"CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)"}]},{"pos":[16765,16770],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16890,16928],"content":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;","pos":[0,38],"source":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>"}]},{"pos":[17149,17163],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17374,17381],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17499,17505],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17668,17714],"content":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;)","pos":[0,46],"source":"Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)"}]},{"pos":[17989,17996],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18120,18158],"content":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>","needQuote":true,"needEscape":true,"nodes":[{"content":"ValueTuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;","pos":[0,38],"source":"ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>"}]},{"pos":[18369,18382],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[18589,18594],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18733,18738],"content":"Item1","needQuote":true,"needEscape":true,"nodes":[{"content":"Item1","pos":[0,5]}]},{"pos":[18914,18916],"content":"T1","needQuote":true,"needEscape":true,"nodes":[{"content":"T1","pos":[0,2]}]},{"pos":[19042,19047],"content":"Item2","needQuote":true,"needEscape":true,"nodes":[{"content":"Item2","pos":[0,5]}]},{"pos":[19223,19225],"content":"T2","needQuote":true,"needEscape":true,"nodes":[{"content":"T2","pos":[0,2]}]},{"pos":[19351,19356],"content":"Item3","needQuote":true,"needEscape":true,"nodes":[{"content":"Item3","pos":[0,5]}]},{"pos":[19532,19534],"content":"T3","needQuote":true,"needEscape":true,"nodes":[{"content":"T3","pos":[0,2]}]},{"pos":[19660,19665],"content":"Item4","needQuote":true,"needEscape":true,"nodes":[{"content":"Item4","pos":[0,5]}]},{"pos":[19841,19843],"content":"T4","needQuote":true,"needEscape":true,"nodes":[{"content":"T4","pos":[0,2]}]},{"pos":[19969,19974],"content":"Item5","needQuote":true,"needEscape":true,"nodes":[{"content":"Item5","pos":[0,5]}]},{"pos":[20150,20152],"content":"T5","needQuote":true,"needEscape":true,"nodes":[{"content":"T5","pos":[0,2]}]},{"pos":[20278,20283],"content":"Item6","needQuote":true,"needEscape":true,"nodes":[{"content":"Item6","pos":[0,5]}]},{"pos":[20459,20461],"content":"T6","needQuote":true,"needEscape":true,"nodes":[{"content":"T6","pos":[0,2]}]},{"pos":[20587,20592],"content":"Item7","needQuote":true,"needEscape":true,"nodes":[{"content":"Item7","pos":[0,5]}]},{"pos":[20768,20770],"content":"T7","needQuote":true,"needEscape":true,"nodes":[{"content":"T7","pos":[0,2]}]},{"pos":[20895,20899],"content":"Rest","needQuote":true,"needEscape":true,"nodes":[{"content":"Rest","pos":[0,4]}]},{"pos":[21076,21081],"content":"TRest","needQuote":true,"needEscape":true,"nodes":[{"content":"TRest","pos":[0,5]}]},{"pos":[21302,21370],"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralComparable.CompareTo(Object,IComparer)","pos":[0,68]}]},{"pos":[21687,21692],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[21806,21812],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[21955,21964],"content":"IComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IComparer","pos":[0,9]}]},{"pos":[22216,22288],"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)","pos":[0,72]}]},{"pos":[22615,22622],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22740,22746],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[22897,22914],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[23173,23243],"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)","pos":[0,70]}]},{"pos":[23564,23569],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23718,23735],"content":"IEqualityComparer","needQuote":true,"needEscape":true,"nodes":[{"content":"IEqualityComparer","pos":[0,17]}]},{"pos":[23948,23984],"content":"System.IComparable.CompareTo(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IComparable.CompareTo(Object)","pos":[0,36]}]},{"pos":[24237,24242],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24356,24362],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[24506,24516],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[24718,24724],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ValueTuple`8\n  id: ValueTuple`8\n  children:\n  - System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  - System.ValueTuple`8.CompareTo(System.ValueTuple`8)\n  - System.ValueTuple`8.Equals(System.Object)\n  - System.ValueTuple`8.Equals(System.ValueTuple`8)\n  - System.ValueTuple`8.GetHashCode\n  - System.ValueTuple`8.Item1\n  - System.ValueTuple`8.Item2\n  - System.ValueTuple`8.Item3\n  - System.ValueTuple`8.Item4\n  - System.ValueTuple`8.Item5\n  - System.ValueTuple`8.Item6\n  - System.ValueTuple`8.Item7\n  - System.ValueTuple`8.Rest\n  - System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  - System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  - System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  - System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  - System.ValueTuple`8.ToString\n  langs:\n  - csharp\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  type: Struct\n  syntax:\n    content: 'public struct ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest> : IComparable, IComparable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>, IEquatable<ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable where TRest : struct'\n    typeParameters:\n    - id: T1\n      description: Parameter description to be filled\n    - id: T2\n      description: Parameter description to be filled\n    - id: T3\n      description: Parameter description to be filled\n    - id: T4\n      description: Parameter description to be filled\n    - id: T5\n      description: Parameter description to be filled\n    - id: T6\n      description: Parameter description to be filled\n    - id: T7\n      description: Parameter description to be filled\n    - id: TRest\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.Collections.IStructuralComparable\n  - System.Collections.IStructuralEquatable\n  - System.IComparable\n  - System.IComparable<System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  - System.IEquatable<System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>>\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  id: '#ctor(`0,`1,`2,`3,`4,`5,`6,`7)'\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public ValueTuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);\n    parameters:\n    - id: item1\n      type: T1\n      description: Parameter description to be filled\n    - id: item2\n      type: T2\n      description: Parameter description to be filled\n    - id: item3\n      type: T3\n      description: Parameter description to be filled\n    - id: item4\n      type: T4\n      description: Parameter description to be filled\n    - id: item5\n      type: T5\n      description: Parameter description to be filled\n    - id: item6\n      type: T6\n      description: Parameter description to be filled\n    - id: item7\n      type: T7\n      description: Parameter description to be filled\n    - id: rest\n      type: TRest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.CompareTo(System.ValueTuple`8)\n  id: CompareTo(System.ValueTuple`8)\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public int CompareTo (ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`8\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`8.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Equals(System.ValueTuple`8)\n  id: Equals(System.ValueTuple`8)\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public bool Equals (ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest> other);\n    parameters:\n    - id: other\n      type: System.ValueTuple`8\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.ValueTuple`8.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.GetHashCode\n  id: GetHashCode\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item1\n  id: Item1\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T1 Item1;\n    return:\n      type: T1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item2\n  id: Item2\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T2 Item2;\n    return:\n      type: T2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item3\n  id: Item3\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T3 Item3;\n    return:\n      type: T3\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item4\n  id: Item4\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T4 Item4;\n    return:\n      type: T4\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item5\n  id: Item5\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T5 Item5;\n    return:\n      type: T5\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item6\n  id: Item6\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item6\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T6 Item6;\n    return:\n      type: T6\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Item7\n  id: Item7\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Item7\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public T7 Item7;\n    return:\n      type: T7\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.Rest\n  id: Rest\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: Rest\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public TRest Rest;\n    return:\n      type: TRest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  id: System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  id: System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);\n    parameters:\n    - id: comparer\n      type: System.Collections.IEqualityComparer\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object other);\n    parameters:\n    - id: other\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.ValueTuple`8.ToString\n  id: ToString\n  parent: System.ValueTuple`8\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.ValueTuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ValueTuple(T1,T2,T3,T4,T5,T6,T7,TRest)\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: T7\n  parent: ''\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: TRest\n  parent: ''\n  isExternal: true\n  name: TRest\n  nameWithType: TRest\n  fullName: TRest\n- uid: System.ValueTuple`8.CompareTo(System.ValueTuple`8)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.CompareTo(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`8\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n- uid: System.ValueTuple`8.Equals(System.Object)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`8.Equals(System.ValueTuple`8)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Equals(ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ValueTuple`8\n  parent: System\n  isExternal: false\n  name: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>\n- uid: System.ValueTuple`8.GetHashCode\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ValueTuple`8.Item1\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item1\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item1\n- uid: T1\n  parent: ''\n  isExternal: true\n  name: T1\n  nameWithType: T1\n  fullName: T1\n- uid: System.ValueTuple`8.Item2\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item2\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item2\n- uid: T2\n  parent: ''\n  isExternal: true\n  name: T2\n  nameWithType: T2\n  fullName: T2\n- uid: System.ValueTuple`8.Item3\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item3\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item3\n- uid: T3\n  parent: ''\n  isExternal: true\n  name: T3\n  nameWithType: T3\n  fullName: T3\n- uid: System.ValueTuple`8.Item4\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item4\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item4\n- uid: T4\n  parent: ''\n  isExternal: true\n  name: T4\n  nameWithType: T4\n  fullName: T4\n- uid: System.ValueTuple`8.Item5\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item5\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item5\n- uid: T5\n  parent: ''\n  isExternal: true\n  name: T5\n  nameWithType: T5\n  fullName: T5\n- uid: System.ValueTuple`8.Item6\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item6\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item6\n- uid: T6\n  parent: ''\n  isExternal: true\n  name: T6\n  nameWithType: T6\n  fullName: T6\n- uid: System.ValueTuple`8.Item7\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Item7\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Item7\n- uid: T7\n  parent: ''\n  isExternal: true\n  name: T7\n  nameWithType: T7\n  fullName: T7\n- uid: System.ValueTuple`8.Rest\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: Rest\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.Rest\n- uid: TRest\n  parent: ''\n  isExternal: true\n  name: TRest\n  nameWithType: TRest\n  fullName: TRest\n- uid: System.ValueTuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralComparable.CompareTo(Object,IComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IComparer\n  parent: System.Collections\n  isExternal: false\n  name: IComparer\n  nameWithType: IComparer\n  fullName: System.Collections.IComparer\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Collections.IEqualityComparer\n  parent: System.Collections\n  isExternal: false\n  name: IEqualityComparer\n  nameWithType: IEqualityComparer\n  fullName: System.Collections.IEqualityComparer\n- uid: System.ValueTuple`8.System#IComparable#CompareTo(System.Object)\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: System.IComparable.CompareTo(Object)\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.System.IComparable.CompareTo(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ValueTuple`8.ToString\n  parent: System.ValueTuple`8\n  isExternal: false\n  name: ToString()\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n  fullName: System.ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ValueTuple`8.Equals*\n  parent: System.ValueTuple`8\n  isExternal: false\n  nameWithType: ValueTuple<T1,T2,T3,T4,T5,T6,T7,TRest>.\n"}