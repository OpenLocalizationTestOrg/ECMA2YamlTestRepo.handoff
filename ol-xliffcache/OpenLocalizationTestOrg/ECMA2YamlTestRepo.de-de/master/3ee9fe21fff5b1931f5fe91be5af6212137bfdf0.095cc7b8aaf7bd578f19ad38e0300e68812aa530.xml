{"nodes":[{"pos":[4130,4141],"content":"ILGenerator","needQuote":true,"needEscape":true,"nodes":[{"content":"ILGenerator","pos":[0,11]}]},{"pos":[5232,5253],"content":"BeginCatchBlock(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginCatchBlock(Type)","pos":[0,21]}]},{"pos":[5615,5649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5866,5890],"content":"BeginExceptFilterBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginExceptFilterBlock()","pos":[0,24]}]},{"pos":[6393,6414],"content":"BeginExceptionBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginExceptionBlock()","pos":[0,21]}]},{"pos":[6794,6828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7031,7048],"content":"BeginFaultBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginFaultBlock()","pos":[0,17]}]},{"pos":[7526,7545],"content":"BeginFinallyBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginFinallyBlock()","pos":[0,19]}]},{"pos":[8015,8027],"content":"BeginScope()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginScope()","pos":[0,12]}]},{"pos":[8506,8524],"content":"DeclareLocal(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclareLocal(Type)","pos":[0,18]}]},{"pos":[8900,8934],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9014,9048],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9362,9388],"content":"DeclareLocal(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclareLocal(Type,Boolean)","pos":[0,26]}]},{"pos":[9793,9827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9891,9925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10005,10039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10295,10308],"content":"DefineLabel()","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineLabel()","pos":[0,13]}]},{"pos":[10664,10698],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10941,10953],"content":"Emit(OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode)","pos":[0,12]}]},{"pos":[11315,11349],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11669,11686],"content":"Emit(OpCode,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Byte)","pos":[0,17]}]},{"pos":[12068,12102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12160,12194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12518,12537],"content":"Emit(OpCode,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Double)","pos":[0,19]}]},{"pos":[12925,12959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13019,13053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13375,13393],"content":"Emit(OpCode,Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Int16)","pos":[0,18]}]},{"pos":[13778,13812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13871,13905],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14227,14245],"content":"Emit(OpCode,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Int32)","pos":[0,18]}]},{"pos":[14628,14662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14721,14755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15077,15095],"content":"Emit(OpCode,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Int64)","pos":[0,18]}]},{"pos":[15479,15513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15572,15606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15970,15998],"content":"Emit(OpCode,ConstructorInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,ConstructorInfo)","pos":[0,28]}]},{"pos":[16431,16465],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16545,16579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16933,16951],"content":"Emit(OpCode,Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Label)","pos":[0,18]}]},{"pos":[17361,17395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17472,17506],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17864,17884],"content":"Emit(OpCode,Label[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Label[])","pos":[0,20]}]},{"pos":[18301,18335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18415,18449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18817,18842],"content":"Emit(OpCode,LocalBuilder)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,LocalBuilder)","pos":[0,25]}]},{"pos":[19273,19307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19391,19425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19799,19827],"content":"Emit(OpCode,SignatureHelper)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,SignatureHelper)","pos":[0,28]}]},{"pos":[20271,20305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20396,20430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20782,20804],"content":"Emit(OpCode,FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,FieldInfo)","pos":[0,22]}]},{"pos":[21221,21255],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21331,21365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21719,21742],"content":"Emit(OpCode,MethodInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,MethodInfo)","pos":[0,23]}]},{"pos":[22161,22195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22271,22305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22627,22645],"content":"Emit(OpCode,SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,SByte)","pos":[0,18]}]},{"pos":[23022,23056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23115,23149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23473,23492],"content":"Emit(OpCode,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Single)","pos":[0,19]}]},{"pos":[23879,23913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23973,24007],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24331,24350],"content":"Emit(OpCode,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,String)","pos":[0,19]}]},{"pos":[24738,24772],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24832,24866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25186,25203],"content":"Emit(OpCode,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Type)","pos":[0,17]}]},{"pos":[25585,25619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25677,25711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26101,26135],"content":"EmitCall(OpCode,MethodInfo,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitCall(OpCode,MethodInfo,Type[])","pos":[0,34]}]},{"pos":[26617,26651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26733,26767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26846,26880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27283,27330],"content":"EmitCalli(OpCode,CallingConvention,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitCalli(OpCode,CallingConvention,Type,Type[])","pos":[0,47]}]},{"pos":[27875,27909],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28018,28052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28117,28151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28222,28256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28721,28776],"content":"EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])","pos":[0,55]}]},{"pos":[29356,29390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29487,29521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29586,29620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29691,29725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29804,29838],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30169,30196],"content":"EmitWriteLine(LocalBuilder)","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitWriteLine(LocalBuilder)","pos":[0,27]}]},{"pos":[30621,30655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30974,30998],"content":"EmitWriteLine(FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitWriteLine(FieldInfo)","pos":[0,24]}]},{"pos":[31383,31417],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31708,31729],"content":"EmitWriteLine(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitWriteLine(String)","pos":[0,21]}]},{"pos":[32077,32111],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32380,32399],"content":"EndExceptionBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"EndExceptionBlock()","pos":[0,19]}]},{"pos":[32865,32875],"content":"EndScope()","needQuote":true,"needEscape":true,"nodes":[{"content":"EndScope()","pos":[0,10]}]},{"pos":[33314,33322],"content":"ILOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ILOffset","pos":[0,8]}]},{"pos":[33612,33646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33897,33913],"content":"MarkLabel(Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"MarkLabel(Label)","pos":[0,16]}]},{"pos":[34280,34314],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34733,34797],"content":"MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)","pos":[0,64]}]},{"pos":[35386,35420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35485,35519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35586,35620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35683,35717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35782,35816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36257,36348],"content":"System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,91]}]},{"pos":[36891,36925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36991,37025],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37088,37122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37183,37217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37282,37316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37699,37776],"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,77]}]},{"pos":[38259,38293],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38354,38388],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38452,38486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38825,38893],"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)","pos":[0,68]}]},{"pos":[39342,39376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39885,39989],"content":"System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,104]}]},{"pos":[40621,40655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40714,40748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40809,40843],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40905,40939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41007,41041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41108,41142],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41209,41243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41308,41342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41569,41589],"content":"ThrowException(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThrowException(Type)","pos":[0,20]}]},{"pos":[41936,41970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42201,42223],"content":"UsingNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingNamespace(String)","pos":[0,22]}]},{"pos":[42592,42626],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42737,42750],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[42895,42916],"content":"BeginCatchBlock(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginCatchBlock(Type)","pos":[0,21]}]},{"pos":[43100,43104],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[43288,43312],"content":"BeginExceptFilterBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginExceptFilterBlock()","pos":[0,24]}]},{"pos":[43573,43594],"content":"BeginExceptionBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginExceptionBlock()","pos":[0,21]}]},{"pos":[43811,43816],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[44011,44028],"content":"BeginFaultBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginFaultBlock()","pos":[0,17]}]},{"pos":[44273,44292],"content":"BeginFinallyBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginFinallyBlock()","pos":[0,19]}]},{"pos":[44534,44546],"content":"BeginScope()","needQuote":true,"needEscape":true,"nodes":[{"content":"BeginScope()","pos":[0,12]}]},{"pos":[44789,44807],"content":"DeclareLocal(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclareLocal(Type)","pos":[0,18]}]},{"pos":[45025,45037],"content":"LocalBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalBuilder","pos":[0,12]}]},{"pos":[45179,45183],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45385,45411],"content":"DeclareLocal(Type,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeclareLocal(Type,Boolean)","pos":[0,26]}]},{"pos":[45645,45657],"content":"LocalBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalBuilder","pos":[0,12]}]},{"pos":[45799,45803],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[45916,45923],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[46102,46115],"content":"DefineLabel()","needQuote":true,"needEscape":true,"nodes":[{"content":"DefineLabel()","pos":[0,13]}]},{"pos":[46316,46321],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[46536,46548],"content":"Emit(OpCode)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode)","pos":[0,12]}]},{"pos":[46748,46754],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[46983,47000],"content":"Emit(OpCode,Byte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Byte)","pos":[0,17]}]},{"pos":[47210,47216],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[47346,47350],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[47561,47580],"content":"Emit(OpCode,Double)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Double)","pos":[0,19]}]},{"pos":[47794,47800],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[47932,47938],"content":"Double","needQuote":true,"needEscape":true,"nodes":[{"content":"Double","pos":[0,6]}]},{"pos":[48152,48170],"content":"Emit(OpCode,Int16)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Int16)","pos":[0,18]}]},{"pos":[48382,48388],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[48519,48524],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[48736,48754],"content":"Emit(OpCode,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Int32)","pos":[0,18]}]},{"pos":[48966,48972],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[49103,49108],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49320,49338],"content":"Emit(OpCode,Int64)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Int64)","pos":[0,18]}]},{"pos":[49550,49556],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[49687,49692],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[49925,49953],"content":"Emit(OpCode,ConstructorInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,ConstructorInfo)","pos":[0,28]}]},{"pos":[50185,50191],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[50354,50369],"content":"ConstructorInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"ConstructorInfo","pos":[0,15]}]},{"pos":[50628,50646],"content":"Emit(OpCode,Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Label)","pos":[0,18]}]},{"pos":[50858,50864],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[51027,51032],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[51278,51298],"content":"Emit(OpCode,Label[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Label[])","pos":[0,20]}]},{"pos":[51514,51520],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[51683,51688],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[51941,51966],"content":"Emit(OpCode,LocalBuilder)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,LocalBuilder)","pos":[0,25]}]},{"pos":[52192,52198],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[52368,52380],"content":"LocalBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalBuilder","pos":[0,12]}]},{"pos":[52648,52676],"content":"Emit(OpCode,SignatureHelper)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,SignatureHelper)","pos":[0,28]}]},{"pos":[52908,52914],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[53087,53102],"content":"SignatureHelper","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureHelper","pos":[0,15]}]},{"pos":[53365,53387],"content":"Emit(OpCode,FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,FieldInfo)","pos":[0,22]}]},{"pos":[53607,53613],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[53770,53779],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[54026,54049],"content":"Emit(OpCode,MethodInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,MethodInfo)","pos":[0,23]}]},{"pos":[54271,54277],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[54435,54445],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[54678,54696],"content":"Emit(OpCode,SByte)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,SByte)","pos":[0,18]}]},{"pos":[54908,54914],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[55045,55050],"content":"SByte","needQuote":true,"needEscape":true,"nodes":[{"content":"SByte","pos":[0,5]}]},{"pos":[55263,55282],"content":"Emit(OpCode,Single)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Single)","pos":[0,19]}]},{"pos":[55496,55502],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[55634,55640],"content":"Single","needQuote":true,"needEscape":true,"nodes":[{"content":"Single","pos":[0,6]}]},{"pos":[55855,55874],"content":"Emit(OpCode,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,String)","pos":[0,19]}]},{"pos":[56088,56094],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[56226,56232],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[56445,56462],"content":"Emit(OpCode,Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"Emit(OpCode,Type)","pos":[0,17]}]},{"pos":[56672,56678],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[56808,56812],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[57056,57090],"content":"EmitCall(OpCode,MethodInfo,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitCall(OpCode,MethodInfo,Type[])","pos":[0,34]}]},{"pos":[57334,57340],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[57498,57508],"content":"MethodInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"MethodInfo","pos":[0,10]}]},{"pos":[57641,57645],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[57924,57971],"content":"EmitCalli(OpCode,CallingConvention,Type,Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitCalli(OpCode,CallingConvention,Type,Type[])","pos":[0,47]}]},{"pos":[58241,58247],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[58438,58455],"content":"CallingConvention","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConvention","pos":[0,17]}]},{"pos":[58615,58619],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[58729,58733],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59014,59069],"content":"EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])","pos":[0,55]}]},{"pos":[59355,59361],"content":"OpCode","needQuote":true,"needEscape":true,"nodes":[{"content":"OpCode","pos":[0,6]}]},{"pos":[59527,59545],"content":"CallingConventions","needQuote":true,"needEscape":true,"nodes":[{"content":"CallingConventions","pos":[0,18]}]},{"pos":[59694,59698],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59808,59812],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[59924,59928],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[60142,60169],"content":"EmitWriteLine(LocalBuilder)","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitWriteLine(LocalBuilder)","pos":[0,27]}]},{"pos":[60405,60417],"content":"LocalBuilder","needQuote":true,"needEscape":true,"nodes":[{"content":"LocalBuilder","pos":[0,12]}]},{"pos":[60653,60677],"content":"EmitWriteLine(FieldInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitWriteLine(FieldInfo)","pos":[0,24]}]},{"pos":[60894,60903],"content":"FieldInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"FieldInfo","pos":[0,9]}]},{"pos":[61114,61135],"content":"EmitWriteLine(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EmitWriteLine(String)","pos":[0,21]}]},{"pos":[61321,61327],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61510,61529],"content":"EndExceptionBlock()","needQuote":true,"needEscape":true,"nodes":[{"content":"EndExceptionBlock()","pos":[0,19]}]},{"pos":[61769,61779],"content":"EndScope()","needQuote":true,"needEscape":true,"nodes":[{"content":"EndScope()","pos":[0,10]}]},{"pos":[62001,62009],"content":"ILOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"ILOffset","pos":[0,8]}]},{"pos":[62168,62173],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62376,62392],"content":"MarkLabel(Label)","needQuote":true,"needEscape":true,"nodes":[{"content":"MarkLabel(Label)","pos":[0,16]}]},{"pos":[62599,62604],"content":"Label","needQuote":true,"needEscape":true,"nodes":[{"content":"Label","pos":[0,5]}]},{"pos":[62907,62971],"content":"MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)","pos":[0,64]}]},{"pos":[63306,63327],"content":"ISymbolDocumentWriter","needQuote":true,"needEscape":true,"nodes":[{"content":"ISymbolDocumentWriter","pos":[0,21]}]},{"pos":[63496,63501],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63614,63619],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63732,63737],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63850,63855],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64146,64237],"content":"System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)","pos":[0,91]}]},{"pos":[64561,64565],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[64677,64683],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[64799,64805],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[64921,64927],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[65043,65049],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[65313,65390],"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)","pos":[0,77]}]},{"pos":[65688,65694],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[65810,65816],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[65932,65938],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[66180,66248],"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)","pos":[0,68]}]},{"pos":[66528,66534],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[66861,66965],"content":"System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)","pos":[0,104]}]},{"pos":[67317,67323],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[67437,67441],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[67553,67559],"content":"UInt32","needQuote":true,"needEscape":true,"nodes":[{"content":"UInt32","pos":[0,6]}]},{"pos":[67674,67679],"content":"Int16","needQuote":true,"needEscape":true,"nodes":[{"content":"Int16","pos":[0,5]}]},{"pos":[67793,67799],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[67915,67921],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[68037,68043],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[68159,68165],"content":"IntPtr","needQuote":true,"needEscape":true,"nodes":[{"content":"IntPtr","pos":[0,6]}]},{"pos":[68358,68378],"content":"ThrowException(Type)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThrowException(Type)","pos":[0,20]}]},{"pos":[68560,68564],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[68755,68777],"content":"UsingNamespace(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UsingNamespace(String)","pos":[0,22]}]},{"pos":[68965,68971],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.ILGenerator\n  id: ILGenerator\n  children:\n  - System.Reflection.Emit.ILGenerator.BeginCatchBlock(System.Type)\n  - System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock\n  - System.Reflection.Emit.ILGenerator.BeginExceptionBlock\n  - System.Reflection.Emit.ILGenerator.BeginFaultBlock\n  - System.Reflection.Emit.ILGenerator.BeginFinallyBlock\n  - System.Reflection.Emit.ILGenerator.BeginScope\n  - System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)\n  - System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type,System.Boolean)\n  - System.Reflection.Emit.ILGenerator.DefineLabel\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Double)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int32)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int64)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.SByte)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Single)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.String)\n  - System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)\n  - System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])\n  - System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])\n  - System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])\n  - System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.Emit.LocalBuilder)\n  - System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.FieldInfo)\n  - System.Reflection.Emit.ILGenerator.EmitWriteLine(System.String)\n  - System.Reflection.Emit.ILGenerator.EndExceptionBlock\n  - System.Reflection.Emit.ILGenerator.EndScope\n  - System.Reflection.Emit.ILGenerator.ILOffset\n  - System.Reflection.Emit.ILGenerator.MarkLabel(System.Reflection.Emit.Label)\n  - System.Reflection.Emit.ILGenerator.MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetTypeInfoCount(System.UInt32@)\n  - System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Reflection.Emit.ILGenerator.ThrowException(System.Type)\n  - System.Reflection.Emit.ILGenerator.UsingNamespace(System.String)\n  langs:\n  - csharp\n  name: ILGenerator\n  nameWithType: ILGenerator\n  fullName: System.Reflection.Emit.ILGenerator\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]\n\n      [System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ILGenerator))]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ILGenerator : System.Runtime.InteropServices._ILGenerator\n  inheritance:\n  - System.Object\n  implements:\n  - System.Runtime.InteropServices._ILGenerator\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.BeginCatchBlock(System.Type)\n  id: BeginCatchBlock(System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: BeginCatchBlock(Type)\n  nameWithType: ILGenerator.BeginCatchBlock(Type)\n  fullName: System.Reflection.Emit.ILGenerator.BeginCatchBlock(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void BeginCatchBlock (Type exceptionType);\n    parameters:\n    - id: exceptionType\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock\n  id: BeginExceptFilterBlock\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: BeginExceptFilterBlock()\n  nameWithType: ILGenerator.BeginExceptFilterBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void BeginExceptFilterBlock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.BeginExceptionBlock\n  id: BeginExceptionBlock\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: BeginExceptionBlock()\n  nameWithType: ILGenerator.BeginExceptionBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginExceptionBlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual System.Reflection.Emit.Label BeginExceptionBlock ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.BeginFaultBlock\n  id: BeginFaultBlock\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: BeginFaultBlock()\n  nameWithType: ILGenerator.BeginFaultBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginFaultBlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void BeginFaultBlock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.BeginFinallyBlock\n  id: BeginFinallyBlock\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: BeginFinallyBlock()\n  nameWithType: ILGenerator.BeginFinallyBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginFinallyBlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void BeginFinallyBlock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.BeginScope\n  id: BeginScope\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: BeginScope()\n  nameWithType: ILGenerator.BeginScope()\n  fullName: System.Reflection.Emit.ILGenerator.BeginScope()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void BeginScope ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)\n  id: DeclareLocal(System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: DeclareLocal(Type)\n  nameWithType: ILGenerator.DeclareLocal(Type)\n  fullName: System.Reflection.Emit.ILGenerator.DeclareLocal(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual System.Reflection.Emit.LocalBuilder DeclareLocal (Type localType);\n    parameters:\n    - id: localType\n      type: System.Type\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.LocalBuilder\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.DeclareLocal*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type,System.Boolean)\n  id: DeclareLocal(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: DeclareLocal(Type,Boolean)\n  nameWithType: ILGenerator.DeclareLocal(Type,Boolean)\n  fullName: System.Reflection.Emit.ILGenerator.DeclareLocal(Type,Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual System.Reflection.Emit.LocalBuilder DeclareLocal (Type localType, bool pinned);\n    parameters:\n    - id: localType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: pinned\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Emit.LocalBuilder\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.DeclareLocal*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.DefineLabel\n  id: DefineLabel\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: DefineLabel()\n  nameWithType: ILGenerator.DefineLabel()\n  fullName: System.Reflection.Emit.ILGenerator.DefineLabel()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual System.Reflection.Emit.Label DefineLabel ();\n    parameters: []\n    return:\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)\n  id: Emit(System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode)\n  nameWithType: ILGenerator.Emit(OpCode)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)\n  id: Emit(System.Reflection.Emit.OpCode,System.Byte)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Byte)\n  nameWithType: ILGenerator.Emit(OpCode,Byte)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Byte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, byte arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.Byte\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Double)\n  id: Emit(System.Reflection.Emit.OpCode,System.Double)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Double)\n  nameWithType: ILGenerator.Emit(OpCode,Double)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Double)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, double arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.Double\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)\n  id: Emit(System.Reflection.Emit.OpCode,System.Int16)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Int16)\n  nameWithType: ILGenerator.Emit(OpCode,Int16)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Int16)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, short arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.Int16\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int32)\n  id: Emit(System.Reflection.Emit.OpCode,System.Int32)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Int32)\n  nameWithType: ILGenerator.Emit(OpCode,Int32)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, int arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int64)\n  id: Emit(System.Reflection.Emit.OpCode,System.Int64)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Int64)\n  nameWithType: ILGenerator.Emit(OpCode,Int64)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, long arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.Int64\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,ConstructorInfo)\n  nameWithType: ILGenerator.Emit(OpCode,ConstructorInfo)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,ConstructorInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.ConstructorInfo con);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: con\n      type: System.Reflection.ConstructorInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Label)\n  nameWithType: ILGenerator.Emit(OpCode,Label)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Label)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.Label label);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: label\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Label[])\n  nameWithType: ILGenerator.Emit(OpCode,Label[])\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Label[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.Label[] labels);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: labels\n      type: System.Reflection.Emit.Label[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,LocalBuilder)\n  nameWithType: ILGenerator.Emit(OpCode,LocalBuilder)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,LocalBuilder)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.LocalBuilder local);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: local\n      type: System.Reflection.Emit.LocalBuilder\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,SignatureHelper)\n  nameWithType: ILGenerator.Emit(OpCode,SignatureHelper)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,SignatureHelper)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.Emit.SignatureHelper signature);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Reflection.Emit.SignatureHelper\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,FieldInfo)\n  nameWithType: ILGenerator.Emit(OpCode,FieldInfo)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,FieldInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.FieldInfo field);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: field\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)\n  id: Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,MethodInfo)\n  nameWithType: ILGenerator.Emit(OpCode,MethodInfo)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,MethodInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, System.Reflection.MethodInfo meth);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: meth\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.SByte)\n  id: Emit(System.Reflection.Emit.OpCode,System.SByte)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,SByte)\n  nameWithType: ILGenerator.Emit(OpCode,SByte)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,SByte)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public void Emit (System.Reflection.Emit.OpCode opcode, sbyte arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.SByte\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Single)\n  id: Emit(System.Reflection.Emit.OpCode,System.Single)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Single)\n  nameWithType: ILGenerator.Emit(OpCode,Single)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Single)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, float arg);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: arg\n      type: System.Single\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.String)\n  id: Emit(System.Reflection.Emit.OpCode,System.String)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,String)\n  nameWithType: ILGenerator.Emit(OpCode,String)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, string str);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: str\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)\n  id: Emit(System.Reflection.Emit.OpCode,System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: Emit(OpCode,Type)\n  nameWithType: ILGenerator.Emit(OpCode,Type)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void Emit (System.Reflection.Emit.OpCode opcode, Type cls);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: cls\n      type: System.Type\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.Emit*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])\n  id: EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EmitCall(OpCode,MethodInfo,Type[])\n  nameWithType: ILGenerator.EmitCall(OpCode,MethodInfo,Type[])\n  fullName: System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EmitCall (System.Reflection.Emit.OpCode opcode, System.Reflection.MethodInfo methodInfo, Type[] optionalParameterTypes);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: methodInfo\n      type: System.Reflection.MethodInfo\n      description: Parameter description to be filled\n    - id: optionalParameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])\n  id: EmitCalli(System.Reflection.Emit.OpCode,System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EmitCalli(OpCode,CallingConvention,Type,Type[])\n  nameWithType: ILGenerator.EmitCalli(OpCode,CallingConvention,Type,Type[])\n  fullName: System.Reflection.Emit.ILGenerator.EmitCalli(OpCode,CallingConvention,Type,Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EmitCalli (System.Reflection.Emit.OpCode opcode, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType, Type[] parameterTypes);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: unmanagedCallConv\n      type: System.Runtime.InteropServices.CallingConvention\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.EmitCalli*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])\n  id: EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])\n  nameWithType: ILGenerator.EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])\n  fullName: System.Reflection.Emit.ILGenerator.EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EmitCalli (System.Reflection.Emit.OpCode opcode, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] parameterTypes, Type[] optionalParameterTypes);\n    parameters:\n    - id: opcode\n      type: System.Reflection.Emit.OpCode\n      description: Parameter description to be filled\n    - id: callingConvention\n      type: System.Reflection.CallingConventions\n      description: Parameter description to be filled\n    - id: returnType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: optionalParameterTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.EmitCalli*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.Emit.LocalBuilder)\n  id: EmitWriteLine(System.Reflection.Emit.LocalBuilder)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EmitWriteLine(LocalBuilder)\n  nameWithType: ILGenerator.EmitWriteLine(LocalBuilder)\n  fullName: System.Reflection.Emit.ILGenerator.EmitWriteLine(LocalBuilder)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EmitWriteLine (System.Reflection.Emit.LocalBuilder localBuilder);\n    parameters:\n    - id: localBuilder\n      type: System.Reflection.Emit.LocalBuilder\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.EmitWriteLine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.FieldInfo)\n  id: EmitWriteLine(System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EmitWriteLine(FieldInfo)\n  nameWithType: ILGenerator.EmitWriteLine(FieldInfo)\n  fullName: System.Reflection.Emit.ILGenerator.EmitWriteLine(FieldInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EmitWriteLine (System.Reflection.FieldInfo fld);\n    parameters:\n    - id: fld\n      type: System.Reflection.FieldInfo\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.EmitWriteLine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine(System.String)\n  id: EmitWriteLine(System.String)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EmitWriteLine(String)\n  nameWithType: ILGenerator.EmitWriteLine(String)\n  fullName: System.Reflection.Emit.ILGenerator.EmitWriteLine(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EmitWriteLine (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.ILGenerator.EmitWriteLine*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EndExceptionBlock\n  id: EndExceptionBlock\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EndExceptionBlock()\n  nameWithType: ILGenerator.EndExceptionBlock()\n  fullName: System.Reflection.Emit.ILGenerator.EndExceptionBlock()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EndExceptionBlock ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.EndScope\n  id: EndScope\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: EndScope()\n  nameWithType: ILGenerator.EndScope()\n  fullName: System.Reflection.Emit.ILGenerator.EndScope()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void EndScope ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.ILOffset\n  id: ILOffset\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: ILOffset\n  nameWithType: ILGenerator.ILOffset\n  fullName: System.Reflection.Emit.ILGenerator.ILOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual int ILOffset { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.MarkLabel(System.Reflection.Emit.Label)\n  id: MarkLabel(System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: MarkLabel(Label)\n  nameWithType: ILGenerator.MarkLabel(Label)\n  fullName: System.Reflection.Emit.ILGenerator.MarkLabel(Label)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void MarkLabel (System.Reflection.Emit.Label loc);\n    parameters:\n    - id: loc\n      type: System.Reflection.Emit.Label\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)\n  nameWithType: ILGenerator.MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)\n  fullName: System.Reflection.Emit.ILGenerator.MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void MarkSequencePoint (System.Diagnostics.SymbolStore.ISymbolDocumentWriter document, int startLine, int startColumn, int endLine, int endColumn);\n    parameters:\n    - id: document\n      type: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n      description: Parameter description to be filled\n    - id: startLine\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: startColumn\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endLine\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: endColumn\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ILGenerator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _ILGenerator.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);\n    parameters:\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: rgszNames\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: cNames\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: rgDispId\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  id: System#Runtime#InteropServices#_ILGenerator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _ILGenerator.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);\n    parameters:\n    - id: iTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: ppTInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetTypeInfoCount(System.UInt32@)\n  id: System#Runtime#InteropServices#_ILGenerator#GetTypeInfoCount(System.UInt32@)\n  isEii: true\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _ILGenerator.GetTypeInfoCount (out uint pcTInfo);\n    parameters:\n    - id: pcTInfo\n      type: System.UInt32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  id: System#Runtime#InteropServices#_ILGenerator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  isEii: true\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: void _ILGenerator.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);\n    parameters:\n    - id: dispIdMember\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: riid\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: lcid\n      type: System.UInt32\n      description: Parameter description to be filled\n    - id: wFlags\n      type: System.Int16\n      description: Parameter description to be filled\n    - id: pDispParams\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pVarResult\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: pExcepInfo\n      type: System.IntPtr\n      description: Parameter description to be filled\n    - id: puArgErr\n      type: System.IntPtr\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.ThrowException(System.Type)\n  id: ThrowException(System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: ThrowException(Type)\n  nameWithType: ILGenerator.ThrowException(Type)\n  fullName: System.Reflection.Emit.ILGenerator.ThrowException(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void ThrowException (Type excType);\n    parameters:\n    - id: excType\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.ILGenerator.UsingNamespace(System.String)\n  id: UsingNamespace(System.String)\n  parent: System.Reflection.Emit.ILGenerator\n  langs:\n  - csharp\n  name: UsingNamespace(String)\n  nameWithType: ILGenerator.UsingNamespace(String)\n  fullName: System.Reflection.Emit.ILGenerator.UsingNamespace(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public virtual void UsingNamespace (string usingNamespace);\n    parameters:\n    - id: usingNamespace\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.Emit.ILGenerator.BeginCatchBlock(System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: BeginCatchBlock(Type)\n  nameWithType: ILGenerator.BeginCatchBlock(Type)\n  fullName: System.Reflection.Emit.ILGenerator.BeginCatchBlock(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: BeginExceptFilterBlock()\n  nameWithType: ILGenerator.BeginExceptFilterBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginExceptFilterBlock()\n- uid: System.Reflection.Emit.ILGenerator.BeginExceptionBlock\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: BeginExceptionBlock()\n  nameWithType: ILGenerator.BeginExceptionBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginExceptionBlock()\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.ILGenerator.BeginFaultBlock\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: BeginFaultBlock()\n  nameWithType: ILGenerator.BeginFaultBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginFaultBlock()\n- uid: System.Reflection.Emit.ILGenerator.BeginFinallyBlock\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: BeginFinallyBlock()\n  nameWithType: ILGenerator.BeginFinallyBlock()\n  fullName: System.Reflection.Emit.ILGenerator.BeginFinallyBlock()\n- uid: System.Reflection.Emit.ILGenerator.BeginScope\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: BeginScope()\n  nameWithType: ILGenerator.BeginScope()\n  fullName: System.Reflection.Emit.ILGenerator.BeginScope()\n- uid: System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: DeclareLocal(Type)\n  nameWithType: ILGenerator.DeclareLocal(Type)\n  fullName: System.Reflection.Emit.ILGenerator.DeclareLocal(Type)\n- uid: System.Reflection.Emit.LocalBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: LocalBuilder\n  nameWithType: LocalBuilder\n  fullName: System.Reflection.Emit.LocalBuilder\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.ILGenerator.DeclareLocal(System.Type,System.Boolean)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: DeclareLocal(Type,Boolean)\n  nameWithType: ILGenerator.DeclareLocal(Type,Boolean)\n  fullName: System.Reflection.Emit.ILGenerator.DeclareLocal(Type,Boolean)\n- uid: System.Reflection.Emit.LocalBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: LocalBuilder\n  nameWithType: LocalBuilder\n  fullName: System.Reflection.Emit.LocalBuilder\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.ILGenerator.DefineLabel\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: DefineLabel()\n  nameWithType: ILGenerator.DefineLabel()\n  fullName: System.Reflection.Emit.ILGenerator.DefineLabel()\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode)\n  nameWithType: ILGenerator.Emit(OpCode)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Byte)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Byte)\n  nameWithType: ILGenerator.Emit(OpCode,Byte)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Byte)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Double)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Double)\n  nameWithType: ILGenerator.Emit(OpCode,Double)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Double)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int16)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Int16)\n  nameWithType: ILGenerator.Emit(OpCode,Int16)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Int16)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int32)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Int32)\n  nameWithType: ILGenerator.Emit(OpCode,Int32)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Int32)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Int64)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Int64)\n  nameWithType: ILGenerator.Emit(OpCode,Int64)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Int64)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.ConstructorInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,ConstructorInfo)\n  nameWithType: ILGenerator.Emit(OpCode,ConstructorInfo)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,ConstructorInfo)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.ConstructorInfo\n  parent: System.Reflection\n  isExternal: false\n  name: ConstructorInfo\n  nameWithType: ConstructorInfo\n  fullName: System.Reflection.ConstructorInfo\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Label)\n  nameWithType: ILGenerator.Emit(OpCode,Label)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Label)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.Label[])\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Label[])\n  nameWithType: ILGenerator.Emit(OpCode,Label[])\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Label[])\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label[]\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.LocalBuilder)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,LocalBuilder)\n  nameWithType: ILGenerator.Emit(OpCode,LocalBuilder)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,LocalBuilder)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.LocalBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: LocalBuilder\n  nameWithType: LocalBuilder\n  fullName: System.Reflection.Emit.LocalBuilder\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.Emit.SignatureHelper)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,SignatureHelper)\n  nameWithType: ILGenerator.Emit(OpCode,SignatureHelper)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,SignatureHelper)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.Emit.SignatureHelper\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: SignatureHelper\n  nameWithType: SignatureHelper\n  fullName: System.Reflection.Emit.SignatureHelper\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,FieldInfo)\n  nameWithType: ILGenerator.Emit(OpCode,FieldInfo)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,FieldInfo)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,MethodInfo)\n  nameWithType: ILGenerator.Emit(OpCode,MethodInfo)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,MethodInfo)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.SByte)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,SByte)\n  nameWithType: ILGenerator.Emit(OpCode,SByte)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,SByte)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Single)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Single)\n  nameWithType: ILGenerator.Emit(OpCode,Single)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Single)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.String)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,String)\n  nameWithType: ILGenerator.Emit(OpCode,String)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,String)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.ILGenerator.Emit(System.Reflection.Emit.OpCode,System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: Emit(OpCode,Type)\n  nameWithType: ILGenerator.Emit(OpCode,Type)\n  fullName: System.Reflection.Emit.ILGenerator.Emit(OpCode,Type)\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.ILGenerator.EmitCall(System.Reflection.Emit.OpCode,System.Reflection.MethodInfo,System.Type[])\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EmitCall(OpCode,MethodInfo,Type[])\n  nameWithType: ILGenerator.EmitCall(OpCode,MethodInfo,Type[])\n  fullName: System.Reflection.Emit.ILGenerator.EmitCall(OpCode,MethodInfo,Type[])\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.MethodInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MethodInfo\n  nameWithType: MethodInfo\n  fullName: System.Reflection.MethodInfo\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Runtime.InteropServices.CallingConvention,System.Type,System.Type[])\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EmitCalli(OpCode,CallingConvention,Type,Type[])\n  nameWithType: ILGenerator.EmitCalli(OpCode,CallingConvention,Type,Type[])\n  fullName: System.Reflection.Emit.ILGenerator.EmitCalli(OpCode,CallingConvention,Type,Type[])\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Runtime.InteropServices.CallingConvention\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: CallingConvention\n  nameWithType: CallingConvention\n  fullName: System.Runtime.InteropServices.CallingConvention\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.ILGenerator.EmitCalli(System.Reflection.Emit.OpCode,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[])\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])\n  nameWithType: ILGenerator.EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])\n  fullName: System.Reflection.Emit.ILGenerator.EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])\n- uid: System.Reflection.Emit.OpCode\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: OpCode\n  nameWithType: OpCode\n  fullName: System.Reflection.Emit.OpCode\n- uid: System.Reflection.CallingConventions\n  parent: System.Reflection\n  isExternal: false\n  name: CallingConventions\n  nameWithType: CallingConventions\n  fullName: System.Reflection.CallingConventions\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.Emit.LocalBuilder)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EmitWriteLine(LocalBuilder)\n  nameWithType: ILGenerator.EmitWriteLine(LocalBuilder)\n  fullName: System.Reflection.Emit.ILGenerator.EmitWriteLine(LocalBuilder)\n- uid: System.Reflection.Emit.LocalBuilder\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: LocalBuilder\n  nameWithType: LocalBuilder\n  fullName: System.Reflection.Emit.LocalBuilder\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine(System.Reflection.FieldInfo)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EmitWriteLine(FieldInfo)\n  nameWithType: ILGenerator.EmitWriteLine(FieldInfo)\n  fullName: System.Reflection.Emit.ILGenerator.EmitWriteLine(FieldInfo)\n- uid: System.Reflection.FieldInfo\n  parent: System.Reflection\n  isExternal: false\n  name: FieldInfo\n  nameWithType: FieldInfo\n  fullName: System.Reflection.FieldInfo\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine(System.String)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EmitWriteLine(String)\n  nameWithType: ILGenerator.EmitWriteLine(String)\n  fullName: System.Reflection.Emit.ILGenerator.EmitWriteLine(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.ILGenerator.EndExceptionBlock\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EndExceptionBlock()\n  nameWithType: ILGenerator.EndExceptionBlock()\n  fullName: System.Reflection.Emit.ILGenerator.EndExceptionBlock()\n- uid: System.Reflection.Emit.ILGenerator.EndScope\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: EndScope()\n  nameWithType: ILGenerator.EndScope()\n  fullName: System.Reflection.Emit.ILGenerator.EndScope()\n- uid: System.Reflection.Emit.ILGenerator.ILOffset\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: ILOffset\n  nameWithType: ILGenerator.ILOffset\n  fullName: System.Reflection.Emit.ILGenerator.ILOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ILGenerator.MarkLabel(System.Reflection.Emit.Label)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: MarkLabel(Label)\n  nameWithType: ILGenerator.MarkLabel(Label)\n  fullName: System.Reflection.Emit.ILGenerator.MarkLabel(Label)\n- uid: System.Reflection.Emit.Label\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: Label\n  nameWithType: Label\n  fullName: System.Reflection.Emit.Label\n- uid: System.Reflection.Emit.ILGenerator.MarkSequencePoint(System.Diagnostics.SymbolStore.ISymbolDocumentWriter,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)\n  nameWithType: ILGenerator.MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)\n  fullName: System.Reflection.Emit.ILGenerator.MarkSequencePoint(ISymbolDocumentWriter,Int32,Int32,Int32,Int32)\n- uid: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: ISymbolDocumentWriter\n  nameWithType: ISymbolDocumentWriter\n  fullName: System.Diagnostics.SymbolStore.ISymbolDocumentWriter\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfo(UInt32,UInt32,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#GetTypeInfoCount(System.UInt32@)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.GetTypeInfoCount(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Reflection.Emit.ILGenerator.System#Runtime#InteropServices#_ILGenerator#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  nameWithType: ILGenerator.System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n  fullName: System.Reflection.Emit.ILGenerator.System.Runtime.InteropServices._ILGenerator.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.Reflection.Emit.ILGenerator.ThrowException(System.Type)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: ThrowException(Type)\n  nameWithType: ILGenerator.ThrowException(Type)\n  fullName: System.Reflection.Emit.ILGenerator.ThrowException(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.Emit.ILGenerator.UsingNamespace(System.String)\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  name: UsingNamespace(String)\n  nameWithType: ILGenerator.UsingNamespace(String)\n  fullName: System.Reflection.Emit.ILGenerator.UsingNamespace(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.Emit.ILGenerator.DeclareLocal*\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  nameWithType: ILGenerator.\n- uid: System.Reflection.Emit.ILGenerator.Emit*\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  nameWithType: ILGenerator.\n- uid: System.Reflection.Emit.ILGenerator.EmitCalli*\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  nameWithType: ILGenerator.\n- uid: System.Reflection.Emit.ILGenerator.EmitWriteLine*\n  parent: System.Reflection.Emit.ILGenerator\n  isExternal: false\n  nameWithType: ILGenerator.\n"}