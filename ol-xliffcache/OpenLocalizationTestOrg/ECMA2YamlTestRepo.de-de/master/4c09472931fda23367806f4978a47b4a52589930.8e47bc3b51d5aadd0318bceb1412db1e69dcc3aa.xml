{"nodes":[{"pos":[476,496],"content":"IQueue<TValue,TCont>","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueue&lt;TValue,TCont&gt;","pos":[0,20],"source":"IQueue<TValue,TCont>"}]},{"pos":[742,776],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[812,846],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1135,1163],"content":"assign(IQueue<TValue,TCont>)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IQueue&lt;TValue,TCont&gt;)","pos":[0,28],"source":"assign(IQueue<TValue,TCont>)"}]},{"pos":[1609,1643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1822,1828],"content":"back()","needQuote":true,"needEscape":true,"nodes":[{"content":"back()","pos":[0,6]}]},{"pos":[2150,2184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2365,2372],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[2702,2736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2917,2924],"content":"front()","needQuote":true,"needEscape":true,"nodes":[{"content":"front()","pos":[0,7]}]},{"pos":[3249,3283],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3460,3465],"content":"pop()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop()","pos":[0,5]}]},{"pos":[3917,3929],"content":"push(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push(TValue)","pos":[0,12]}]},{"pos":[4271,4305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4484,4490],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[4814,4848],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5065,5093],"content":"assign(IQueue<TValue,TCont>)","needQuote":true,"needEscape":true,"nodes":[{"content":"assign(IQueue&lt;TValue,TCont&gt;)","pos":[0,28],"source":"assign(IQueue<TValue,TCont>)"}]},{"pos":[5351,5371],"content":"IQueue<TValue,TCont>","needQuote":true,"needEscape":true,"nodes":[{"content":"IQueue&lt;TValue,TCont&gt;","pos":[0,20],"source":"IQueue<TValue,TCont>"}]},{"pos":[5585,5591],"content":"back()","needQuote":true,"needEscape":true,"nodes":[{"content":"back()","pos":[0,6]}]},{"pos":[5820,5827],"content":"empty()","needQuote":true,"needEscape":true,"nodes":[{"content":"empty()","pos":[0,7]}]},{"pos":[6006,6013],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6184,6191],"content":"front()","needQuote":true,"needEscape":true,"nodes":[{"content":"front()","pos":[0,7]}]},{"pos":[6420,6425],"content":"pop()","needQuote":true,"needEscape":true,"nodes":[{"content":"pop()","pos":[0,5]}]},{"pos":[6655,6667],"content":"push(TValue)","needQuote":true,"needEscape":true,"nodes":[{"content":"push(TValue)","pos":[0,12]}]},{"pos":[6843,6849],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[7010,7016],"content":"size()","needQuote":true,"needEscape":true,"nodes":[{"content":"size()","pos":[0,6]}]},{"pos":[7191,7196],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.IQueue`2\n  id: IQueue`2\n  children:\n  - Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue`2)\n  - Microsoft.VisualC.StlClr.IQueue`2.back\n  - Microsoft.VisualC.StlClr.IQueue`2.empty\n  - Microsoft.VisualC.StlClr.IQueue`2.front\n  - Microsoft.VisualC.StlClr.IQueue`2.pop\n  - Microsoft.VisualC.StlClr.IQueue`2.push(`0)\n  - Microsoft.VisualC.StlClr.IQueue`2.size\n  langs:\n  - csharp\n  name: IQueue<TValue,TCont>\n  nameWithType: IQueue<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>\n  type: Interface\n  syntax:\n    content: 'public interface IQueue<TValue,TCont> : ICloneable'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n    - id: TCont\n      description: Parameter description to be filled\n  implements:\n  - System.ICloneable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue`2)\n  id: assign(Microsoft.VisualC.StlClr.IQueue`2)\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: assign(IQueue<TValue,TCont>)\n  nameWithType: IQueue<TValue,TCont>.assign(IQueue<TValue,TCont>)\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.assign(IQueue<TValue,TCont>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void assign (Microsoft.VisualC.StlClr.IQueue<TValue,TCont> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.IQueue`2\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.back\n  id: back\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: back()\n  nameWithType: IQueue<TValue,TCont>.back()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.back()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue back ();\n    parameters: []\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.empty\n  id: empty\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: empty()\n  nameWithType: IQueue<TValue,TCont>.empty()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.empty()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public bool empty ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.front\n  id: front\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: front()\n  nameWithType: IQueue<TValue,TCont>.front()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.front()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public TValue front ();\n    parameters: []\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.pop\n  id: pop\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: pop()\n  nameWithType: IQueue<TValue,TCont>.pop()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.pop()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void pop ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.push(`0)\n  id: push(`0)\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: push(TValue)\n  nameWithType: IQueue<TValue,TCont>.push(TValue)\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.push(TValue)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public void push (TValue _Val);\n    parameters:\n    - id: _Val\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.IQueue`2.size\n  id: size\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  langs:\n  - csharp\n  name: size()\n  nameWithType: IQueue<TValue,TCont>.size()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.size()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr\n  syntax:\n    content: public int size ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue`2)\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: assign(IQueue<TValue,TCont>)\n  nameWithType: IQueue<TValue,TCont>.assign(IQueue<TValue,TCont>)\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.assign(IQueue<TValue,TCont>)\n- uid: Microsoft.VisualC.StlClr.IQueue`2\n  parent: Microsoft.VisualC.StlClr\n  isExternal: false\n  name: IQueue<TValue,TCont>\n  nameWithType: IQueue<TValue,TCont>\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>\n- uid: Microsoft.VisualC.StlClr.IQueue`2.back\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: back()\n  nameWithType: IQueue<TValue,TCont>.back()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.back()\n- uid: Microsoft.VisualC.StlClr.IQueue`2.empty\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: empty()\n  nameWithType: IQueue<TValue,TCont>.empty()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.empty()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.IQueue`2.front\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: front()\n  nameWithType: IQueue<TValue,TCont>.front()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.front()\n- uid: Microsoft.VisualC.StlClr.IQueue`2.pop\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: pop()\n  nameWithType: IQueue<TValue,TCont>.pop()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.pop()\n- uid: Microsoft.VisualC.StlClr.IQueue`2.push(`0)\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: push(TValue)\n  nameWithType: IQueue<TValue,TCont>.push(TValue)\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.push(TValue)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: Microsoft.VisualC.StlClr.IQueue`2.size\n  parent: Microsoft.VisualC.StlClr.IQueue`2\n  isExternal: false\n  name: size()\n  nameWithType: IQueue<TValue,TCont>.size()\n  fullName: Microsoft.VisualC.StlClr.IQueue<TValue,TCont>.size()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}