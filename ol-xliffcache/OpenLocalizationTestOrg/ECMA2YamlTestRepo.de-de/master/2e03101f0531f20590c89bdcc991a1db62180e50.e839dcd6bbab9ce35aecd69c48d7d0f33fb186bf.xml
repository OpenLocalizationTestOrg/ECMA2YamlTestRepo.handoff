{"nodes":[{"pos":[317,329],"content":"ObjectHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle","pos":[0,12]}]},{"pos":[1510,1530],"content":"ObjectHandle(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle(Object)","pos":[0,20]}]},{"pos":[1863,1897],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2124,2151],"content":"InitializeLifetimeService()","needQuote":true,"needEscape":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[2517,2551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2740,2748],"content":"Unwrap()","needQuote":true,"needEscape":true,"nodes":[{"content":"Unwrap()","pos":[0,8]}]},{"pos":[3048,3082],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3205,3230],"content":"System.MarshalByRefObject","needQuote":true,"needEscape":true,"nodes":[{"content":"System.MarshalByRefObject","pos":[0,25]}]},{"pos":[3371,3391],"content":"ObjectHandle(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectHandle(Object)","pos":[0,20]}]},{"pos":[3578,3584],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[3779,3806],"content":"InitializeLifetimeService()","needQuote":true,"needEscape":true,"nodes":[{"content":"InitializeLifetimeService()","pos":[0,27]}]},{"pos":[4007,4013],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4189,4197],"content":"Unwrap()","needQuote":true,"needEscape":true,"nodes":[{"content":"Unwrap()","pos":[0,8]}]},{"pos":[4360,4366],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Remoting.ObjectHandle\n  id: ObjectHandle\n  children:\n  - System.Runtime.Remoting.ObjectHandle.#ctor(System.Object)\n  - System.Runtime.Remoting.ObjectHandle.InitializeLifetimeService\n  - System.Runtime.Remoting.ObjectHandle.Unwrap\n  langs:\n  - csharp\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ObjectHandle : MarshalByRefObject, System.Runtime.Remoting.IObjectHandle\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  implements:\n  - System.Runtime.Remoting.IObjectHandle\n  inheritedMembers:\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.ObjectHandle.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.Runtime.Remoting.ObjectHandle\n  langs:\n  - csharp\n  name: ObjectHandle(Object)\n  nameWithType: ObjectHandle.ObjectHandle(Object)\n  fullName: System.Runtime.Remoting.ObjectHandle.ObjectHandle(Object)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  syntax:\n    content: public ObjectHandle (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.ObjectHandle.InitializeLifetimeService\n  id: InitializeLifetimeService\n  parent: System.Runtime.Remoting.ObjectHandle\n  langs:\n  - csharp\n  name: InitializeLifetimeService()\n  nameWithType: ObjectHandle.InitializeLifetimeService()\n  fullName: System.Runtime.Remoting.ObjectHandle.InitializeLifetimeService()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  syntax:\n    content: public override object InitializeLifetimeService ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Runtime.Remoting.ObjectHandle.Unwrap\n  id: Unwrap\n  parent: System.Runtime.Remoting.ObjectHandle\n  langs:\n  - csharp\n  name: Unwrap()\n  nameWithType: ObjectHandle.Unwrap()\n  fullName: System.Runtime.Remoting.ObjectHandle.Unwrap()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Remoting\n  syntax:\n    content: public object Unwrap ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.MarshalByRefObject\n  isExternal: false\n  name: System.MarshalByRefObject\n- uid: System.Runtime.Remoting.ObjectHandle.#ctor(System.Object)\n  parent: System.Runtime.Remoting.ObjectHandle\n  isExternal: false\n  name: ObjectHandle(Object)\n  nameWithType: ObjectHandle.ObjectHandle(Object)\n  fullName: System.Runtime.Remoting.ObjectHandle.ObjectHandle(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.ObjectHandle.InitializeLifetimeService\n  parent: System.Runtime.Remoting.ObjectHandle\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: ObjectHandle.InitializeLifetimeService()\n  fullName: System.Runtime.Remoting.ObjectHandle.InitializeLifetimeService()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Runtime.Remoting.ObjectHandle.Unwrap\n  parent: System.Runtime.Remoting.ObjectHandle\n  isExternal: false\n  name: Unwrap()\n  nameWithType: ObjectHandle.Unwrap()\n  fullName: System.Runtime.Remoting.ObjectHandle.Unwrap()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}