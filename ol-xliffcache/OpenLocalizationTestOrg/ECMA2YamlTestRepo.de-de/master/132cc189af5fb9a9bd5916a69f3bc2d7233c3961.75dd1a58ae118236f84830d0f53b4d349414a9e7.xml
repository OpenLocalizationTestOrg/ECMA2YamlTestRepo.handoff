{"nodes":[{"pos":[2176,2199],"content":"FontFamilyMapCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMapCollection","pos":[0,23]}]},{"pos":[3500,3518],"content":"Add(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(FontFamilyMap)","pos":[0,18]}]},{"pos":[3917,3951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4154,4161],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[4703,4726],"content":"Contains(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(FontFamilyMap)","pos":[0,23]}]},{"pos":[5140,5174],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5233,5267],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5574,5603],"content":"CopyTo(FontFamilyMap[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(FontFamilyMap[],Int32)","pos":[0,29]}]},{"pos":[6044,6078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6139,6173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6376,6381],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[6682,6716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6935,6950],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[7424,7458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7737,7759],"content":"IndexOf(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(FontFamilyMap)","pos":[0,22]}]},{"pos":[8169,8203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8260,8294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8597,8624],"content":"Insert(Int32,FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,FontFamilyMap)","pos":[0,27]}]},{"pos":[9034,9068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9150,9184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9397,9407],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[9726,9760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9989,10000],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[10379,10413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10492,10526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10803,10824],"content":"Remove(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(FontFamilyMap)","pos":[0,21]}]},{"pos":[11232,11266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11325,11359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11596,11611],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[11958,11992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12327,12377],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[12810,12844],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12905,12939],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13236,13281],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[13698,13732],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14017,14056],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[14456,14490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14785,14831],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[15284,15318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15611,15647],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[16033,16067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16124,16158],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16461,16502],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[16904,16938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16997,17031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17332,17372],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[17770,17804],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17861,17895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18220,18265],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[18682,18716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18777,18811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19090,19126],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[19516,19550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19843,19879],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[20298,20332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20390,20424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20723,20762],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[21158,21192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21303,21316],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[21492,21510],"content":"Add(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(FontFamilyMap)","pos":[0,18]}]},{"pos":[21747,21760],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[21979,21986],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[22280,22303],"content":"Contains(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(FontFamilyMap)","pos":[0,23]}]},{"pos":[22516,22523],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22676,22689],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[22960,22989],"content":"CopyTo(FontFamilyMap[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(FontFamilyMap[],Int32)","pos":[0,29]}]},{"pos":[23248,23261],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[23406,23411],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23600,23605],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[23780,23785],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23982,23997],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[24274,24300],"content":"IEnumerator<ph id=\"ph1\">&lt;FontFamilyMap&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<FontFamilyMap>"},{"pos":[24610,24632],"content":"IndexOf(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(FontFamilyMap)","pos":[0,22]}]},{"pos":[24841,24846],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24995,25008],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[25277,25304],"content":"Insert(Int32,FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,FontFamilyMap)","pos":[0,27]}]},{"pos":[25523,25528],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25677,25690],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[25914,25924],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[26111,26118],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26324,26335],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[26558,26571],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[26714,26719],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[26945,26966],"content":"Remove(FontFamilyMap)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(FontFamilyMap)","pos":[0,21]}]},{"pos":[27175,27182],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27335,27348],"content":"FontFamilyMap","needQuote":true,"needEscape":true,"nodes":[{"content":"FontFamilyMap","pos":[0,13]}]},{"pos":[27584,27599],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[27794,27799],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28047,28097],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[28362,28367],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[28480,28485],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28714,28759],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[29016,29023],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29250,29289],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[29533,29539],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[29769,29815],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[30102,30113],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[30364,30400],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[30637,30642],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[30756,30762],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30996,31037],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[31286,31293],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31411,31417],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31650,31690],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[31935,31940],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32054,32060],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32305,32350],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[32605,32610],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32724,32730],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32952,32988],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[33227,33234],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33465,33501],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[33739,33745],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33860,33865],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34095,34134],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[34378,34384],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.FontFamilyMapCollection\n  id: FontFamilyMapCollection\n  children:\n  - System.Windows.Media.FontFamilyMapCollection.Add(System.Windows.Media.FontFamilyMap)\n  - System.Windows.Media.FontFamilyMapCollection.Clear\n  - System.Windows.Media.FontFamilyMapCollection.Contains(System.Windows.Media.FontFamilyMap)\n  - System.Windows.Media.FontFamilyMapCollection.CopyTo(System.Windows.Media.FontFamilyMap[],System.Int32)\n  - System.Windows.Media.FontFamilyMapCollection.Count\n  - System.Windows.Media.FontFamilyMapCollection.GetEnumerator\n  - System.Windows.Media.FontFamilyMapCollection.IndexOf(System.Windows.Media.FontFamilyMap)\n  - System.Windows.Media.FontFamilyMapCollection.Insert(System.Int32,System.Windows.Media.FontFamilyMap)\n  - System.Windows.Media.FontFamilyMapCollection.IsReadOnly\n  - System.Windows.Media.FontFamilyMapCollection.Item(System.Int32)\n  - System.Windows.Media.FontFamilyMapCollection.Remove(System.Windows.Media.FontFamilyMap)\n  - System.Windows.Media.FontFamilyMapCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: FontFamilyMapCollection\n  nameWithType: FontFamilyMapCollection\n  fullName: System.Windows.Media.FontFamilyMapCollection\n  type: Class\n  syntax:\n    content: 'public sealed class FontFamilyMapCollection : System.Collections.Generic.ICollection<System.Windows.Media.FontFamilyMap>, System.Collections.Generic.IEnumerable<System.Windows.Media.FontFamilyMap>, System.Collections.Generic.IList<System.Windows.Media.FontFamilyMap>, System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.FontFamilyMap>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.FontFamilyMap>\n  - System.Collections.Generic.IList<System.Windows.Media.FontFamilyMap>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Add(System.Windows.Media.FontFamilyMap)\n  id: Add(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Add(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Add(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Add(FontFamilyMap)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Media.FontFamilyMap item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FontFamilyMap\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: FontFamilyMapCollection.Clear()\n  fullName: System.Windows.Media.FontFamilyMapCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Contains(System.Windows.Media.FontFamilyMap)\n  id: Contains(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Contains(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Contains(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Contains(FontFamilyMap)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Media.FontFamilyMap item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FontFamilyMap\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.CopyTo(System.Windows.Media.FontFamilyMap[],System.Int32)\n  id: CopyTo(System.Windows.Media.FontFamilyMap[],System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: CopyTo(FontFamilyMap[],Int32)\n  nameWithType: FontFamilyMapCollection.CopyTo(FontFamilyMap[],Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.CopyTo(FontFamilyMap[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Media.FontFamilyMap[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.FontFamilyMap[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Count\n  id: Count\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: FontFamilyMapCollection.Count\n  fullName: System.Windows.Media.FontFamilyMapCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: FontFamilyMapCollection.GetEnumerator()\n  fullName: System.Windows.Media.FontFamilyMapCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Windows.Media.FontFamilyMap> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.FontFamilyMap}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.IndexOf(System.Windows.Media.FontFamilyMap)\n  id: IndexOf(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: IndexOf(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.IndexOf(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.IndexOf(FontFamilyMap)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Media.FontFamilyMap item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FontFamilyMap\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Insert(System.Int32,System.Windows.Media.FontFamilyMap)\n  id: Insert(System.Int32,System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Insert(Int32,FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Insert(Int32,FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Insert(Int32,FontFamilyMap)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.FontFamilyMap item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: System.Windows.Media.FontFamilyMap\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: FontFamilyMapCollection.IsReadOnly\n  fullName: System.Windows.Media.FontFamilyMapCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: FontFamilyMapCollection.Item(Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.FontFamilyMap this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.FontFamilyMap\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.Remove(System.Windows.Media.FontFamilyMap)\n  id: Remove(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: Remove(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Remove(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Remove(FontFamilyMap)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Media.FontFamilyMap item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FontFamilyMap\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: FontFamilyMapCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: FontFamilyMapCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FontFamilyMapCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FontFamilyMapCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: FontFamilyMapCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FontFamilyMapCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.FontFamilyMapCollection.Add(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Add(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Add(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Add(FontFamilyMap)\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap\n- uid: System.Windows.Media.FontFamilyMapCollection.Clear\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: FontFamilyMapCollection.Clear()\n  fullName: System.Windows.Media.FontFamilyMapCollection.Clear()\n- uid: System.Windows.Media.FontFamilyMapCollection.Contains(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Contains(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Contains(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Contains(FontFamilyMap)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap\n- uid: System.Windows.Media.FontFamilyMapCollection.CopyTo(System.Windows.Media.FontFamilyMap[],System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: CopyTo(FontFamilyMap[],Int32)\n  nameWithType: FontFamilyMapCollection.CopyTo(FontFamilyMap[],Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.CopyTo(FontFamilyMap[],Int32)\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMapCollection.Count\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Count\n  nameWithType: FontFamilyMapCollection.Count\n  fullName: System.Windows.Media.FontFamilyMapCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMapCollection.GetEnumerator\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: FontFamilyMapCollection.GetEnumerator()\n  fullName: System.Windows.Media.FontFamilyMapCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.FontFamilyMap}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<FontFamilyMap>\n  nameWithType: IEnumerator<FontFamilyMap>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.FontFamilyMap>\n- uid: System.Windows.Media.FontFamilyMapCollection.IndexOf(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: IndexOf(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.IndexOf(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.IndexOf(FontFamilyMap)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap\n- uid: System.Windows.Media.FontFamilyMapCollection.Insert(System.Int32,System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Insert(Int32,FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Insert(Int32,FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Insert(Int32,FontFamilyMap)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap\n- uid: System.Windows.Media.FontFamilyMapCollection.IsReadOnly\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: FontFamilyMapCollection.IsReadOnly\n  fullName: System.Windows.Media.FontFamilyMapCollection.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FontFamilyMapCollection.Item(System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: FontFamilyMapCollection.Item(Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Item(Int32)\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMapCollection.Remove(System.Windows.Media.FontFamilyMap)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: Remove(FontFamilyMap)\n  nameWithType: FontFamilyMapCollection.Remove(FontFamilyMap)\n  fullName: System.Windows.Media.FontFamilyMapCollection.Remove(FontFamilyMap)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FontFamilyMap\n  parent: System.Windows.Media\n  isExternal: false\n  name: FontFamilyMap\n  nameWithType: FontFamilyMap\n  fullName: System.Windows.Media.FontFamilyMap\n- uid: System.Windows.Media.FontFamilyMapCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: FontFamilyMapCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: FontFamilyMapCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FontFamilyMapCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FontFamilyMapCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: FontFamilyMapCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FontFamilyMapCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.FontFamilyMapCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: FontFamilyMapCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.FontFamilyMapCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}