{"nodes":[{"pos":[717,728],"content":"SortVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion","pos":[0,11]}]},{"pos":[1479,1502],"content":"SortVersion(Int32,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion(Int32,Guid)","pos":[0,23]}]},{"pos":[1861,1895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1956,1990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2239,2258],"content":"Equals(SortVersion)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(SortVersion)","pos":[0,19]}]},{"pos":[2628,2662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2721,2755],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3019,3033],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[3353,3387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3446,3480],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3724,3735],"content":"FullVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"FullVersion","pos":[0,11]}]},{"pos":[4022,4056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4247,4260],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[4572,4606],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4931,4967],"content":"op_Equality(SortVersion,SortVersion)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(SortVersion,SortVersion)","pos":[0,36]}]},{"pos":[5423,5457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5538,5572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5631,5665],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5994,6032],"content":"op_Inequality(SortVersion,SortVersion)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(SortVersion,SortVersion)","pos":[0,38]}]},{"pos":[6494,6528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6609,6643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6702,6736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6917,6923],"content":"SortId","needQuote":true,"needEscape":true,"nodes":[{"content":"SortId","pos":[0,6]}]},{"pos":[7195,7229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7340,7353],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[7497,7520],"content":"SortVersion(Int32,Guid)","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion(Int32,Guid)","pos":[0,23]}]},{"pos":[7707,7712],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7824,7828],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[8026,8045],"content":"Equals(SortVersion)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(SortVersion)","pos":[0,19]}]},{"pos":[8226,8233],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8384,8395],"content":"SortVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion","pos":[0,11]}]},{"pos":[8602,8616],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8787,8794],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8912,8918],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[9091,9102],"content":"FullVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"FullVersion","pos":[0,11]}]},{"pos":[9265,9270],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9441,9454],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9621,9626],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9864,9900],"content":"op_Equality(SortVersion,SortVersion)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(SortVersion,SortVersion)","pos":[0,36]}]},{"pos":[10115,10122],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10273,10284],"content":"SortVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion","pos":[0,11]}]},{"pos":[10457,10468],"content":"SortVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion","pos":[0,11]}]},{"pos":[10734,10772],"content":"op_Inequality(SortVersion,SortVersion)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(SortVersion,SortVersion)","pos":[0,38]}]},{"pos":[10991,10998],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11149,11160],"content":"SortVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion","pos":[0,11]}]},{"pos":[11333,11344],"content":"SortVersion","needQuote":true,"needEscape":true,"nodes":[{"content":"SortVersion","pos":[0,11]}]},{"pos":[11536,11542],"content":"SortId","needQuote":true,"needEscape":true,"nodes":[{"content":"SortId","pos":[0,6]}]},{"pos":[11694,11698],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.SortVersion\n  id: SortVersion\n  children:\n  - System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)\n  - System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)\n  - System.Globalization.SortVersion.Equals(System.Object)\n  - System.Globalization.SortVersion.FullVersion\n  - System.Globalization.SortVersion.GetHashCode\n  - System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  - System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  - System.Globalization.SortVersion.SortId\n  langs:\n  - csharp\n  name: SortVersion\n  nameWithType: SortVersion\n  fullName: System.Globalization.SortVersion\n  type: Class\n  syntax:\n    content: 'public sealed class SortVersion : IEquatable<System.Globalization.SortVersion>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Globalization.SortVersion>\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)\n  id: '#ctor(System.Int32,System.Guid)'\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: SortVersion(Int32,Guid)\n  nameWithType: SortVersion.SortVersion(Int32,Guid)\n  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public SortVersion (int fullVersion, Guid sortId);\n    parameters:\n    - id: fullVersion\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: sortId\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)\n  id: Equals(System.Globalization.SortVersion)\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: Equals(SortVersion)\n  nameWithType: SortVersion.Equals(SortVersion)\n  fullName: System.Globalization.SortVersion.Equals(SortVersion)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public bool Equals (System.Globalization.SortVersion other);\n    parameters:\n    - id: other\n      type: System.Globalization.SortVersion\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Globalization.SortVersion.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: SortVersion.Equals(Object)\n  fullName: System.Globalization.SortVersion.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Globalization.SortVersion.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.FullVersion\n  id: FullVersion\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: FullVersion\n  nameWithType: SortVersion.FullVersion\n  fullName: System.Globalization.SortVersion.FullVersion\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public int FullVersion { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.GetHashCode\n  id: GetHashCode\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: SortVersion.GetHashCode()\n  fullName: System.Globalization.SortVersion.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  id: op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: op_Equality(SortVersion,SortVersion)\n  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)\n  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public static bool op_Equality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);\n    parameters:\n    - id: left\n      type: System.Globalization.SortVersion\n      description: Parameter description to be filled\n    - id: right\n      type: System.Globalization.SortVersion\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  id: op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: op_Inequality(SortVersion,SortVersion)\n  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)\n  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public static bool op_Inequality (System.Globalization.SortVersion left, System.Globalization.SortVersion right);\n    parameters:\n    - id: left\n      type: System.Globalization.SortVersion\n      description: Parameter description to be filled\n    - id: right\n      type: System.Globalization.SortVersion\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Globalization.SortVersion.SortId\n  id: SortId\n  parent: System.Globalization.SortVersion\n  langs:\n  - csharp\n  name: SortId\n  nameWithType: SortVersion.SortId\n  fullName: System.Globalization.SortVersion.SortId\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Globalization\n  syntax:\n    content: public Guid SortId { get; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Globalization.SortVersion.#ctor(System.Int32,System.Guid)\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: SortVersion(Int32,Guid)\n  nameWithType: SortVersion.SortVersion(Int32,Guid)\n  fullName: System.Globalization.SortVersion.SortVersion(Int32,Guid)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Globalization.SortVersion.Equals(System.Globalization.SortVersion)\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: Equals(SortVersion)\n  nameWithType: SortVersion.Equals(SortVersion)\n  fullName: System.Globalization.SortVersion.Equals(SortVersion)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.SortVersion\n  parent: System.Globalization\n  isExternal: false\n  name: SortVersion\n  nameWithType: SortVersion\n  fullName: System.Globalization.SortVersion\n- uid: System.Globalization.SortVersion.Equals(System.Object)\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: SortVersion.Equals(Object)\n  fullName: System.Globalization.SortVersion.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.SortVersion.FullVersion\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: FullVersion\n  nameWithType: SortVersion.FullVersion\n  fullName: System.Globalization.SortVersion.FullVersion\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.SortVersion.GetHashCode\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: SortVersion.GetHashCode()\n  fullName: System.Globalization.SortVersion.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.SortVersion.op_Equality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: op_Equality(SortVersion,SortVersion)\n  nameWithType: SortVersion.op_Equality(SortVersion,SortVersion)\n  fullName: System.Globalization.SortVersion.op_Equality(SortVersion,SortVersion)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.SortVersion\n  parent: System.Globalization\n  isExternal: false\n  name: SortVersion\n  nameWithType: SortVersion\n  fullName: System.Globalization.SortVersion\n- uid: System.Globalization.SortVersion\n  parent: System.Globalization\n  isExternal: false\n  name: SortVersion\n  nameWithType: SortVersion\n  fullName: System.Globalization.SortVersion\n- uid: System.Globalization.SortVersion.op_Inequality(System.Globalization.SortVersion,System.Globalization.SortVersion)\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: op_Inequality(SortVersion,SortVersion)\n  nameWithType: SortVersion.op_Inequality(SortVersion,SortVersion)\n  fullName: System.Globalization.SortVersion.op_Inequality(SortVersion,SortVersion)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.SortVersion\n  parent: System.Globalization\n  isExternal: false\n  name: SortVersion\n  nameWithType: SortVersion\n  fullName: System.Globalization.SortVersion\n- uid: System.Globalization.SortVersion\n  parent: System.Globalization\n  isExternal: false\n  name: SortVersion\n  nameWithType: SortVersion\n  fullName: System.Globalization.SortVersion\n- uid: System.Globalization.SortVersion.SortId\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  name: SortId\n  nameWithType: SortVersion.SortId\n  fullName: System.Globalization.SortVersion.SortId\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Globalization.SortVersion.Equals*\n  parent: System.Globalization.SortVersion\n  isExternal: false\n  nameWithType: SortVersion.\n"}