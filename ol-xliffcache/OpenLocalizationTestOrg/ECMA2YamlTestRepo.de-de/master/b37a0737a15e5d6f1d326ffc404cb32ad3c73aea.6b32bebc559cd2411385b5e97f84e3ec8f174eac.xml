{"nodes":[{"pos":[5914,5922],"content":"Parallel","needQuote":true,"needEscape":true,"nodes":[{"content":"Parallel","pos":[0,8]}]},{"pos":[6766,6814],"content":"For(Int32,Int32,Action<Int32,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int32,Int32,Action&lt;Int32,ParallelLoopState&gt;)","pos":[0,48],"source":"For(Int32,Int32,Action<Int32,ParallelLoopState>)"}]},{"pos":[7324,7358],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7425,7459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7575,7609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7695,7729],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8061,8091],"content":"For(Int32,Int32,Action<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,Action<Int32>)"},{"pos":[8524,8558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8625,8659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8734,8768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8854,8888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9302,9350],"content":"For(Int64,Int64,Action<Int64,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int64,Int64,Action&lt;Int64,ParallelLoopState&gt;)","pos":[0,48],"source":"For(Int64,Int64,Action<Int64,ParallelLoopState>)"}]},{"pos":[9863,9897],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9964,9998],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10114,10148],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10234,10268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10600,10630],"content":"For(Int64,Int64,Action<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,Action<Int64>)"},{"pos":[11066,11100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11167,11201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11276,11310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11396,11430],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11922,11986],"content":"For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int32,Int32,ParallelOptions,Action&lt;Int32,ParallelLoopState&gt;)","pos":[0,64],"source":"For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)"}]},{"pos":[12584,12618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12685,12719],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12816,12850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12966,13000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13086,13120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13530,13576],"content":"For(Int32,Int32,ParallelOptions,Action<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,ParallelOptions,Action<Int32>)"},{"pos":[14097,14131],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14198,14232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14329,14363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14438,14472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14558,14592],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15084,15148],"content":"For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int64,Int64,ParallelOptions,Action&lt;Int64,ParallelLoopState&gt;)","pos":[0,64],"source":"For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)"}]},{"pos":[15749,15783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15850,15884],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15981,16015],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16131,16165],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16251,16285],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16695,16741],"content":"For(Int64,Int64,ParallelOptions,Action<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,ParallelOptions,Action<Int64>)"},{"pos":[17265,17299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17366,17400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17497,17531],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17606,17640],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17726,17760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18264,18352],"content":"For(Int32,Int32,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int32,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[19015,19049],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19116,19150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19222,19256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19384,19418],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19495,19529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19615,19649],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20161,20249],"content":"For(Int64,Int64,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int64,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[20915,20949],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21016,21050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21122,21156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21284,21318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21395,21429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21515,21549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22139,22243],"content":"For(Int32,Int32,ParallelOptions,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int32,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[22994,23028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23095,23129],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23226,23260],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23332,23366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23494,23528],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23605,23639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23725,23759],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24349,24453],"content":"For(Int64,Int64,ParallelOptions,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int64,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[25207,25241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25308,25342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25439,25473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25545,25579],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25707,25741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25818,25852],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25938,25972],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26470,26548],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[27205,27239],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27363,27397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27483,27517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27976,28039],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)"},{"pos":[28643,28677],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28788,28822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28908,28942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29319,29364],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,Action<TSource>)"},{"pos":[29891,29925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29995,30029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30115,30149],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30634,30703],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[31325,31359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31483,31517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31603,31637],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32096,32159],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)"},{"pos":[32764,32798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32909,32943],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33029,33063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33440,33485],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Action<TSource>)"},{"pos":[34013,34047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34117,34151],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34237,34271],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34852,34946],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[35691,35725],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35822,35856],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35980,36014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36100,36134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36671,36750],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)"},{"pos":[37442,37476],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37573,37607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37718,37752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37838,37872],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38327,38388],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)"},{"pos":[39003,39037],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39134,39168],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39238,39272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39358,39392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39955,40040],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[40750,40784],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40881,40915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41039,41073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41159,41193],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41730,41809],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)"},{"pos":[42502,42536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42633,42667],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42778,42812],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42898,42932],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43387,43448],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)"},{"pos":[44064,44098],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44195,44229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44299,44333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44419,44453],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45040,45158],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[45967,46001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46073,46107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46243,46277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46354,46388],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46474,46508],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47058,47161],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[47917,47951],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48023,48057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48180,48214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48291,48325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48411,48445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49021,49130],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[49904,49938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50010,50044],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50180,50214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50291,50325],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50411,50445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50995,51098],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[51855,51889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51961,51995],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52118,52152],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52229,52263],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52349,52383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53055,53189],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[54086,54120],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54217,54251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54323,54357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54493,54527],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54604,54638],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54724,54758],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55386,55505],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[56349,56383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56480,56514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56586,56620],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56743,56777],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56854,56888],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56974,57008],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57662,57787],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[58649,58683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58780,58814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58886,58920],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59056,59090],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59167,59201],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59287,59321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59949,60068],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[60913,60947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61044,61078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61150,61184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61307,61341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61418,61452],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61538,61572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61854,61870],"content":"Invoke(Action[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Action[])","pos":[0,16]}]},{"pos":[62202,62236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62579,62611],"content":"Invoke(ParallelOptions,Action[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(ParallelOptions,Action[])","pos":[0,32]}]},{"pos":[63062,63096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63162,63196],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63359,63372],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[63582,63630],"content":"For(Int32,Int32,Action<Int32,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int32,Int32,Action&lt;Int32,ParallelLoopState&gt;)","pos":[0,48],"source":"For(Int32,Int32,Action<Int32,ParallelLoopState>)"}]},{"pos":[63908,63926],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[64081,64086],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64199,64204],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64372,64403],"content":"Action<Int32,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Int32,ParallelLoopState&gt;","pos":[0,31],"source":"Action<Int32,ParallelLoopState>"}]},{"pos":[64701,64731],"content":"For(Int32,Int32,Action<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,Action<Int32>)"},{"pos":[64973,64991],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[65146,65151],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65264,65269],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65397,65410],"content":"Action<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Int32>"},{"pos":[65690,65738],"content":"For(Int64,Int64,Action<Int64,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int64,Int64,Action&lt;Int64,ParallelLoopState&gt;)","pos":[0,48],"source":"For(Int64,Int64,Action<Int64,ParallelLoopState>)"}]},{"pos":[66016,66034],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[66189,66194],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[66307,66312],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[66480,66511],"content":"Action<Int64,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Int64,ParallelLoopState&gt;","pos":[0,31],"source":"Action<Int64,ParallelLoopState>"}]},{"pos":[66809,66839],"content":"For(Int64,Int64,Action<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,Action<Int64>)"},{"pos":[67081,67099],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[67254,67259],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[67372,67377],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[67505,67518],"content":"Action<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Int64>"},{"pos":[67837,67901],"content":"For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int32,Int32,ParallelOptions,Action&lt;Int32,ParallelLoopState&gt;)","pos":[0,64],"source":"For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)"}]},{"pos":[68211,68229],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[68384,68389],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68502,68507],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68662,68677],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[68881,68912],"content":"Action<Int32,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Int32,ParallelLoopState&gt;","pos":[0,31],"source":"Action<Int32,ParallelLoopState>"}]},{"pos":[69249,69295],"content":"For(Int32,Int32,ParallelOptions,Action<ph id=\"ph1\">&lt;Int32&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,ParallelOptions,Action<Int32>)"},{"pos":[69569,69587],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[69742,69747],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69860,69865],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[70020,70035],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[70199,70212],"content":"Action<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Int32>"},{"pos":[70531,70595],"content":"For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)","needQuote":true,"needEscape":true,"nodes":[{"content":"For(Int64,Int64,ParallelOptions,Action&lt;Int64,ParallelLoopState&gt;)","pos":[0,64],"source":"For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)"}]},{"pos":[70905,70923],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[71078,71083],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[71196,71201],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[71356,71371],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[71575,71606],"content":"Action<Int64,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Int64,ParallelLoopState&gt;","pos":[0,31],"source":"Action<Int64,ParallelLoopState>"}]},{"pos":[71943,71989],"content":"For(Int64,Int64,ParallelOptions,Action<ph id=\"ph1\">&lt;Int64&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,ParallelOptions,Action<Int64>)"},{"pos":[72263,72281],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[72436,72441],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[72554,72559],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[72714,72729],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[72893,72906],"content":"Action<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Int64>"},{"pos":[73231,73319],"content":"For(Int32,Int32,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int32,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[73677,73695],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[73850,73855],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73968,73973],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74092,74104],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[74298,74341],"content":"Func<Int32,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Int32,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,43],"source":"Func<Int32,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[74569,74583],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[74903,74991],"content":"For(Int64,Int64,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int64,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[75349,75367],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[75522,75527],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[75640,75645],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[75764,75776],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[75970,76013],"content":"Func<Int64,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Int64,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,43],"source":"Func<Int64,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[76241,76255],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[76614,76718],"content":"For(Int32,Int32,ParallelOptions,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int32,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[77108,77126],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[77281,77286],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77399,77404],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[77559,77574],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[77729,77741],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[77935,77978],"content":"Func<Int32,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Int32,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,43],"source":"Func<Int32,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[78206,78220],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[78579,78683],"content":"For(Int64,Int64,ParallelOptions,Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>,Func&lt;Int64,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph2\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[79073,79091],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[79246,79251],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[79364,79369],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[79524,79539],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[79694,79706],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[79900,79943],"content":"Func<Int64,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Int64,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,43],"source":"Func<Int64,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[80171,80185],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[80498,80576],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[80914,80932],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[81150,81179],"content":"OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"OrderablePartitioner<TSource>"},{"pos":[81426,81465],"content":"Action<TSource,ParallelLoopState,Int64>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState,Int64&gt;","pos":[0,39],"source":"Action<TSource,ParallelLoopState,Int64>"}]},{"pos":[81836,81899],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)"},{"pos":[82207,82225],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[82434,82454],"content":"Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Partitioner<TSource>"},{"pos":[82670,82703],"content":"Action<TSource,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState&gt;","pos":[0,33],"source":"Action<TSource,ParallelLoopState>"}]},{"pos":[83014,83059],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,Action<TSource>)"},{"pos":[83331,83349],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[83558,83578],"content":"Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Partitioner<TSource>"},{"pos":[83754,83769],"content":"Action<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TSource>"},{"pos":[84075,84144],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[84464,84482],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[84692,84712],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[84938,84977],"content":"Action<TSource,ParallelLoopState,Int64>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState,Int64&gt;","pos":[0,39],"source":"Action<TSource,ParallelLoopState,Int64>"}]},{"pos":[85348,85411],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)"},{"pos":[85719,85737],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[85947,85967],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[86180,86213],"content":"Action<TSource,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState&gt;","pos":[0,33],"source":"Action<TSource,ParallelLoopState>"}]},{"pos":[86524,86569],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Action<TSource>)"},{"pos":[86841,86859],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[87069,87089],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[87262,87277],"content":"Action<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TSource>"},{"pos":[87631,87725],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[88095,88113],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[88331,88360],"content":"OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"OrderablePartitioner<TSource>"},{"pos":[88586,88601],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[88813,88852],"content":"Action<TSource,ParallelLoopState,Int64>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState,Int64&gt;","pos":[0,39],"source":"Action<TSource,ParallelLoopState,Int64>"}]},{"pos":[89262,89341],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)"},{"pos":[89681,89699],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[89908,89928],"content":"Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Partitioner<TSource>"},{"pos":[90136,90151],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[90350,90383],"content":"Action<TSource,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState&gt;","pos":[0,33],"source":"Action<TSource,ParallelLoopState>"}]},{"pos":[90733,90794],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)"},{"pos":[91098,91116],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[91325,91345],"content":"Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Partitioner<TSource>"},{"pos":[91553,91568],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[91727,91742],"content":"Action<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TSource>"},{"pos":[92087,92172],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState,Int64&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)"},{"pos":[92524,92542],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[92752,92772],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[92977,92992],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[93204,93243],"content":"Action<TSource,ParallelLoopState,Int64>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState,Int64&gt;","pos":[0,39],"source":"Action<TSource,ParallelLoopState,Int64>"}]},{"pos":[93653,93732],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action&lt;TSource,ParallelLoopState&gt;)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)"},{"pos":[94072,94090],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[94300,94320],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[94525,94540],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[94739,94772],"content":"Action<TSource,ParallelLoopState>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;TSource,ParallelLoopState&gt;","pos":[0,33],"source":"Action<TSource,ParallelLoopState>"}]},{"pos":[95122,95183],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Action<ph id=\"ph2\">&lt;TSource&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)"},{"pos":[95487,95505],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[95715,95735],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[95940,95955],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[96114,96129],"content":"Action<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TSource>"},{"pos":[96486,96604],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[97022,97040],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[97258,97287],"content":"OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"OrderablePartitioner<TSource>"},{"pos":[97477,97489],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[97691,97742],"content":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;","pos":[0,51],"source":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>"}]},{"pos":[97986,98000],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[98333,98436],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[98824,98842],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[99051,99071],"content":"Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Partitioner<TSource>"},{"pos":[99243,99255],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[99444,99489],"content":"Func<TSource,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,45],"source":"Func<TSource,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[99714,99728],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[100074,100183],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[100583,100601],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[100811,100831],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[101000,101012],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[101214,101265],"content":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;","pos":[0,51],"source":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>"}]},{"pos":[101509,101523],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[101856,101959],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[102347,102365],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[102575,102595],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[102764,102776],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[102965,103010],"content":"Func<TSource,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,45],"source":"Func<TSource,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[103235,103249],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[103643,103777],"content":"ForEach(OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[104227,104245],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[104463,104492],"content":"OrderablePartitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"OrderablePartitioner<TSource>"},{"pos":[104718,104733],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[104888,104900],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[105102,105153],"content":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;","pos":[0,51],"source":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>"}]},{"pos":[105397,105411],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[105783,105902],"content":"ForEach(Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[106322,106340],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[106549,106569],"content":"Partitioner<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"Partitioner<TSource>"},{"pos":[106777,106792],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[106947,106959],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[107148,107193],"content":"Func<TSource,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,45],"source":"Func<TSource,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[107418,107432],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[107817,107942],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)"},{"pos":[108374,108392],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[108602,108622],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[108827,108842],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[108997,109009],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[109211,109262],"content":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,Int64,TLocal,TLocal&gt;","pos":[0,51],"source":"Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>"}]},{"pos":[109506,109520],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[109892,110011],"content":"ForEach(IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>,ParallelOptions,Func<ph id=\"ph2\">&lt;TLocal&gt;</ph>,Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;,Action<ph id=\"ph3\">&lt;TLocal&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)"},{"pos":[110431,110449],"content":"ParallelLoopResult","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelLoopResult","pos":[0,18]}]},{"pos":[110659,110679],"content":"IEnumerable<ph id=\"ph1\">&lt;TSource&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<TSource>"},{"pos":[110884,110899],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[111054,111066],"content":"Func<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TLocal>"},{"pos":[111255,111300],"content":"Func<TSource,ParallelLoopState,TLocal,TLocal>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;TSource,ParallelLoopState,TLocal,TLocal&gt;","pos":[0,45],"source":"Func<TSource,ParallelLoopState,TLocal,TLocal>"}]},{"pos":[111525,111539],"content":"Action<ph id=\"ph1\">&lt;TLocal&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<TLocal>"},{"pos":[111738,111754],"content":"Invoke(Action[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(Action[])","pos":[0,16]}]},{"pos":[111923,111929],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[112153,112185],"content":"Invoke(ParallelOptions,Action[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Invoke(ParallelOptions,Action[])","pos":[0,32]}]},{"pos":[112428,112443],"content":"ParallelOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ParallelOptions","pos":[0,15]}]},{"pos":[112592,112598],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.Parallel\n  id: Parallel\n  children:\n  - System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})\n  - System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})\n  - System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})\n  - System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})\n  - System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  - System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  - System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  - System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  - System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  - System.Threading.Tasks.Parallel.Invoke(System.Action[])\n  - System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])\n  langs:\n  - csharp\n  name: Parallel\n  nameWithType: Parallel\n  fullName: System.Threading.Tasks.Parallel\n  type: Class\n  syntax:\n    content: public static class Parallel\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  id: For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int32,Int32,Action<Int32,ParallelLoopState>)\n  nameWithType: Parallel.For(Int32,Int32,Action<Int32,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,Action<Int32,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action<int,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})\n  id: For(System.Int32,System.Int32,System.Action{System.Int32})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int32,Int32,Action<Int32>)\n  nameWithType: Parallel.For(Int32,Int32,Action<Int32>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,Action<Int32>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, Action<int> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int32}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  id: For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int64,Int64,Action<Int64,ParallelLoopState>)\n  nameWithType: Parallel.For(Int64,Int64,Action<Int64,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,Action<Int64,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action<long,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})\n  id: For(System.Int64,System.Int64,System.Action{System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int64,Int64,Action<Int64>)\n  nameWithType: Parallel.For(Int64,Int64,Action<Int64>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,Action<Int64>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, Action<long> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  id: For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)\n  nameWithType: Parallel.For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action<int,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})\n  id: For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int32,Int32,ParallelOptions,Action<Int32>)\n  nameWithType: Parallel.For(Int32,Int32,ParallelOptions,Action<Int32>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,ParallelOptions,Action<Int32>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action<int> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int32}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  id: For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)\n  nameWithType: Parallel.For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action<long,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})\n  id: For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int64,Int64,ParallelOptions,Action<Int64>)\n  nameWithType: Parallel.For(Int64,Int64,ParallelOptions,Action<Int64>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,ParallelOptions,Action<Int64>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Action<long> body);\n    parameters:\n    - id: fromInclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  id: For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For<TLocal> (int fromInclusive, int toExclusive, Func<TLocal> localInit, Func<int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: fromInclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For<TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  id: For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For<TLocal> (long fromInclusive, long toExclusive, Func<TLocal> localInit, Func<long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: fromInclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For<TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  id: For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For<TLocal> (int fromInclusive, int toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func<TLocal> localInit, Func<int,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: fromInclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For<TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  id: For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult For<TLocal> (long fromInclusive, long toExclusive, System.Threading.Tasks.ParallelOptions parallelOptions, Func<TLocal> localInit, Func<long,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: fromInclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: toExclusive\n      type: System.Int64\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.For<TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  id: ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Concurrent.OrderablePartitioner<TSource> source, Action<TSource,System.Threading.Tasks.ParallelLoopState,long> body);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.OrderablePartitioner`1\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  id: ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Concurrent.Partitioner<TSource> source, Action<TSource,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.Partitioner`1\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0})\n  id: ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(Partitioner<TSource>,Action<TSource>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,Action<TSource>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Concurrent.Partitioner<TSource> source, Action<TSource> body);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.Partitioner`1\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Generic.IEnumerable<TSource> source, Action<TSource,System.Threading.Tasks.ParallelLoopState,long> body);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Generic.IEnumerable<TSource> source, Action<TSource,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})\n  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,Action<TSource>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Action<TSource>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Generic.IEnumerable<TSource> source, Action<TSource> body);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  id: ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Concurrent.OrderablePartitioner<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Action<TSource,System.Threading.Tasks.ParallelLoopState,long> body);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.OrderablePartitioner`1\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  id: ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Concurrent.Partitioner<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Action<TSource,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.Partitioner`1\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  id: ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Concurrent.Partitioner<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Action<TSource> body);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.Partitioner`1\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Generic.IEnumerable<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Action<TSource,System.Threading.Tasks.ParallelLoopState,long> body);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Generic.IEnumerable<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Action<TSource,System.Threading.Tasks.ParallelLoopState> body);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  id: ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource> (System.Collections.Generic.IEnumerable<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Action<TSource> body);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: body\n      type: System.Action{TSource}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Concurrent.OrderablePartitioner<TSource> source, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.OrderablePartitioner`1\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Concurrent.Partitioner<TSource> source, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.Partitioner`1\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Generic.IEnumerable<TSource> source, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Generic.IEnumerable<TSource> source, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Concurrent.OrderablePartitioner<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.OrderablePartitioner`1\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Concurrent.Partitioner<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Concurrent.Partitioner`1\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Generic.IEnumerable<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,long,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  id: ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.ParallelLoopResult ForEach<TSource,TLocal> (System.Collections.Generic.IEnumerable<TSource> source, System.Threading.Tasks.ParallelOptions parallelOptions, Func<TLocal> localInit, Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal> body, Action<TLocal> localFinally);\n    parameters:\n    - id: source\n      type: System.Collections.Generic.IEnumerable{TSource}\n      description: Parameter description to be filled\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: localInit\n      type: System.Func{TLocal}\n      description: Parameter description to be filled\n    - id: body\n      type: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n      description: Parameter description to be filled\n    - id: localFinally\n      type: System.Action{TLocal}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.ParallelLoopResult\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.Invoke(System.Action[])\n  id: Invoke(System.Action[])\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: Invoke(Action[])\n  nameWithType: Parallel.Invoke(Action[])\n  fullName: System.Threading.Tasks.Parallel.Invoke(Action[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static void Invoke (Action[] actions);\n    parameters:\n    - id: actions\n      type: System.Action[]\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])\n  id: Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])\n  parent: System.Threading.Tasks.Parallel\n  langs:\n  - csharp\n  name: Invoke(ParallelOptions,Action[])\n  nameWithType: Parallel.Invoke(ParallelOptions,Action[])\n  fullName: System.Threading.Tasks.Parallel.Invoke(ParallelOptions,Action[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static void Invoke (System.Threading.Tasks.ParallelOptions parallelOptions, Action[] actions);\n    parameters:\n    - id: parallelOptions\n      type: System.Threading.Tasks.ParallelOptions\n      description: Parameter description to be filled\n    - id: actions\n      type: System.Action[]\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Parallel.Invoke*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int32,Int32,Action<Int32,ParallelLoopState>)\n  nameWithType: Parallel.For(Int32,Int32,Action<Int32,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,Action<Int32,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<Int32,ParallelLoopState>\n  nameWithType: Action<Int32,ParallelLoopState>\n  fullName: System.Action<System.Int32,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int32,Int32,Action<Int32>)\n  nameWithType: Parallel.For(Int32,Int32,Action<Int32>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,Action<Int32>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Action{System.Int32}\n  parent: System\n  isExternal: false\n  name: Action<Int32>\n  nameWithType: Action<Int32>\n  fullName: System.Action<System.Int32>\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int64,Int64,Action<Int64,ParallelLoopState>)\n  nameWithType: Parallel.For(Int64,Int64,Action<Int64,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,Action<Int64,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<Int64,ParallelLoopState>\n  nameWithType: Action<Int64,ParallelLoopState>\n  fullName: System.Action<System.Int64,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int64,Int64,Action<Int64>)\n  nameWithType: Parallel.For(Int64,Int64,Action<Int64>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,Action<Int64>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Action{System.Int64}\n  parent: System\n  isExternal: false\n  name: Action<Int64>\n  nameWithType: Action<Int64>\n  fullName: System.Action<System.Int64>\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)\n  nameWithType: Parallel.For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,ParallelOptions,Action<Int32,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<Int32,ParallelLoopState>\n  nameWithType: Action<Int32,ParallelLoopState>\n  fullName: System.Action<System.Int32,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int32,Int32,ParallelOptions,Action<Int32>)\n  nameWithType: Parallel.For(Int32,Int32,ParallelOptions,Action<Int32>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,ParallelOptions,Action<Int32>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{System.Int32}\n  parent: System\n  isExternal: false\n  name: Action<Int32>\n  nameWithType: Action<Int32>\n  fullName: System.Action<System.Int32>\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)\n  nameWithType: Parallel.For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,ParallelOptions,Action<Int64,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<Int64,ParallelLoopState>\n  nameWithType: Action<Int64,ParallelLoopState>\n  fullName: System.Action<System.Int64,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int64,Int64,ParallelOptions,Action<Int64>)\n  nameWithType: Parallel.For(Int64,Int64,ParallelOptions,Action<Int64>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,ParallelOptions,Action<Int64>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{System.Int64}\n  parent: System\n  isExternal: false\n  name: Action<Int64>\n  nameWithType: Action<Int64>\n  fullName: System.Action<System.Int64>\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<Int32,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<Int32,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<Int64,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<Int64,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int32,Int32,ParallelOptions,Func<TLocal>,Func<Int32,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<Int32,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<Int32,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.For(Int64,Int64,ParallelOptions,Func<TLocal>,Func<Int64,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<Int64,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<Int64,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,Action<TSource,ParallelLoopState,Int64>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.OrderablePartitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: OrderablePartitioner<TSource>\n  nameWithType: OrderablePartitioner<TSource>\n  fullName: System.Collections.Concurrent.OrderablePartitioner<TSource>\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState,Int64>\n  nameWithType: Action<TSource,ParallelLoopState,Int64>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,Action<TSource,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.Partitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState>\n  nameWithType: Action<TSource,ParallelLoopState>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(Partitioner<TSource>,Action<TSource>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,Action<TSource>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.Partitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n- uid: System.Action{TSource}\n  parent: System\n  isExternal: false\n  name: Action<TSource>\n  nameWithType: Action<TSource>\n  fullName: System.Action<TSource>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState,Int64>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState,Int64>\n  nameWithType: Action<TSource,ParallelLoopState,Int64>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Action<TSource,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState>\n  nameWithType: Action<TSource,ParallelLoopState>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,Action<TSource>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Action<TSource>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Action{TSource}\n  parent: System\n  isExternal: false\n  name: Action<TSource>\n  nameWithType: Action<TSource>\n  fullName: System.Action<TSource>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.OrderablePartitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: OrderablePartitioner<TSource>\n  nameWithType: OrderablePartitioner<TSource>\n  fullName: System.Collections.Concurrent.OrderablePartitioner<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState,Int64>\n  nameWithType: Action<TSource,ParallelLoopState,Int64>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.Partitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState>\n  nameWithType: Action<TSource,ParallelLoopState>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Action<TSource>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.Partitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{TSource}\n  parent: System\n  isExternal: false\n  name: Action<TSource>\n  nameWithType: Action<TSource>\n  fullName: System.Action<TSource>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState,Int64>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState,Int64>\n  nameWithType: Action<TSource,ParallelLoopState,Int64>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource,ParallelLoopState>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{TSource,System.Threading.Tasks.ParallelLoopState}\n  parent: System\n  isExternal: true\n  name: Action<TSource,ParallelLoopState>\n  nameWithType: Action<TSource,ParallelLoopState>\n  fullName: System.Action<TSource,System.Threading.Tasks.ParallelLoopState>\n- uid: System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Action<TSource>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action{TSource}\n  parent: System\n  isExternal: false\n  name: Action<TSource>\n  nameWithType: Action<TSource>\n  fullName: System.Action<TSource>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.OrderablePartitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: OrderablePartitioner<TSource>\n  nameWithType: OrderablePartitioner<TSource>\n  fullName: System.Collections.Concurrent.OrderablePartitioner<TSource>\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.Partitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(OrderablePartitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.OrderablePartitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: OrderablePartitioner<TSource>\n  nameWithType: OrderablePartitioner<TSource>\n  fullName: System.Collections.Concurrent.OrderablePartitioner<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner`1,System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(Partitioner<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Concurrent.Partitioner`1\n  parent: System.Collections.Concurrent\n  isExternal: false\n  name: Partitioner<TSource>\n  nameWithType: Partitioner<TSource>\n  fullName: System.Collections.Concurrent.Partitioner<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,Int64,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  nameWithType: Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n  fullName: System.Threading.Tasks.Parallel.ForEach(IEnumerable<TSource>,ParallelOptions,Func<TLocal>,Func<TSource,ParallelLoopState,TLocal,TLocal>,Action<TLocal>)\n- uid: System.Threading.Tasks.ParallelLoopResult\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelLoopResult\n  nameWithType: ParallelLoopResult\n  fullName: System.Threading.Tasks.ParallelLoopResult\n- uid: System.Collections.Generic.IEnumerable{TSource}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<TSource>\n  nameWithType: IEnumerable<TSource>\n  fullName: System.Collections.Generic.IEnumerable<TSource>\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Func{TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TLocal>\n  nameWithType: Func<TLocal>\n  fullName: System.Func<TLocal>\n- uid: System.Func{TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal}\n  parent: System\n  isExternal: true\n  name: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  nameWithType: Func<TSource,ParallelLoopState,TLocal,TLocal>\n  fullName: System.Func<TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal>\n- uid: System.Action{TLocal}\n  parent: System\n  isExternal: false\n  name: Action<TLocal>\n  nameWithType: Action<TLocal>\n  fullName: System.Action<TLocal>\n- uid: System.Threading.Tasks.Parallel.Invoke(System.Action[])\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: Invoke(Action[])\n  nameWithType: Parallel.Invoke(Action[])\n  fullName: System.Threading.Tasks.Parallel.Invoke(Action[])\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action[]\n- uid: System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  name: Invoke(ParallelOptions,Action[])\n  nameWithType: Parallel.Invoke(ParallelOptions,Action[])\n  fullName: System.Threading.Tasks.Parallel.Invoke(ParallelOptions,Action[])\n- uid: System.Threading.Tasks.ParallelOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: ParallelOptions\n  nameWithType: ParallelOptions\n  fullName: System.Threading.Tasks.ParallelOptions\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action[]\n- uid: System.Threading.Tasks.Parallel.For*\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  nameWithType: Parallel.\n- uid: System.Threading.Tasks.Parallel.For<TLocal>*\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  nameWithType: Parallel.\n- uid: System.Threading.Tasks.Parallel.ForEach<TSource>*\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  nameWithType: Parallel.\n- uid: System.Threading.Tasks.Parallel.ForEach<TSource,TLocal>*\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  nameWithType: Parallel.\n- uid: System.Threading.Tasks.Parallel.Invoke*\n  parent: System.Threading.Tasks.Parallel\n  isExternal: false\n  nameWithType: Parallel.\n"}