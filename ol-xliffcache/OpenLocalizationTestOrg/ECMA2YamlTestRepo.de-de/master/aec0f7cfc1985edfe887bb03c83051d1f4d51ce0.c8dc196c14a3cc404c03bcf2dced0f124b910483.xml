{"nodes":[{"pos":[263,274],"content":"DbAggregate","needQuote":true,"needEscape":true,"nodes":[{"content":"DbAggregate","pos":[0,11]}]},{"pos":[982,991],"content":"Arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"Arguments","pos":[0,9]}]},{"pos":[1445,1479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1690,1700],"content":"ResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"ResultType","pos":[0,10]}]},{"pos":[2069,2103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2214,2227],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[2371,2380],"content":"Arguments","needQuote":true,"needEscape":true,"nodes":[{"content":"Arguments","pos":[0,9]}]},{"pos":[2636,2655],"content":"IList<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<DbExpression>"},{"pos":[2927,2937],"content":"ResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"ResultType","pos":[0,10]}]},{"pos":[3149,3158],"content":"TypeUsage","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeUsage","pos":[0,9]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbAggregate\n  id: DbAggregate\n  children:\n  - System.Data.Common.CommandTrees.DbAggregate.Arguments\n  - System.Data.Common.CommandTrees.DbAggregate.ResultType\n  langs:\n  - csharp\n  name: DbAggregate\n  nameWithType: DbAggregate\n  fullName: System.Data.Common.CommandTrees.DbAggregate\n  type: Class\n  syntax:\n    content: public abstract class DbAggregate\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbAggregate.Arguments\n  id: Arguments\n  parent: System.Data.Common.CommandTrees.DbAggregate\n  langs:\n  - csharp\n  name: Arguments\n  nameWithType: DbAggregate.Arguments\n  fullName: System.Data.Common.CommandTrees.DbAggregate.Arguments\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> Arguments { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbAggregate.ResultType\n  id: ResultType\n  parent: System.Data.Common.CommandTrees.DbAggregate\n  langs:\n  - csharp\n  name: ResultType\n  nameWithType: DbAggregate.ResultType\n  fullName: System.Data.Common.CommandTrees.DbAggregate.ResultType\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Metadata.Edm.TypeUsage ResultType { get; }\n    return:\n      type: System.Data.Metadata.Edm.TypeUsage\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Common.CommandTrees.DbAggregate.Arguments\n  parent: System.Data.Common.CommandTrees.DbAggregate\n  isExternal: false\n  name: Arguments\n  nameWithType: DbAggregate.Arguments\n  fullName: System.Data.Common.CommandTrees.DbAggregate.Arguments\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbExpression>\n  nameWithType: IList<DbExpression>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression>\n- uid: System.Data.Common.CommandTrees.DbAggregate.ResultType\n  parent: System.Data.Common.CommandTrees.DbAggregate\n  isExternal: false\n  name: ResultType\n  nameWithType: DbAggregate.ResultType\n  fullName: System.Data.Common.CommandTrees.DbAggregate.ResultType\n- uid: System.Data.Metadata.Edm.TypeUsage\n  parent: System.Data.Metadata.Edm\n  isExternal: false\n  name: TypeUsage\n  nameWithType: TypeUsage\n  fullName: System.Data.Metadata.Edm.TypeUsage\n"}