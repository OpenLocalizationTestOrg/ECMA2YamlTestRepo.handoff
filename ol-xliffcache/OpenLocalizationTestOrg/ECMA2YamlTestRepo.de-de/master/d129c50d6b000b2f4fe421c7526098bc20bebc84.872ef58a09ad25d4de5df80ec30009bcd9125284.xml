{"nodes":[{"pos":[643,681],"content":"ArgumentToExpressionModelItemConverter","needQuote":true,"needEscape":true,"nodes":[{"content":"ArgumentToExpressionModelItemConverter","pos":[0,38]}]},{"pos":[1626,1666],"content":"ArgumentToExpressionModelItemConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"ArgumentToExpressionModelItemConverter()","pos":[0,40]}]},{"pos":[2543,2584],"content":"Convert(Object[],Type,Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Object[],Type,Object,CultureInfo)","pos":[0,41]}]},{"pos":[3157,3191],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3256,3290],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3356,3390],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3473,3507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3565,3599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4038,4083],"content":"ConvertBack(Object,Type[],Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertBack(Object,Type[],Object,CultureInfo)","pos":[0,45]}]},{"pos":[4667,4701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4769,4803],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4869,4903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4986,5020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5080,5114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5225,5238],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[5452,5492],"content":"ArgumentToExpressionModelItemConverter()","needQuote":true,"needEscape":true,"nodes":[{"content":"ArgumentToExpressionModelItemConverter()","pos":[0,40]}]},{"pos":[6014,6055],"content":"Convert(Object[],Type,Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Object[],Type,Object,CultureInfo)","pos":[0,41]}]},{"pos":[6354,6360],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6476,6482],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6598,6602],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[6714,6720],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6869,6880],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]},{"pos":[7249,7294],"content":"ConvertBack(Object,Type[],Object,CultureInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConvertBack(Object,Type[],Object,CultureInfo)","pos":[0,45]}]},{"pos":[7601,7607],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7725,7731],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7845,7849],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7963,7969],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[8118,8129],"content":"CultureInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CultureInfo","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  id: ArgumentToExpressionModelItemConverter\n  children:\n  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor\n  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  - System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  langs:\n  - csharp\n  name: ArgumentToExpressionModelItemConverter\n  nameWithType: ArgumentToExpressionModelItemConverter\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  type: Class\n  syntax:\n    content: 'public class ArgumentToExpressionModelItemConverter : System.Windows.Data.IMultiValueConverter'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Windows.Data.IMultiValueConverter\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor\n  id: '#ctor'\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  langs:\n  - csharp\n  name: ArgumentToExpressionModelItemConverter()\n  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n  type: Constructor\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  syntax:\n    content: public ArgumentToExpressionModelItemConverter ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  id: Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  langs:\n  - csharp\n  name: Convert(Object[],Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  syntax:\n    content: public object Convert (object[] values, Type targetType, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: values\n      type: System.Object[]\n      description: Parameter description to be filled\n    - id: targetType\n      type: System.Type\n      description: Parameter description to be filled\n    - id: parameter\n      type: System.Object\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  id: ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  langs:\n  - csharp\n  name: ConvertBack(Object,Type[],Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n  type: Method\n  assemblies:\n  - System.Activities.Presentation\n  namespace: System.Activities.Presentation.Converters\n  syntax:\n    content: public object[] ConvertBack (object value, Type[] targetTypes, object parameter, System.Globalization.CultureInfo culture);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    - id: targetTypes\n      type: System.Type[]\n      description: Parameter description to be filled\n    - id: parameter\n      type: System.Object\n      description: Parameter description to be filled\n    - id: culture\n      type: System.Globalization.CultureInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Object[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.#ctor\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: ArgumentToExpressionModelItemConverter()\n  nameWithType: ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ArgumentToExpressionModelItemConverter()\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: Convert(Object[],Type,Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.Convert(Object[],Type,Object,CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(System.Object,System.Type[],System.Object,System.Globalization.CultureInfo)\n  parent: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter\n  isExternal: false\n  name: ConvertBack(Object,Type[],Object,CultureInfo)\n  nameWithType: ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n  fullName: System.Activities.Presentation.Converters.ArgumentToExpressionModelItemConverter.ConvertBack(Object,Type[],Object,CultureInfo)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n"}