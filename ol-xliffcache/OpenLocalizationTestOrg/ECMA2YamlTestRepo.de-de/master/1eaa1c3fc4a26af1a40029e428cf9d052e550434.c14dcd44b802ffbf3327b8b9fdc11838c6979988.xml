{"nodes":[{"pos":[5634,5671],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[6020,6054],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6707,6738],"content":"ContainerRandomAccessIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator()","pos":[0,31]}]},{"pos":[7504,7564],"content":"ContainerRandomAccessIterator(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator(ContainerRandomAccessIterator)","pos":[0,60]}]},{"pos":[8193,8227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8616,8683],"content":"ContainerRandomAccessIterator(IRandomAccessContainer<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)"},{"pos":[9333,9367],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9430,9464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9707,9714],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[10103,10137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10388,10399],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[10800,10834],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11211,11250],"content":"distance(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"distance(ContainerRandomAccessIterator)","pos":[0,39]}]},{"pos":[11815,11849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11906,11940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12392,12431],"content":"distance(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"distance(IRandomAccessIterator<TValue>)"},{"pos":[12998,13032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13089,13123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13587,13626],"content":"equal_to(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ContainerRandomAccessIterator)","pos":[0,39]}]},{"pos":[14192,14226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14285,14319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14757,14789],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[15329,15363],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15422,15456],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15812,15823],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[16232,16266],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16317,16351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16730,16770],"content":"less_than(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"less_than(ContainerRandomAccessIterator)","pos":[0,40]}]},{"pos":[17339,17373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17432,17466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17921,17961],"content":"less_than(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"less_than(IRandomAccessIterator<TValue>)"},{"pos":[18532,18566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18625,18659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19016,19027],"content":"move(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"move(Int32)","pos":[0,11]}]},{"pos":[19433,19467],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19524,19558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19799,19805],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[20546,20602],"content":"op_Addition(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Addition(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[21275,21309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21371,21405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21513,21547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22088,22174],"content":"op_Addition(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)"},{"pos":[22984,23018],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23079,23113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23225,23259],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23367,23401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23780,23820],"content":"op_Assign(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ContainerRandomAccessIterator)","pos":[0,40]}]},{"pos":[24449,24483],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24590,24624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25015,25066],"content":"op_Decrement(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ContainerRandomAccessIterator<TValue>)"},{"pos":[25718,25752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25860,25894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26311,26368],"content":"op_Decrement(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[27041,27075],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27134,27168],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27276,27310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27693,27735],"content":"op_Equality(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ContainerRandomAccessIterator)","pos":[0,42]}]},{"pos":[28312,28346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28405,28439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28796,28831],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[29374,29408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29467,29501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29890,29935],"content":"op_GreaterThan(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(ContainerRandomAccessIterator)","pos":[0,45]}]},{"pos":[30521,30555],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30614,30648],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31151,31226],"content":"op_GreaterThan(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)"},{"pos":[31942,31976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32088,32122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32181,32215],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32618,32670],"content":"op_GreaterThanOrEqual(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(ContainerRandomAccessIterator)","pos":[0,52]}]},{"pos":[33277,33311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33370,33404],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33795,33847],"content":"op_GreaterThanOrEqual(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)"},{"pos":[34448,34482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34541,34575],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34830,34841],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[35337,35371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35762,35813],"content":"op_Increment(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ContainerRandomAccessIterator<TValue>)"},{"pos":[36465,36499],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36607,36641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37058,37115],"content":"op_Increment(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[37788,37822],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37881,37915],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38023,38057],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38444,38488],"content":"op_Inequality(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ContainerRandomAccessIterator)","pos":[0,44]}]},{"pos":[39071,39105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39164,39198],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39559,39596],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[40145,40179],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40238,40272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40655,40697],"content":"op_LessThan(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(ContainerRandomAccessIterator)","pos":[0,42]}]},{"pos":[41274,41308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41367,41401],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41772,41814],"content":"op_LessThan(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_LessThan(IRandomAccessIterator<TValue>)"},{"pos":[42385,42419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42478,42512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42909,42958],"content":"op_LessThanOrEqual(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(ContainerRandomAccessIterator)","pos":[0,49]}]},{"pos":[43556,43590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43649,43683],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44194,44273],"content":"op_LessThanOrEqual(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)"},{"pos":[45001,45035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45147,45181],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45240,45274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45671,45720],"content":"op_MemberSelection(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ContainerRandomAccessIterator)","pos":[0,49]}]},{"pos":[46325,46359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46411,46445],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46848,46900],"content":"op_PointerDereference(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ContainerRandomAccessIterator)","pos":[0,52]}]},{"pos":[47514,47548],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47600,47634],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48011,48056],"content":"op_Subtraction(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Subtraction(IRandomAccessIterator<TValue>)"},{"pos":[48635,48669],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48726,48760],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49181,49240],"content":"op_Subtraction(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[49922,49956],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50018,50052],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50160,50194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50435,50441],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[51010,51017],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[51405,51439],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51550,51563],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[51745,51776],"content":"ContainerRandomAccessIterator()","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator()","pos":[0,31]}]},{"pos":[52223,52283],"content":"ContainerRandomAccessIterator(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator(ContainerRandomAccessIterator)","pos":[0,60]}]},{"pos":[52683,52712],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[53087,53154],"content":"ContainerRandomAccessIterator(IRandomAccessContainer<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)"},{"pos":[53564,53594],"content":"IRandomAccessContainer<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessContainer<TValue>"},{"pos":[53783,53788],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[54017,54024],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[54244,54250],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[54485,54496],"content":"container()","needQuote":true,"needEscape":true,"nodes":[{"content":"container()","pos":[0,11]}]},{"pos":[54724,54730],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55028,55067],"content":"distance(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"distance(ContainerRandomAccessIterator)","pos":[0,39]}]},{"pos":[55350,55355],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[55543,55572],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[55936,55975],"content":"distance(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"distance(IRandomAccessIterator<TValue>)"},{"pos":[56258,56263],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56446,56475],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[56845,56884],"content":"equal_to(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"equal_to(ContainerRandomAccessIterator)","pos":[0,39]}]},{"pos":[57169,57176],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57368,57397],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[57754,57786],"content":"equal_to(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"equal_to(IInputIterator<TValue>)"},{"pos":[58057,58064],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58244,58266],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[58568,58579],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[58795,58801],"content":"TValue","needQuote":true,"needEscape":true,"nodes":[{"content":"TValue","pos":[0,6]}]},{"pos":[58909,58914],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59211,59251],"content":"less_than(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"less_than(ContainerRandomAccessIterator)","pos":[0,40]}]},{"pos":[59538,59545],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[59737,59766],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[60131,60171],"content":"less_than(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"less_than(IRandomAccessIterator<TValue>)"},{"pos":[60458,60465],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[60652,60681],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[60997,61008],"content":"move(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"move(Int32)","pos":[0,11]}]},{"pos":[61235,61240],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61353,61358],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61586,61592],"content":"next()","needQuote":true,"needEscape":true,"nodes":[{"content":"next()","pos":[0,6]}]},{"pos":[62011,62067],"content":"op_Addition(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Addition(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[62462,62499],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[62702,62707],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63085,63171],"content":"op_Addition(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)"},{"pos":[63626,63663],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[63866,63871],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[64059,64088],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[64459,64499],"content":"op_Assign(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Assign(ContainerRandomAccessIterator)","pos":[0,40]}]},{"pos":[64859,64888],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[65150,65179],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[65556,65607],"content":"op_Decrement(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Decrement(ContainerRandomAccessIterator<TValue>)"},{"pos":[65992,66029],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[66435,66492],"content":"op_Decrement(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[66889,66926],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[67129,67134],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[67433,67475],"content":"op_Equality(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(ContainerRandomAccessIterator)","pos":[0,42]}]},{"pos":[67766,67773],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[67965,67994],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[68354,68389],"content":"op_Equality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Equality(IInputIterator<TValue>)"},{"pos":[68666,68673],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[68853,68875],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[69237,69282],"content":"op_GreaterThan(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThan(ContainerRandomAccessIterator)","pos":[0,45]}]},{"pos":[69579,69586],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[69778,69807],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[70240,70315],"content":"op_GreaterThan(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)"},{"pos":[70672,70679],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[70866,70895],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[71157,71186],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[71569,71621],"content":"op_GreaterThanOrEqual(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_GreaterThanOrEqual(ContainerRandomAccessIterator)","pos":[0,52]}]},{"pos":[71932,71939],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[72131,72160],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[72537,72589],"content":"op_GreaterThanOrEqual(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)"},{"pos":[72900,72907],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[73094,73123],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[73432,73443],"content":"op_Implicit","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Implicit","pos":[0,11]}]},{"pos":[73740,73769],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[74146,74197],"content":"op_Increment(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Increment(ContainerRandomAccessIterator<TValue>)"},{"pos":[74582,74619],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[75025,75082],"content":"op_Increment(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Increment(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[75479,75516],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[75719,75724],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[76025,76069],"content":"op_Inequality(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(ContainerRandomAccessIterator)","pos":[0,44]}]},{"pos":[76364,76371],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[76563,76592],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[76954,76991],"content":"op_Inequality(IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Inequality(IInputIterator<TValue>)"},{"pos":[77272,77279],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77459,77481],"content":"IInputIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IInputIterator<TValue>"},{"pos":[77840,77882],"content":"op_LessThan(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThan(ContainerRandomAccessIterator)","pos":[0,42]}]},{"pos":[78173,78180],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[78372,78401],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[78768,78810],"content":"op_LessThan(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_LessThan(IRandomAccessIterator<TValue>)"},{"pos":[79101,79108],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[79295,79324],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[79704,79753],"content":"op_LessThanOrEqual(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_LessThanOrEqual(ContainerRandomAccessIterator)","pos":[0,49]}]},{"pos":[80058,80065],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[80257,80286],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[80723,80802],"content":"op_LessThanOrEqual(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"source":"op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)"},{"pos":[81167,81174],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[81361,81390],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[81652,81681],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[82061,82110],"content":"op_MemberSelection(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_MemberSelection(ContainerRandomAccessIterator)","pos":[0,49]}]},{"pos":[82488,82517],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[82900,82952],"content":"op_PointerDereference(ContainerRandomAccessIterator)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_PointerDereference(ContainerRandomAccessIterator)","pos":[0,52]}]},{"pos":[83336,83365],"content":"ContainerRandomAccessIterator","needQuote":true,"needEscape":true,"nodes":[{"content":"ContainerRandomAccessIterator","pos":[0,29]}]},{"pos":[83735,83780],"content":"op_Subtraction(IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>)","needQuote":true,"needEscape":true,"source":"op_Subtraction(IRandomAccessIterator<TValue>)"},{"pos":[84075,84080],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[84263,84292],"content":"IRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"IRandomAccessIterator<TValue>"},{"pos":[84684,84743],"content":"op_Subtraction(ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>,Int32)","needQuote":true,"needEscape":true,"source":"op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)"},{"pos":[85144,85181],"content":"ContainerRandomAccessIterator<ph id=\"ph1\">&lt;TValue&gt;</ph>","needQuote":true,"needEscape":true,"source":"ContainerRandomAccessIterator<TValue>"},{"pos":[85384,85389],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[85617,85623],"content":"prev()","needQuote":true,"needEscape":true,"nodes":[{"content":"prev()","pos":[0,6]}]},{"pos":[85956,85963],"content":"valid()","needQuote":true,"needEscape":true,"nodes":[{"content":"valid()","pos":[0,7]}]},{"pos":[86184,86191],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  id: ContainerRandomAccessIterator`1\n  children:\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev\n  - Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n  type: Class\n  syntax:\n    content: 'public class ContainerRandomAccessIterator<TValue> : Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>'\n    typeParameters:\n    - id: TValue\n      description: Parameter description to be filled\n  inheritance:\n  - System.Object\n  implements:\n  - Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator()\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerRandomAccessIterator ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  id: '#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)'\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public ContainerRandomAccessIterator (Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue> _Cont, int _Offset);\n    parameters:\n    - id: _Cont\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n      description: Parameter description to be filled\n    - id: _Offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone\n  id: Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ContainerRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Clone()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container\n  id: container\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: container()\n  nameWithType: ContainerRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.container()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual object container ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int distance (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int distance (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool equal_to (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool equal_to (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Item(Int32)\n  type: Property\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public TValue this[int _Pos] { get; set; }\n    parameters:\n    - id: _Pos\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: TValue\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool less_than (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool less_than (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)\n  id: move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: move(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.move(Int32)\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual int move (int _Offset);\n    parameters:\n    - id: _Offset\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next\n  id: next\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: next()\n  nameWithType: ContainerRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.next()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void next ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Right\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Addition (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Left\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Assign(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator op_Assign (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Decrement (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Equality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static bool op_GreaterThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_GreaterThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit\n  id: op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Implicit\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Implicit\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> op_Implicit ();\n    parameters: []\n    return:\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> );\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Increment (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int A_0);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: A_0\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  id: op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_Inequality (Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThan(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThan (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static bool op_LessThanOrEqual (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Left, Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Right);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_MemberSelection(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_MemberSelection (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  id: op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_PointerDereference(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public static TValue op_PointerDereference (Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator _Left);\n    parameters:\n    - id: _Left\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n      description: Parameter description to be filled\n    return:\n      type: TValue@\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public int op_Subtraction (Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue> _Right);\n    parameters:\n    - id: _Right\n      type: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  id: op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  type: Operator\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public Void modreq(System.Runtime.CompilerServices.IsUdtReturn) op_Subtraction (ref Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue> , int _Right);\n    parameters:\n    - id: ''\n      type: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n      description: Parameter description to be filled\n    - id: _Right\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Void modreq(System.Runtime.CompilerServices.IsUdtReturn)\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev\n  id: prev\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: prev()\n  nameWithType: ContainerRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.prev()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual void prev ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid\n  id: valid\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  langs:\n  - csharp\n  name: valid()\n  nameWithType: ContainerRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.valid()\n  type: Method\n  assemblies:\n  - Microsoft.VisualC.STLCLR\n  namespace: Microsoft.VisualC.StlClr.Generic\n  syntax:\n    content: public virtual bool valid ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator()\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.ContainerRandomAccessIterator(IRandomAccessContainer<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessContainer<TValue>\n  nameWithType: IRandomAccessContainer<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: Clone()\n  nameWithType: ContainerRandomAccessIterator<TValue>.Clone()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: container()\n  nameWithType: ContainerRandomAccessIterator<TValue>.container()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.container()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(ContainerRandomAccessIterator)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: distance(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.distance(IRandomAccessIterator<TValue>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: equal_to(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.equal_to(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.Item(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.Item(Int32)\n- uid: TValue\n  parent: ''\n  isExternal: true\n  name: TValue\n  nameWithType: TValue\n  fullName: TValue\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: less_than(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.less_than(IRandomAccessIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: move(Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.move(Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.move(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: next()\n  nameWithType: ContainerRandomAccessIterator<TValue>.next()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.next()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Addition(ContainerRandomAccessIterator<TValue>,Int32,ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Assign(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Assign(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Decrement(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Equality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Equality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThan(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_GreaterThanOrEqual(IRandomAccessIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Implicit\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Implicit\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Implicit\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ContainerRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Increment(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Inequality(IInputIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Inequality(IInputIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IInputIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IInputIterator<TValue>\n  nameWithType: IInputIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IInputIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThan(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThan(IRandomAccessIterator<TValue>)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_LessThanOrEqual(IRandomAccessIterator<TValue>,ContainerRandomAccessIterator)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_MemberSelection(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_MemberSelection(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_PointerDereference(ContainerRandomAccessIterator)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_PointerDereference(ContainerRandomAccessIterator)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: true\n  name: ContainerRandomAccessIterator\n  nameWithType: ContainerRandomAccessIterator\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(IRandomAccessIterator<TValue>)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(IRandomAccessIterator<TValue>)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: IRandomAccessIterator<TValue>\n  nameWithType: IRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator<TValue>\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1@,System.Int32)\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  nameWithType: ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.op_Subtraction(ContainerRandomAccessIterator<TValue>,Int32)\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  parent: Microsoft.VisualC.StlClr.Generic\n  isExternal: false\n  name: ContainerRandomAccessIterator<TValue>\n  nameWithType: ContainerRandomAccessIterator<TValue>\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: prev()\n  nameWithType: ContainerRandomAccessIterator<TValue>.prev()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.prev()\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  name: valid()\n  nameWithType: ContainerRandomAccessIterator<TValue>.valid()\n  fullName: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator<TValue>.valid()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  nameWithType: ContainerRandomAccessIterator<TValue>.\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  nameWithType: ContainerRandomAccessIterator<TValue>.\n- uid: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than*\n  parent: Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1\n  isExternal: false\n  nameWithType: ContainerRandomAccessIterator<TValue>.\n"}