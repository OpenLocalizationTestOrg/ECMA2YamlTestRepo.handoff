{"nodes":[{"pos":[289,309],"content":"IEqualityComparer<ph id=\"ph1\">&lt;T&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEqualityComparer<T>"},{"pos":[540,574],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[814,825],"content":"Equals(T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(T,T)","pos":[0,11]}]},{"pos":[1144,1178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1224,1258],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1317,1351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1578,1592],"content":"GetHashCode(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(T)","pos":[0,14]}]},{"pos":[1920,1954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2011,2045],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2260,2271],"content":"Equals(T,T)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(T,T)","pos":[0,11]}]},{"pos":[2460,2467],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[2568,2569],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[2651,2652],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]},{"pos":[2840,2854],"content":"GetHashCode(T)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode(T)","pos":[0,14]}]},{"pos":[3047,3052],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[3149,3150],"content":"T","needQuote":true,"needEscape":true,"nodes":[{"content":"T","pos":[0,1]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Collections.Generic.IEqualityComparer`1\n  id: IEqualityComparer`1\n  children:\n  - System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  - System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  langs:\n  - csharp\n  name: IEqualityComparer<T>\n  nameWithType: IEqualityComparer<T>\n  fullName: System.Collections.Generic.IEqualityComparer<T>\n  type: Interface\n  syntax:\n    content: public interface IEqualityComparer<in T>\n    typeParameters:\n    - id: T\n      description: Parameter description to be filled\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  id: Equals(`0,`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  langs:\n  - csharp\n  name: Equals(T,T)\n  nameWithType: IEqualityComparer<T>.Equals(T,T)\n  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T,T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public bool Equals (T x, T y);\n    parameters:\n    - id: x\n      type: T\n      description: Parameter description to be filled\n    - id: y\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  id: GetHashCode(`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  langs:\n  - csharp\n  name: GetHashCode(T)\n  nameWithType: IEqualityComparer<T>.GetHashCode(T)\n  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Collections.Generic\n  syntax:\n    content: public int GetHashCode (T obj);\n    parameters:\n    - id: obj\n      type: T\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Collections.Generic.IEqualityComparer`1.Equals(`0,`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: Equals(T,T)\n  nameWithType: IEqualityComparer<T>.Equals(T,T)\n  fullName: System.Collections.Generic.IEqualityComparer<T>.Equals(T,T)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Collections.Generic.IEqualityComparer`1.GetHashCode(`0)\n  parent: System.Collections.Generic.IEqualityComparer`1\n  isExternal: false\n  name: GetHashCode(T)\n  nameWithType: IEqualityComparer<T>.GetHashCode(T)\n  fullName: System.Collections.Generic.IEqualityComparer<T>.GetHashCode(T)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: T\n  parent: ''\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n"}