{"nodes":[{"pos":[400,411],"content":"SHA1Managed","needQuote":true,"needEscape":true,"nodes":[{"content":"SHA1Managed","pos":[0,11]}]},{"pos":[2598,2611],"content":"SHA1Managed()","needQuote":true,"needEscape":true,"nodes":[{"content":"SHA1Managed()","pos":[0,13]}]},{"pos":[3157,3185],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[3579,3613],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3676,3710],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3772,3806],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4009,4020],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[4349,4383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4588,4600],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[5000,5033],"content":"System.Security.Cryptography.SHA1","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.SHA1","pos":[0,33]}]},{"pos":[5167,5180],"content":"SHA1Managed()","needQuote":true,"needEscape":true,"nodes":[{"content":"SHA1Managed()","pos":[0,13]}]},{"pos":[5467,5495],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[5699,5703],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[5816,5821],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5934,5939],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[6124,6135],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[6305,6309],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6495,6507],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.SHA1Managed\n  id: SHA1Managed\n  children:\n  - System.Security.Cryptography.SHA1Managed.#ctor\n  - System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1Managed.HashFinal\n  - System.Security.Cryptography.SHA1Managed.Initialize\n  langs:\n  - csharp\n  name: SHA1Managed\n  nameWithType: SHA1Managed\n  fullName: System.Security.Cryptography.SHA1Managed\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class SHA1Managed : System.Security.Cryptography.SHA1\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.SHA1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.SHA1.Create\n  - System.Security.Cryptography.SHA1.Create(System.String)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Managed.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.SHA1Managed\n  langs:\n  - csharp\n  name: SHA1Managed()\n  nameWithType: SHA1Managed.SHA1Managed()\n  fullName: System.Security.Cryptography.SHA1Managed.SHA1Managed()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public SHA1Managed ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1Managed\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA1Managed.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA1Managed.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] rgb, int ibStart, int cbSize);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: ibStart\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cbSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Managed.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.SHA1Managed\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: SHA1Managed.HashFinal()\n  fullName: System.Security.Cryptography.SHA1Managed.HashFinal()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.SHA1Managed.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.SHA1Managed\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: SHA1Managed.Initialize()\n  fullName: System.Security.Cryptography.SHA1Managed.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.SHA1\n  isExternal: false\n  name: System.Security.Cryptography.SHA1\n- uid: System.Security.Cryptography.SHA1Managed.#ctor\n  parent: System.Security.Cryptography.SHA1Managed\n  isExternal: false\n  name: SHA1Managed()\n  nameWithType: SHA1Managed.SHA1Managed()\n  fullName: System.Security.Cryptography.SHA1Managed.SHA1Managed()\n- uid: System.Security.Cryptography.SHA1Managed.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.SHA1Managed\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: SHA1Managed.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.SHA1Managed.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.SHA1Managed.HashFinal\n  parent: System.Security.Cryptography.SHA1Managed\n  isExternal: false\n  name: HashFinal()\n  nameWithType: SHA1Managed.HashFinal()\n  fullName: System.Security.Cryptography.SHA1Managed.HashFinal()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.SHA1Managed.Initialize\n  parent: System.Security.Cryptography.SHA1Managed\n  isExternal: false\n  name: Initialize()\n  nameWithType: SHA1Managed.Initialize()\n  fullName: System.Security.Cryptography.SHA1Managed.Initialize()\n"}