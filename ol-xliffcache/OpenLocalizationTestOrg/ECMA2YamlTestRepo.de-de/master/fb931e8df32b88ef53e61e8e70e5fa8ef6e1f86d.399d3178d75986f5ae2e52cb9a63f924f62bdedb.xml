{"nodes":[{"pos":[599,608],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[1213,1227],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1539,1573],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1632,1666],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1928,1945],"content":"Equals(FontStyle)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FontStyle)","pos":[0,17]}]},{"pos":[2283,2317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2376,2410],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2630,2643],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[2947,2981],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3258,3290],"content":"op_Equality(FontStyle,FontStyle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FontStyle,FontStyle)","pos":[0,32]}]},{"pos":[3706,3740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3813,3847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3906,3940],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4221,4255],"content":"op_Inequality(FontStyle,FontStyle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FontStyle,FontStyle)","pos":[0,34]}]},{"pos":[4677,4711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4784,4818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4877,4911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5210,5262],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[5683,5717],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5791,5825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5883,5917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6086,6096],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[6395,6429],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6543,6559],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[6677,6691],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6852,6859],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6977,6983],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[7161,7178],"content":"Equals(FontStyle)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(FontStyle)","pos":[0,17]}]},{"pos":[7345,7352],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7489,7498],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[7669,7682],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7839,7844],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8050,8082],"content":"op_Equality(FontStyle,FontStyle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(FontStyle,FontStyle)","pos":[0,32]}]},{"pos":[8279,8286],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8423,8432],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[8581,8590],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[8814,8848],"content":"op_Inequality(FontStyle,FontStyle)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(FontStyle,FontStyle)","pos":[0,34]}]},{"pos":[9049,9056],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[9193,9202],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[9351,9360],"content":"FontStyle","needQuote":true,"needEscape":true,"nodes":[{"content":"FontStyle","pos":[0,9]}]},{"pos":[9586,9638],"content":"System.IFormattable.ToString(String,IFormatProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IFormattable.ToString(String,IFormatProvider)","pos":[0,52]}]},{"pos":[9874,9880],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9996,10002],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[10127,10142],"content":"IFormatProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"IFormatProvider","pos":[0,15]}]},{"pos":[10314,10324],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[10476,10482],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.FontStyle\n  id: FontStyle\n  children:\n  - System.Windows.FontStyle.Equals(System.Object)\n  - System.Windows.FontStyle.Equals(System.Windows.FontStyle)\n  - System.Windows.FontStyle.GetHashCode\n  - System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)\n  - System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)\n  - System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  - System.Windows.FontStyle.ToString\n  langs:\n  - csharp\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n  type: Struct\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.FontStyleConverter))]\n\n      [System.Windows.Localizability(System.Windows.LocalizationCategory.None)]\n\n      public struct FontStyle : IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IFormattable\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: FontStyle.Equals(Object)\n  fullName: System.Windows.FontStyle.Equals(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.FontStyle.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.Equals(System.Windows.FontStyle)\n  id: Equals(System.Windows.FontStyle)\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: Equals(FontStyle)\n  nameWithType: FontStyle.Equals(FontStyle)\n  fullName: System.Windows.FontStyle.Equals(FontStyle)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public bool Equals (System.Windows.FontStyle obj);\n    parameters:\n    - id: obj\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Windows.FontStyle.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.GetHashCode\n  id: GetHashCode\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: FontStyle.GetHashCode()\n  fullName: System.Windows.FontStyle.GetHashCode()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)\n  id: op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: op_Equality(FontStyle,FontStyle)\n  nameWithType: FontStyle.op_Equality(FontStyle,FontStyle)\n  fullName: System.Windows.FontStyle.op_Equality(FontStyle,FontStyle)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Equality (System.Windows.FontStyle left, System.Windows.FontStyle right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)\n  id: op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: op_Inequality(FontStyle,FontStyle)\n  nameWithType: FontStyle.op_Inequality(FontStyle,FontStyle)\n  fullName: System.Windows.FontStyle.op_Inequality(FontStyle,FontStyle)\n  type: Operator\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public static bool op_Inequality (System.Windows.FontStyle left, System.Windows.FontStyle right);\n    parameters:\n    - id: left\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    - id: right\n      type: System.Windows.FontStyle\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  id: System#IFormattable#ToString(System.String,System.IFormatProvider)\n  isEii: true\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: FontStyle.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.FontStyle.System.IFormattable.ToString(String,IFormatProvider)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: string IFormattable.ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n    - id: provider\n      type: System.IFormatProvider\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.FontStyle.ToString\n  id: ToString\n  parent: System.Windows.FontStyle\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: FontStyle.ToString()\n  fullName: System.Windows.FontStyle.ToString()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Windows.FontStyle.Equals(System.Object)\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: FontStyle.Equals(Object)\n  fullName: System.Windows.FontStyle.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.FontStyle.Equals(System.Windows.FontStyle)\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: Equals(FontStyle)\n  nameWithType: FontStyle.Equals(FontStyle)\n  fullName: System.Windows.FontStyle.Equals(FontStyle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontStyle.GetHashCode\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: FontStyle.GetHashCode()\n  fullName: System.Windows.FontStyle.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: op_Equality(FontStyle,FontStyle)\n  nameWithType: FontStyle.op_Equality(FontStyle,FontStyle)\n  fullName: System.Windows.FontStyle.op_Equality(FontStyle,FontStyle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: op_Inequality(FontStyle,FontStyle)\n  nameWithType: FontStyle.op_Inequality(FontStyle,FontStyle)\n  fullName: System.Windows.FontStyle.op_Inequality(FontStyle,FontStyle)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontStyle\n  parent: System.Windows\n  isExternal: false\n  name: FontStyle\n  nameWithType: FontStyle\n  fullName: System.Windows.FontStyle\n- uid: System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: System.IFormattable.ToString(String,IFormatProvider)\n  nameWithType: FontStyle.System.IFormattable.ToString(String,IFormatProvider)\n  fullName: System.Windows.FontStyle.System.IFormattable.ToString(String,IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Windows.FontStyle.ToString\n  parent: System.Windows.FontStyle\n  isExternal: false\n  name: ToString()\n  nameWithType: FontStyle.ToString()\n  fullName: System.Windows.FontStyle.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.FontStyle.Equals*\n  parent: System.Windows.FontStyle\n  isExternal: false\n  nameWithType: FontStyle.\n"}