{"nodes":[{"pos":[1430,1446],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[2223,2247],"content":"CngKeyBlobFormat(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat(String)","pos":[0,24]}]},{"pos":[2623,2657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2888,2906],"content":"EccFullPrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccFullPrivateBlob","pos":[0,18]}]},{"pos":[3325,3359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3588,3605],"content":"EccFullPublicBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccFullPublicBlob","pos":[0,17]}]},{"pos":[4021,4055],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4278,4292],"content":"EccPrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccPrivateBlob","pos":[0,14]}]},{"pos":[4699,4733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4954,4967],"content":"EccPublicBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccPublicBlob","pos":[0,13]}]},{"pos":[5371,5405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5642,5656],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6005,6039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6098,6132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6499,6523],"content":"Equals(CngKeyBlobFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngKeyBlobFormat)","pos":[0,24]}]},{"pos":[6958,6992],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7051,7085],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7358,7364],"content":"Format","needQuote":true,"needEscape":true,"nodes":[{"content":"Format","pos":[0,6]}]},{"pos":[7669,7703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7934,7952],"content":"GenericPrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPrivateBlob","pos":[0,18]}]},{"pos":[8371,8405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8634,8651],"content":"GenericPublicBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPublicBlob","pos":[0,17]}]},{"pos":[9067,9101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9318,9331],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9672,9706],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10109,10155],"content":"op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)","pos":[0,46]}]},{"pos":[10699,10733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10827,10861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10920,10954],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11361,11409],"content":"op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)","pos":[0,48]}]},{"pos":[11959,11993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12087,12121],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12180,12214],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12447,12466],"content":"OpaqueTransportBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"OpaqueTransportBlob","pos":[0,19]}]},{"pos":[12888,12922],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13149,13165],"content":"Pkcs8PrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"Pkcs8PrivateBlob","pos":[0,16]}]},{"pos":[13578,13612],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13823,13833],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[14169,14203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14314,14327],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[14486,14510],"content":"CngKeyBlobFormat(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat(String)","pos":[0,24]}]},{"pos":[14718,14724],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[14930,14948],"content":"EccFullPrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccFullPrivateBlob","pos":[0,18]}]},{"pos":[15198,15214],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[15461,15478],"content":"EccFullPublicBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccFullPublicBlob","pos":[0,17]}]},{"pos":[15726,15742],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[15986,16000],"content":"EccPrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccPrivateBlob","pos":[0,14]}]},{"pos":[16242,16258],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[16501,16514],"content":"EccPublicBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"EccPublicBlob","pos":[0,13]}]},{"pos":[16754,16770],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[17021,17035],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[17224,17231],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17349,17355],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17596,17620],"content":"Equals(CngKeyBlobFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngKeyBlobFormat)","pos":[0,24]}]},{"pos":[17829,17836],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18008,18024],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[18260,18266],"content":"Format","needQuote":true,"needEscape":true,"nodes":[{"content":"Format","pos":[0,6]}]},{"pos":[18438,18444],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[18650,18668],"content":"GenericPrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPrivateBlob","pos":[0,18]}]},{"pos":[18918,18934],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[19181,19198],"content":"GenericPublicBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericPublicBlob","pos":[0,17]}]},{"pos":[19446,19462],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[19703,19716],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19901,19906],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[20196,20242],"content":"op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)","pos":[0,46]}]},{"pos":[20495,20502],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20674,20690],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[20902,20918],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[21254,21302],"content":"op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)","pos":[0,48]}]},{"pos":[21559,21566],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21738,21754],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[21966,21982],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[22231,22250],"content":"OpaqueTransportBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"OpaqueTransportBlob","pos":[0,19]}]},{"pos":[22502,22518],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[22764,22780],"content":"Pkcs8PrivateBlob","needQuote":true,"needEscape":true,"nodes":[{"content":"Pkcs8PrivateBlob","pos":[0,16]}]},{"pos":[23026,23042],"content":"CngKeyBlobFormat","needQuote":true,"needEscape":true,"nodes":[{"content":"CngKeyBlobFormat","pos":[0,16]}]},{"pos":[23280,23290],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[23470,23476],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  id: CngKeyBlobFormat\n  children:\n  - System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)\n  - System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)\n  - System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  - System.Security.Cryptography.CngKeyBlobFormat.Format\n  - System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.GetHashCode\n  - System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  - System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  - System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  - System.Security.Cryptography.CngKeyBlobFormat.ToString\n  langs:\n  - csharp\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n  type: Class\n  syntax:\n    content: 'public sealed class CngKeyBlobFormat : IEquatable<System.Security.Cryptography.CngKeyBlobFormat>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Security.Cryptography.CngKeyBlobFormat>\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: CngKeyBlobFormat(String)\n  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat(String)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.CngKeyBlobFormat(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public CngKeyBlobFormat (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob\n  id: EccFullPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: EccFullPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccFullPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat EccFullPrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob\n  id: EccFullPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: EccFullPublicBlob\n  nameWithType: CngKeyBlobFormat.EccFullPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat EccFullPublicBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  id: EccPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: EccPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat EccPrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  id: EccPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: EccPublicBlob\n  nameWithType: CngKeyBlobFormat.EccPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat EccPublicBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngKeyBlobFormat.Equals(Object)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngKeyBlobFormat.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  id: Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Equals(CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngKeyBlobFormat other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngKeyBlobFormat.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Format\n  id: Format\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Format\n  nameWithType: CngKeyBlobFormat.Format\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Format\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string Format { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  id: GenericPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: GenericPrivateBlob\n  nameWithType: CngKeyBlobFormat.GenericPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat GenericPrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  id: GenericPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: GenericPublicBlob\n  nameWithType: CngKeyBlobFormat.GenericPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat GenericPublicBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngKeyBlobFormat.GetHashCode()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  id: op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngKeyBlobFormat left, System.Security.Cryptography.CngKeyBlobFormat right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  id: op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngKeyBlobFormat left, System.Security.Cryptography.CngKeyBlobFormat right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  id: OpaqueTransportBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: OpaqueTransportBlob\n  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat OpaqueTransportBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  id: Pkcs8PrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: Pkcs8PrivateBlob\n  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngKeyBlobFormat Pkcs8PrivateBlob { get; }\n    return:\n      type: System.Security.Cryptography.CngKeyBlobFormat\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString\n  id: ToString\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CngKeyBlobFormat.ToString()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.CngKeyBlobFormat.#ctor(System.String)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: CngKeyBlobFormat(String)\n  nameWithType: CngKeyBlobFormat.CngKeyBlobFormat(String)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.CngKeyBlobFormat(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccFullPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccFullPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccFullPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccFullPublicBlob\n  nameWithType: CngKeyBlobFormat.EccFullPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccFullPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccPrivateBlob\n  nameWithType: CngKeyBlobFormat.EccPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: EccPublicBlob\n  nameWithType: CngKeyBlobFormat.EccPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.EccPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Object)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngKeyBlobFormat.Equals(Object)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals(System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Equals(CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Equals(CngKeyBlobFormat)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Format\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Format\n  nameWithType: CngKeyBlobFormat.Format\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Format\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GenericPrivateBlob\n  nameWithType: CngKeyBlobFormat.GenericPrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GenericPublicBlob\n  nameWithType: CngKeyBlobFormat.GenericPublicBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GenericPublicBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngKeyBlobFormat.GetHashCode()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(System.Security.Cryptography.CngKeyBlobFormat,System.Security.Cryptography.CngKeyBlobFormat)\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  nameWithType: CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: OpaqueTransportBlob\n  nameWithType: CngKeyBlobFormat.OpaqueTransportBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.OpaqueTransportBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: Pkcs8PrivateBlob\n  nameWithType: CngKeyBlobFormat.Pkcs8PrivateBlob\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.Pkcs8PrivateBlob\n- uid: System.Security.Cryptography.CngKeyBlobFormat\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngKeyBlobFormat\n  nameWithType: CngKeyBlobFormat\n  fullName: System.Security.Cryptography.CngKeyBlobFormat\n- uid: System.Security.Cryptography.CngKeyBlobFormat.ToString\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  name: ToString()\n  nameWithType: CngKeyBlobFormat.ToString()\n  fullName: System.Security.Cryptography.CngKeyBlobFormat.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngKeyBlobFormat.Equals*\n  parent: System.Security.Cryptography.CngKeyBlobFormat\n  isExternal: false\n  nameWithType: CngKeyBlobFormat.\n"}