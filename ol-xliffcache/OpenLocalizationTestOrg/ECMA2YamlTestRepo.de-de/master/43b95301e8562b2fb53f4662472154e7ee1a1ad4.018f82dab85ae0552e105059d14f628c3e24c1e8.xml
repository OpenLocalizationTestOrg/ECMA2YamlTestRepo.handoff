{"nodes":[{"pos":[3562,3570],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[4225,4235],"content":"Encoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding()","pos":[0,10]}]},{"pos":[4637,4652],"content":"Encoding(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding(Int32)","pos":[0,15]}]},{"pos":[4952,4986],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5283,5330],"content":"Encoding(Int32,EncoderFallback,DecoderFallback)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding(Int32,EncoderFallback,DecoderFallback)","pos":[0,47]}]},{"pos":[5784,5818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5904,5938],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6024,6058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6213,6218],"content":"ASCII","needQuote":true,"needEscape":true,"nodes":[{"content":"ASCII","pos":[0,5]}]},{"pos":[6495,6529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6706,6722],"content":"BigEndianUnicode","needQuote":true,"needEscape":true,"nodes":[{"content":"BigEndianUnicode","pos":[0,16]}]},{"pos":[7032,7066],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7227,7235],"content":"BodyName","needQuote":true,"needEscape":true,"nodes":[{"content":"BodyName","pos":[0,8]}]},{"pos":[7501,7535],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7690,7697],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[7970,8004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8165,8173],"content":"CodePage","needQuote":true,"needEscape":true,"nodes":[{"content":"CodePage","pos":[0,8]}]},{"pos":[8435,8469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8742,8775],"content":"Convert(Encoding,Encoding,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Encoding,Encoding,Byte[])","pos":[0,33]}]},{"pos":[9195,9229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9304,9338],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9400,9434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9492,9526],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9893,9938],"content":"Convert(Encoding,Encoding,Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Encoding,Encoding,Byte[],Int32,Int32)","pos":[0,45]}]},{"pos":[10404,10438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10513,10547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10609,10643],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10704,10738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10799,10833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10891,10925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11142,11157],"content":"DecoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[11476,11510],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11669,11676],"content":"Default","needQuote":true,"needEscape":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[11959,11993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12168,12183],"content":"EncoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[12502,12536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12705,12717],"content":"EncodingName","needQuote":true,"needEscape":true,"nodes":[{"content":"EncodingName","pos":[0,12]}]},{"pos":[12995,13029],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13216,13230],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[13530,13564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13623,13657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13856,13876],"content":"GetByteCount(Char[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[])","pos":[0,20]}]},{"pos":[14192,14226],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14283,14317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14563,14583],"content":"GetByteCount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(String)","pos":[0,20]}]},{"pos":[14891,14925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14982,15016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15286,15311],"content":"GetByteCount(Char*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char*,Int32)","pos":[0,25]}]},{"pos":[15646,15680],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15741,15775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15832,15866],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16164,16196],"content":"GetByteCount(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[],Int32,Int32)","pos":[0,32]}]},{"pos":[16559,16593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16654,16688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16749,16783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16840,16874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17112,17128],"content":"GetBytes(Char[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[])","pos":[0,16]}]},{"pos":[17435,17469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17527,17561],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17795,17811],"content":"GetBytes(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String)","pos":[0,16]}]},{"pos":[18110,18144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18202,18236],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18522,18550],"content":"GetBytes(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32)","pos":[0,28]}]},{"pos":[18903,18937],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18998,19032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19093,19127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19185,19219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19529,19562],"content":"GetBytes(Char<bpt id=\"p1\">*</bpt>,Int32,Byte<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetBytes(Char*,Int32,Byte*,Int32)"},{"pos":[19941,19975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20040,20074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20135,20169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20234,20268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20325,20359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20699,20740],"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[21154,21188],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21253,21287],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21352,21386],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21448,21482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21547,21581],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21638,21672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22012,22053],"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[22458,22492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22557,22591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22656,22690],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22752,22786],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22851,22885],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22942,22976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23218,23238],"content":"GetCharCount(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[])","pos":[0,20]}]},{"pos":[23554,23588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23645,23679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23949,23974],"content":"GetCharCount(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte*,Int32)","pos":[0,25]}]},{"pos":[24309,24343],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24404,24438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24495,24529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24827,24859],"content":"GetCharCount(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[],Int32,Int32)","pos":[0,32]}]},{"pos":[25222,25256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25317,25351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25412,25446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25503,25537],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25775,25791],"content":"GetChars(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[])","pos":[0,16]}]},{"pos":[26098,26132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26190,26224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26510,26538],"content":"GetChars(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[26891,26925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26986,27020],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27081,27115],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27173,27207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27517,27550],"content":"GetChars(Byte<bpt id=\"p1\">*</bpt>,Int32,Char<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetChars(Byte*,Int32,Char*,Int32)"},{"pos":[27929,27963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28028,28062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28123,28157],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28222,28256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28313,28347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28687,28728],"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","pos":[0,41]}]},{"pos":[29142,29176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29241,29275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29340,29374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29436,29470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29535,29569],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29626,29660],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29868,29880],"content":"GetDecoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDecoder()","pos":[0,12]}]},{"pos":[30187,30221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30386,30398],"content":"GetEncoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoder()","pos":[0,12]}]},{"pos":[30705,30739],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30934,30952],"content":"GetEncoding(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(Int32)","pos":[0,18]}]},{"pos":[31281,31315],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31380,31414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31657,31676],"content":"GetEncoding(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(String)","pos":[0,19]}]},{"pos":[32003,32037],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32102,32136],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32489,32539],"content":"GetEncoding(Int32,EncoderFallback,DecoderFallback)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(Int32,EncoderFallback,DecoderFallback)","pos":[0,50]}]},{"pos":[33022,33056],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33142,33176],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33262,33296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33361,33395],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33750,33801],"content":"GetEncoding(String,EncoderFallback,DecoderFallback)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(String,EncoderFallback,DecoderFallback)","pos":[0,51]}]},{"pos":[34282,34316],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34402,34436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34522,34556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34621,34655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34870,34884],"content":"GetEncodings()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncodings()","pos":[0,14]}]},{"pos":[35210,35244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35411,35424],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[35712,35746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35949,35971],"content":"GetMaxByteCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxByteCount(Int32)","pos":[0,22]}]},{"pos":[36299,36333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36390,36424],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36627,36649],"content":"GetMaxCharCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxCharCount(Int32)","pos":[0,22]}]},{"pos":[36977,37011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37068,37102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37269,37282],"content":"GetPreamble()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPreamble()","pos":[0,13]}]},{"pos":[37573,37607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37800,37817],"content":"GetString(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[])","pos":[0,17]}]},{"pos":[38127,38161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38219,38253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38514,38536],"content":"GetString(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte*,Int32)","pos":[0,22]}]},{"pos":[38861,38895],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38960,38994],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39052,39086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39375,39404],"content":"GetString(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[39760,39794],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39855,39889],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39950,39984],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40042,40076],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40285,40295],"content":"HeaderName","needQuote":true,"needEscape":true,"nodes":[{"content":"HeaderName","pos":[0,10]}]},{"pos":[40567,40601],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40782,40802],"content":"IsAlwaysNormalized()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAlwaysNormalized()","pos":[0,20]}]},{"pos":[41105,41139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41435,41472],"content":"IsAlwaysNormalized(NormalizationForm)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAlwaysNormalized(NormalizationForm)","pos":[0,37]}]},{"pos":[41866,41900],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41959,41993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42223,42239],"content":"IsBrowserDisplay","needQuote":true,"needEscape":true,"nodes":[{"content":"IsBrowserDisplay","pos":[0,16]}]},{"pos":[42528,42562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42733,42746],"content":"IsBrowserSave","needQuote":true,"needEscape":true,"nodes":[{"content":"IsBrowserSave","pos":[0,13]}]},{"pos":[43026,43060],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43239,43256],"content":"IsMailNewsDisplay","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMailNewsDisplay","pos":[0,17]}]},{"pos":[43548,43582],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43755,43769],"content":"IsMailNewsSave","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMailNewsSave","pos":[0,14]}]},{"pos":[44052,44086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44251,44261],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[44524,44558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44727,44739],"content":"IsSingleByte","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSingleByte","pos":[0,12]}]},{"pos":[45016,45050],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45287,45321],"content":"RegisterProvider(EncodingProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"RegisterProvider(EncodingProvider)","pos":[0,34]}]},{"pos":[45712,45746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45905,45912],"content":"Unicode","needQuote":true,"needEscape":true,"nodes":[{"content":"Unicode","pos":[0,7]}]},{"pos":[46195,46229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46384,46389],"content":"UTF32","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF32","pos":[0,5]}]},{"pos":[46666,46700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46853,46857],"content":"UTF7","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7","pos":[0,4]}]},{"pos":[47131,47165],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47318,47322],"content":"UTF8","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF8","pos":[0,4]}]},{"pos":[47596,47630],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47789,47796],"content":"WebName","needQuote":true,"needEscape":true,"nodes":[{"content":"WebName","pos":[0,7]}]},{"pos":[48059,48093],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48268,48283],"content":"WindowsCodePage","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowsCodePage","pos":[0,15]}]},{"pos":[48566,48600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48711,48724],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[48818,48828],"content":"Encoding()","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding()","pos":[0,10]}]},{"pos":[49016,49031],"content":"Encoding(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding(Int32)","pos":[0,15]}]},{"pos":[49187,49192],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49403,49450],"content":"Encoding(Int32,EncoderFallback,DecoderFallback)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding(Int32,EncoderFallback,DecoderFallback)","pos":[0,47]}]},{"pos":[49670,49675],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49808,49823],"content":"EncoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[49981,49996],"content":"DecoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[50162,50167],"content":"ASCII","needQuote":true,"needEscape":true,"nodes":[{"content":"ASCII","pos":[0,5]}]},{"pos":[50316,50324],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[50487,50503],"content":"BigEndianUnicode","needQuote":true,"needEscape":true,"nodes":[{"content":"BigEndianUnicode","pos":[0,16]}]},{"pos":[50674,50682],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[50837,50845],"content":"BodyName","needQuote":true,"needEscape":true,"nodes":[{"content":"BodyName","pos":[0,8]}]},{"pos":[50988,50994],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51137,51144],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[51285,51291],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51437,51445],"content":"CodePage","needQuote":true,"needEscape":true,"nodes":[{"content":"CodePage","pos":[0,8]}]},{"pos":[51587,51592],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[51792,51825],"content":"Convert(Encoding,Encoding,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Encoding,Encoding,Byte[])","pos":[0,33]}]},{"pos":[52016,52020],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[52146,52154],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[52291,52299],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[52422,52426],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[52652,52697],"content":"Convert(Encoding,Encoding,Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Convert(Encoding,Encoding,Byte[],Int32,Int32)","pos":[0,45]}]},{"pos":[52912,52916],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[53042,53050],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[53187,53195],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[53318,53322],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[53435,53440],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53553,53558],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53709,53724],"content":"DecoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[53900,53915],"content":"DecoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[54083,54090],"content":"Default","needQuote":true,"needEscape":true,"nodes":[{"content":"Default","pos":[0,7]}]},{"pos":[54243,54251],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[54413,54428],"content":"EncoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[54604,54619],"content":"EncoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[54792,54804],"content":"EncodingName","needQuote":true,"needEscape":true,"nodes":[{"content":"EncodingName","pos":[0,12]}]},{"pos":[54955,54961],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[55120,55134],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[55290,55297],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[55415,55421],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[55586,55606],"content":"GetByteCount(Char[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[])","pos":[0,20]}]},{"pos":[55772,55777],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[55889,55893],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[56056,56076],"content":"GetByteCount(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(String)","pos":[0,20]}]},{"pos":[56242,56247],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56361,56367],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[56544,56569],"content":"GetByteCount(Char*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char*,Int32)","pos":[0,25]}]},{"pos":[56745,56750],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[56863,56868],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57057,57089],"content":"GetByteCount(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetByteCount(Char[],Int32,Int32)","pos":[0,32]}]},{"pos":[57279,57284],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57396,57400],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[57513,57518],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57631,57636],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[57795,57811],"content":"GetBytes(Char[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[])","pos":[0,16]}]},{"pos":[57968,57972],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58084,58088],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[58247,58263],"content":"GetBytes(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String)","pos":[0,16]}]},{"pos":[58420,58424],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58538,58544],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[58731,58759],"content":"GetBytes(Char[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32)","pos":[0,28]}]},{"pos":[58940,58944],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[59056,59060],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[59173,59178],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59291,59296],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59493,59526],"content":"GetBytes(Char<bpt id=\"p1\">*</bpt>,Int32,Byte<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetBytes(Char*,Int32,Byte*,Int32)"},{"pos":[59718,59723],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59836,59841],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[59954,59959],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60171,60212],"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(Char[],Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[60420,60425],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60537,60541],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[60654,60659],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60772,60777],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[60889,60893],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[61006,61011],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61223,61264],"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBytes(String,Int32,Int32,Byte[],Int32)","pos":[0,41]}]},{"pos":[61472,61477],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61591,61597],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[61712,61717],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61830,61835],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61947,61951],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[62064,62069],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62232,62252],"content":"GetCharCount(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[])","pos":[0,20]}]},{"pos":[62418,62423],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[62535,62539],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[62714,62739],"content":"GetCharCount(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte*,Int32)","pos":[0,25]}]},{"pos":[62915,62920],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63033,63038],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63227,63259],"content":"GetCharCount(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCharCount(Byte[],Int32,Int32)","pos":[0,32]}]},{"pos":[63449,63454],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63566,63570],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[63683,63688],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63801,63806],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[63965,63981],"content":"GetChars(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[])","pos":[0,16]}]},{"pos":[64138,64142],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[64254,64258],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[64443,64471],"content":"GetChars(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[64652,64656],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[64768,64772],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[64885,64890],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65003,65008],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65205,65238],"content":"GetChars(Byte<bpt id=\"p1\">*</bpt>,Int32,Char<ept id=\"p1\">*</ept>,Int32)","needQuote":true,"needEscape":true,"source":"GetChars(Byte*,Int32,Char*,Int32)"},{"pos":[65430,65435],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65548,65553],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65666,65671],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[65883,65924],"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetChars(Byte[],Int32,Int32,Char[],Int32)","pos":[0,41]}]},{"pos":[66132,66137],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66249,66253],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[66366,66371],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66484,66489],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66601,66605],"content":"Char","needQuote":true,"needEscape":true,"nodes":[{"content":"Char","pos":[0,4]}]},{"pos":[66718,66723],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[66869,66881],"content":"GetDecoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDecoder()","pos":[0,12]}]},{"pos":[67043,67050],"content":"Decoder","needQuote":true,"needEscape":true,"nodes":[{"content":"Decoder","pos":[0,7]}]},{"pos":[67205,67217],"content":"GetEncoder()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoder()","pos":[0,12]}]},{"pos":[67379,67386],"content":"Encoder","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoder","pos":[0,7]}]},{"pos":[67556,67574],"content":"GetEncoding(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(Int32)","pos":[0,18]}]},{"pos":[67749,67757],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[67881,67886],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[68048,68067],"content":"GetEncoding(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(String)","pos":[0,19]}]},{"pos":[68244,68252],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[68377,68383],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[68602,68652],"content":"GetEncoding(Int32,EncoderFallback,DecoderFallback)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(Int32,EncoderFallback,DecoderFallback)","pos":[0,50]}]},{"pos":[68891,68899],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[69023,69028],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[69161,69176],"content":"EncoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[69334,69349],"content":"DecoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[69592,69643],"content":"GetEncoding(String,EncoderFallback,DecoderFallback)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncoding(String,EncoderFallback,DecoderFallback)","pos":[0,51]}]},{"pos":[69884,69892],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[70017,70023],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[70158,70173],"content":"EncoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"EncoderFallback","pos":[0,15]}]},{"pos":[70331,70346],"content":"DecoderFallback","needQuote":true,"needEscape":true,"nodes":[{"content":"DecoderFallback","pos":[0,15]}]},{"pos":[70519,70533],"content":"GetEncodings()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEncodings()","pos":[0,14]}]},{"pos":[70704,70716],"content":"EncodingInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"EncodingInfo","pos":[0,12]}]},{"pos":[70884,70897],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[71049,71054],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71219,71241],"content":"GetMaxByteCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxByteCount(Int32)","pos":[0,22]}]},{"pos":[71411,71416],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71529,71534],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[71699,71721],"content":"GetMaxCharCount(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetMaxCharCount(Int32)","pos":[0,22]}]},{"pos":[71891,71896],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72009,72014],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[72161,72174],"content":"GetPreamble()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetPreamble()","pos":[0,13]}]},{"pos":[72325,72329],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[72489,72506],"content":"GetString(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[])","pos":[0,17]}]},{"pos":[72667,72673],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[72787,72791],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[72963,72985],"content":"GetString(Byte*,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte*,Int32)","pos":[0,22]}]},{"pos":[73156,73162],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73277,73282],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[73468,73497],"content":"GetString(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetString(Byte[],Int32,Int32)","pos":[0,29]}]},{"pos":[73682,73688],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[73802,73806],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[73919,73924],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74037,74042],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[74188,74198],"content":"HeaderName","needQuote":true,"needEscape":true,"nodes":[{"content":"HeaderName","pos":[0,10]}]},{"pos":[74345,74351],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[74507,74527],"content":"IsAlwaysNormalized()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAlwaysNormalized()","pos":[0,20]}]},{"pos":[74695,74702],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[74891,74928],"content":"IsAlwaysNormalized(NormalizationForm)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAlwaysNormalized(NormalizationForm)","pos":[0,37]}]},{"pos":[75130,75137],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75276,75293],"content":"NormalizationForm","needQuote":true,"needEscape":true,"nodes":[{"content":"NormalizationForm","pos":[0,17]}]},{"pos":[75474,75490],"content":"IsBrowserDisplay","needQuote":true,"needEscape":true,"nodes":[{"content":"IsBrowserDisplay","pos":[0,16]}]},{"pos":[75650,75657],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[75810,75823],"content":"IsBrowserSave","needQuote":true,"needEscape":true,"nodes":[{"content":"IsBrowserSave","pos":[0,13]}]},{"pos":[75977,75984],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[76141,76158],"content":"IsMailNewsDisplay","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMailNewsDisplay","pos":[0,17]}]},{"pos":[76320,76327],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[76481,76495],"content":"IsMailNewsSave","needQuote":true,"needEscape":true,"nodes":[{"content":"IsMailNewsSave","pos":[0,14]}]},{"pos":[76651,76658],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[76808,76818],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[76966,76973],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77125,77137],"content":"IsSingleByte","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSingleByte","pos":[0,12]}]},{"pos":[77289,77296],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[77482,77516],"content":"RegisterProvider(EncodingProvider)","needQuote":true,"needEscape":true,"nodes":[{"content":"RegisterProvider(EncodingProvider)","pos":[0,34]}]},{"pos":[77731,77747],"content":"EncodingProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"EncodingProvider","pos":[0,16]}]},{"pos":[77917,77924],"content":"Unicode","needQuote":true,"needEscape":true,"nodes":[{"content":"Unicode","pos":[0,7]}]},{"pos":[78077,78085],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[78237,78242],"content":"UTF32","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF32","pos":[0,5]}]},{"pos":[78391,78399],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[78550,78554],"content":"UTF7","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF7","pos":[0,4]}]},{"pos":[78701,78709],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[78860,78864],"content":"UTF8","needQuote":true,"needEscape":true,"nodes":[{"content":"UTF8","pos":[0,4]}]},{"pos":[79011,79019],"content":"Encoding","needQuote":true,"needEscape":true,"nodes":[{"content":"Encoding","pos":[0,8]}]},{"pos":[79173,79180],"content":"WebName","needQuote":true,"needEscape":true,"nodes":[{"content":"WebName","pos":[0,7]}]},{"pos":[79321,79327],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[79480,79495],"content":"WindowsCodePage","needQuote":true,"needEscape":true,"nodes":[{"content":"WindowsCodePage","pos":[0,15]}]},{"pos":[79651,79656],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Text.Encoding\n  id: Encoding\n  children:\n  - System.Text.Encoding.#ctor\n  - System.Text.Encoding.#ctor(System.Int32)\n  - System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.ASCII\n  - System.Text.Encoding.BigEndianUnicode\n  - System.Text.Encoding.BodyName\n  - System.Text.Encoding.Clone\n  - System.Text.Encoding.CodePage\n  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])\n  - System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.DecoderFallback\n  - System.Text.Encoding.Default\n  - System.Text.Encoding.EncoderFallback\n  - System.Text.Encoding.EncodingName\n  - System.Text.Encoding.Equals(System.Object)\n  - System.Text.Encoding.GetByteCount(System.Char[])\n  - System.Text.Encoding.GetByteCount(System.String)\n  - System.Text.Encoding.GetByteCount(System.Char*,System.Int32)\n  - System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetBytes(System.Char[])\n  - System.Text.Encoding.GetBytes(System.String)\n  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  - System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Text.Encoding.GetCharCount(System.Byte[])\n  - System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)\n  - System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetChars(System.Byte[])\n  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  - System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  - System.Text.Encoding.GetDecoder\n  - System.Text.Encoding.GetEncoder\n  - System.Text.Encoding.GetEncoding(System.Int32)\n  - System.Text.Encoding.GetEncoding(System.String)\n  - System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  - System.Text.Encoding.GetEncodings\n  - System.Text.Encoding.GetHashCode\n  - System.Text.Encoding.GetMaxByteCount(System.Int32)\n  - System.Text.Encoding.GetMaxCharCount(System.Int32)\n  - System.Text.Encoding.GetPreamble\n  - System.Text.Encoding.GetString(System.Byte[])\n  - System.Text.Encoding.GetString(System.Byte*,System.Int32)\n  - System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)\n  - System.Text.Encoding.HeaderName\n  - System.Text.Encoding.IsAlwaysNormalized\n  - System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)\n  - System.Text.Encoding.IsBrowserDisplay\n  - System.Text.Encoding.IsBrowserSave\n  - System.Text.Encoding.IsMailNewsDisplay\n  - System.Text.Encoding.IsMailNewsSave\n  - System.Text.Encoding.IsReadOnly\n  - System.Text.Encoding.IsSingleByte\n  - System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)\n  - System.Text.Encoding.Unicode\n  - System.Text.Encoding.UTF32\n  - System.Text.Encoding.UTF7\n  - System.Text.Encoding.UTF8\n  - System.Text.Encoding.WebName\n  - System.Text.Encoding.WindowsCodePage\n  langs:\n  - csharp\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public abstract class Encoding : ICloneable\n  inheritance:\n  - System.Object\n  implements:\n  - System.ICloneable\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.#ctor\n  id: '#ctor'\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Encoding()\n  nameWithType: Encoding.Encoding()\n  fullName: System.Text.Encoding.Encoding()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: protected Encoding ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Encoding(Int32)\n  nameWithType: Encoding.Encoding(Int32)\n  fullName: System.Text.Encoding.Encoding(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: protected Encoding (int codePage);\n    parameters:\n    - id: codePage\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: '#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)'\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Encoding(Int32,EncoderFallback,DecoderFallback)\n  nameWithType: Encoding.Encoding(Int32,EncoderFallback,DecoderFallback)\n  fullName: System.Text.Encoding.Encoding(Int32,EncoderFallback,DecoderFallback)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: protected Encoding (int codePage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);\n    parameters:\n    - id: codePage\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: Parameter description to be filled\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.ASCII\n  id: ASCII\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: ASCII\n  nameWithType: Encoding.ASCII\n  fullName: System.Text.Encoding.ASCII\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding ASCII { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.BigEndianUnicode\n  id: BigEndianUnicode\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: BigEndianUnicode\n  nameWithType: Encoding.BigEndianUnicode\n  fullName: System.Text.Encoding.BigEndianUnicode\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding BigEndianUnicode { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.BodyName\n  id: BodyName\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: BodyName\n  nameWithType: Encoding.BodyName\n  fullName: System.Text.Encoding.BodyName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual string BodyName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.Clone\n  id: Clone\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: Encoding.Clone()\n  fullName: System.Text.Encoding.Clone()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual object Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.CodePage\n  id: CodePage\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: CodePage\n  nameWithType: Encoding.CodePage\n  fullName: System.Text.Encoding.CodePage\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int CodePage { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])\n  id: Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Convert(Encoding,Encoding,Byte[])\n  nameWithType: Encoding.Convert(Encoding,Encoding,Byte[])\n  fullName: System.Text.Encoding.Convert(Encoding,Encoding,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes);\n    parameters:\n    - id: srcEncoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: dstEncoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.Convert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)\n  id: Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Convert(Encoding,Encoding,Byte[],Int32,Int32)\n  nameWithType: Encoding.Convert(Encoding,Encoding,Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.Convert(Encoding,Encoding,Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static byte[] Convert (System.Text.Encoding srcEncoding, System.Text.Encoding dstEncoding, byte[] bytes, int index, int count);\n    parameters:\n    - id: srcEncoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: dstEncoding\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.Convert*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.DecoderFallback\n  id: DecoderFallback\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: DecoderFallback\n  nameWithType: Encoding.DecoderFallback\n  fullName: System.Text.Encoding.DecoderFallback\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public System.Text.DecoderFallback DecoderFallback { get; set; }\n    return:\n      type: System.Text.DecoderFallback\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.Default\n  id: Default\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Default\n  nameWithType: Encoding.Default\n  fullName: System.Text.Encoding.Default\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding Default { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.EncoderFallback\n  id: EncoderFallback\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: EncoderFallback\n  nameWithType: Encoding.EncoderFallback\n  fullName: System.Text.Encoding.EncoderFallback\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public System.Text.EncoderFallback EncoderFallback { get; set; }\n    return:\n      type: System.Text.EncoderFallback\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.EncodingName\n  id: EncodingName\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: EncodingName\n  nameWithType: Encoding.EncodingName\n  fullName: System.Text.Encoding.EncodingName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual string EncodingName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Encoding.Equals(Object)\n  fullName: System.Text.Encoding.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetByteCount(System.Char[])\n  id: GetByteCount(System.Char[])\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetByteCount(Char[])\n  nameWithType: Encoding.GetByteCount(Char[])\n  fullName: System.Text.Encoding.GetByteCount(Char[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetByteCount (char[] chars);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetByteCount(System.String)\n  id: GetByteCount(System.String)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetByteCount(String)\n  nameWithType: Encoding.GetByteCount(String)\n  fullName: System.Text.Encoding.GetByteCount(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetByteCount (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetByteCount(System.Char*,System.Int32)\n  id: GetByteCount(System.Char*,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetByteCount(Char*,Int32)\n  nameWithType: Encoding.GetByteCount(Char*,Int32)\n  fullName: System.Text.Encoding.GetByteCount(Char*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetByteCount (char* chars, int count);\n    parameters:\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  id: GetByteCount(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetByteCount(Char[],Int32,Int32)\n  nameWithType: Encoding.GetByteCount(Char[],Int32,Int32)\n  fullName: System.Text.Encoding.GetByteCount(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int GetByteCount (char[] chars, int index, int count);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetByteCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetBytes(System.Char[])\n  id: GetBytes(System.Char[])\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetBytes(Char[])\n  nameWithType: Encoding.GetBytes(Char[])\n  fullName: System.Text.Encoding.GetBytes(Char[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual byte[] GetBytes (char[] chars);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetBytes(System.String)\n  id: GetBytes(System.String)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetBytes(String)\n  nameWithType: Encoding.GetBytes(String)\n  fullName: System.Text.Encoding.GetBytes(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual byte[] GetBytes (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)\n  id: GetBytes(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetBytes(Char[],Int32,Int32)\n  nameWithType: Encoding.GetBytes(Char[],Int32,Int32)\n  fullName: System.Text.Encoding.GetBytes(Char[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual byte[] GetBytes (char[] chars, int index, int count);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  id: GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetBytes(Char*,Int32,Byte*,Int32)\n  nameWithType: Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n  fullName: System.Text.Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetBytes (char* chars, int charCount, byte* bytes, int byteCount);\n    parameters:\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  nameWithType: Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  fullName: System.Text.Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int GetBytes (char[] chars, int charIndex, int charCount, byte[] bytes, int byteIndex);\n    parameters:\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  id: GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetBytes(String,Int32,Int32,Byte[],Int32)\n  nameWithType: Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  fullName: System.Text.Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetBytes (string s, int charIndex, int charCount, byte[] bytes, int byteIndex);\n    parameters:\n    - id: s\n      type: System.String\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetBytes*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetCharCount(System.Byte[])\n  id: GetCharCount(System.Byte[])\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte[])\n  nameWithType: Encoding.GetCharCount(Byte[])\n  fullName: System.Text.Encoding.GetCharCount(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetCharCount (byte[] bytes);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)\n  id: GetCharCount(System.Byte*,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte*,Int32)\n  nameWithType: Encoding.GetCharCount(Byte*,Int32)\n  fullName: System.Text.Encoding.GetCharCount(Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetCharCount (byte* bytes, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  id: GetCharCount(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetCharCount(Byte[],Int32,Int32)\n  nameWithType: Encoding.GetCharCount(Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.GetCharCount(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int GetCharCount (byte[] bytes, int index, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetCharCount*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetChars(System.Byte[])\n  id: GetChars(System.Byte[])\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetChars(Byte[])\n  nameWithType: Encoding.GetChars(Byte[])\n  fullName: System.Text.Encoding.GetChars(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual char[] GetChars (byte[] bytes);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Char[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)\n  id: GetChars(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetChars(Byte[],Int32,Int32)\n  nameWithType: Encoding.GetChars(Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.GetChars(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual char[] GetChars (byte[] bytes, int index, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Char[]\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  id: GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetChars(Byte*,Int32,Char*,Int32)\n  nameWithType: Encoding.GetChars(Byte*,Int32,Char*,Int32)\n  fullName: System.Text.Encoding.GetChars(Byte*,Int32,Char*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int GetChars (byte* bytes, int byteCount, char* chars, int charCount);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: chars\n      type: System.Char*\n      description: Parameter description to be filled\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  id: GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetChars(Byte[],Int32,Int32,Char[],Int32)\n  nameWithType: Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  fullName: System.Text.Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int GetChars (byte[] bytes, int byteIndex, int byteCount, char[] chars, int charIndex);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: byteIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: chars\n      type: System.Char[]\n      description: Parameter description to be filled\n    - id: charIndex\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetChars*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetDecoder\n  id: GetDecoder\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetDecoder()\n  nameWithType: Encoding.GetDecoder()\n  fullName: System.Text.Encoding.GetDecoder()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual System.Text.Decoder GetDecoder ();\n    parameters: []\n    return:\n      type: System.Text.Decoder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetEncoder\n  id: GetEncoder\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetEncoder()\n  nameWithType: Encoding.GetEncoder()\n  fullName: System.Text.Encoding.GetEncoder()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual System.Text.Encoder GetEncoder ();\n    parameters: []\n    return:\n      type: System.Text.Encoder\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetEncoding(System.Int32)\n  id: GetEncoding(System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetEncoding(Int32)\n  nameWithType: Encoding.GetEncoding(Int32)\n  fullName: System.Text.Encoding.GetEncoding(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding GetEncoding (int codepage);\n    parameters:\n    - id: codepage\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetEncoding*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetEncoding(System.String)\n  id: GetEncoding(System.String)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetEncoding(String)\n  nameWithType: Encoding.GetEncoding(String)\n  fullName: System.Text.Encoding.GetEncoding(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding GetEncoding (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetEncoding*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetEncoding(Int32,EncoderFallback,DecoderFallback)\n  nameWithType: Encoding.GetEncoding(Int32,EncoderFallback,DecoderFallback)\n  fullName: System.Text.Encoding.GetEncoding(Int32,EncoderFallback,DecoderFallback)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding GetEncoding (int codepage, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);\n    parameters:\n    - id: codepage\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: Parameter description to be filled\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: Parameter description to be filled\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetEncoding*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  id: GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetEncoding(String,EncoderFallback,DecoderFallback)\n  nameWithType: Encoding.GetEncoding(String,EncoderFallback,DecoderFallback)\n  fullName: System.Text.Encoding.GetEncoding(String,EncoderFallback,DecoderFallback)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding GetEncoding (string name, System.Text.EncoderFallback encoderFallback, System.Text.DecoderFallback decoderFallback);\n    parameters:\n    - id: name\n      type: System.String\n      description: Parameter description to be filled\n    - id: encoderFallback\n      type: System.Text.EncoderFallback\n      description: Parameter description to be filled\n    - id: decoderFallback\n      type: System.Text.DecoderFallback\n      description: Parameter description to be filled\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetEncoding*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetEncodings\n  id: GetEncodings\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetEncodings()\n  nameWithType: Encoding.GetEncodings()\n  fullName: System.Text.Encoding.GetEncodings()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.EncodingInfo[] GetEncodings ();\n    parameters: []\n    return:\n      type: System.Text.EncodingInfo[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetHashCode\n  id: GetHashCode\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Encoding.GetHashCode()\n  fullName: System.Text.Encoding.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetMaxByteCount(System.Int32)\n  id: GetMaxByteCount(System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetMaxByteCount(Int32)\n  nameWithType: Encoding.GetMaxByteCount(Int32)\n  fullName: System.Text.Encoding.GetMaxByteCount(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int GetMaxByteCount (int charCount);\n    parameters:\n    - id: charCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetMaxCharCount(System.Int32)\n  id: GetMaxCharCount(System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetMaxCharCount(Int32)\n  nameWithType: Encoding.GetMaxCharCount(Int32)\n  fullName: System.Text.Encoding.GetMaxCharCount(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public abstract int GetMaxCharCount (int byteCount);\n    parameters:\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetPreamble\n  id: GetPreamble\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetPreamble()\n  nameWithType: Encoding.GetPreamble()\n  fullName: System.Text.Encoding.GetPreamble()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual byte[] GetPreamble ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetString(System.Byte[])\n  id: GetString(System.Byte[])\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetString(Byte[])\n  nameWithType: Encoding.GetString(Byte[])\n  fullName: System.Text.Encoding.GetString(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual string GetString (byte[] bytes);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetString(System.Byte*,System.Int32)\n  id: GetString(System.Byte*,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetString(Byte*,Int32)\n  nameWithType: Encoding.GetString(Byte*,Int32)\n  fullName: System.Text.Encoding.GetString(Byte*,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public string GetString (byte* bytes, int byteCount);\n    parameters:\n    - id: bytes\n      type: System.Byte*\n      description: Parameter description to be filled\n    - id: byteCount\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)\n  id: GetString(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: GetString(Byte[],Int32,Int32)\n  nameWithType: Encoding.GetString(Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.GetString(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual string GetString (byte[] bytes, int index, int count);\n    parameters:\n    - id: bytes\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.GetString*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.HeaderName\n  id: HeaderName\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: HeaderName\n  nameWithType: Encoding.HeaderName\n  fullName: System.Text.Encoding.HeaderName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual string HeaderName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsAlwaysNormalized\n  id: IsAlwaysNormalized\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsAlwaysNormalized()\n  nameWithType: Encoding.IsAlwaysNormalized()\n  fullName: System.Text.Encoding.IsAlwaysNormalized()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public bool IsAlwaysNormalized ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.IsAlwaysNormalized*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)\n  id: IsAlwaysNormalized(System.Text.NormalizationForm)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsAlwaysNormalized(NormalizationForm)\n  nameWithType: Encoding.IsAlwaysNormalized(NormalizationForm)\n  fullName: System.Text.Encoding.IsAlwaysNormalized(NormalizationForm)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual bool IsAlwaysNormalized (System.Text.NormalizationForm form);\n    parameters:\n    - id: form\n      type: System.Text.NormalizationForm\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Text.Encoding.IsAlwaysNormalized*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsBrowserDisplay\n  id: IsBrowserDisplay\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsBrowserDisplay\n  nameWithType: Encoding.IsBrowserDisplay\n  fullName: System.Text.Encoding.IsBrowserDisplay\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual bool IsBrowserDisplay { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsBrowserSave\n  id: IsBrowserSave\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsBrowserSave\n  nameWithType: Encoding.IsBrowserSave\n  fullName: System.Text.Encoding.IsBrowserSave\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual bool IsBrowserSave { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsMailNewsDisplay\n  id: IsMailNewsDisplay\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsMailNewsDisplay\n  nameWithType: Encoding.IsMailNewsDisplay\n  fullName: System.Text.Encoding.IsMailNewsDisplay\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual bool IsMailNewsDisplay { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsMailNewsSave\n  id: IsMailNewsSave\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsMailNewsSave\n  nameWithType: Encoding.IsMailNewsSave\n  fullName: System.Text.Encoding.IsMailNewsSave\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual bool IsMailNewsSave { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsReadOnly\n  id: IsReadOnly\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: Encoding.IsReadOnly\n  fullName: System.Text.Encoding.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.IsSingleByte\n  id: IsSingleByte\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: IsSingleByte\n  nameWithType: Encoding.IsSingleByte\n  fullName: System.Text.Encoding.IsSingleByte\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual bool IsSingleByte { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)\n  id: RegisterProvider(System.Text.EncodingProvider)\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: RegisterProvider(EncodingProvider)\n  nameWithType: Encoding.RegisterProvider(EncodingProvider)\n  fullName: System.Text.Encoding.RegisterProvider(EncodingProvider)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static void RegisterProvider (System.Text.EncodingProvider provider);\n    parameters:\n    - id: provider\n      type: System.Text.EncodingProvider\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.Unicode\n  id: Unicode\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: Unicode\n  nameWithType: Encoding.Unicode\n  fullName: System.Text.Encoding.Unicode\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding Unicode { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.UTF32\n  id: UTF32\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: UTF32\n  nameWithType: Encoding.UTF32\n  fullName: System.Text.Encoding.UTF32\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding UTF32 { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.UTF7\n  id: UTF7\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: UTF7\n  nameWithType: Encoding.UTF7\n  fullName: System.Text.Encoding.UTF7\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding UTF7 { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.UTF8\n  id: UTF8\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: UTF8\n  nameWithType: Encoding.UTF8\n  fullName: System.Text.Encoding.UTF8\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public static System.Text.Encoding UTF8 { get; }\n    return:\n      type: System.Text.Encoding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.WebName\n  id: WebName\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: WebName\n  nameWithType: Encoding.WebName\n  fullName: System.Text.Encoding.WebName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual string WebName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Text.Encoding.WindowsCodePage\n  id: WindowsCodePage\n  parent: System.Text.Encoding\n  langs:\n  - csharp\n  name: WindowsCodePage\n  nameWithType: Encoding.WindowsCodePage\n  fullName: System.Text.Encoding.WindowsCodePage\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Text\n  syntax:\n    content: public virtual int WindowsCodePage { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Text.Encoding.#ctor\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Encoding()\n  nameWithType: Encoding.Encoding()\n  fullName: System.Text.Encoding.Encoding()\n- uid: System.Text.Encoding.#ctor(System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Encoding(Int32)\n  nameWithType: Encoding.Encoding(Int32)\n  fullName: System.Text.Encoding.Encoding(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.#ctor(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Encoding(Int32,EncoderFallback,DecoderFallback)\n  nameWithType: Encoding.Encoding(Int32,EncoderFallback,DecoderFallback)\n  fullName: System.Text.Encoding.Encoding(Int32,EncoderFallback,DecoderFallback)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: DecoderFallback\n  fullName: System.Text.DecoderFallback\n- uid: System.Text.Encoding.ASCII\n  parent: System.Text.Encoding\n  isExternal: false\n  name: ASCII\n  nameWithType: Encoding.ASCII\n  fullName: System.Text.Encoding.ASCII\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.BigEndianUnicode\n  parent: System.Text.Encoding\n  isExternal: false\n  name: BigEndianUnicode\n  nameWithType: Encoding.BigEndianUnicode\n  fullName: System.Text.Encoding.BigEndianUnicode\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.BodyName\n  parent: System.Text.Encoding\n  isExternal: false\n  name: BodyName\n  nameWithType: Encoding.BodyName\n  fullName: System.Text.Encoding.BodyName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.Clone\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Clone()\n  nameWithType: Encoding.Clone()\n  fullName: System.Text.Encoding.Clone()\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.Encoding.CodePage\n  parent: System.Text.Encoding\n  isExternal: false\n  name: CodePage\n  nameWithType: Encoding.CodePage\n  fullName: System.Text.Encoding.CodePage\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[])\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Convert(Encoding,Encoding,Byte[])\n  nameWithType: Encoding.Convert(Encoding,Encoding,Byte[])\n  fullName: System.Text.Encoding.Convert(Encoding,Encoding,Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding.Convert(System.Text.Encoding,System.Text.Encoding,System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Convert(Encoding,Encoding,Byte[],Int32,Int32)\n  nameWithType: Encoding.Convert(Encoding,Encoding,Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.Convert(Encoding,Encoding,Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.DecoderFallback\n  parent: System.Text.Encoding\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: Encoding.DecoderFallback\n  fullName: System.Text.Encoding.DecoderFallback\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: DecoderFallback\n  fullName: System.Text.DecoderFallback\n- uid: System.Text.Encoding.Default\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Default\n  nameWithType: Encoding.Default\n  fullName: System.Text.Encoding.Default\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.EncoderFallback\n  parent: System.Text.Encoding\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: Encoding.EncoderFallback\n  fullName: System.Text.Encoding.EncoderFallback\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n- uid: System.Text.Encoding.EncodingName\n  parent: System.Text.Encoding\n  isExternal: false\n  name: EncodingName\n  nameWithType: Encoding.EncodingName\n  fullName: System.Text.Encoding.EncodingName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.Equals(System.Object)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Encoding.Equals(Object)\n  fullName: System.Text.Encoding.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Text.Encoding.GetByteCount(System.Char[])\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetByteCount(Char[])\n  nameWithType: Encoding.GetByteCount(Char[])\n  fullName: System.Text.Encoding.GetByteCount(Char[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Text.Encoding.GetByteCount(System.String)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetByteCount(String)\n  nameWithType: Encoding.GetByteCount(String)\n  fullName: System.Text.Encoding.GetByteCount(String)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.GetByteCount(System.Char*,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetByteCount(Char*,Int32)\n  nameWithType: Encoding.GetByteCount(Char*,Int32)\n  fullName: System.Text.Encoding.GetByteCount(Char*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetByteCount(Char[],Int32,Int32)\n  nameWithType: Encoding.GetByteCount(Char[],Int32,Int32)\n  fullName: System.Text.Encoding.GetByteCount(Char[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetBytes(System.Char[])\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetBytes(Char[])\n  nameWithType: Encoding.GetBytes(Char[])\n  fullName: System.Text.Encoding.GetBytes(Char[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Text.Encoding.GetBytes(System.String)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetBytes(String)\n  nameWithType: Encoding.GetBytes(String)\n  fullName: System.Text.Encoding.GetBytes(String)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetBytes(Char[],Int32,Int32)\n  nameWithType: Encoding.GetBytes(Char[],Int32,Int32)\n  fullName: System.Text.Encoding.GetBytes(Char[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetBytes(Char*,Int32,Byte*,Int32)\n  nameWithType: Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n  fullName: System.Text.Encoding.GetBytes(Char*,Int32,Byte*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  nameWithType: Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n  fullName: System.Text.Encoding.GetBytes(Char[],Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetBytes(String,Int32,Int32,Byte[],Int32)\n  nameWithType: Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n  fullName: System.Text.Encoding.GetBytes(String,Int32,Int32,Byte[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetCharCount(System.Byte[])\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetCharCount(Byte[])\n  nameWithType: Encoding.GetCharCount(Byte[])\n  fullName: System.Text.Encoding.GetCharCount(Byte[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetCharCount(Byte*,Int32)\n  nameWithType: Encoding.GetCharCount(Byte*,Int32)\n  fullName: System.Text.Encoding.GetCharCount(Byte*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetCharCount(Byte[],Int32,Int32)\n  nameWithType: Encoding.GetCharCount(Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.GetCharCount(Byte[],Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetChars(System.Byte[])\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetChars(Byte[])\n  nameWithType: Encoding.GetChars(Byte[])\n  fullName: System.Text.Encoding.GetChars(Byte[])\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetChars(Byte[],Int32,Int32)\n  nameWithType: Encoding.GetChars(Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.GetChars(Byte[],Int32,Int32)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetChars(Byte*,Int32,Char*,Int32)\n  nameWithType: Encoding.GetChars(Byte*,Int32,Char*,Int32)\n  fullName: System.Text.Encoding.GetChars(Byte*,Int32,Char*,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetChars(Byte[],Int32,Int32,Char[],Int32)\n  nameWithType: Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n  fullName: System.Text.Encoding.GetChars(Byte[],Int32,Int32,Char[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetDecoder\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetDecoder()\n  nameWithType: Encoding.GetDecoder()\n  fullName: System.Text.Encoding.GetDecoder()\n- uid: System.Text.Decoder\n  parent: System.Text\n  isExternal: false\n  name: Decoder\n  nameWithType: Decoder\n  fullName: System.Text.Decoder\n- uid: System.Text.Encoding.GetEncoder\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetEncoder()\n  nameWithType: Encoding.GetEncoder()\n  fullName: System.Text.Encoding.GetEncoder()\n- uid: System.Text.Encoder\n  parent: System.Text\n  isExternal: false\n  name: Encoder\n  nameWithType: Encoder\n  fullName: System.Text.Encoder\n- uid: System.Text.Encoding.GetEncoding(System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetEncoding(Int32)\n  nameWithType: Encoding.GetEncoding(Int32)\n  fullName: System.Text.Encoding.GetEncoding(Int32)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetEncoding(System.String)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetEncoding(String)\n  nameWithType: Encoding.GetEncoding(String)\n  fullName: System.Text.Encoding.GetEncoding(String)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.GetEncoding(System.Int32,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetEncoding(Int32,EncoderFallback,DecoderFallback)\n  nameWithType: Encoding.GetEncoding(Int32,EncoderFallback,DecoderFallback)\n  fullName: System.Text.Encoding.GetEncoding(Int32,EncoderFallback,DecoderFallback)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: DecoderFallback\n  fullName: System.Text.DecoderFallback\n- uid: System.Text.Encoding.GetEncoding(System.String,System.Text.EncoderFallback,System.Text.DecoderFallback)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetEncoding(String,EncoderFallback,DecoderFallback)\n  nameWithType: Encoding.GetEncoding(String,EncoderFallback,DecoderFallback)\n  fullName: System.Text.Encoding.GetEncoding(String,EncoderFallback,DecoderFallback)\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.EncoderFallback\n  parent: System.Text\n  isExternal: false\n  name: EncoderFallback\n  nameWithType: EncoderFallback\n  fullName: System.Text.EncoderFallback\n- uid: System.Text.DecoderFallback\n  parent: System.Text\n  isExternal: false\n  name: DecoderFallback\n  nameWithType: DecoderFallback\n  fullName: System.Text.DecoderFallback\n- uid: System.Text.Encoding.GetEncodings\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetEncodings()\n  nameWithType: Encoding.GetEncodings()\n  fullName: System.Text.Encoding.GetEncodings()\n- uid: System.Text.EncodingInfo\n  parent: System.Text\n  isExternal: false\n  name: EncodingInfo\n  nameWithType: EncodingInfo\n  fullName: System.Text.EncodingInfo[]\n- uid: System.Text.Encoding.GetHashCode\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Encoding.GetHashCode()\n  fullName: System.Text.Encoding.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetMaxByteCount(System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetMaxByteCount(Int32)\n  nameWithType: Encoding.GetMaxByteCount(Int32)\n  fullName: System.Text.Encoding.GetMaxByteCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetMaxCharCount(System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetMaxCharCount(Int32)\n  nameWithType: Encoding.GetMaxCharCount(Int32)\n  fullName: System.Text.Encoding.GetMaxCharCount(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetPreamble\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetPreamble()\n  nameWithType: Encoding.GetPreamble()\n  fullName: System.Text.Encoding.GetPreamble()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding.GetString(System.Byte[])\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetString(Byte[])\n  nameWithType: Encoding.GetString(Byte[])\n  fullName: System.Text.Encoding.GetString(Byte[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Text.Encoding.GetString(System.Byte*,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetString(Byte*,Int32)\n  nameWithType: Encoding.GetString(Byte*,Int32)\n  fullName: System.Text.Encoding.GetString(Byte*,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: GetString(Byte[],Int32,Int32)\n  nameWithType: Encoding.GetString(Byte[],Int32,Int32)\n  fullName: System.Text.Encoding.GetString(Byte[],Int32,Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.HeaderName\n  parent: System.Text.Encoding\n  isExternal: false\n  name: HeaderName\n  nameWithType: Encoding.HeaderName\n  fullName: System.Text.Encoding.HeaderName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.IsAlwaysNormalized\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsAlwaysNormalized()\n  nameWithType: Encoding.IsAlwaysNormalized()\n  fullName: System.Text.Encoding.IsAlwaysNormalized()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsAlwaysNormalized(NormalizationForm)\n  nameWithType: Encoding.IsAlwaysNormalized(NormalizationForm)\n  fullName: System.Text.Encoding.IsAlwaysNormalized(NormalizationForm)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.NormalizationForm\n  parent: System.Text\n  isExternal: false\n  name: NormalizationForm\n  nameWithType: NormalizationForm\n  fullName: System.Text.NormalizationForm\n- uid: System.Text.Encoding.IsBrowserDisplay\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsBrowserDisplay\n  nameWithType: Encoding.IsBrowserDisplay\n  fullName: System.Text.Encoding.IsBrowserDisplay\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.IsBrowserSave\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsBrowserSave\n  nameWithType: Encoding.IsBrowserSave\n  fullName: System.Text.Encoding.IsBrowserSave\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.IsMailNewsDisplay\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsMailNewsDisplay\n  nameWithType: Encoding.IsMailNewsDisplay\n  fullName: System.Text.Encoding.IsMailNewsDisplay\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.IsMailNewsSave\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsMailNewsSave\n  nameWithType: Encoding.IsMailNewsSave\n  fullName: System.Text.Encoding.IsMailNewsSave\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.IsReadOnly\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Encoding.IsReadOnly\n  fullName: System.Text.Encoding.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.IsSingleByte\n  parent: System.Text.Encoding\n  isExternal: false\n  name: IsSingleByte\n  nameWithType: Encoding.IsSingleByte\n  fullName: System.Text.Encoding.IsSingleByte\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Text.Encoding.RegisterProvider(System.Text.EncodingProvider)\n  parent: System.Text.Encoding\n  isExternal: false\n  name: RegisterProvider(EncodingProvider)\n  nameWithType: Encoding.RegisterProvider(EncodingProvider)\n  fullName: System.Text.Encoding.RegisterProvider(EncodingProvider)\n- uid: System.Text.EncodingProvider\n  parent: System.Text\n  isExternal: false\n  name: EncodingProvider\n  nameWithType: EncodingProvider\n  fullName: System.Text.EncodingProvider\n- uid: System.Text.Encoding.Unicode\n  parent: System.Text.Encoding\n  isExternal: false\n  name: Unicode\n  nameWithType: Encoding.Unicode\n  fullName: System.Text.Encoding.Unicode\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.UTF32\n  parent: System.Text.Encoding\n  isExternal: false\n  name: UTF32\n  nameWithType: Encoding.UTF32\n  fullName: System.Text.Encoding.UTF32\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.UTF7\n  parent: System.Text.Encoding\n  isExternal: false\n  name: UTF7\n  nameWithType: Encoding.UTF7\n  fullName: System.Text.Encoding.UTF7\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.UTF8\n  parent: System.Text.Encoding\n  isExternal: false\n  name: UTF8\n  nameWithType: Encoding.UTF8\n  fullName: System.Text.Encoding.UTF8\n- uid: System.Text.Encoding\n  parent: System.Text\n  isExternal: false\n  name: Encoding\n  nameWithType: Encoding\n  fullName: System.Text.Encoding\n- uid: System.Text.Encoding.WebName\n  parent: System.Text.Encoding\n  isExternal: false\n  name: WebName\n  nameWithType: Encoding.WebName\n  fullName: System.Text.Encoding.WebName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Text.Encoding.WindowsCodePage\n  parent: System.Text.Encoding\n  isExternal: false\n  name: WindowsCodePage\n  nameWithType: Encoding.WindowsCodePage\n  fullName: System.Text.Encoding.WindowsCodePage\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Text.Encoding.Convert*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.GetByteCount*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.GetBytes*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.GetCharCount*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.GetChars*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.GetEncoding*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.GetString*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n- uid: System.Text.Encoding.IsAlwaysNormalized*\n  parent: System.Text.Encoding\n  isExternal: false\n  nameWithType: Encoding.\n"}