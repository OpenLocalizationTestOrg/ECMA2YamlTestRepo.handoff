{"nodes":[{"pos":[453,465],"content":"QualifiedAce","needQuote":true,"needEscape":true,"nodes":[{"content":"QualifiedAce","pos":[0,12]}]},{"pos":[2394,2406],"content":"AceQualifier","needQuote":true,"needEscape":true,"nodes":[{"content":"AceQualifier","pos":[0,12]}]},{"pos":[2785,2819],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3026,3037],"content":"GetOpaque()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOpaque()","pos":[0,11]}]},{"pos":[3358,3392],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3601,3611],"content":"IsCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCallback","pos":[0,10]}]},{"pos":[3918,3952],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4165,4177],"content":"OpaqueLength","needQuote":true,"needEscape":true,"nodes":[{"content":"OpaqueLength","pos":[0,12]}]},{"pos":[4487,4521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4758,4775],"content":"SetOpaque(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetOpaque(Byte[])","pos":[0,17]}]},{"pos":[5121,5155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5291,5329],"content":"System.Security.AccessControl.KnownAce","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.KnownAce","pos":[0,38]}]},{"pos":[5474,5486],"content":"AceQualifier","needQuote":true,"needEscape":true,"nodes":[{"content":"AceQualifier","pos":[0,12]}]},{"pos":[5715,5727],"content":"AceQualifier","needQuote":true,"needEscape":true,"nodes":[{"content":"AceQualifier","pos":[0,12]}]},{"pos":[5953,5964],"content":"GetOpaque()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetOpaque()","pos":[0,11]}]},{"pos":[6137,6141],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[6331,6341],"content":"IsCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCallback","pos":[0,10]}]},{"pos":[6515,6522],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6718,6730],"content":"OpaqueLength","needQuote":true,"needEscape":true,"nodes":[{"content":"OpaqueLength","pos":[0,12]}]},{"pos":[6906,6911],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7115,7132],"content":"SetOpaque(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"SetOpaque(Byte[])","pos":[0,17]}]},{"pos":[7317,7321],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.QualifiedAce\n  id: QualifiedAce\n  children:\n  - System.Security.AccessControl.QualifiedAce.AceQualifier\n  - System.Security.AccessControl.QualifiedAce.GetOpaque\n  - System.Security.AccessControl.QualifiedAce.IsCallback\n  - System.Security.AccessControl.QualifiedAce.OpaqueLength\n  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  langs:\n  - csharp\n  name: QualifiedAce\n  nameWithType: QualifiedAce\n  fullName: System.Security.AccessControl.QualifiedAce\n  type: Class\n  syntax:\n    content: 'public abstract class QualifiedAce : System.Security.AccessControl.KnownAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.BinaryLength\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.QualifiedAce.AceQualifier\n  id: AceQualifier\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: AceQualifier\n  nameWithType: QualifiedAce.AceQualifier\n  fullName: System.Security.AccessControl.QualifiedAce.AceQualifier\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.AceQualifier AceQualifier { get; }\n    return:\n      type: System.Security.AccessControl.AceQualifier\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.QualifiedAce.GetOpaque\n  id: GetOpaque\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: GetOpaque()\n  nameWithType: QualifiedAce.GetOpaque()\n  fullName: System.Security.AccessControl.QualifiedAce.GetOpaque()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public byte[] GetOpaque ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.QualifiedAce.IsCallback\n  id: IsCallback\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: IsCallback\n  nameWithType: QualifiedAce.IsCallback\n  fullName: System.Security.AccessControl.QualifiedAce.IsCallback\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public bool IsCallback { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength\n  id: OpaqueLength\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: OpaqueLength\n  nameWithType: QualifiedAce.OpaqueLength\n  fullName: System.Security.AccessControl.QualifiedAce.OpaqueLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public int OpaqueLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  id: SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.QualifiedAce\n  langs:\n  - csharp\n  name: SetOpaque(Byte[])\n  nameWithType: QualifiedAce.SetOpaque(Byte[])\n  fullName: System.Security.AccessControl.QualifiedAce.SetOpaque(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void SetOpaque (byte[] opaque);\n    parameters:\n    - id: opaque\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.KnownAce\n  isExternal: false\n  name: System.Security.AccessControl.KnownAce\n- uid: System.Security.AccessControl.QualifiedAce.AceQualifier\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: AceQualifier\n  nameWithType: QualifiedAce.AceQualifier\n  fullName: System.Security.AccessControl.QualifiedAce.AceQualifier\n- uid: System.Security.AccessControl.AceQualifier\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceQualifier\n  nameWithType: AceQualifier\n  fullName: System.Security.AccessControl.AceQualifier\n- uid: System.Security.AccessControl.QualifiedAce.GetOpaque\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: GetOpaque()\n  nameWithType: QualifiedAce.GetOpaque()\n  fullName: System.Security.AccessControl.QualifiedAce.GetOpaque()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.AccessControl.QualifiedAce.IsCallback\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: IsCallback\n  nameWithType: QualifiedAce.IsCallback\n  fullName: System.Security.AccessControl.QualifiedAce.IsCallback\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.QualifiedAce.OpaqueLength\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: OpaqueLength\n  nameWithType: QualifiedAce.OpaqueLength\n  fullName: System.Security.AccessControl.QualifiedAce.OpaqueLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  parent: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: SetOpaque(Byte[])\n  nameWithType: QualifiedAce.SetOpaque(Byte[])\n  fullName: System.Security.AccessControl.QualifiedAce.SetOpaque(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n"}