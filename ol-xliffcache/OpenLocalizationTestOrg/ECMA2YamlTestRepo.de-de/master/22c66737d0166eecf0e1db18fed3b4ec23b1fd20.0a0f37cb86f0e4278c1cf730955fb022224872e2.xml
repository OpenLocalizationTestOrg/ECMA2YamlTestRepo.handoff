{"nodes":[{"pos":[1749,1767],"content":"ThicknessAnimation","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation","pos":[0,18]}]},{"pos":[6522,6542],"content":"ThicknessAnimation()","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation()","pos":[0,20]}]},{"pos":[7172,7210],"content":"ThicknessAnimation(Thickness,Duration)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Duration)","pos":[0,38]}]},{"pos":[7699,7733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7808,7842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8245,8296],"content":"ThicknessAnimation(Thickness,Duration,FillBehavior)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Duration,FillBehavior)","pos":[0,51]}]},{"pos":[8869,8903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8978,9012],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9111,9145],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9510,9558],"content":"ThicknessAnimation(Thickness,Thickness,Duration)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Thickness,Duration)","pos":[0,48]}]},{"pos":[10105,10139],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10214,10248],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10323,10357],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10810,10871],"content":"ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)","pos":[0,61]}]},{"pos":[11502,11536],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11611,11645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11720,11754],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11853,11887],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12094,12096],"content":"By","needQuote":true,"needEscape":true,"nodes":[{"content":"By","pos":[0,2]}]},{"pos":[12468,12502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12725,12735],"content":"ByProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ByProperty","pos":[0,10]}]},{"pos":[13122,13156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13369,13376],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[13791,13825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14064,14084],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[14500,14534],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14765,14779],"content":"EasingFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"EasingFunction","pos":[0,14]}]},{"pos":[15204,15238],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15485,15507],"content":"EasingFunctionProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"EasingFunctionProperty","pos":[0,22]}]},{"pos":[15930,15964],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16175,16179],"content":"From","needQuote":true,"needEscape":true,"nodes":[{"content":"From","pos":[0,4]}]},{"pos":[16557,16591],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16818,16830],"content":"FromProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"FromProperty","pos":[0,12]}]},{"pos":[17223,17257],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17692,17747],"content":"GetCurrentValueCore(Thickness,Thickness,AnimationClock)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueCore(Thickness,Thickness,AnimationClock)","pos":[0,55]}]},{"pos":[18403,18437],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18528,18562],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18665,18699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18768,18802],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19025,19035],"content":"IsAdditive","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAdditive","pos":[0,10]}]},{"pos":[19374,19408],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19635,19647],"content":"IsCumulative","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCumulative","pos":[0,12]}]},{"pos":[19992,20026],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20233,20235],"content":"To","needQuote":true,"needEscape":true,"nodes":[{"content":"To","pos":[0,2]}]},{"pos":[20607,20641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20864,20874],"content":"ToProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ToProperty","pos":[0,10]}]},{"pos":[21261,21295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21446,21499],"content":"System.Windows.Media.Animation.ThicknessAnimationBase","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.ThicknessAnimationBase","pos":[0,53]}]},{"pos":[21651,21671],"content":"ThicknessAnimation()","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation()","pos":[0,20]}]},{"pos":[22012,22050],"content":"ThicknessAnimation(Thickness,Duration)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Duration)","pos":[0,38]}]},{"pos":[22311,22320],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[22468,22476],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[22783,22834],"content":"ThicknessAnimation(Thickness,Duration,FillBehavior)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Duration,FillBehavior)","pos":[0,51]}]},{"pos":[23121,23130],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[23278,23286],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[23468,23480],"content":"FillBehavior","needQuote":true,"needEscape":true,"nodes":[{"content":"FillBehavior","pos":[0,12]}]},{"pos":[23792,23840],"content":"ThicknessAnimation(Thickness,Thickness,Duration)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Thickness,Duration)","pos":[0,48]}]},{"pos":[24121,24130],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[24279,24288],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[24436,24444],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[24776,24837],"content":"ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)","pos":[0,61]}]},{"pos":[25144,25153],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[25302,25311],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[25459,25467],"content":"Duration","needQuote":true,"needEscape":true,"nodes":[{"content":"Duration","pos":[0,8]}]},{"pos":[25649,25661],"content":"FillBehavior","needQuote":true,"needEscape":true,"nodes":[{"content":"FillBehavior","pos":[0,12]}]},{"pos":[25895,25897],"content":"By","needQuote":true,"needEscape":true,"nodes":[{"content":"By","pos":[0,2]}]},{"pos":[26095,26114],"content":"Nullable<ph id=\"ph1\">&lt;Thickness&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Thickness>"},{"pos":[26361,26371],"content":"ByProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ByProperty","pos":[0,10]}]},{"pos":[26584,26602],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[26835,26842],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[27082,27100],"content":"ThicknessAnimation","needQuote":true,"needEscape":true,"nodes":[{"content":"ThicknessAnimation","pos":[0,18]}]},{"pos":[27362,27382],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[27606,27615],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[27839,27853],"content":"EasingFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"EasingFunction","pos":[0,14]}]},{"pos":[28104,28119],"content":"IEasingFunction","needQuote":true,"needEscape":true,"nodes":[{"content":"IEasingFunction","pos":[0,15]}]},{"pos":[28379,28401],"content":"EasingFunctionProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"EasingFunctionProperty","pos":[0,22]}]},{"pos":[28638,28656],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[28888,28892],"content":"From","needQuote":true,"needEscape":true,"nodes":[{"content":"From","pos":[0,4]}]},{"pos":[29094,29113],"content":"Nullable<ph id=\"ph1\">&lt;Thickness&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Thickness>"},{"pos":[29362,29374],"content":"FromProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"FromProperty","pos":[0,12]}]},{"pos":[29591,29609],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]},{"pos":[29953,30008],"content":"GetCurrentValueCore(Thickness,Thickness,AnimationClock)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueCore(Thickness,Thickness,AnimationClock)","pos":[0,55]}]},{"pos":[30303,30312],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[30461,30470],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[30619,30628],"content":"Thickness","needQuote":true,"needEscape":true,"nodes":[{"content":"Thickness","pos":[0,9]}]},{"pos":[30814,30828],"content":"AnimationClock","needQuote":true,"needEscape":true,"nodes":[{"content":"AnimationClock","pos":[0,14]}]},{"pos":[31074,31084],"content":"IsAdditive","needQuote":true,"needEscape":true,"nodes":[{"content":"IsAdditive","pos":[0,10]}]},{"pos":[31271,31278],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31488,31500],"content":"IsCumulative","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCumulative","pos":[0,12]}]},{"pos":[31691,31698],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31898,31900],"content":"To","needQuote":true,"needEscape":true,"nodes":[{"content":"To","pos":[0,2]}]},{"pos":[32098,32117],"content":"Nullable<ph id=\"ph1\">&lt;Thickness&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Thickness>"},{"pos":[32364,32374],"content":"ToProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"ToProperty","pos":[0,10]}]},{"pos":[32587,32605],"content":"DependencyProperty","needQuote":true,"needEscape":true,"nodes":[{"content":"DependencyProperty","pos":[0,18]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.ThicknessAnimation\n  id: ThicknessAnimation\n  children:\n  - System.Windows.Media.Animation.ThicknessAnimation.#ctor\n  - System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)\n  - System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)\n  - System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)\n  - System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)\n  - System.Windows.Media.Animation.ThicknessAnimation.By\n  - System.Windows.Media.Animation.ThicknessAnimation.ByProperty\n  - System.Windows.Media.Animation.ThicknessAnimation.Clone\n  - System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore\n  - System.Windows.Media.Animation.ThicknessAnimation.EasingFunction\n  - System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty\n  - System.Windows.Media.Animation.ThicknessAnimation.From\n  - System.Windows.Media.Animation.ThicknessAnimation.FromProperty\n  - System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.ThicknessAnimation.IsAdditive\n  - System.Windows.Media.Animation.ThicknessAnimation.IsCumulative\n  - System.Windows.Media.Animation.ThicknessAnimation.To\n  - System.Windows.Media.Animation.ThicknessAnimation.ToProperty\n  langs:\n  - csharp\n  name: ThicknessAnimation\n  nameWithType: ThicknessAnimation\n  fullName: System.Windows.Media.Animation.ThicknessAnimation\n  type: Class\n  syntax:\n    content: 'public class ThicknessAnimation : System.Windows.Media.Animation.ThicknessAnimationBase'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Animation.Timeline\n  - System.Windows.Media.Animation.AnimationTimeline\n  - System.Windows.Media.Animation.ThicknessAnimationBase\n  implements: []\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock\n  - System.Windows.Media.Animation.AnimationTimeline.CreateClock\n  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty\n  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty\n  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault\n  - System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.ThicknessAnimationBase.GetCurrentValue(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.ThicknessAnimationBase.TargetPropertyType\n  - System.Windows.Media.Animation.Timeline.AccelerationRatio\n  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.AutoReverse\n  - System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  - System.Windows.Media.Animation.Timeline.BeginTime\n  - System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  - System.Windows.Media.Animation.Timeline.CloneCurrentValue\n  - System.Windows.Media.Animation.Timeline.Completed\n  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  - System.Windows.Media.Animation.Timeline.DecelerationRatio\n  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  - System.Windows.Media.Animation.Timeline.Duration\n  - System.Windows.Media.Animation.Timeline.DurationProperty\n  - System.Windows.Media.Animation.Timeline.FillBehavior\n  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.Timeline.Name\n  - System.Windows.Media.Animation.Timeline.NameProperty\n  - System.Windows.Media.Animation.Timeline.RemoveRequested\n  - System.Windows.Media.Animation.Timeline.RepeatBehavior\n  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  - System.Windows.Media.Animation.Timeline.SpeedRatio\n  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ThicknessAnimation()\n  nameWithType: ThicknessAnimation.ThicknessAnimation()\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public ThicknessAnimation ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)\n  id: '#ctor(System.Windows.Thickness,System.Windows.Duration)'\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ThicknessAnimation(Thickness,Duration)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Duration)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Duration)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public ThicknessAnimation (System.Windows.Thickness toValue, System.Windows.Duration duration);\n    parameters:\n    - id: toValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: duration\n      type: System.Windows.Duration\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)\n  id: '#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)'\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ThicknessAnimation(Thickness,Duration,FillBehavior)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Duration,FillBehavior)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Duration,FillBehavior)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public ThicknessAnimation (System.Windows.Thickness toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);\n    parameters:\n    - id: toValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: duration\n      type: System.Windows.Duration\n      description: Parameter description to be filled\n    - id: fillBehavior\n      type: System.Windows.Media.Animation.FillBehavior\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)\n  id: '#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)'\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ThicknessAnimation(Thickness,Thickness,Duration)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public ThicknessAnimation (System.Windows.Thickness fromValue, System.Windows.Thickness toValue, System.Windows.Duration duration);\n    parameters:\n    - id: fromValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: toValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: duration\n      type: System.Windows.Duration\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)\n  id: '#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)'\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public ThicknessAnimation (System.Windows.Thickness fromValue, System.Windows.Thickness toValue, System.Windows.Duration duration, System.Windows.Media.Animation.FillBehavior fillBehavior);\n    parameters:\n    - id: fromValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: toValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: duration\n      type: System.Windows.Duration\n      description: Parameter description to be filled\n    - id: fillBehavior\n      type: System.Windows.Media.Animation.FillBehavior\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.By\n  id: By\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: By\n  nameWithType: ThicknessAnimation.By\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.By\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public Nullable<System.Windows.Thickness> By { get; set; }\n    return:\n      type: System.Nullable{System.Windows.Thickness}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.ByProperty\n  id: ByProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ByProperty\n  nameWithType: ThicknessAnimation.ByProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ByProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ByProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: ThicknessAnimation.Clone()\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.Clone()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public System.Windows.Media.Animation.ThicknessAnimation Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.ThicknessAnimation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: ThicknessAnimation.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.EasingFunction\n  id: EasingFunction\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: EasingFunction\n  nameWithType: ThicknessAnimation.EasingFunction\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.EasingFunction\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public System.Windows.Media.Animation.IEasingFunction EasingFunction { get; set; }\n    return:\n      type: System.Windows.Media.Animation.IEasingFunction\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty\n  id: EasingFunctionProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: EasingFunctionProperty\n  nameWithType: ThicknessAnimation.EasingFunctionProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty EasingFunctionProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.From\n  id: From\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: From\n  nameWithType: ThicknessAnimation.From\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.From\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public Nullable<System.Windows.Thickness> From { get; set; }\n    return:\n      type: System.Nullable{System.Windows.Thickness}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.FromProperty\n  id: FromProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: FromProperty\n  nameWithType: ThicknessAnimation.FromProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.FromProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty FromProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)\n  id: GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: GetCurrentValueCore(Thickness,Thickness,AnimationClock)\n  nameWithType: ThicknessAnimation.GetCurrentValueCore(Thickness,Thickness,AnimationClock)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(Thickness,Thickness,AnimationClock)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: protected override System.Windows.Thickness GetCurrentValueCore (System.Windows.Thickness defaultOriginValue, System.Windows.Thickness defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);\n    parameters:\n    - id: defaultOriginValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: defaultDestinationValue\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n    - id: animationClock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Thickness\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.IsAdditive\n  id: IsAdditive\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: IsAdditive\n  nameWithType: ThicknessAnimation.IsAdditive\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.IsAdditive\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public bool IsAdditive { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.IsCumulative\n  id: IsCumulative\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: IsCumulative\n  nameWithType: ThicknessAnimation.IsCumulative\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.IsCumulative\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public bool IsCumulative { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.To\n  id: To\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: To\n  nameWithType: ThicknessAnimation.To\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.To\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public Nullable<System.Windows.Thickness> To { get; set; }\n    return:\n      type: System.Nullable{System.Windows.Thickness}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.Animation.ThicknessAnimation.ToProperty\n  id: ToProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  langs:\n  - csharp\n  name: ToProperty\n  nameWithType: ThicknessAnimation.ToProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ToProperty\n  type: Field\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows.Media.Animation\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty ToProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.ThicknessAnimationBase\n  isExternal: false\n  name: System.Windows.Media.Animation.ThicknessAnimationBase\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ThicknessAnimation()\n  nameWithType: ThicknessAnimation.ThicknessAnimation()\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation()\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration)\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ThicknessAnimation(Thickness,Duration)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Duration)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Duration)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ThicknessAnimation(Thickness,Duration,FillBehavior)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Duration,FillBehavior)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Duration,FillBehavior)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.Animation.FillBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: FillBehavior\n  nameWithType: FillBehavior\n  fullName: System.Windows.Media.Animation.FillBehavior\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration)\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ThicknessAnimation(Thickness,Thickness,Duration)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.Animation.ThicknessAnimation.#ctor(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Duration,System.Windows.Media.Animation.FillBehavior)\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)\n  nameWithType: ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ThicknessAnimation(Thickness,Thickness,Duration,FillBehavior)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Duration\n  parent: System.Windows\n  isExternal: false\n  name: Duration\n  nameWithType: Duration\n  fullName: System.Windows.Duration\n- uid: System.Windows.Media.Animation.FillBehavior\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: FillBehavior\n  nameWithType: FillBehavior\n  fullName: System.Windows.Media.Animation.FillBehavior\n- uid: System.Windows.Media.Animation.ThicknessAnimation.By\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: By\n  nameWithType: ThicknessAnimation.By\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.By\n- uid: System.Nullable{System.Windows.Thickness}\n  parent: System\n  isExternal: false\n  name: Nullable<Thickness>\n  nameWithType: Nullable<Thickness>\n  fullName: System.Nullable<System.Windows.Thickness>\n- uid: System.Windows.Media.Animation.ThicknessAnimation.ByProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ByProperty\n  nameWithType: ThicknessAnimation.ByProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ByProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.ThicknessAnimation.Clone\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: Clone()\n  nameWithType: ThicknessAnimation.Clone()\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.Clone()\n- uid: System.Windows.Media.Animation.ThicknessAnimation\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: ThicknessAnimation\n  nameWithType: ThicknessAnimation\n  fullName: System.Windows.Media.Animation.ThicknessAnimation\n- uid: System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: ThicknessAnimation.CreateInstanceCore()\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.ThicknessAnimation.EasingFunction\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: EasingFunction\n  nameWithType: ThicknessAnimation.EasingFunction\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.EasingFunction\n- uid: System.Windows.Media.Animation.IEasingFunction\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: IEasingFunction\n  nameWithType: IEasingFunction\n  fullName: System.Windows.Media.Animation.IEasingFunction\n- uid: System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: EasingFunctionProperty\n  nameWithType: ThicknessAnimation.EasingFunctionProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.EasingFunctionProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.ThicknessAnimation.From\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: From\n  nameWithType: ThicknessAnimation.From\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.From\n- uid: System.Nullable{System.Windows.Thickness}\n  parent: System\n  isExternal: false\n  name: Nullable<Thickness>\n  nameWithType: Nullable<Thickness>\n  fullName: System.Nullable<System.Windows.Thickness>\n- uid: System.Windows.Media.Animation.ThicknessAnimation.FromProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: FromProperty\n  nameWithType: ThicknessAnimation.FromProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.FromProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(System.Windows.Thickness,System.Windows.Thickness,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: GetCurrentValueCore(Thickness,Thickness,AnimationClock)\n  nameWithType: ThicknessAnimation.GetCurrentValueCore(Thickness,Thickness,AnimationClock)\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.GetCurrentValueCore(Thickness,Thickness,AnimationClock)\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Thickness\n  parent: System.Windows\n  isExternal: false\n  name: Thickness\n  nameWithType: Thickness\n  fullName: System.Windows.Thickness\n- uid: System.Windows.Media.Animation.AnimationClock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationClock\n  nameWithType: AnimationClock\n  fullName: System.Windows.Media.Animation.AnimationClock\n- uid: System.Windows.Media.Animation.ThicknessAnimation.IsAdditive\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: IsAdditive\n  nameWithType: ThicknessAnimation.IsAdditive\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.IsAdditive\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.ThicknessAnimation.IsCumulative\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: IsCumulative\n  nameWithType: ThicknessAnimation.IsCumulative\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.IsCumulative\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.ThicknessAnimation.To\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: To\n  nameWithType: ThicknessAnimation.To\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.To\n- uid: System.Nullable{System.Windows.Thickness}\n  parent: System\n  isExternal: false\n  name: Nullable<Thickness>\n  nameWithType: Nullable<Thickness>\n  fullName: System.Nullable<System.Windows.Thickness>\n- uid: System.Windows.Media.Animation.ThicknessAnimation.ToProperty\n  parent: System.Windows.Media.Animation.ThicknessAnimation\n  isExternal: false\n  name: ToProperty\n  nameWithType: ThicknessAnimation.ToProperty\n  fullName: System.Windows.Media.Animation.ThicknessAnimation.ToProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: true\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n"}