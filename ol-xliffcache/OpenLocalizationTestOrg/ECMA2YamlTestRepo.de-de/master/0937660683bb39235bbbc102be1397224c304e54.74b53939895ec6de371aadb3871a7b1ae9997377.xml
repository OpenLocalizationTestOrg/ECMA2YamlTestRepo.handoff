{"nodes":[{"pos":[2207,2231],"content":"FamilyTypefaceCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypefaceCollection","pos":[0,24]}]},{"pos":[3545,3564],"content":"Add(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(FamilyTypeface)","pos":[0,19]}]},{"pos":[3969,4003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4208,4215],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[4763,4787],"content":"Contains(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(FamilyTypeface)","pos":[0,24]}]},{"pos":[5207,5241],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5300,5334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5645,5675],"content":"CopyTo(FamilyTypeface[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(FamilyTypeface[],Int32)","pos":[0,30]}]},{"pos":[6122,6156],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6217,6251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6456,6461],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[6764,6798],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7019,7034],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[7512,7546],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7829,7852],"content":"IndexOf(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(FamilyTypeface)","pos":[0,23]}]},{"pos":[8268,8302],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8359,8393],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8700,8728],"content":"Insert(Int32,FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,FamilyTypeface)","pos":[0,28]}]},{"pos":[9143,9177],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9260,9294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9509,9519],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[9840,9874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10105,10116],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[10498,10532],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10612,10646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10927,10949],"content":"Remove(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(FamilyTypeface)","pos":[0,22]}]},{"pos":[11363,11397],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11456,11490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11729,11744],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[12093,12127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12464,12514],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[12949,12983],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13044,13078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13377,13422],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[13841,13875],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14162,14201],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[14603,14637],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14934,14980],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[15435,15469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15764,15800],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[16188,16222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16279,16313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16618,16659],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[17063,17097],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17156,17190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17493,17533],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[17933,17967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18024,18058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18385,18430],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[18849,18883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18944,18978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19259,19295],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[19687,19721],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20016,20052],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[20473,20507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20565,20599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20900,20939],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[21337,21371],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21482,21495],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[21674,21693],"content":"Add(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(FamilyTypeface)","pos":[0,19]}]},{"pos":[21935,21949],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[22172,22179],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[22478,22502],"content":"Contains(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(FamilyTypeface)","pos":[0,24]}]},{"pos":[22719,22726],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22880,22894],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[23170,23200],"content":"CopyTo(FamilyTypeface[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(FamilyTypeface[],Int32)","pos":[0,30]}]},{"pos":[23464,23478],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[23625,23630],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[23821,23826],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[24003,24008],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[24207,24222],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[24502,24529],"content":"IEnumerator<ph id=\"ph1\">&lt;FamilyTypeface&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<FamilyTypeface>"},{"pos":[24844,24867],"content":"IndexOf(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(FamilyTypeface)","pos":[0,23]}]},{"pos":[25080,25085],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25235,25249],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[25523,25551],"content":"Insert(Int32,FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,FamilyTypeface)","pos":[0,28]}]},{"pos":[25774,25779],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[25929,25943],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[26171,26181],"content":"IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"IsReadOnly","pos":[0,10]}]},{"pos":[26370,26377],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[26585,26596],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[26822,26836],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[26981,26986],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[27215,27237],"content":"Remove(FamilyTypeface)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(FamilyTypeface)","pos":[0,22]}]},{"pos":[27450,27457],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[27611,27625],"content":"FamilyTypeface","needQuote":true,"needEscape":true,"nodes":[{"content":"FamilyTypeface","pos":[0,14]}]},{"pos":[27865,27880],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[28077,28082],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[28332,28382],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[28649,28654],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[28767,28772],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[29003,29048],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[29307,29314],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[29543,29582],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[29828,29834],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[30066,30112],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[30401,30412],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[30665,30701],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[30940,30945],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[31059,31065],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31301,31342],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[31593,31600],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[31718,31724],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[31959,31999],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[32246,32251],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[32365,32371],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[32618,32663],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[32920,32925],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33039,33045],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[33269,33305],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[33546,33553],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[33786,33822],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[34062,34068],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[34183,34188],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[34420,34459],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[34705,34711],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.FamilyTypefaceCollection\n  id: FamilyTypefaceCollection\n  children:\n  - System.Windows.Media.FamilyTypefaceCollection.Add(System.Windows.Media.FamilyTypeface)\n  - System.Windows.Media.FamilyTypefaceCollection.Clear\n  - System.Windows.Media.FamilyTypefaceCollection.Contains(System.Windows.Media.FamilyTypeface)\n  - System.Windows.Media.FamilyTypefaceCollection.CopyTo(System.Windows.Media.FamilyTypeface[],System.Int32)\n  - System.Windows.Media.FamilyTypefaceCollection.Count\n  - System.Windows.Media.FamilyTypefaceCollection.GetEnumerator\n  - System.Windows.Media.FamilyTypefaceCollection.IndexOf(System.Windows.Media.FamilyTypeface)\n  - System.Windows.Media.FamilyTypefaceCollection.Insert(System.Int32,System.Windows.Media.FamilyTypeface)\n  - System.Windows.Media.FamilyTypefaceCollection.IsReadOnly\n  - System.Windows.Media.FamilyTypefaceCollection.Item(System.Int32)\n  - System.Windows.Media.FamilyTypefaceCollection.Remove(System.Windows.Media.FamilyTypeface)\n  - System.Windows.Media.FamilyTypefaceCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: FamilyTypefaceCollection\n  nameWithType: FamilyTypefaceCollection\n  fullName: System.Windows.Media.FamilyTypefaceCollection\n  type: Class\n  syntax:\n    content: 'public sealed class FamilyTypefaceCollection : System.Collections.Generic.ICollection<System.Windows.Media.FamilyTypeface>, System.Collections.Generic.IEnumerable<System.Windows.Media.FamilyTypeface>, System.Collections.Generic.IList<System.Windows.Media.FamilyTypeface>, System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.FamilyTypeface>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.FamilyTypeface>\n  - System.Collections.Generic.IList<System.Windows.Media.FamilyTypeface>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Add(System.Windows.Media.FamilyTypeface)\n  id: Add(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Add(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Add(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Add(FamilyTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Media.FamilyTypeface item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: FamilyTypefaceCollection.Clear()\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Contains(System.Windows.Media.FamilyTypeface)\n  id: Contains(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Contains(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Contains(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Contains(FamilyTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Media.FamilyTypeface item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.CopyTo(System.Windows.Media.FamilyTypeface[],System.Int32)\n  id: CopyTo(System.Windows.Media.FamilyTypeface[],System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: CopyTo(FamilyTypeface[],Int32)\n  nameWithType: FamilyTypefaceCollection.CopyTo(FamilyTypeface[],Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.CopyTo(FamilyTypeface[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Media.FamilyTypeface[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.FamilyTypeface[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Count\n  id: Count\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: FamilyTypefaceCollection.Count\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: FamilyTypefaceCollection.GetEnumerator()\n  fullName: System.Windows.Media.FamilyTypefaceCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Windows.Media.FamilyTypeface> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.FamilyTypeface}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.IndexOf(System.Windows.Media.FamilyTypeface)\n  id: IndexOf(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: IndexOf(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.IndexOf(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.IndexOf(FamilyTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Media.FamilyTypeface item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Insert(System.Int32,System.Windows.Media.FamilyTypeface)\n  id: Insert(System.Int32,System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Insert(Int32,FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Insert(Int32,FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Insert(Int32,FamilyTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.FamilyTypeface item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.IsReadOnly\n  id: IsReadOnly\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: FamilyTypefaceCollection.IsReadOnly\n  fullName: System.Windows.Media.FamilyTypefaceCollection.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: FamilyTypefaceCollection.Item(Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.FamilyTypeface this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.Remove(System.Windows.Media.FamilyTypeface)\n  id: Remove(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: Remove(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Remove(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Remove(FamilyTypeface)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Media.FamilyTypeface item);\n    parameters:\n    - id: item\n      type: System.Windows.Media.FamilyTypeface\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: FamilyTypefaceCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: FamilyTypefaceCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FamilyTypefaceCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FamilyTypefaceCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: FamilyTypefaceCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object item);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: item\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Windows.Media.FamilyTypefaceCollection.Add(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Add(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Add(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Add(FamilyTypeface)\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Windows.Media.FamilyTypefaceCollection.Clear\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: FamilyTypefaceCollection.Clear()\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Clear()\n- uid: System.Windows.Media.FamilyTypefaceCollection.Contains(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Contains(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Contains(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Contains(FamilyTypeface)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Windows.Media.FamilyTypefaceCollection.CopyTo(System.Windows.Media.FamilyTypeface[],System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: CopyTo(FamilyTypeface[],Int32)\n  nameWithType: FamilyTypefaceCollection.CopyTo(FamilyTypeface[],Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.CopyTo(FamilyTypeface[],Int32)\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypefaceCollection.Count\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Count\n  nameWithType: FamilyTypefaceCollection.Count\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypefaceCollection.GetEnumerator\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: FamilyTypefaceCollection.GetEnumerator()\n  fullName: System.Windows.Media.FamilyTypefaceCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.FamilyTypeface}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<FamilyTypeface>\n  nameWithType: IEnumerator<FamilyTypeface>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.FamilyTypeface>\n- uid: System.Windows.Media.FamilyTypefaceCollection.IndexOf(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: IndexOf(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.IndexOf(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.IndexOf(FamilyTypeface)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Windows.Media.FamilyTypefaceCollection.Insert(System.Int32,System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Insert(Int32,FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Insert(Int32,FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Insert(Int32,FamilyTypeface)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Windows.Media.FamilyTypefaceCollection.IsReadOnly\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: FamilyTypefaceCollection.IsReadOnly\n  fullName: System.Windows.Media.FamilyTypefaceCollection.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FamilyTypefaceCollection.Item(System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: FamilyTypefaceCollection.Item(Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Item(Int32)\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypefaceCollection.Remove(System.Windows.Media.FamilyTypeface)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: Remove(FamilyTypeface)\n  nameWithType: FamilyTypefaceCollection.Remove(FamilyTypeface)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.Remove(FamilyTypeface)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FamilyTypeface\n  parent: System.Windows.Media\n  isExternal: false\n  name: FamilyTypeface\n  nameWithType: FamilyTypeface\n  fullName: System.Windows.Media.FamilyTypeface\n- uid: System.Windows.Media.FamilyTypefaceCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: FamilyTypefaceCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: FamilyTypefaceCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: FamilyTypefaceCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: FamilyTypefaceCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: FamilyTypefaceCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.FamilyTypefaceCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.FamilyTypefaceCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: FamilyTypefaceCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.FamilyTypefaceCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}