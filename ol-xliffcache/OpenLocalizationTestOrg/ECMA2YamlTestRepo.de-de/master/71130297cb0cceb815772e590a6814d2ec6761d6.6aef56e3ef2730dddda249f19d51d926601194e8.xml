{"nodes":[{"pos":[1012,1039],"content":"PublisherIdentityPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"PublisherIdentityPermission","pos":[0,27]}]},{"pos":[2557,2601],"content":"PublisherIdentityPermission(X509Certificate)","needQuote":true,"needEscape":true,"nodes":[{"content":"PublisherIdentityPermission(X509Certificate)","pos":[0,44]}]},{"pos":[3158,3192],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3509,3553],"content":"PublisherIdentityPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"PublisherIdentityPermission(PermissionState)","pos":[0,44]}]},{"pos":[4062,4096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4333,4344],"content":"Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate","pos":[0,11]}]},{"pos":[4789,4823],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5046,5052],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[5428,5462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5757,5781],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[6211,6245],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6536,6558],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[7007,7041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7113,7147],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7440,7463],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[7892,7926],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7985,8019],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8244,8251],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[8638,8672],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8955,8973],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[9410,9444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9516,9550],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9684,9720],"content":"System.Security.CodeAccessPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.CodeAccessPermission","pos":[0,36]}]},{"pos":[9947,9991],"content":"PublisherIdentityPermission(X509Certificate)","needQuote":true,"needEscape":true,"nodes":[{"content":"PublisherIdentityPermission(X509Certificate)","pos":[0,44]}]},{"pos":[10347,10362],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[10677,10721],"content":"PublisherIdentityPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"PublisherIdentityPermission(PermissionState)","pos":[0,44]}]},{"pos":[11041,11056],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[11314,11325],"content":"Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"Certificate","pos":[0,11]}]},{"pos":[11615,11630],"content":"X509Certificate","needQuote":true,"needEscape":true,"nodes":[{"content":"X509Certificate","pos":[0,15]}]},{"pos":[11899,11905],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[12121,12132],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[12399,12423],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[12679,12694],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[12967,12989],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[13237,13248],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[13406,13417],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[13683,13706],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[13934,13941],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[14082,14093],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[14325,14332],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[14554,14569],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[14838,14856],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[15096,15107],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[15265,15276],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.PublisherIdentityPermission\n  id: PublisherIdentityPermission\n  children:\n  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.PublisherIdentityPermission.Certificate\n  - System.Security.Permissions.PublisherIdentityPermission.Copy\n  - System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.PublisherIdentityPermission.ToXml\n  - System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: PublisherIdentityPermission\n  nameWithType: PublisherIdentityPermission\n  fullName: System.Security.Permissions.PublisherIdentityPermission\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class PublisherIdentityPermission : System.Security.CodeAccessPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)'\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: PublisherIdentityPermission(X509Certificate)\n  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public PublisherIdentityPermission (System.Security.Cryptography.X509Certificates.X509Certificate certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: PublisherIdentityPermission(PermissionState)\n  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public PublisherIdentityPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate\n  id: Certificate\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: Certificate\n  nameWithType: PublisherIdentityPermission.Certificate\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509Certificate Certificate { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: PublisherIdentityPermission.Copy()\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: PublisherIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: PublisherIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: PublisherIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Permissions\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: PublisherIdentityPermission(X509Certificate)\n  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Security.Permissions.PublisherIdentityPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: PublisherIdentityPermission(PermissionState)\n  nameWithType: PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.PublisherIdentityPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.PublisherIdentityPermission.Certificate\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: Certificate\n  nameWithType: PublisherIdentityPermission.Certificate\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Certificate\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Security.Permissions.PublisherIdentityPermission.Copy\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: PublisherIdentityPermission.Copy()\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.PublisherIdentityPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: PublisherIdentityPermission.FromXml(SecurityElement)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.PublisherIdentityPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: PublisherIdentityPermission.Intersect(IPermission)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Intersect(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: PublisherIdentityPermission.IsSubsetOf(IPermission)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.PublisherIdentityPermission.ToXml\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: PublisherIdentityPermission.ToXml()\n  fullName: System.Security.Permissions.PublisherIdentityPermission.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.PublisherIdentityPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.PublisherIdentityPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: PublisherIdentityPermission.Union(IPermission)\n  fullName: System.Security.Permissions.PublisherIdentityPermission.Union(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n"}