{"nodes":[{"pos":[1166,1176],"content":"GenericAcl","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericAcl","pos":[0,10]}]},{"pos":[1934,1946],"content":"GenericAcl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericAcl()","pos":[0,12]}]},{"pos":[2416,2427],"content":"AclRevision","needQuote":true,"needEscape":true,"nodes":[{"content":"AclRevision","pos":[0,11]}]},{"pos":[2735,2769],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2980,2993],"content":"AclRevisionDS","needQuote":true,"needEscape":true,"nodes":[{"content":"AclRevisionDS","pos":[0,13]}]},{"pos":[3307,3341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3550,3562],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[3877,3911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4222,4248],"content":"CopyTo(GenericAce[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(GenericAce[],Int32)","pos":[0,26]}]},{"pos":[4679,4713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4774,4808],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5003,5008],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[5302,5336],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5603,5630],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[6025,6059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6121,6155],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6366,6381],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[6777,6811],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7024,7038],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[7353,7387],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7608,7619],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[7997,8031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8116,8150],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8365,8380],"content":"MaxBinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxBinaryLength","pos":[0,15]}]},{"pos":[8700,8734],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8935,8943],"content":"Revision","needQuote":true,"needEscape":true,"nodes":[{"content":"Revision","pos":[0,8]}]},{"pos":[9246,9280],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9481,9489],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[9795,9829],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10156,10206],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[10623,10657],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10718,10752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11039,11085],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[11522,11556],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11667,11680],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[11814,11826],"content":"GenericAcl()","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericAcl()","pos":[0,12]}]},{"pos":[12072,12083],"content":"AclRevision","needQuote":true,"needEscape":true,"nodes":[{"content":"AclRevision","pos":[0,11]}]},{"pos":[12252,12256],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[12443,12456],"content":"AclRevisionDS","needQuote":true,"needEscape":true,"nodes":[{"content":"AclRevisionDS","pos":[0,13]}]},{"pos":[12629,12633],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[12819,12831],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[13003,13008],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13247,13273],"content":"CopyTo(GenericAce[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(GenericAce[],Int32)","pos":[0,26]}]},{"pos":[13524,13534],"content":"GenericAce","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericAce","pos":[0,10]}]},{"pos":[13682,13687],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13868,13873],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[14031,14036],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14253,14280],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[14481,14485],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[14598,14603],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[14792,14807],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[15039,15052],"content":"AceEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"AceEnumerator","pos":[0,13]}]},{"pos":[15281,15295],"content":"IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSynchronized","pos":[0,14]}]},{"pos":[15473,15480],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15678,15689],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[15910,15920],"content":"GenericAce","needQuote":true,"needEscape":true,"nodes":[{"content":"GenericAce","pos":[0,10]}]},{"pos":[16066,16071],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16262,16277],"content":"MaxBinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxBinaryLength","pos":[0,15]}]},{"pos":[16455,16460],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16644,16652],"content":"Revision","needQuote":true,"needEscape":true,"nodes":[{"content":"Revision","pos":[0,8]}]},{"pos":[16815,16819],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[17001,17009],"content":"SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncRoot","pos":[0,8]}]},{"pos":[17174,17180],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[17422,17472],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[17720,17725],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[17838,17843],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18063,18109],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[18379,18390],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.GenericAcl\n  id: GenericAcl\n  children:\n  - System.Security.AccessControl.GenericAcl.#ctor\n  - System.Security.AccessControl.GenericAcl.AclRevision\n  - System.Security.AccessControl.GenericAcl.AclRevisionDS\n  - System.Security.AccessControl.GenericAcl.BinaryLength\n  - System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  - System.Security.AccessControl.GenericAcl.Count\n  - System.Security.AccessControl.GenericAcl.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAcl.GetEnumerator\n  - System.Security.AccessControl.GenericAcl.IsSynchronized\n  - System.Security.AccessControl.GenericAcl.Item(System.Int32)\n  - System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  - System.Security.AccessControl.GenericAcl.Revision\n  - System.Security.AccessControl.GenericAcl.SyncRoot\n  - System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: GenericAcl\n  nameWithType: GenericAcl\n  fullName: System.Security.AccessControl.GenericAcl\n  type: Class\n  syntax:\n    content: 'public abstract class GenericAcl : System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.#ctor\n  id: '#ctor'\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: GenericAcl()\n  nameWithType: GenericAcl.GenericAcl()\n  fullName: System.Security.AccessControl.GenericAcl.GenericAcl()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: protected GenericAcl ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.AclRevision\n  id: AclRevision\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: AclRevision\n  nameWithType: GenericAcl.AclRevision\n  fullName: System.Security.AccessControl.GenericAcl.AclRevision\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public static readonly byte AclRevision;\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  id: AclRevisionDS\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: AclRevisionDS\n  nameWithType: GenericAcl.AclRevisionDS\n  fullName: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public static readonly byte AclRevisionDS;\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: GenericAcl.BinaryLength\n  fullName: System.Security.AccessControl.GenericAcl.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public abstract int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  id: CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: CopyTo(GenericAce[],Int32)\n  nameWithType: GenericAcl.CopyTo(GenericAce[],Int32)\n  fullName: System.Security.AccessControl.GenericAcl.CopyTo(GenericAce[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public void CopyTo (System.Security.AccessControl.GenericAce[] array, int index);\n    parameters:\n    - id: array\n      type: System.Security.AccessControl.GenericAce[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.Count\n  id: Count\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: Count\n  nameWithType: GenericAcl.Count\n  fullName: System.Security.AccessControl.GenericAcl.Count\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public abstract int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: GenericAcl.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.GenericAcl.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public abstract void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n  id: GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: GenericAcl.GetEnumerator()\n  fullName: System.Security.AccessControl.GenericAcl.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.AceEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Security.AccessControl.AceEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.IsSynchronized\n  id: IsSynchronized\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: IsSynchronized\n  nameWithType: GenericAcl.IsSynchronized\n  fullName: System.Security.AccessControl.GenericAcl.IsSynchronized\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public bool IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: GenericAcl.Item(Int32)\n  fullName: System.Security.AccessControl.GenericAcl.Item(Int32)\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public abstract System.Security.AccessControl.GenericAce this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Security.AccessControl.GenericAce\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  id: MaxBinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: MaxBinaryLength\n  nameWithType: GenericAcl.MaxBinaryLength\n  fullName: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public static readonly int MaxBinaryLength;\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.Revision\n  id: Revision\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: Revision\n  nameWithType: GenericAcl.Revision\n  fullName: System.Security.AccessControl.GenericAcl.Revision\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public abstract byte Revision { get; }\n    return:\n      type: System.Byte\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.SyncRoot\n  id: SyncRoot\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: SyncRoot\n  nameWithType: GenericAcl.SyncRoot\n  fullName: System.Security.AccessControl.GenericAcl.SyncRoot\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public virtual object SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: GenericAcl.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Security.AccessControl.GenericAcl\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: GenericAcl.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.AccessControl.GenericAcl.#ctor\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: GenericAcl()\n  nameWithType: GenericAcl.GenericAcl()\n  fullName: System.Security.AccessControl.GenericAcl.GenericAcl()\n- uid: System.Security.AccessControl.GenericAcl.AclRevision\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevision\n  nameWithType: GenericAcl.AclRevision\n  fullName: System.Security.AccessControl.GenericAcl.AclRevision\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Security.AccessControl.GenericAcl.AclRevisionDS\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: AclRevisionDS\n  nameWithType: GenericAcl.AclRevisionDS\n  fullName: System.Security.AccessControl.GenericAcl.AclRevisionDS\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Security.AccessControl.GenericAcl.BinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: BinaryLength\n  nameWithType: GenericAcl.BinaryLength\n  fullName: System.Security.AccessControl.GenericAcl.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.CopyTo(System.Security.AccessControl.GenericAce[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: CopyTo(GenericAce[],Int32)\n  nameWithType: GenericAcl.CopyTo(GenericAce[],Int32)\n  fullName: System.Security.AccessControl.GenericAcl.CopyTo(GenericAce[],Int32)\n- uid: System.Security.AccessControl.GenericAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAce\n  nameWithType: GenericAce\n  fullName: System.Security.AccessControl.GenericAce[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.Count\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: Count\n  nameWithType: GenericAcl.Count\n  fullName: System.Security.AccessControl.GenericAcl.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: GenericAcl.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.GenericAcl.GetBinaryForm(Byte[],Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: GenericAcl.GetEnumerator()\n  fullName: System.Security.AccessControl.GenericAcl.GetEnumerator()\n- uid: System.Security.AccessControl.AceEnumerator\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceEnumerator\n  nameWithType: AceEnumerator\n  fullName: System.Security.AccessControl.AceEnumerator\n- uid: System.Security.AccessControl.GenericAcl.IsSynchronized\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: GenericAcl.IsSynchronized\n  fullName: System.Security.AccessControl.GenericAcl.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.GenericAcl.Item(System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: GenericAcl.Item(Int32)\n  fullName: System.Security.AccessControl.GenericAcl.Item(Int32)\n- uid: System.Security.AccessControl.GenericAce\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: GenericAce\n  nameWithType: GenericAce\n  fullName: System.Security.AccessControl.GenericAce\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: MaxBinaryLength\n  nameWithType: GenericAcl.MaxBinaryLength\n  fullName: System.Security.AccessControl.GenericAcl.MaxBinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.Revision\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: Revision\n  nameWithType: GenericAcl.Revision\n  fullName: System.Security.AccessControl.GenericAcl.Revision\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Security.AccessControl.GenericAcl.SyncRoot\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: SyncRoot\n  nameWithType: GenericAcl.SyncRoot\n  fullName: System.Security.AccessControl.GenericAcl.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: GenericAcl.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Security.AccessControl.GenericAcl.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.GenericAcl.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Security.AccessControl.GenericAcl\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: GenericAcl.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Security.AccessControl.GenericAcl.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n"}