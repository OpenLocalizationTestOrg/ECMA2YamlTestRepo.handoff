{"nodes":[{"pos":[8436,8440],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[9416,9428],"content":"Task(Action)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action)","pos":[0,12]}]},{"pos":[9729,9763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10034,10064],"content":"Task(Action,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action,CancellationToken)","pos":[0,30]}]},{"pos":[10455,10489],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10584,10618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10905,10937],"content":"Task(Action,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action,TaskCreationOptions)","pos":[0,32]}]},{"pos":[11338,11372],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11473,11507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11766,11793],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object)"},{"pos":[12161,12195],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12257,12291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12648,12698],"content":"Task(Action,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action,CancellationToken,TaskCreationOptions)","pos":[0,50]}]},{"pos":[13189,13223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13318,13352],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13453,13487],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13816,13861],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object,CancellationToken)"},{"pos":[14319,14353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14415,14449],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14544,14578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14923,14970],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object,TaskCreationOptions)"},{"pos":[15438,15472],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15534,15568],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15669,15703],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16118,16183],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)"},{"pos":[16741,16775],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16837,16871],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16966,17000],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17101,17135],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17314,17324],"content":"AsyncState","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncState","pos":[0,10]}]},{"pos":[17602,17636],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17821,17834],"content":"CompletedTask","needQuote":true,"needEscape":true,"nodes":[{"content":"CompletedTask","pos":[0,13]}]},{"pos":[18163,18197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18416,18439],"content":"ConfigureAwait(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigureAwait(Boolean)","pos":[0,23]}]},{"pos":[18860,18894],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18994,19028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19299,19325],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>)"},{"pos":[19767,19801],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19873,19907],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20288,20328],"content":"ContinueWith(Action<Task,Object>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object)","pos":[0,40],"source":"ContinueWith(Action<Task,Object>,Object)"}]},{"pos":[20833,20867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20929,20963],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21035,21069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21464,21508],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,CancellationToken)"},{"pos":[22040,22074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22169,22203],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22275,22309],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22728,22778],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,TaskContinuationOptions)"},{"pos":[23336,23370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23479,23513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23585,23619],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24018,24058],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,TaskScheduler)"},{"pos":[24576,24610],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24699,24733],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24805,24839],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25290,25348],"content":"ContinueWith(Action<Task,Object>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,CancellationToken)","pos":[0,58],"source":"ContinueWith(Action<Task,Object>,Object,CancellationToken)"}]},{"pos":[25943,25977],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26039,26073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26168,26202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26274,26308],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26783,26847],"content":"ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,TaskContinuationOptions)","pos":[0,64],"source":"ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)"}]},{"pos":[27468,27502],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27564,27598],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27707,27741],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27813,27847],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28302,28356],"content":"ContinueWith(Action<Task,Object>,Object,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,TaskScheduler)","pos":[0,54],"source":"ContinueWith(Action<Task,Object>,Object,TaskScheduler)"}]},{"pos":[28937,28971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29033,29067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29156,29190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29262,29296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29859,29941],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[30665,30699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30794,30828],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30937,30971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31060,31094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31166,31200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31819,31915],"content":"ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,96],"source":"ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[32702,32736],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32798,32832],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32927,32961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33070,33104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33193,33227],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33299,33333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33668,33700],"content":"ContinueWith(Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;)","pos":[0,32],"source":"ContinueWith(Func<Task,TResult>)"}]},{"pos":[34188,34222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34296,34330],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34730,34776],"content":"ContinueWith(Func<Task,Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object)","pos":[0,46],"source":"ContinueWith(Func<Task,Object,TResult>,Object)"}]},{"pos":[35327,35361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35423,35457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35531,35565],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35979,36029],"content":"ContinueWith(Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,50],"source":"ContinueWith(Func<Task,TResult>,CancellationToken)"}]},{"pos":[36607,36641],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36736,36770],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36844,36878],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37316,37372],"content":"ContinueWith(Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,56],"source":"ContinueWith(Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[37976,38010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38119,38153],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38227,38261],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38679,38725],"content":"ContinueWith(Func<Task,TResult>,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,TaskScheduler)","pos":[0,46],"source":"ContinueWith(Func<Task,TResult>,TaskScheduler)"}]},{"pos":[39289,39323],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39412,39446],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39520,39554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40024,40088],"content":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,CancellationToken)","pos":[0,64],"source":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)"}]},{"pos":[40729,40763],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40825,40859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40954,40988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41062,41096],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41590,41660],"content":"ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,TaskContinuationOptions)","pos":[0,70],"source":"ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)"}]},{"pos":[42327,42361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42423,42457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42566,42600],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[42674,42708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43182,43242],"content":"ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,TaskScheduler)","pos":[0,60],"source":"ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)"}]},{"pos":[43869,43903],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[43965,43999],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44088,44122],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44196,44230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[44812,44900],"content":"ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,88],"source":"ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[45670,45704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45799,45833],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[45942,45976],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46065,46099],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46173,46207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[46845,46947],"content":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,102],"source":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[47780,47814],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[47876,47910],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48005,48039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48148,48182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48271,48305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48379,48413],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[48665,48680],"content":"CreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CreationOptions","pos":[0,15]}]},{"pos":[49038,49072],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49249,49258],"content":"CurrentId","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentId","pos":[0,9]}]},{"pos":[49563,49597],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[49794,49806],"content":"Delay(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(Int32)","pos":[0,12]}]},{"pos":[50156,50190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50262,50296],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[50546,50561],"content":"Delay(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(TimeSpan)","pos":[0,15]}]},{"pos":[50901,50935],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51007,51041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51355,51385],"content":"Delay(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(Int32,CancellationToken)","pos":[0,30]}]},{"pos":[51825,51859],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[51954,51988],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52060,52094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[52414,52447],"content":"Delay(TimeSpan,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(TimeSpan,CancellationToken)","pos":[0,33]}]},{"pos":[52877,52911],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53006,53040],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53112,53146],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[53366,53375],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[53854,53870],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[54198,54232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54458,54467],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[54766,54800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[54973,54980],"content":"Factory","needQuote":true,"needEscape":true,"nodes":[{"content":"Factory","pos":[0,7]}]},{"pos":[55305,55339],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[55594,55625],"content":"FromCanceled(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromCanceled(CancellationToken)","pos":[0,31]}]},{"pos":[56073,56107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56179,56213],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[56474,56505],"content":"FromCanceled(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromCanceled(CancellationToken)","pos":[0,31]}]},{"pos":[56971,57005],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57079,57113],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57334,57358],"content":"FromException(Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromException(Exception)","pos":[0,24]}]},{"pos":[57734,57768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[57840,57874],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58101,58125],"content":"FromException(Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromException(Exception)","pos":[0,24]}]},{"pos":[58519,58553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58627,58661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[58856,58875],"content":"FromResult(TResult)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromResult(TResult)","pos":[0,19]}]},{"pos":[59239,59273],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59347,59381],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[59560,59572],"content":"GetAwaiter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAwaiter()","pos":[0,12]}]},{"pos":[59933,59967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60130,60132],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[60382,60416],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[60595,60605],"content":"IsCanceled","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCanceled","pos":[0,10]}]},{"pos":[60882,60916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61097,61108],"content":"IsCompleted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCompleted","pos":[0,11]}]},{"pos":[61388,61422],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[61599,61608],"content":"IsFaulted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFaulted","pos":[0,9]}]},{"pos":[61882,61916],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62111,62122],"content":"Run(Action)","needQuote":true,"needEscape":true,"nodes":[{"content":"Run(Action)","pos":[0,11]}]},{"pos":[62450,62484],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62556,62590],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[62884,62899],"content":"Run(Func<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Run(Func<Task>)"},{"pos":[63293,63327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63399,63433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[63743,63772],"content":"Run(Action,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Run(Action,CancellationToken)","pos":[0,29]}]},{"pos":[64190,64224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64319,64353],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64425,64459],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[64823,64856],"content":"Run(Func<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"Run(Func<Task>,CancellationToken)"},{"pos":[65340,65374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65469,65503],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65575,65609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[65919,65943],"content":"Run(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Run(Func<Task<TResult>>)"},{"pos":[66391,66425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66499,66533],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[66794,66812],"content":"Run(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Run(Func<TResult>)"},{"pos":[67190,67224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67298,67332],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[67721,67763],"content":"Run(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"Run(Func<Task<TResult>>,CancellationToken)"},{"pos":[68301,68335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68430,68464],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68538,68572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[68903,68939],"content":"Run(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"Run(Func<TResult>,CancellationToken)"},{"pos":[69407,69441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69536,69570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69644,69678],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[69923,69941],"content":"RunSynchronously()","needQuote":true,"needEscape":true,"nodes":[{"content":"RunSynchronously()","pos":[0,18]}]},{"pos":[70518,70549],"content":"RunSynchronously(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"RunSynchronously(TaskScheduler)","pos":[0,31]}]},{"pos":[70959,70993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[71220,71227],"content":"Start()","needQuote":true,"needEscape":true,"nodes":[{"content":"Start()","pos":[0,7]}]},{"pos":[71738,71758],"content":"Start(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"Start(TaskScheduler)","pos":[0,20]}]},{"pos":[72135,72169],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72387,72393],"content":"Status","needQuote":true,"needEscape":true,"nodes":[{"content":"Status","pos":[0,6]}]},{"pos":[72706,72740],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[72983,73018],"content":"System.IAsyncResult.AsyncWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IAsyncResult.AsyncWaitHandle","pos":[0,35]}]},{"pos":[73399,73433],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[73690,73732],"content":"System.IAsyncResult.CompletedSynchronously","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IAsyncResult.CompletedSynchronously","pos":[0,42]}]},{"pos":[74098,74132],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[74299,74305],"content":"Wait()","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait()","pos":[0,6]}]},{"pos":[74762,74773],"content":"Wait(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32)","pos":[0,11]}]},{"pos":[75094,75128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75187,75221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[75506,75529],"content":"Wait(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(CancellationToken)","pos":[0,23]}]},{"pos":[75923,75957],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76204,76218],"content":"Wait(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(TimeSpan)","pos":[0,14]}]},{"pos":[76529,76563],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76622,76656],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[76967,76996],"content":"Wait(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32,CancellationToken)","pos":[0,29]}]},{"pos":[77407,77441],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77536,77570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77629,77663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[77944,77959],"content":"WaitAll(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[])","pos":[0,15]}]},{"pos":[78313,78347],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[78657,78678],"content":"WaitAll(Task[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],Int32)","pos":[0,21]}]},{"pos":[79069,79103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79178,79212],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79271,79305],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[79659,79692],"content":"WaitAll(Task[],CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],CancellationToken)","pos":[0,33]}]},{"pos":[80136,80170],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80265,80299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[80615,80639],"content":"WaitAll(Task[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],TimeSpan)","pos":[0,24]}]},{"pos":[81029,81063],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81129,81163],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81222,81256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[81636,81675],"content":"WaitAll(Task[],Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],Int32,CancellationToken)","pos":[0,39]}]},{"pos":[82156,82190],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82265,82299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82394,82428],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82487,82521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[82805,82820],"content":"WaitAny(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[])","pos":[0,15]}]},{"pos":[83173,83207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83264,83298],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[83608,83629],"content":"WaitAny(Task[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],Int32)","pos":[0,21]}]},{"pos":[84019,84053],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84128,84162],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84219,84253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[84607,84640],"content":"WaitAny(Task[],CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],CancellationToken)","pos":[0,33]}]},{"pos":[85083,85117],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85212,85246],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85303,85337],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[85653,85677],"content":"WaitAny(Task[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],TimeSpan)","pos":[0,24]}]},{"pos":[86066,86100],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86166,86200],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86257,86291],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[86671,86710],"content":"WaitAny(Task[],Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],Int32,CancellationToken)","pos":[0,39]}]},{"pos":[87190,87224],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87299,87333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87428,87462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87519,87553],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[87913,87939],"content":"WhenAll(IEnumerable<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAll(IEnumerable<Task>)"},{"pos":[88414,88448],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88520,88554],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[88838,88853],"content":"WhenAll(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WhenAll(Task[])","pos":[0,15]}]},{"pos":[89230,89264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89336,89370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[89746,89781],"content":"WhenAll(IEnumerable&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"WhenAll(IEnumerable<Task<TResult>>)"},{"pos":[90312,90346],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90427,90461],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[90770,90792],"content":"WhenAll(Task<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAll(Task<TResult>)"},{"pos":[91219,91253],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91334,91368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[91737,91763],"content":"WhenAny(IEnumerable<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAny(IEnumerable<Task>)"},{"pos":[92267,92301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92402,92436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[92720,92735],"content":"WhenAny(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WhenAny(Task[])","pos":[0,15]}]},{"pos":[93141,93175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93276,93310],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[93686,93721],"content":"WhenAny(IEnumerable&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"WhenAny(IEnumerable<Task<TResult>>)"},{"pos":[94279,94313],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94423,94457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[94766,94788],"content":"WhenAny(Task<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAny(Task<TResult>)"},{"pos":[95242,95276],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95386,95420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[95647,95654],"content":"Yield()","needQuote":true,"needEscape":true,"nodes":[{"content":"Yield()","pos":[0,7]}]},{"pos":[96013,96047],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[96158,96171],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[96294,96306],"content":"Task(Action)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action)","pos":[0,12]}]},{"pos":[96459,96465],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[96672,96702],"content":"Task(Action,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action,CancellationToken)","pos":[0,30]}]},{"pos":[96891,96897],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[97044,97061],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[97308,97340],"content":"Task(Action,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action,TaskCreationOptions)","pos":[0,32]}]},{"pos":[97533,97539],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[97700,97719],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[97962,97989],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object)"},{"pos":[98188,98202],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[98341,98347],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[98597,98647],"content":"Task(Action,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"Task(Action,CancellationToken,TaskCreationOptions)","pos":[0,50]}]},{"pos":[98876,98882],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[99029,99046],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[99239,99258],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[99536,99581],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object,CancellationToken)"},{"pos":[99816,99830],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[99969,99975],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[100122,100139],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[100415,100462],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object,TaskCreationOptions)"},{"pos":[100701,100715],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[100854,100860],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[101021,101040],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[101361,101426],"content":"Task(Action<ph id=\"ph1\">&lt;Object&gt;</ph>,Object,CancellationToken,TaskCreationOptions)","needQuote":true,"needEscape":true,"source":"Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)"},{"pos":[101701,101715],"content":"Action<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Object>"},{"pos":[101854,101860],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[102007,102024],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[102217,102236],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[102440,102450],"content":"AsyncState","needQuote":true,"needEscape":true,"nodes":[{"content":"AsyncState","pos":[0,10]}]},{"pos":[102600,102606],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[102771,102784],"content":"CompletedTask","needQuote":true,"needEscape":true,"nodes":[{"content":"CompletedTask","pos":[0,13]}]},{"pos":[102970,102974],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[103168,103191],"content":"ConfigureAwait(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigureAwait(Boolean)","pos":[0,23]}]},{"pos":[103434,103457],"content":"ConfiguredTaskAwaitable","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfiguredTaskAwaitable","pos":[0,23]}]},{"pos":[103633,103640],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[103850,103876],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>)"},{"pos":[104088,104092],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[104249,104261],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[104532,104572],"content":"ContinueWith(Action<Task,Object>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object)","pos":[0,40],"source":"ContinueWith(Action<Task,Object>,Object)"}]},{"pos":[104812,104816],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[104986,105005],"content":"Action<Task,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Task,Object&gt;","pos":[0,19],"source":"Action<Task,Object>"}]},{"pos":[105177,105183],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[105426,105470],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,CancellationToken)"},{"pos":[105718,105722],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[105879,105891],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[106073,106090],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[106377,106427],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,TaskContinuationOptions)"},{"pos":[106687,106691],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[106848,106860],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[107060,107083],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[107378,107418],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,TaskScheduler)"},{"pos":[107658,107662],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[107819,107831],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[108021,108034],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[108335,108393],"content":"ContinueWith(Action<Task,Object>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,CancellationToken)","pos":[0,58],"source":"ContinueWith(Action<Task,Object>,Object,CancellationToken)"}]},{"pos":[108669,108673],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[108843,108862],"content":"Action<Task,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Task,Object&gt;","pos":[0,19],"source":"Action<Task,Object>"}]},{"pos":[109034,109040],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[109187,109204],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[109519,109583],"content":"ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,TaskContinuationOptions)","pos":[0,64],"source":"ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)"}]},{"pos":[109871,109875],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[110045,110064],"content":"Action<Task,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Task,Object&gt;","pos":[0,19],"source":"Action<Task,Object>"}]},{"pos":[110236,110242],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[110407,110430],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[110753,110807],"content":"ContinueWith(Action<Task,Object>,Object,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,TaskScheduler)","pos":[0,54],"source":"ContinueWith(Action<Task,Object>,Object,TaskScheduler)"}]},{"pos":[111075,111079],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[111249,111268],"content":"Action<Task,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Task,Object&gt;","pos":[0,19],"source":"Action<Task,Object>"}]},{"pos":[111440,111446],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[111601,111614],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[111971,112053],"content":"ContinueWith(Action<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"source":"ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)"},{"pos":[112377,112381],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[112538,112550],"content":"Action<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Action<Task>"},{"pos":[112732,112749],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[112946,112969],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[113174,113187],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[113572,113668],"content":"ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Action&lt;Task,Object&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,96],"source":"ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[114020,114024],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[114194,114213],"content":"Action<Task,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"Action&lt;Task,Object&gt;","pos":[0,19],"source":"Action<Task,Object>"}]},{"pos":[114385,114391],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[114538,114555],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[114752,114775],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[114980,114993],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[115236,115268],"content":"ContinueWith(Func<Task,TResult>)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;)","pos":[0,32],"source":"ContinueWith(Func<Task,TResult>)"}]},{"pos":[115494,115507],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[115687,115705],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[115993,116039],"content":"ContinueWith(Func<Task,Object,TResult>,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object)","pos":[0,46],"source":"ContinueWith(Func<Task,Object,TResult>,Object)"}]},{"pos":[116293,116306],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[116500,116525],"content":"Func<Task,Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,Object,TResult&gt;","pos":[0,25],"source":"Func<Task,Object,TResult>"}]},{"pos":[116709,116715],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[116963,117013],"content":"ContinueWith(Func<Task,TResult>,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,CancellationToken)","pos":[0,50],"source":"ContinueWith(Func<Task,TResult>,CancellationToken)"}]},{"pos":[117275,117288],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[117468,117486],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[117680,117697],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[117989,118045],"content":"ContinueWith(Func<Task,TResult>,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,TaskContinuationOptions)","pos":[0,56],"source":"ContinueWith(Func<Task,TResult>,TaskContinuationOptions)"}]},{"pos":[118319,118332],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[118512,118530],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[118742,118765],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[119065,119111],"content":"ContinueWith(Func<Task,TResult>,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,TaskScheduler)","pos":[0,46],"source":"ContinueWith(Func<Task,TResult>,TaskScheduler)"}]},{"pos":[119365,119378],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[119558,119576],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[119778,119791],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[120097,120161],"content":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,CancellationToken)","pos":[0,64],"source":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)"}]},{"pos":[120451,120464],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[120658,120683],"content":"Func<Task,Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,Object,TResult&gt;","pos":[0,25],"source":"Func<Task,Object,TResult>"}]},{"pos":[120867,120873],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[121020,121037],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[121357,121427],"content":"ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,TaskContinuationOptions)","pos":[0,70],"source":"ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)"}]},{"pos":[121729,121742],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[121936,121961],"content":"Func<Task,Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,Object,TResult&gt;","pos":[0,25],"source":"Func<Task,Object,TResult>"}]},{"pos":[122145,122151],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[122316,122339],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[122667,122727],"content":"ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,TaskScheduler)","pos":[0,60],"source":"ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)"}]},{"pos":[123009,123022],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[123216,123241],"content":"Func<Task,Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,Object,TResult&gt;","pos":[0,25],"source":"Func<Task,Object,TResult>"}]},{"pos":[123425,123431],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[123586,123599],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[123961,124049],"content":"ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,TResult&gt;,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,88],"source":"ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[124387,124400],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[124580,124598],"content":"Func<Task,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,TResult&gt;","pos":[0,18],"source":"Func<Task,TResult>"}]},{"pos":[124792,124809],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[125006,125029],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[125234,125247],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[125637,125739],"content":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"ContinueWith(Func&lt;Task,Object,TResult&gt;,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)","pos":[0,102],"source":"ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)"}]},{"pos":[126105,126118],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[126312,126337],"content":"Func<Task,Object,TResult>","needQuote":true,"needEscape":true,"nodes":[{"content":"Func&lt;Task,Object,TResult&gt;","pos":[0,25],"source":"Func<Task,Object,TResult>"}]},{"pos":[126521,126527],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[126674,126691],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[126888,126911],"content":"TaskContinuationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskContinuationOptions","pos":[0,23]}]},{"pos":[127116,127129],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[127326,127341],"content":"CreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"CreationOptions","pos":[0,15]}]},{"pos":[127546,127565],"content":"TaskCreationOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskCreationOptions","pos":[0,19]}]},{"pos":[127768,127777],"content":"CurrentId","needQuote":true,"needEscape":true,"nodes":[{"content":"CurrentId","pos":[0,9]}]},{"pos":[127941,127956],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[128152,128164],"content":"Delay(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(Int32)","pos":[0,12]}]},{"pos":[128348,128352],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[128479,128484],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[128656,128671],"content":"Delay(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(TimeSpan)","pos":[0,15]}]},{"pos":[128861,128865],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[128995,129003],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[129213,129243],"content":"Delay(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(Int32,CancellationToken)","pos":[0,30]}]},{"pos":[129463,129467],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[129594,129599],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[129744,129761],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[130002,130035],"content":"Delay(TimeSpan,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Delay(TimeSpan,CancellationToken)","pos":[0,33]}]},{"pos":[130261,130265],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[130395,130403],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[130554,130571],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[130762,130771],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[130978,130994],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[131157,131164],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[131327,131336],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[131496,131514],"content":"AggregateException","needQuote":true,"needEscape":true,"nodes":[{"content":"AggregateException","pos":[0,18]}]},{"pos":[131697,131704],"content":"Factory","needQuote":true,"needEscape":true,"nodes":[{"content":"Factory","pos":[0,7]}]},{"pos":[131885,131896],"content":"TaskFactory","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskFactory","pos":[0,11]}]},{"pos":[132122,132153],"content":"FromCanceled(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromCanceled(CancellationToken)","pos":[0,31]}]},{"pos":[132375,132379],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[132538,132555],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[132790,132821],"content":"FromCanceled(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromCanceled(CancellationToken)","pos":[0,31]}]},{"pos":[133045,133058],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[133235,133252],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[133467,133491],"content":"FromException(Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromException(Exception)","pos":[0,24]}]},{"pos":[133699,133703],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[133834,133843],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[134035,134059],"content":"FromException(Exception)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromException(Exception)","pos":[0,24]}]},{"pos":[134269,134282],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[134431,134440],"content":"Exception","needQuote":true,"needEscape":true,"nodes":[{"content":"Exception","pos":[0,9]}]},{"pos":[134616,134635],"content":"FromResult(TResult)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromResult(TResult)","pos":[0,19]}]},{"pos":[134835,134848],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[134983,134990],"content":"TResult","needQuote":true,"needEscape":true,"nodes":[{"content":"TResult","pos":[0,7]}]},{"pos":[135147,135159],"content":"GetAwaiter()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAwaiter()","pos":[0,12]}]},{"pos":[135368,135379],"content":"TaskAwaiter","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskAwaiter","pos":[0,11]}]},{"pos":[135568,135570],"content":"Id","needQuote":true,"needEscape":true,"nodes":[{"content":"Id","pos":[0,2]}]},{"pos":[135703,135708],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[135868,135878],"content":"IsCanceled","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCanceled","pos":[0,10]}]},{"pos":[136029,136036],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136201,136212],"content":"IsCompleted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsCompleted","pos":[0,11]}]},{"pos":[136365,136372],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136535,136544],"content":"IsFaulted","needQuote":true,"needEscape":true,"nodes":[{"content":"IsFaulted","pos":[0,9]}]},{"pos":[136693,136700],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[136872,136883],"content":"Run(Action)","needQuote":true,"needEscape":true,"nodes":[{"content":"Run(Action)","pos":[0,11]}]},{"pos":[137065,137069],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[137196,137202],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[137399,137414],"content":"Run(Func<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Run(Func<Task>)"},{"pos":[137604,137608],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[137762,137772],"content":"Func<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<Task>"},{"pos":[138008,138037],"content":"Run(Action,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Run(Action,CancellationToken)","pos":[0,29]}]},{"pos":[138255,138259],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[138386,138392],"content":"Action","needQuote":true,"needEscape":true,"nodes":[{"content":"Action","pos":[0,6]}]},{"pos":[138539,138556],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[138820,138853],"content":"Run(Func<ph id=\"ph1\">&lt;Task&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"Run(Func<Task>,CancellationToken)"},{"pos":[139079,139083],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[139237,139247],"content":"Func<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<Task>"},{"pos":[139425,139442],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[139679,139703],"content":"Run(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"Run(Func<Task<TResult>>)"},{"pos":[139913,139926],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[140107,140126],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>>"},{"pos":[140351,140369],"content":"Run(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Run(Func<TResult>)"},{"pos":[140567,140580],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[140732,140745],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[140999,141041],"content":"Run(Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;,CancellationToken)","needQuote":true,"needEscape":true,"source":"Run(Func<Task<TResult>>,CancellationToken)"},{"pos":[141287,141300],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[141481,141500],"content":"Func&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<Task<TResult>>"},{"pos":[141696,141713],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[141956,141992],"content":"Run(Func<ph id=\"ph1\">&lt;TResult&gt;</ph>,CancellationToken)","needQuote":true,"needEscape":true,"source":"Run(Func<TResult>,CancellationToken)"},{"pos":[142226,142239],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[142391,142404],"content":"Func<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Func<TResult>"},{"pos":[142565,142582],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[142782,142800],"content":"RunSynchronously()","needQuote":true,"needEscape":true,"nodes":[{"content":"RunSynchronously()","pos":[0,18]}]},{"pos":[143056,143087],"content":"RunSynchronously(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"RunSynchronously(TaskScheduler)","pos":[0,31]}]},{"pos":[143318,143331],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[143518,143525],"content":"Start()","needQuote":true,"needEscape":true,"nodes":[{"content":"Start()","pos":[0,7]}]},{"pos":[143748,143768],"content":"Start(TaskScheduler)","needQuote":true,"needEscape":true,"nodes":[{"content":"Start(TaskScheduler)","pos":[0,20]}]},{"pos":[143977,143990],"content":"TaskScheduler","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskScheduler","pos":[0,13]}]},{"pos":[144178,144184],"content":"Status","needQuote":true,"needEscape":true,"nodes":[{"content":"Status","pos":[0,6]}]},{"pos":[144362,144372],"content":"TaskStatus","needQuote":true,"needEscape":true,"nodes":[{"content":"TaskStatus","pos":[0,10]}]},{"pos":[144583,144618],"content":"System.IAsyncResult.AsyncWaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IAsyncResult.AsyncWaitHandle","pos":[0,35]}]},{"pos":[144842,144852],"content":"WaitHandle","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitHandle","pos":[0,10]}]},{"pos":[145064,145106],"content":"System.IAsyncResult.CompletedSynchronously","needQuote":true,"needEscape":true,"nodes":[{"content":"System.IAsyncResult.CompletedSynchronously","pos":[0,42]}]},{"pos":[145321,145328],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[145486,145492],"content":"Wait()","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait()","pos":[0,6]}]},{"pos":[145688,145699],"content":"Wait(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32)","pos":[0,11]}]},{"pos":[145852,145859],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[145976,145981],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[146171,146194],"content":"Wait(CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(CancellationToken)","pos":[0,23]}]},{"pos":[146401,146418],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[146623,146637],"content":"Wait(TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(TimeSpan)","pos":[0,14]}]},{"pos":[146796,146803],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[146923,146931],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[147140,147169],"content":"Wait(Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Wait(Int32,CancellationToken)","pos":[0,29]}]},{"pos":[147358,147365],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[147482,147487],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[147632,147649],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[147871,147886],"content":"WaitAll(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[])","pos":[0,15]}]},{"pos":[148076,148080],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[148297,148318],"content":"WaitAll(Task[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],Int32)","pos":[0,21]}]},{"pos":[148491,148498],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[148646,148650],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[148779,148784],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[149007,149040],"content":"WaitAll(Task[],CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],CancellationToken)","pos":[0,33]}]},{"pos":[149266,149270],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[149431,149448],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[149686,149710],"content":"WaitAll(Task[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],TimeSpan)","pos":[0,24]}]},{"pos":[149889,149896],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[150044,150048],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[150180,150188],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[150430,150469],"content":"WaitAll(Task[],Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAll(Task[],Int32,CancellationToken)","pos":[0,39]}]},{"pos":[150678,150685],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[150833,150837],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[150966,150971],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[151116,151133],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[151355,151370],"content":"WaitAny(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[])","pos":[0,15]}]},{"pos":[151529,151534],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[151678,151682],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[151899,151920],"content":"WaitAny(Task[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],Int32)","pos":[0,21]}]},{"pos":[152091,152096],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152240,152244],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[152373,152378],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152601,152634],"content":"WaitAny(Task[],CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],CancellationToken)","pos":[0,33]}]},{"pos":[152829,152834],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[152978,152982],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[153143,153160],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[153398,153422],"content":"WaitAny(Task[],TimeSpan)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],TimeSpan)","pos":[0,24]}]},{"pos":[153599,153604],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[153748,153752],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[153884,153892],"content":"TimeSpan","needQuote":true,"needEscape":true,"nodes":[{"content":"TimeSpan","pos":[0,8]}]},{"pos":[154134,154173],"content":"WaitAny(Task[],Int32,CancellationToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"WaitAny(Task[],Int32,CancellationToken)","pos":[0,39]}]},{"pos":[154380,154385],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[154529,154533],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[154662,154667],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[154812,154829],"content":"CancellationToken","needQuote":true,"needEscape":true,"nodes":[{"content":"CancellationToken","pos":[0,17]}]},{"pos":[155089,155115],"content":"WhenAll(IEnumerable<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAll(IEnumerable<Task>)"},{"pos":[155327,155331],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[155533,155550],"content":"IEnumerable<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Task>"},{"pos":[155805,155820],"content":"WhenAll(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WhenAll(Task[])","pos":[0,15]}]},{"pos":[156010,156014],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[156172,156176],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[156426,156461],"content":"WhenAll(IEnumerable&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"WhenAll(IEnumerable<Task<TResult>>)"},{"pos":[156700,156713],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[156944,156970],"content":"IEnumerable&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Task<TResult>>"},{"pos":[157251,157273],"content":"WhenAll(Task<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAll(Task<TResult>)"},{"pos":[157486,157499],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[157686,157699],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[157959,157985],"content":"WhenAny(IEnumerable<ph id=\"ph1\">&lt;Task&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAny(IEnumerable<Task>)"},{"pos":[158226,158236],"content":"Task<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Task>"},{"pos":[158473,158490],"content":"IEnumerable<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Task>"},{"pos":[158745,158760],"content":"WhenAny(Task[])","needQuote":true,"needEscape":true,"nodes":[{"content":"WhenAny(Task[])","pos":[0,15]}]},{"pos":[158979,158989],"content":"Task<ph id=\"ph1\">&lt;Task&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Task>"},{"pos":[159182,159186],"content":"Task","needQuote":true,"needEscape":true,"nodes":[{"content":"Task","pos":[0,4]}]},{"pos":[159436,159471],"content":"WhenAny(IEnumerable&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph>&gt;)","needQuote":true,"needEscape":true,"source":"WhenAny(IEnumerable<Task<TResult>>)"},{"pos":[159739,159758],"content":"Task&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Task<TResult>>"},{"pos":[160022,160048],"content":"IEnumerable&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Task<TResult>>"},{"pos":[160329,160351],"content":"WhenAny(Task<ph id=\"ph1\">&lt;TResult&gt;</ph>)","needQuote":true,"needEscape":true,"source":"WhenAny(Task<TResult>)"},{"pos":[160593,160612],"content":"Task&lt;Task<ph id=\"ph1\">&lt;TResult&gt;</ph><ph id=\"ph2\">&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<Task<TResult>>"},{"pos":[160832,160845],"content":"Task<ph id=\"ph1\">&lt;TResult&gt;</ph>","needQuote":true,"needEscape":true,"source":"Task<TResult>"},{"pos":[161034,161041],"content":"Yield()","needQuote":true,"needEscape":true,"nodes":[{"content":"Yield()","pos":[0,7]}]},{"pos":[161243,161257],"content":"YieldAwaitable","needQuote":true,"needEscape":true,"nodes":[{"content":"YieldAwaitable","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.Tasks.Task\n  id: Task\n  children:\n  - System.Threading.Tasks.Task.#ctor(System.Action)\n  - System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)\n  - System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  - System.Threading.Tasks.Task.AsyncState\n  - System.Threading.Tasks.Task.CompletedTask\n  - System.Threading.Tasks.Task.ConfigureAwait(System.Boolean)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.CreationOptions\n  - System.Threading.Tasks.Task.CurrentId\n  - System.Threading.Tasks.Task.Delay(System.Int32)\n  - System.Threading.Tasks.Task.Delay(System.TimeSpan)\n  - System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Dispose\n  - System.Threading.Tasks.Task.Dispose(System.Boolean)\n  - System.Threading.Tasks.Task.Exception\n  - System.Threading.Tasks.Task.Factory\n  - System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.FromException(System.Exception)\n  - System.Threading.Tasks.Task.FromException``1(System.Exception)\n  - System.Threading.Tasks.Task.FromResult``1(``0)\n  - System.Threading.Tasks.Task.GetAwaiter\n  - System.Threading.Tasks.Task.Id\n  - System.Threading.Tasks.Task.IsCanceled\n  - System.Threading.Tasks.Task.IsCompleted\n  - System.Threading.Tasks.Task.IsFaulted\n  - System.Threading.Tasks.Task.Run(System.Action)\n  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.Task.Run``1(System.Func{``0})\n  - System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.RunSynchronously\n  - System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.Start\n  - System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)\n  - System.Threading.Tasks.Task.Status\n  - System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle\n  - System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously\n  - System.Threading.Tasks.Task.Wait\n  - System.Threading.Tasks.Task.Wait(System.Int32)\n  - System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.Wait(System.TimeSpan)\n  - System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)\n  - System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)\n  - System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  - System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])\n  - System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  - System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])\n  - System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  - System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])\n  - System.Threading.Tasks.Task.Yield\n  langs:\n  - csharp\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n  type: Class\n  syntax:\n    content: >-\n      [System.Diagnostics.DebuggerDisplay(\"Id = {Id}, Status = {Status}, Method = {DebuggerDisplayMethodDescription}\")]\n\n      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Threading.Tasks.SystemThreadingTasks_TaskDebugView))]\n\n      public class Task : IAsyncResult, IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IAsyncResult\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action)\n  id: '#ctor(System.Action)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action)\n  nameWithType: Task.Task(Action)\n  fullName: System.Threading.Tasks.Task.Task(Action)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action action);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)\n  id: '#ctor(System.Action,System.Threading.CancellationToken)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action,CancellationToken)\n  nameWithType: Task.Task(Action,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Task(Action,CancellationToken)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action action, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action,TaskCreationOptions)\n  nameWithType: Task.Task(Action,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action action, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)\n  id: '#ctor(System.Action{System.Object},System.Object)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action<Object>,Object)\n  nameWithType: Task.Task(Action<Object>,Object)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action<object> action, object state);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action,CancellationToken,TaskCreationOptions)\n  nameWithType: Task.Task(Action,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action,CancellationToken,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action action, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  id: '#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action<Object>,Object,CancellationToken)\n  nameWithType: Task.Task(Action<Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object,CancellationToken)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action<object> action, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action<Object>,Object,TaskCreationOptions)\n  nameWithType: Task.Task(Action<Object>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action<object> action, object state, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  id: '#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)'\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)\n  nameWithType: Task.Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public Task (Action<object> action, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskCreationOptions creationOptions);\n    parameters:\n    - id: action\n      type: System.Action{System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: creationOptions\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.AsyncState\n  id: AsyncState\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: AsyncState\n  nameWithType: Task.AsyncState\n  fullName: System.Threading.Tasks.Task.AsyncState\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public object AsyncState { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.CompletedTask\n  id: CompletedTask\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: CompletedTask\n  nameWithType: Task.CompletedTask\n  fullName: System.Threading.Tasks.Task.CompletedTask\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task CompletedTask { get; }\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ConfigureAwait(System.Boolean)\n  id: ConfigureAwait(System.Boolean)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ConfigureAwait(Boolean)\n  nameWithType: Task.ConfigureAwait(Boolean)\n  fullName: System.Threading.Tasks.Task.ConfigureAwait(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Runtime.CompilerServices.ConfiguredTaskAwaitable ConfigureAwait (bool continueOnCapturedContext);\n    parameters:\n    - id: continueOnCapturedContext\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Runtime.CompilerServices.ConfiguredTaskAwaitable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task>)\n  nameWithType: Task.ContinueWith(Action<Task>)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task> continuationAction);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task,Object>,Object)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task,object> continuationAction, object state);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task,System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task>,CancellationToken)\n  nameWithType: Task.ContinueWith(Action<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task> continuationAction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task>,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Action<Task>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task> continuationAction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task>,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task> continuationAction, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task,Object>,Object,CancellationToken)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task,System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task,object> continuationAction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task,System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task,Object>,Object,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task,object> continuationAction, object state, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task,System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task> continuationAction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task ContinueWith (Action<System.Threading.Tasks.Task,object> continuationAction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationAction\n      type: System.Action{System.Threading.Tasks.Task,System.Object}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,TResult>)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,TResult> continuationFunction);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,Object,TResult>,Object)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,object,TResult> continuationFunction, object state);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,TResult>,CancellationToken)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,TResult>,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,object,TResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,object,TResult> continuationFunction, object state, System.Threading.Tasks.TaskContinuationOptions continuationOptions);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,object,TResult> continuationFunction, object state, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,TResult> continuationFunction, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  id: ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.Task<TResult> ContinueWith<TResult> (Func<System.Threading.Tasks.Task,object,TResult> continuationFunction, object state, System.Threading.CancellationToken cancellationToken, System.Threading.Tasks.TaskContinuationOptions continuationOptions, System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: continuationFunction\n      type: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n      description: Parameter description to be filled\n    - id: state\n      type: System.Object\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    - id: continuationOptions\n      type: System.Threading.Tasks.TaskContinuationOptions\n      description: Parameter description to be filled\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.CreationOptions\n  id: CreationOptions\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: CreationOptions\n  nameWithType: Task.CreationOptions\n  fullName: System.Threading.Tasks.Task.CreationOptions\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskCreationOptions CreationOptions { get; }\n    return:\n      type: System.Threading.Tasks.TaskCreationOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.CurrentId\n  id: CurrentId\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: CurrentId\n  nameWithType: Task.CurrentId\n  fullName: System.Threading.Tasks.Task.CurrentId\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static Nullable<int> CurrentId { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Delay(System.Int32)\n  id: Delay(System.Int32)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Delay(Int32)\n  nameWithType: Task.Delay(Int32)\n  fullName: System.Threading.Tasks.Task.Delay(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Delay (int millisecondsDelay);\n    parameters:\n    - id: millisecondsDelay\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Delay*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Delay(System.TimeSpan)\n  id: Delay(System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Delay(TimeSpan)\n  nameWithType: Task.Delay(TimeSpan)\n  fullName: System.Threading.Tasks.Task.Delay(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Delay (TimeSpan delay);\n    parameters:\n    - id: delay\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Delay*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)\n  id: Delay(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Delay(Int32,CancellationToken)\n  nameWithType: Task.Delay(Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Delay(Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Delay (int millisecondsDelay, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: millisecondsDelay\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Delay*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)\n  id: Delay(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Delay(TimeSpan,CancellationToken)\n  nameWithType: Task.Delay(TimeSpan,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Delay(TimeSpan,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Delay (TimeSpan delay, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: delay\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Delay*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Dispose\n  id: Dispose\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: Task.Dispose()\n  fullName: System.Threading.Tasks.Task.Dispose()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Threading.Tasks.Task.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Task.Dispose(Boolean)\n  fullName: System.Threading.Tasks.Task.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Exception\n  id: Exception\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: Task.Exception\n  fullName: System.Threading.Tasks.Task.Exception\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public AggregateException Exception { get; }\n    return:\n      type: System.AggregateException\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Factory\n  id: Factory\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Factory\n  nameWithType: Task.Factory\n  fullName: System.Threading.Tasks.Task.Factory\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.TaskFactory Factory { get; }\n    return:\n      type: System.Threading.Tasks.TaskFactory\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)\n  id: FromCanceled(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: FromCanceled(CancellationToken)\n  nameWithType: Task.FromCanceled(CancellationToken)\n  fullName: System.Threading.Tasks.Task.FromCanceled(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task FromCanceled (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)\n  id: FromCanceled``1(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: FromCanceled(CancellationToken)\n  nameWithType: Task.FromCanceled(CancellationToken)\n  fullName: System.Threading.Tasks.Task.FromCanceled(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> FromCanceled<TResult> (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.FromException(System.Exception)\n  id: FromException(System.Exception)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: FromException(Exception)\n  nameWithType: Task.FromException(Exception)\n  fullName: System.Threading.Tasks.Task.FromException(Exception)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task FromException (Exception exception);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.FromException``1(System.Exception)\n  id: FromException``1(System.Exception)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: FromException(Exception)\n  nameWithType: Task.FromException(Exception)\n  fullName: System.Threading.Tasks.Task.FromException(Exception)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> FromException<TResult> (Exception exception);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.FromResult``1(``0)\n  id: FromResult``1(``0)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: FromResult(TResult)\n  nameWithType: Task.FromResult(TResult)\n  fullName: System.Threading.Tasks.Task.FromResult(TResult)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> FromResult<TResult> (TResult result);\n    parameters:\n    - id: result\n      type: TResult\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.GetAwaiter\n  id: GetAwaiter\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: GetAwaiter()\n  nameWithType: Task.GetAwaiter()\n  fullName: System.Threading.Tasks.Task.GetAwaiter()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Runtime.CompilerServices.TaskAwaiter GetAwaiter ();\n    parameters: []\n    return:\n      type: System.Runtime.CompilerServices.TaskAwaiter\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Id\n  id: Id\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Id\n  nameWithType: Task.Id\n  fullName: System.Threading.Tasks.Task.Id\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public int Id { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.IsCanceled\n  id: IsCanceled\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: IsCanceled\n  nameWithType: Task.IsCanceled\n  fullName: System.Threading.Tasks.Task.IsCanceled\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public bool IsCanceled { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.IsCompleted\n  id: IsCompleted\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: IsCompleted\n  nameWithType: Task.IsCompleted\n  fullName: System.Threading.Tasks.Task.IsCompleted\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public bool IsCompleted { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.IsFaulted\n  id: IsFaulted\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: IsFaulted\n  nameWithType: Task.IsFaulted\n  fullName: System.Threading.Tasks.Task.IsFaulted\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public bool IsFaulted { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run(System.Action)\n  id: Run(System.Action)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Action)\n  nameWithType: Task.Run(Action)\n  fullName: System.Threading.Tasks.Task.Run(Action)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Run (Action action);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})\n  id: Run(System.Func{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Func<Task>)\n  nameWithType: Task.Run(Func<Task>)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Run (Func<System.Threading.Tasks.Task> function);\n    parameters:\n    - id: function\n      type: System.Func{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)\n  id: Run(System.Action,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Action,CancellationToken)\n  nameWithType: Task.Run(Action,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Action,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Run (Action action, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: action\n      type: System.Action\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  id: Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Func<Task>,CancellationToken)\n  nameWithType: Task.Run(Func<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task Run (Func<System.Threading.Tasks.Task> function, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})\n  id: Run``1(System.Func{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Func<Task<TResult>>)\n  nameWithType: Task.Run(Func<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task<TResult>>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> Run<TResult> (Func<System.Threading.Tasks.Task<TResult>> function);\n    parameters:\n    - id: function\n      type: System.Func{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{``0})\n  id: Run``1(System.Func{``0})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Func<TResult>)\n  nameWithType: Task.Run(Func<TResult>)\n  fullName: System.Threading.Tasks.Task.Run(Func<TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> Run<TResult> (Func<TResult> function);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  id: Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Func<Task<TResult>>,CancellationToken)\n  nameWithType: Task.Run(Func<Task<TResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task<TResult>>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> Run<TResult> (Func<System.Threading.Tasks.Task<TResult>> function, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)\n  id: Run``1(System.Func{``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Run(Func<TResult>,CancellationToken)\n  nameWithType: Task.Run(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Func<TResult>,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult> Run<TResult> (Func<TResult> function, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: function\n      type: System.Func{TResult}\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task`1\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Run<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.RunSynchronously\n  id: RunSynchronously\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: RunSynchronously()\n  nameWithType: Task.RunSynchronously()\n  fullName: System.Threading.Tasks.Task.RunSynchronously()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void RunSynchronously ();\n    parameters: []\n  overload: System.Threading.Tasks.Task.RunSynchronously*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)\n  id: RunSynchronously(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: RunSynchronously(TaskScheduler)\n  nameWithType: Task.RunSynchronously(TaskScheduler)\n  fullName: System.Threading.Tasks.Task.RunSynchronously(TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void RunSynchronously (System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.RunSynchronously*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Start\n  id: Start\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Start()\n  nameWithType: Task.Start()\n  fullName: System.Threading.Tasks.Task.Start()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void Start ();\n    parameters: []\n  overload: System.Threading.Tasks.Task.Start*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)\n  id: Start(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Start(TaskScheduler)\n  nameWithType: Task.Start(TaskScheduler)\n  fullName: System.Threading.Tasks.Task.Start(TaskScheduler)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void Start (System.Threading.Tasks.TaskScheduler scheduler);\n    parameters:\n    - id: scheduler\n      type: System.Threading.Tasks.TaskScheduler\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Start*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Status\n  id: Status\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Status\n  nameWithType: Task.Status\n  fullName: System.Threading.Tasks.Task.Status\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public System.Threading.Tasks.TaskStatus Status { get; }\n    return:\n      type: System.Threading.Tasks.TaskStatus\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle\n  id: System#IAsyncResult#AsyncWaitHandle\n  isEii: true\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: System.IAsyncResult.AsyncWaitHandle\n  nameWithType: Task.System.IAsyncResult.AsyncWaitHandle\n  fullName: System.Threading.Tasks.Task.System.IAsyncResult.AsyncWaitHandle\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: System.Threading.WaitHandle System.IAsyncResult.AsyncWaitHandle { get; }\n    return:\n      type: System.Threading.WaitHandle\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously\n  id: System#IAsyncResult#CompletedSynchronously\n  isEii: true\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: System.IAsyncResult.CompletedSynchronously\n  nameWithType: Task.System.IAsyncResult.CompletedSynchronously\n  fullName: System.Threading.Tasks.Task.System.IAsyncResult.CompletedSynchronously\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: bool System.IAsyncResult.CompletedSynchronously { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Wait\n  id: Wait\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Wait()\n  nameWithType: Task.Wait()\n  fullName: System.Threading.Tasks.Task.Wait()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void Wait ();\n    parameters: []\n  overload: System.Threading.Tasks.Task.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Wait(System.Int32)\n  id: Wait(System.Int32)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Wait(Int32)\n  nameWithType: Task.Wait(Int32)\n  fullName: System.Threading.Tasks.Task.Wait(Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public bool Wait (int millisecondsTimeout);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)\n  id: Wait(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Wait(CancellationToken)\n  nameWithType: Task.Wait(CancellationToken)\n  fullName: System.Threading.Tasks.Task.Wait(CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public void Wait (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Wait(System.TimeSpan)\n  id: Wait(System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Wait(TimeSpan)\n  nameWithType: Task.Wait(TimeSpan)\n  fullName: System.Threading.Tasks.Task.Wait(TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public bool Wait (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)\n  id: Wait(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Wait(Int32,CancellationToken)\n  nameWithType: Task.Wait(Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Wait(Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public bool Wait (int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.Wait*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])\n  id: WaitAll(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAll(Task[])\n  nameWithType: Task.WaitAll(Task[])\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static void WaitAll (System.Threading.Tasks.Task[] tasks);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)\n  id: WaitAll(System.Threading.Tasks.Task[],System.Int32)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAll(Task[],Int32)\n  nameWithType: Task.WaitAll(Task[],Int32)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static bool WaitAll (System.Threading.Tasks.Task[] tasks, int millisecondsTimeout);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  id: WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAll(Task[],CancellationToken)\n  nameWithType: Task.WaitAll(Task[],CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static void WaitAll (System.Threading.Tasks.Task[] tasks, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)\n  id: WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAll(Task[],TimeSpan)\n  nameWithType: Task.WaitAll(Task[],TimeSpan)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static bool WaitAll (System.Threading.Tasks.Task[] tasks, TimeSpan timeout);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  id: WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAll(Task[],Int32,CancellationToken)\n  nameWithType: Task.WaitAll(Task[],Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static bool WaitAll (System.Threading.Tasks.Task[] tasks, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])\n  id: WaitAny(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAny(Task[])\n  nameWithType: Task.WaitAny(Task[])\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static int WaitAny (System.Threading.Tasks.Task[] tasks);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)\n  id: WaitAny(System.Threading.Tasks.Task[],System.Int32)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAny(Task[],Int32)\n  nameWithType: Task.WaitAny(Task[],Int32)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static int WaitAny (System.Threading.Tasks.Task[] tasks, int millisecondsTimeout);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  id: WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAny(Task[],CancellationToken)\n  nameWithType: Task.WaitAny(Task[],CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static int WaitAny (System.Threading.Tasks.Task[] tasks, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)\n  id: WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAny(Task[],TimeSpan)\n  nameWithType: Task.WaitAny(Task[],TimeSpan)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],TimeSpan)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static int WaitAny (System.Threading.Tasks.Task[] tasks, TimeSpan timeout);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: timeout\n      type: System.TimeSpan\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  id: WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WaitAny(Task[],Int32,CancellationToken)\n  nameWithType: Task.WaitAny(Task[],Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],Int32,CancellationToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static int WaitAny (System.Threading.Tasks.Task[] tasks, int millisecondsTimeout, System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    - id: millisecondsTimeout\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WaitAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  id: WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAll(IEnumerable<Task>)\n  nameWithType: Task.WhenAll(IEnumerable<Task>)\n  fullName: System.Threading.Tasks.Task.WhenAll(IEnumerable<Task>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task WhenAll (System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task> tasks);\n    parameters:\n    - id: tasks\n      type: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])\n  id: WhenAll(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAll(Task[])\n  nameWithType: Task.WhenAll(Task[])\n  fullName: System.Threading.Tasks.Task.WhenAll(Task[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task WhenAll (System.Threading.Tasks.Task[] tasks);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  id: WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAll(IEnumerable<Task<TResult>>)\n  nameWithType: Task.WhenAll(IEnumerable<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task.WhenAll(IEnumerable<Task<TResult>>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult[]> WhenAll<TResult> (System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<TResult>> tasks);\n    parameters:\n    - id: tasks\n      type: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAll<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])\n  id: WhenAll``1(System.Threading.Tasks.Task{``0}[])\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAll(Task<TResult>)\n  nameWithType: Task.WhenAll(Task<TResult>)\n  fullName: System.Threading.Tasks.Task.WhenAll(Task<TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<TResult[]> WhenAll<TResult> (System.Threading.Tasks.Task<TResult>[] tasks);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{TResult}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAll<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  id: WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAny(IEnumerable<Task>)\n  nameWithType: Task.WhenAny(IEnumerable<Task>)\n  fullName: System.Threading.Tasks.Task.WhenAny(IEnumerable<Task>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<System.Threading.Tasks.Task> WhenAny (System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task> tasks);\n    parameters:\n    - id: tasks\n      type: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])\n  id: WhenAny(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAny(Task[])\n  nameWithType: Task.WhenAny(Task[])\n  fullName: System.Threading.Tasks.Task.WhenAny(Task[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<System.Threading.Tasks.Task> WhenAny (System.Threading.Tasks.Task[] tasks);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task[]\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAny*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  id: WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAny(IEnumerable<Task<TResult>>)\n  nameWithType: Task.WhenAny(IEnumerable<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task.WhenAny(IEnumerable<Task<TResult>>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>> WhenAny<TResult> (System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<TResult>> tasks);\n    parameters:\n    - id: tasks\n      type: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAny<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])\n  id: WhenAny``1(System.Threading.Tasks.Task{``0}[])\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: WhenAny(Task<TResult>)\n  nameWithType: Task.WhenAny(Task<TResult>)\n  fullName: System.Threading.Tasks.Task.WhenAny(Task<TResult>)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>> WhenAny<TResult> (System.Threading.Tasks.Task<TResult>[] tasks);\n    parameters:\n    - id: tasks\n      type: System.Threading.Tasks.Task{TResult}\n      description: Parameter description to be filled\n    return:\n      type: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}\n      description: Parameter description to be filled\n  overload: System.Threading.Tasks.Task.WhenAny<TResult>*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Threading.Tasks.Task.Yield\n  id: Yield\n  parent: System.Threading.Tasks.Task\n  langs:\n  - csharp\n  name: Yield()\n  nameWithType: Task.Yield()\n  fullName: System.Threading.Tasks.Task.Yield()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Threading.Tasks\n  syntax:\n    content: public static System.Runtime.CompilerServices.YieldAwaitable Yield ();\n    parameters: []\n    return:\n      type: System.Runtime.CompilerServices.YieldAwaitable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Threading.Tasks.Task.#ctor(System.Action)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action)\n  nameWithType: Task.Task(Action)\n  fullName: System.Threading.Tasks.Task.Task(Action)\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action,CancellationToken)\n  nameWithType: Task.Task(Action,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Task(Action,CancellationToken)\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action,TaskCreationOptions)\n  nameWithType: Task.Task(Action,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action,TaskCreationOptions)\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action<Object>,Object)\n  nameWithType: Task.Task(Action<Object>,Object)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object)\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action,CancellationToken,TaskCreationOptions)\n  nameWithType: Task.Task(Action,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action,CancellationToken,TaskCreationOptions)\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action<Object>,Object,CancellationToken)\n  nameWithType: Task.Task(Action<Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object,CancellationToken)\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action<Object>,Object,TaskCreationOptions)\n  nameWithType: Task.Task(Action<Object>,Object,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object,TaskCreationOptions)\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)\n  nameWithType: Task.Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)\n  fullName: System.Threading.Tasks.Task.Task(Action<Object>,Object,CancellationToken,TaskCreationOptions)\n- uid: System.Action{System.Object}\n  parent: System\n  isExternal: false\n  name: Action<Object>\n  nameWithType: Action<Object>\n  fullName: System.Action<System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task.AsyncState\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: AsyncState\n  nameWithType: Task.AsyncState\n  fullName: System.Threading.Tasks.Task.AsyncState\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task.CompletedTask\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: CompletedTask\n  nameWithType: Task.CompletedTask\n  fullName: System.Threading.Tasks.Task.CompletedTask\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task.ConfigureAwait(System.Boolean)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ConfigureAwait(Boolean)\n  nameWithType: Task.ConfigureAwait(Boolean)\n  fullName: System.Threading.Tasks.Task.ConfigureAwait(Boolean)\n- uid: System.Runtime.CompilerServices.ConfiguredTaskAwaitable\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: ConfiguredTaskAwaitable\n  nameWithType: ConfiguredTaskAwaitable\n  fullName: System.Runtime.CompilerServices.ConfiguredTaskAwaitable\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task>)\n  nameWithType: Task.ContinueWith(Action<Task>)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task,Object>,Object)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task,System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task,Object>\n  nameWithType: Action<Task,Object>\n  fullName: System.Action<System.Threading.Tasks.Task,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task>,CancellationToken)\n  nameWithType: Task.ContinueWith(Action<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task>,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Action<Task>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task>,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task,Object>,Object,CancellationToken)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task,System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task,Object>\n  nameWithType: Action<Task,Object>\n  fullName: System.Action<System.Threading.Tasks.Task,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task,System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task,Object>\n  nameWithType: Action<Task,Object>\n  fullName: System.Action<System.Threading.Tasks.Task,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task,Object>,Object,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task,System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task,Object>\n  nameWithType: Action<Task,Object>\n  fullName: System.Action<System.Threading.Tasks.Task,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: false\n  name: Action<Task>\n  nameWithType: Action<Task>\n  fullName: System.Action<System.Threading.Tasks.Task>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Action<Task,Object>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action{System.Threading.Tasks.Task,System.Object}\n  parent: System\n  isExternal: true\n  name: Action<Task,Object>\n  nameWithType: Action<Task,Object>\n  fullName: System.Action<System.Threading.Tasks.Task,System.Object>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,TResult>)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,Object,TResult>,Object)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,Object,TResult>\n  nameWithType: Func<Task,Object,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,TResult>,CancellationToken)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,TResult>,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,TResult>,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,Object,TResult>\n  nameWithType: Func<Task,Object,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskContinuationOptions)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,Object,TResult>\n  nameWithType: Func<Task,Object,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,Object,TResult>\n  nameWithType: Func<Task,Object,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,TResult>,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,TResult>\n  nameWithType: Func<Task,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  nameWithType: Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n  fullName: System.Threading.Tasks.Task.ContinueWith(Func<Task,Object,TResult>,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task,System.Object,TResult}\n  parent: System\n  isExternal: true\n  name: Func<Task,Object,TResult>\n  nameWithType: Func<Task,Object,TResult>\n  fullName: System.Func<System.Threading.Tasks.Task,System.Object,TResult>\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.TaskContinuationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskContinuationOptions\n  nameWithType: TaskContinuationOptions\n  fullName: System.Threading.Tasks.TaskContinuationOptions\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.CreationOptions\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: CreationOptions\n  nameWithType: Task.CreationOptions\n  fullName: System.Threading.Tasks.Task.CreationOptions\n- uid: System.Threading.Tasks.TaskCreationOptions\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskCreationOptions\n  nameWithType: TaskCreationOptions\n  fullName: System.Threading.Tasks.TaskCreationOptions\n- uid: System.Threading.Tasks.Task.CurrentId\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: CurrentId\n  nameWithType: Task.CurrentId\n  fullName: System.Threading.Tasks.Task.CurrentId\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Threading.Tasks.Task.Delay(System.Int32)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Delay(Int32)\n  nameWithType: Task.Delay(Int32)\n  fullName: System.Threading.Tasks.Task.Delay(Int32)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task.Delay(System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Delay(TimeSpan)\n  nameWithType: Task.Delay(TimeSpan)\n  fullName: System.Threading.Tasks.Task.Delay(TimeSpan)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Delay(Int32,CancellationToken)\n  nameWithType: Task.Delay(Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Delay(Int32,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Delay(TimeSpan,CancellationToken)\n  nameWithType: Task.Delay(TimeSpan,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Delay(TimeSpan,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.Dispose\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Dispose()\n  nameWithType: Task.Dispose()\n  fullName: System.Threading.Tasks.Task.Dispose()\n- uid: System.Threading.Tasks.Task.Dispose(System.Boolean)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Task.Dispose(Boolean)\n  fullName: System.Threading.Tasks.Task.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task.Exception\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Exception\n  nameWithType: Task.Exception\n  fullName: System.Threading.Tasks.Task.Exception\n- uid: System.AggregateException\n  parent: System\n  isExternal: false\n  name: AggregateException\n  nameWithType: AggregateException\n  fullName: System.AggregateException\n- uid: System.Threading.Tasks.Task.Factory\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Factory\n  nameWithType: Task.Factory\n  fullName: System.Threading.Tasks.Task.Factory\n- uid: System.Threading.Tasks.TaskFactory\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskFactory\n  nameWithType: TaskFactory\n  fullName: System.Threading.Tasks.TaskFactory\n- uid: System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: FromCanceled(CancellationToken)\n  nameWithType: Task.FromCanceled(CancellationToken)\n  fullName: System.Threading.Tasks.Task.FromCanceled(CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: FromCanceled(CancellationToken)\n  nameWithType: Task.FromCanceled(CancellationToken)\n  fullName: System.Threading.Tasks.Task.FromCanceled(CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.FromException(System.Exception)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: FromException(Exception)\n  nameWithType: Task.FromException(Exception)\n  fullName: System.Threading.Tasks.Task.FromException(Exception)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Threading.Tasks.Task.FromException``1(System.Exception)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: FromException(Exception)\n  nameWithType: Task.FromException(Exception)\n  fullName: System.Threading.Tasks.Task.FromException(Exception)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Threading.Tasks.Task.FromResult``1(``0)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: FromResult(TResult)\n  nameWithType: Task.FromResult(TResult)\n  fullName: System.Threading.Tasks.Task.FromResult(TResult)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: TResult\n  parent: ''\n  isExternal: true\n  name: TResult\n  nameWithType: TResult\n  fullName: TResult\n- uid: System.Threading.Tasks.Task.GetAwaiter\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: GetAwaiter()\n  nameWithType: Task.GetAwaiter()\n  fullName: System.Threading.Tasks.Task.GetAwaiter()\n- uid: System.Runtime.CompilerServices.TaskAwaiter\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: TaskAwaiter\n  nameWithType: TaskAwaiter\n  fullName: System.Runtime.CompilerServices.TaskAwaiter\n- uid: System.Threading.Tasks.Task.Id\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Id\n  nameWithType: Task.Id\n  fullName: System.Threading.Tasks.Task.Id\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task.IsCanceled\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: IsCanceled\n  nameWithType: Task.IsCanceled\n  fullName: System.Threading.Tasks.Task.IsCanceled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task.IsCompleted\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: IsCompleted\n  nameWithType: Task.IsCompleted\n  fullName: System.Threading.Tasks.Task.IsCompleted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task.IsFaulted\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: IsFaulted\n  nameWithType: Task.IsFaulted\n  fullName: System.Threading.Tasks.Task.IsFaulted\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task.Run(System.Action)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Action)\n  nameWithType: Task.Run(Action)\n  fullName: System.Threading.Tasks.Task.Run(Action)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Func<Task>)\n  nameWithType: Task.Run(Func<Task>)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: true\n  name: Func<Task>\n  nameWithType: Func<Task>\n  fullName: System.Func<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Action,CancellationToken)\n  nameWithType: Task.Run(Action,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Action,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Action\n  parent: System\n  isExternal: true\n  name: Action\n  nameWithType: Action\n  fullName: System.Action\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Func<Task>,CancellationToken)\n  nameWithType: Task.Run(Func<Task>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task>,CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Func{System.Threading.Tasks.Task}\n  parent: System\n  isExternal: true\n  name: Func<Task>\n  nameWithType: Func<Task>\n  fullName: System.Func<System.Threading.Tasks.Task>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Func<Task<TResult>>)\n  nameWithType: Task.Run(Func<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task<TResult>>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>>\n  nameWithType: Func<Task<TResult>>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{``0})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Func<TResult>)\n  nameWithType: Task.Run(Func<TResult>)\n  fullName: System.Threading.Tasks.Task.Run(Func<TResult>)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Func<Task<TResult>>,CancellationToken)\n  nameWithType: Task.Run(Func<Task<TResult>>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Func<Task<TResult>>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{System.Threading.Tasks.Task{TResult}}\n  parent: System\n  isExternal: true\n  name: Func<Task<TResult>>\n  nameWithType: Func<Task<TResult>>\n  fullName: System.Func<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Run(Func<TResult>,CancellationToken)\n  nameWithType: Task.Run(Func<TResult>,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Run(Func<TResult>,CancellationToken)\n- uid: System.Threading.Tasks.Task`1\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Func{TResult}\n  parent: System\n  isExternal: true\n  name: Func<TResult>\n  nameWithType: Func<TResult>\n  fullName: System.Func<TResult>\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.RunSynchronously\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: RunSynchronously()\n  nameWithType: Task.RunSynchronously()\n  fullName: System.Threading.Tasks.Task.RunSynchronously()\n- uid: System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: RunSynchronously(TaskScheduler)\n  nameWithType: Task.RunSynchronously(TaskScheduler)\n  fullName: System.Threading.Tasks.Task.RunSynchronously(TaskScheduler)\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.Start\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Start()\n  nameWithType: Task.Start()\n  fullName: System.Threading.Tasks.Task.Start()\n- uid: System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Start(TaskScheduler)\n  nameWithType: Task.Start(TaskScheduler)\n  fullName: System.Threading.Tasks.Task.Start(TaskScheduler)\n- uid: System.Threading.Tasks.TaskScheduler\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskScheduler\n  nameWithType: TaskScheduler\n  fullName: System.Threading.Tasks.TaskScheduler\n- uid: System.Threading.Tasks.Task.Status\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Status\n  nameWithType: Task.Status\n  fullName: System.Threading.Tasks.Task.Status\n- uid: System.Threading.Tasks.TaskStatus\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: TaskStatus\n  nameWithType: TaskStatus\n  fullName: System.Threading.Tasks.TaskStatus\n- uid: System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: System.IAsyncResult.AsyncWaitHandle\n  nameWithType: Task.System.IAsyncResult.AsyncWaitHandle\n  fullName: System.Threading.Tasks.Task.System.IAsyncResult.AsyncWaitHandle\n- uid: System.Threading.WaitHandle\n  parent: System.Threading\n  isExternal: false\n  name: WaitHandle\n  nameWithType: WaitHandle\n  fullName: System.Threading.WaitHandle\n- uid: System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: System.IAsyncResult.CompletedSynchronously\n  nameWithType: Task.System.IAsyncResult.CompletedSynchronously\n  fullName: System.Threading.Tasks.Task.System.IAsyncResult.CompletedSynchronously\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task.Wait\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Wait()\n  nameWithType: Task.Wait()\n  fullName: System.Threading.Tasks.Task.Wait()\n- uid: System.Threading.Tasks.Task.Wait(System.Int32)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Wait(Int32)\n  nameWithType: Task.Wait(Int32)\n  fullName: System.Threading.Tasks.Task.Wait(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Wait(CancellationToken)\n  nameWithType: Task.Wait(CancellationToken)\n  fullName: System.Threading.Tasks.Task.Wait(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.Wait(System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Wait(TimeSpan)\n  nameWithType: Task.Wait(TimeSpan)\n  fullName: System.Threading.Tasks.Task.Wait(TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Wait(Int32,CancellationToken)\n  nameWithType: Task.Wait(Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.Wait(Int32,CancellationToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAll(Task[])\n  nameWithType: Task.WaitAll(Task[])\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[])\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAll(Task[],Int32)\n  nameWithType: Task.WaitAll(Task[],Int32)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAll(Task[],CancellationToken)\n  nameWithType: Task.WaitAll(Task[],CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],CancellationToken)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAll(Task[],TimeSpan)\n  nameWithType: Task.WaitAll(Task[],TimeSpan)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],TimeSpan)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAll(Task[],Int32,CancellationToken)\n  nameWithType: Task.WaitAll(Task[],Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAll(Task[],Int32,CancellationToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAny(Task[])\n  nameWithType: Task.WaitAny(Task[])\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[])\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAny(Task[],Int32)\n  nameWithType: Task.WaitAny(Task[],Int32)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAny(Task[],CancellationToken)\n  nameWithType: Task.WaitAny(Task[],CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],CancellationToken)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAny(Task[],TimeSpan)\n  nameWithType: Task.WaitAny(Task[],TimeSpan)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],TimeSpan)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WaitAny(Task[],Int32,CancellationToken)\n  nameWithType: Task.WaitAny(Task[],Int32,CancellationToken)\n  fullName: System.Threading.Tasks.Task.WaitAny(Task[],Int32,CancellationToken)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAll(IEnumerable<Task>)\n  nameWithType: Task.WhenAll(IEnumerable<Task>)\n  fullName: System.Threading.Tasks.Task.WhenAll(IEnumerable<Task>)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Task>\n  nameWithType: IEnumerable<Task>\n  fullName: System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAll(Task[])\n  nameWithType: Task.WhenAll(Task[])\n  fullName: System.Threading.Tasks.Task.WhenAll(Task[])\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAll(IEnumerable<Task<TResult>>)\n  nameWithType: Task.WhenAll(IEnumerable<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task.WhenAll(IEnumerable<Task<TResult>>)\n- uid: System.Threading.Tasks.Task{TResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult[]>\n- uid: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{TResult}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Task<TResult>>\n  nameWithType: IEnumerable<Task<TResult>>\n  fullName: System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAll(Task<TResult>)\n  nameWithType: Task.WhenAll(Task<TResult>)\n  fullName: System.Threading.Tasks.Task.WhenAll(Task<TResult>)\n- uid: System.Threading.Tasks.Task{TResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult[]>\n- uid: System.Threading.Tasks.Task{TResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>[]\n- uid: System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAny(IEnumerable<Task>)\n  nameWithType: Task.WhenAny(IEnumerable<Task>)\n  fullName: System.Threading.Tasks.Task.WhenAny(IEnumerable<Task>)\n- uid: System.Threading.Tasks.Task{System.Threading.Tasks.Task}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Task>\n  nameWithType: Task<Task>\n  fullName: System.Threading.Tasks.Task<System.Threading.Tasks.Task>\n- uid: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Task>\n  nameWithType: IEnumerable<Task>\n  fullName: System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAny(Task[])\n  nameWithType: Task.WhenAny(Task[])\n  fullName: System.Threading.Tasks.Task.WhenAny(Task[])\n- uid: System.Threading.Tasks.Task{System.Threading.Tasks.Task}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Task>\n  nameWithType: Task<Task>\n  fullName: System.Threading.Tasks.Task<System.Threading.Tasks.Task>\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task[]\n- uid: System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAny(IEnumerable<Task<TResult>>)\n  nameWithType: Task.WhenAny(IEnumerable<Task<TResult>>)\n  fullName: System.Threading.Tasks.Task.WhenAny(IEnumerable<Task<TResult>>)\n- uid: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Task<TResult>>\n  nameWithType: Task<Task<TResult>>\n  fullName: System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>>\n- uid: System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{TResult}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Task<TResult>>\n  nameWithType: IEnumerable<Task<TResult>>\n  fullName: System.Collections.Generic.IEnumerable<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: WhenAny(Task<TResult>)\n  nameWithType: Task.WhenAny(Task<TResult>)\n  fullName: System.Threading.Tasks.Task.WhenAny(Task<TResult>)\n- uid: System.Threading.Tasks.Task{System.Threading.Tasks.Task{TResult}}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Task<TResult>>\n  nameWithType: Task<Task<TResult>>\n  fullName: System.Threading.Tasks.Task<System.Threading.Tasks.Task<TResult>>\n- uid: System.Threading.Tasks.Task{TResult}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>[]\n- uid: System.Threading.Tasks.Task.Yield\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  name: Yield()\n  nameWithType: Task.Yield()\n  fullName: System.Threading.Tasks.Task.Yield()\n- uid: System.Runtime.CompilerServices.YieldAwaitable\n  parent: System.Runtime.CompilerServices\n  isExternal: false\n  name: YieldAwaitable\n  nameWithType: YieldAwaitable\n  fullName: System.Runtime.CompilerServices.YieldAwaitable\n- uid: System.Threading.Tasks.Task.ContinueWith*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.ContinueWith<TResult>*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.Delay*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.Dispose*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.Run*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.Run<TResult>*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.RunSynchronously*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.Start*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.Wait*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.WaitAll*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.WaitAny*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.WhenAll*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.WhenAll<TResult>*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.WhenAny*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n- uid: System.Threading.Tasks.Task.WhenAny<TResult>*\n  parent: System.Threading.Tasks.Task\n  isExternal: false\n  nameWithType: Task.\n"}