{"nodes":[{"pos":[2000,2021],"content":"EventLogConfiguration","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogConfiguration","pos":[0,21]}]},{"pos":[2839,2868],"content":"EventLogConfiguration(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogConfiguration(String)","pos":[0,29]}]},{"pos":[3283,3317],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3678,3723],"content":"EventLogConfiguration(String,EventLogSession)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogConfiguration(String,EventLogSession)","pos":[0,45]}]},{"pos":[4230,4264],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4365,4399],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4630,4639],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[5266,5282],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5671,5705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6024,6036],"content":"IsClassicLog","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClassicLog","pos":[0,12]}]},{"pos":[6380,6414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6649,6658],"content":"IsEnabled","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled","pos":[0,9]}]},{"pos":[6998,7032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7271,7282],"content":"LogFilePath","needQuote":true,"needEscape":true,"nodes":[{"content":"LogFilePath","pos":[0,11]}]},{"pos":[7629,7663],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7904,7916],"content":"LogIsolation","needQuote":true,"needEscape":true,"nodes":[{"content":"LogIsolation","pos":[0,12]}]},{"pos":[8346,8380],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8611,8618],"content":"LogMode","needQuote":true,"needEscape":true,"nodes":[{"content":"LogMode","pos":[0,7]}]},{"pos":[9028,9062],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9293,9300],"content":"LogName","needQuote":true,"needEscape":true,"nodes":[{"content":"LogName","pos":[0,7]}]},{"pos":[9630,9664],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9895,9902],"content":"LogType","needQuote":true,"needEscape":true,"nodes":[{"content":"LogType","pos":[0,7]}]},{"pos":[10307,10341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10594,10612],"content":"MaximumSizeInBytes","needQuote":true,"needEscape":true,"nodes":[{"content":"MaximumSizeInBytes","pos":[0,18]}]},{"pos":[10977,11011],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11264,11282],"content":"OwningProviderName","needQuote":true,"needEscape":true,"nodes":[{"content":"OwningProviderName","pos":[0,18]}]},{"pos":[11645,11679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11932,11950],"content":"ProviderBufferSize","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderBufferSize","pos":[0,18]}]},{"pos":[12336,12370],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12625,12644],"content":"ProviderControlGuid","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderControlGuid","pos":[0,19]}]},{"pos":[13033,13067],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13316,13332],"content":"ProviderKeywords","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderKeywords","pos":[0,16]}]},{"pos":[13718,13752],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13999,14014],"content":"ProviderLatency","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderLatency","pos":[0,15]}]},{"pos":[14391,14425],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14668,14681],"content":"ProviderLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderLevel","pos":[0,13]}]},{"pos":[15057,15091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15368,15398],"content":"ProviderMaximumNumberOfBuffers","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderMaximumNumberOfBuffers","pos":[0,30]}]},{"pos":[15820,15854],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16131,16161],"content":"ProviderMinimumNumberOfBuffers","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderMinimumNumberOfBuffers","pos":[0,30]}]},{"pos":[16583,16617],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16860,16873],"content":"ProviderNames","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderNames","pos":[0,13]}]},{"pos":[17301,17335],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17574,17587],"content":"SaveChanges()","needQuote":true,"needEscape":true,"nodes":[{"content":"SaveChanges()","pos":[0,13]}]},{"pos":[18138,18156],"content":"SecurityDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityDescriptor","pos":[0,18]}]},{"pos":[18524,18558],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18669,18682],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[18863,18892],"content":"EventLogConfiguration(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogConfiguration(String)","pos":[0,29]}]},{"pos":[19126,19132],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19413,19458],"content":"EventLogConfiguration(String,EventLogSession)","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogConfiguration(String,EventLogSession)","pos":[0,45]}]},{"pos":[19724,19730],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19911,19926],"content":"EventLogSession","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogSession","pos":[0,15]}]},{"pos":[20189,20198],"content":"Dispose()","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose()","pos":[0,9]}]},{"pos":[20509,20525],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[20734,20741],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20965,20977],"content":"IsClassicLog","needQuote":true,"needEscape":true,"nodes":[{"content":"IsClassicLog","pos":[0,12]}]},{"pos":[21178,21185],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21406,21415],"content":"IsEnabled","needQuote":true,"needEscape":true,"nodes":[{"content":"IsEnabled","pos":[0,9]}]},{"pos":[21610,21617],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21840,21851],"content":"LogFilePath","needQuote":true,"needEscape":true,"nodes":[{"content":"LogFilePath","pos":[0,11]}]},{"pos":[22049,22055],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[22277,22289],"content":"LogIsolation","needQuote":true,"needEscape":true,"nodes":[{"content":"LogIsolation","pos":[0,12]}]},{"pos":[22556,22573],"content":"EventLogIsolation","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogIsolation","pos":[0,17]}]},{"pos":[22840,22847],"content":"LogMode","needQuote":true,"needEscape":true,"nodes":[{"content":"LogMode","pos":[0,7]}]},{"pos":[23099,23111],"content":"EventLogMode","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogMode","pos":[0,12]}]},{"pos":[23368,23375],"content":"LogName","needQuote":true,"needEscape":true,"nodes":[{"content":"LogName","pos":[0,7]}]},{"pos":[23565,23571],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[23788,23795],"content":"LogType","needQuote":true,"needEscape":true,"nodes":[{"content":"LogType","pos":[0,7]}]},{"pos":[24047,24059],"content":"EventLogType","needQuote":true,"needEscape":true,"nodes":[{"content":"EventLogType","pos":[0,12]}]},{"pos":[24327,24345],"content":"MaximumSizeInBytes","needQuote":true,"needEscape":true,"nodes":[{"content":"MaximumSizeInBytes","pos":[0,18]}]},{"pos":[24556,24561],"content":"Int64","needQuote":true,"needEscape":true,"nodes":[{"content":"Int64","pos":[0,5]}]},{"pos":[24787,24805],"content":"OwningProviderName","needQuote":true,"needEscape":true,"nodes":[{"content":"OwningProviderName","pos":[0,18]}]},{"pos":[25017,25023],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[25251,25269],"content":"ProviderBufferSize","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderBufferSize","pos":[0,18]}]},{"pos":[25497,25512],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[25766,25785],"content":"ProviderControlGuid","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderControlGuid","pos":[0,19]}]},{"pos":[26014,26028],"content":"Nullable<ph id=\"ph1\">&lt;Guid&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Guid>"},{"pos":[26277,26293],"content":"ProviderKeywords","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderKeywords","pos":[0,16]}]},{"pos":[26517,26532],"content":"Nullable<ph id=\"ph1\">&lt;Int64&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int64>"},{"pos":[26782,26797],"content":"ProviderLatency","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderLatency","pos":[0,15]}]},{"pos":[27019,27034],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[27282,27295],"content":"ProviderLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderLevel","pos":[0,13]}]},{"pos":[27513,27528],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[27793,27823],"content":"ProviderMaximumNumberOfBuffers","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderMaximumNumberOfBuffers","pos":[0,30]}]},{"pos":[28075,28090],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[28355,28385],"content":"ProviderMinimumNumberOfBuffers","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderMinimumNumberOfBuffers","pos":[0,30]}]},{"pos":[28637,28652],"content":"Nullable<ph id=\"ph1\">&lt;Int32&gt;</ph>","needQuote":true,"needEscape":true,"source":"Nullable<Int32>"},{"pos":[28900,28913],"content":"ProviderNames","needQuote":true,"needEscape":true,"nodes":[{"content":"ProviderNames","pos":[0,13]}]},{"pos":[29175,29194],"content":"IEnumerable<ph id=\"ph1\">&lt;String&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<String>"},{"pos":[29468,29481],"content":"SaveChanges()","needQuote":true,"needEscape":true,"nodes":[{"content":"SaveChanges()","pos":[0,13]}]},{"pos":[29795,29813],"content":"SecurityDescriptor","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityDescriptor","pos":[0,18]}]},{"pos":[30025,30031],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  id: EventLogConfiguration\n  children:\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges\n  - System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor\n  langs:\n  - csharp\n  name: EventLogConfiguration\n  nameWithType: EventLogConfiguration\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  type: Class\n  syntax:\n    content: 'public class EventLogConfiguration : IDisposable'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: EventLogConfiguration(String)\n  nameWithType: EventLogConfiguration.EventLogConfiguration(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.EventLogConfiguration(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogConfiguration (string logName);\n    parameters:\n    - id: logName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)\n  id: '#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)'\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: EventLogConfiguration(String,EventLogSession)\n  nameWithType: EventLogConfiguration.EventLogConfiguration(String,EventLogSession)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.EventLogConfiguration(String,EventLogSession)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public EventLogConfiguration (string logName, System.Diagnostics.Eventing.Reader.EventLogSession session);\n    parameters:\n    - id: logName\n      type: System.String\n      description: Parameter description to be filled\n    - id: session\n      type: System.Diagnostics.Eventing.Reader.EventLogSession\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose\n  id: Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: EventLogConfiguration.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void Dispose ();\n    parameters: []\n  overload: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: EventLogConfiguration.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: protected virtual void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog\n  id: IsClassicLog\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: IsClassicLog\n  nameWithType: EventLogConfiguration.IsClassicLog\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public bool IsClassicLog { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled\n  id: IsEnabled\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: IsEnabled\n  nameWithType: EventLogConfiguration.IsEnabled\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public bool IsEnabled { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath\n  id: LogFilePath\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: LogFilePath\n  nameWithType: EventLogConfiguration.LogFilePath\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string LogFilePath { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation\n  id: LogIsolation\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: LogIsolation\n  nameWithType: EventLogConfiguration.LogIsolation\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogIsolation LogIsolation { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogIsolation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode\n  id: LogMode\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: LogMode\n  nameWithType: EventLogConfiguration.LogMode\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogMode LogMode { get; set; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName\n  id: LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: LogName\n  nameWithType: EventLogConfiguration.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string LogName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType\n  id: LogType\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: LogType\n  nameWithType: EventLogConfiguration.LogType\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Diagnostics.Eventing.Reader.EventLogType LogType { get; }\n    return:\n      type: System.Diagnostics.Eventing.Reader.EventLogType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes\n  id: MaximumSizeInBytes\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: MaximumSizeInBytes\n  nameWithType: EventLogConfiguration.MaximumSizeInBytes\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public long MaximumSizeInBytes { get; set; }\n    return:\n      type: System.Int64\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName\n  id: OwningProviderName\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: OwningProviderName\n  nameWithType: EventLogConfiguration.OwningProviderName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string OwningProviderName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize\n  id: ProviderBufferSize\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderBufferSize\n  nameWithType: EventLogConfiguration.ProviderBufferSize\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<int> ProviderBufferSize { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid\n  id: ProviderControlGuid\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderControlGuid\n  nameWithType: EventLogConfiguration.ProviderControlGuid\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<Guid> ProviderControlGuid { get; }\n    return:\n      type: System.Nullable{System.Guid}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords\n  id: ProviderKeywords\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderKeywords\n  nameWithType: EventLogConfiguration.ProviderKeywords\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<long> ProviderKeywords { get; set; }\n    return:\n      type: System.Nullable{System.Int64}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency\n  id: ProviderLatency\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderLatency\n  nameWithType: EventLogConfiguration.ProviderLatency\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<int> ProviderLatency { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel\n  id: ProviderLevel\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderLevel\n  nameWithType: EventLogConfiguration.ProviderLevel\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<int> ProviderLevel { get; set; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers\n  id: ProviderMaximumNumberOfBuffers\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderMaximumNumberOfBuffers\n  nameWithType: EventLogConfiguration.ProviderMaximumNumberOfBuffers\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<int> ProviderMaximumNumberOfBuffers { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers\n  id: ProviderMinimumNumberOfBuffers\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderMinimumNumberOfBuffers\n  nameWithType: EventLogConfiguration.ProviderMinimumNumberOfBuffers\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public Nullable<int> ProviderMinimumNumberOfBuffers { get; }\n    return:\n      type: System.Nullable{System.Int32}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames\n  id: ProviderNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: ProviderNames\n  nameWithType: EventLogConfiguration.ProviderNames\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public System.Collections.Generic.IEnumerable<string> ProviderNames { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.String}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges\n  id: SaveChanges\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: SaveChanges()\n  nameWithType: EventLogConfiguration.SaveChanges()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public void SaveChanges ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor\n  id: SecurityDescriptor\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  langs:\n  - csharp\n  name: SecurityDescriptor\n  nameWithType: EventLogConfiguration.SecurityDescriptor\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Diagnostics.Eventing.Reader\n  syntax:\n    content: public string SecurityDescriptor { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String)\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: EventLogConfiguration(String)\n  nameWithType: EventLogConfiguration.EventLogConfiguration(String)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.EventLogConfiguration(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.#ctor(System.String,System.Diagnostics.Eventing.Reader.EventLogSession)\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: EventLogConfiguration(String,EventLogSession)\n  nameWithType: EventLogConfiguration.EventLogConfiguration(String,EventLogSession)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.EventLogConfiguration(String,EventLogSession)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogSession\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogSession\n  nameWithType: EventLogSession\n  fullName: System.Diagnostics.Eventing.Reader.EventLogSession\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: Dispose()\n  nameWithType: EventLogConfiguration.Dispose()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose()\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(System.Boolean)\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: EventLogConfiguration.Dispose(Boolean)\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: IsClassicLog\n  nameWithType: EventLogConfiguration.IsClassicLog\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsClassicLog\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: IsEnabled\n  nameWithType: EventLogConfiguration.IsEnabled\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.IsEnabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: LogFilePath\n  nameWithType: EventLogConfiguration.LogFilePath\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogFilePath\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: LogIsolation\n  nameWithType: EventLogConfiguration.LogIsolation\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogIsolation\n- uid: System.Diagnostics.Eventing.Reader.EventLogIsolation\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogIsolation\n  nameWithType: EventLogIsolation\n  fullName: System.Diagnostics.Eventing.Reader.EventLogIsolation\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: LogMode\n  nameWithType: EventLogConfiguration.LogMode\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogMode\n- uid: System.Diagnostics.Eventing.Reader.EventLogMode\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogMode\n  nameWithType: EventLogMode\n  fullName: System.Diagnostics.Eventing.Reader.EventLogMode\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: LogName\n  nameWithType: EventLogConfiguration.LogName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: LogType\n  nameWithType: EventLogConfiguration.LogType\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.LogType\n- uid: System.Diagnostics.Eventing.Reader.EventLogType\n  parent: System.Diagnostics.Eventing.Reader\n  isExternal: false\n  name: EventLogType\n  nameWithType: EventLogType\n  fullName: System.Diagnostics.Eventing.Reader.EventLogType\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: MaximumSizeInBytes\n  nameWithType: EventLogConfiguration.MaximumSizeInBytes\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.MaximumSizeInBytes\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: OwningProviderName\n  nameWithType: EventLogConfiguration.OwningProviderName\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.OwningProviderName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderBufferSize\n  nameWithType: EventLogConfiguration.ProviderBufferSize\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderBufferSize\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderControlGuid\n  nameWithType: EventLogConfiguration.ProviderControlGuid\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderControlGuid\n- uid: System.Nullable{System.Guid}\n  parent: System\n  isExternal: false\n  name: Nullable<Guid>\n  nameWithType: Nullable<Guid>\n  fullName: System.Nullable<System.Guid>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderKeywords\n  nameWithType: EventLogConfiguration.ProviderKeywords\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderKeywords\n- uid: System.Nullable{System.Int64}\n  parent: System\n  isExternal: false\n  name: Nullable<Int64>\n  nameWithType: Nullable<Int64>\n  fullName: System.Nullable<System.Int64>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderLatency\n  nameWithType: EventLogConfiguration.ProviderLatency\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLatency\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderLevel\n  nameWithType: EventLogConfiguration.ProviderLevel\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderLevel\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderMaximumNumberOfBuffers\n  nameWithType: EventLogConfiguration.ProviderMaximumNumberOfBuffers\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMaximumNumberOfBuffers\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderMinimumNumberOfBuffers\n  nameWithType: EventLogConfiguration.ProviderMinimumNumberOfBuffers\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderMinimumNumberOfBuffers\n- uid: System.Nullable{System.Int32}\n  parent: System\n  isExternal: false\n  name: Nullable<Int32>\n  nameWithType: Nullable<Int32>\n  fullName: System.Nullable<System.Int32>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: ProviderNames\n  nameWithType: EventLogConfiguration.ProviderNames\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.ProviderNames\n- uid: System.Collections.Generic.IEnumerable{System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<String>\n  nameWithType: IEnumerable<String>\n  fullName: System.Collections.Generic.IEnumerable<System.String>\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: SaveChanges()\n  nameWithType: EventLogConfiguration.SaveChanges()\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SaveChanges()\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  name: SecurityDescriptor\n  nameWithType: EventLogConfiguration.SecurityDescriptor\n  fullName: System.Diagnostics.Eventing.Reader.EventLogConfiguration.SecurityDescriptor\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.Eventing.Reader.EventLogConfiguration.Dispose*\n  parent: System.Diagnostics.Eventing.Reader.EventLogConfiguration\n  isExternal: false\n  nameWithType: EventLogConfiguration.\n"}