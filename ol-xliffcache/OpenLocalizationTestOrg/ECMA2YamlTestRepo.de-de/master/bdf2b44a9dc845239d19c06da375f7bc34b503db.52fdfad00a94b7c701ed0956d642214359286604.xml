{"nodes":[{"pos":[783,806],"content":"ConfigurationPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigurationPermission","pos":[0,23]}]},{"pos":[2289,2329],"content":"ConfigurationPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigurationPermission(PermissionState)","pos":[0,40]}]},{"pos":[2816,2850],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3051,3057],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[3423,3457],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3730,3754],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[4198,4232],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4501,4523],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[4962,4996],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5068,5102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5373,5396],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[5815,5849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5908,5942],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6163,6179],"content":"IsUnrestricted()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsUnrestricted()","pos":[0,16]}]},{"pos":[6530,6564],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6767,6774],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[7151,7185],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7446,7464],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[7891,7925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7997,8031],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8165,8201],"content":"System.Security.CodeAccessPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.CodeAccessPermission","pos":[0,36]}]},{"pos":[8388,8428],"content":"ConfigurationPermission(PermissionState)","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigurationPermission(PermissionState)","pos":[0,40]}]},{"pos":[8725,8740],"content":"PermissionState","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionState","pos":[0,15]}]},{"pos":[8969,8975],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[9176,9187],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[9432,9456],"content":"FromXml(SecurityElement)","needQuote":true,"needEscape":true,"nodes":[{"content":"FromXml(SecurityElement)","pos":[0,24]}]},{"pos":[9697,9712],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[9963,9985],"content":"Intersect(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Intersect(IPermission)","pos":[0,22]}]},{"pos":[10218,10229],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[10387,10398],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[10642,10665],"content":"IsSubsetOf(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"IsSubsetOf(IPermission)","pos":[0,23]}]},{"pos":[10878,10885],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11026,11037],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[11256,11272],"content":"IsUnrestricted()","needQuote":true,"needEscape":true,"nodes":[{"content":"IsUnrestricted()","pos":[0,16]}]},{"pos":[11471,11478],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11671,11678],"content":"ToXml()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToXml()","pos":[0,7]}]},{"pos":[11885,11900],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[12147,12165],"content":"Union(IPermission)","needQuote":true,"needEscape":true,"nodes":[{"content":"Union(IPermission)","pos":[0,18]}]},{"pos":[12390,12401],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]},{"pos":[12559,12570],"content":"IPermission","needQuote":true,"needEscape":true,"nodes":[{"content":"IPermission","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Configuration.ConfigurationPermission\n  id: ConfigurationPermission\n  children:\n  - System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Configuration.ConfigurationPermission.Copy\n  - System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)\n  - System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)\n  - System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Configuration.ConfigurationPermission.IsUnrestricted\n  - System.Configuration.ConfigurationPermission.ToXml\n  - System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: ConfigurationPermission\n  nameWithType: ConfigurationPermission\n  fullName: System.Configuration.ConfigurationPermission\n  type: Class\n  syntax:\n    content: 'public sealed class ConfigurationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: ConfigurationPermission(PermissionState)\n  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)\n  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public ConfigurationPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.Copy\n  id: Copy\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ConfigurationPermission.Copy()\n  fullName: System.Configuration.ConfigurationPermission.Copy()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ConfigurationPermission.FromXml(SecurityElement)\n  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: ConfigurationPermission.Intersect(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: ConfigurationPermission.IsUnrestricted()\n  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.ToXml\n  id: ToXml\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ConfigurationPermission.ToXml()\n  fullName: System.Configuration.ConfigurationPermission.ToXml()\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: ConfigurationPermission.Union(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - System.Configuration\n  namespace: System.Configuration\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n    return:\n      type: System.Security.IPermission\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.CodeAccessPermission\n  isExternal: false\n  name: System.Security.CodeAccessPermission\n- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: ConfigurationPermission(PermissionState)\n  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)\n  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Configuration.ConfigurationPermission.Copy\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: ConfigurationPermission.Copy()\n  fullName: System.Configuration.ConfigurationPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ConfigurationPermission.FromXml(SecurityElement)\n  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: ConfigurationPermission.Intersect(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Configuration.ConfigurationPermission.IsUnrestricted\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: ConfigurationPermission.IsUnrestricted()\n  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Configuration.ConfigurationPermission.ToXml\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: ConfigurationPermission.ToXml()\n  fullName: System.Configuration.ConfigurationPermission.ToXml()\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)\n  parent: System.Configuration.ConfigurationPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: ConfigurationPermission.Union(IPermission)\n  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n"}