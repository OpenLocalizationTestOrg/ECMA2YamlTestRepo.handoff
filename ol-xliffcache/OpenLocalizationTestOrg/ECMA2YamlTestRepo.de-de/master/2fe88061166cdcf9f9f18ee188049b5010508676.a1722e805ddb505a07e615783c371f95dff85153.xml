{"nodes":[{"pos":[832,841],"content":"ObjectAce","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAce","pos":[0,9]}]},{"pos":[3432,3529],"content":"ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])","pos":[0,97]}]},{"pos":[4325,4359],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4454,4488],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4554,4588],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4679,4713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4806,4840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4899,4933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5001,5035],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5103,5137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5200,5234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5441,5453],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[5766,5800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6065,6092],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[6485,6519],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6581,6615],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6842,6864],"content":"InheritedObjectAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritedObjectAceType","pos":[0,22]}]},{"pos":[7203,7237],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7482,7506],"content":"MaxOpaqueLength(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxOpaqueLength(Boolean)","pos":[0,24]}]},{"pos":[7879,7913],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7970,8004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8215,8229],"content":"ObjectAceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAceFlags","pos":[0,14]}]},{"pos":[8617,8651],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8860,8873],"content":"ObjectAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAceType","pos":[0,13]}]},{"pos":[9185,9219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9359,9401],"content":"System.Security.AccessControl.QualifiedAce","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.AccessControl.QualifiedAce","pos":[0,42]}]},{"pos":[9772,9869],"content":"ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])","pos":[0,97]}]},{"pos":[10258,10266],"content":"AceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"AceFlags","pos":[0,8]}]},{"pos":[10461,10473],"content":"AceQualifier","needQuote":true,"needEscape":true,"nodes":[{"content":"AceQualifier","pos":[0,12]}]},{"pos":[10623,10628],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10792,10810],"content":"SecurityIdentifier","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityIdentifier","pos":[0,18]}]},{"pos":[11023,11037],"content":"ObjectAceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAceFlags","pos":[0,14]}]},{"pos":[11190,11194],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[11304,11308],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[11421,11428],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[11544,11548],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11734,11746],"content":"BinaryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"BinaryLength","pos":[0,12]}]},{"pos":[11916,11921],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12136,12163],"content":"GetBinaryForm(Byte[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetBinaryForm(Byte[],Int32)","pos":[0,27]}]},{"pos":[12362,12366],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[12479,12484],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[12680,12702],"content":"InheritedObjectAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"InheritedObjectAceType","pos":[0,22]}]},{"pos":[12891,12895],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]},{"pos":[13098,13122],"content":"MaxOpaqueLength(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxOpaqueLength(Boolean)","pos":[0,24]}]},{"pos":[13316,13321],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[13436,13443],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[13635,13649],"content":"ObjectAceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAceFlags","pos":[0,14]}]},{"pos":[13878,13892],"content":"ObjectAceFlags","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAceFlags","pos":[0,14]}]},{"pos":[14120,14133],"content":"ObjectAceType","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectAceType","pos":[0,13]}]},{"pos":[14304,14308],"content":"Guid","needQuote":true,"needEscape":true,"nodes":[{"content":"Guid","pos":[0,4]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.AccessControl.ObjectAce\n  id: ObjectAce\n  children:\n  - System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  - System.Security.AccessControl.ObjectAce.BinaryLength\n  - System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  - System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  - System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  - System.Security.AccessControl.ObjectAce.ObjectAceType\n  langs:\n  - csharp\n  name: ObjectAce\n  nameWithType: ObjectAce\n  fullName: System.Security.AccessControl.ObjectAce\n  type: Class\n  syntax:\n    content: 'public sealed class ObjectAce : System.Security.AccessControl.QualifiedAce'\n  inheritance:\n  - System.Object\n  - System.Security.AccessControl.GenericAce\n  - System.Security.AccessControl.KnownAce\n  - System.Security.AccessControl.QualifiedAce\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.AccessControl.GenericAce.AceFlags\n  - System.Security.AccessControl.GenericAce.AceType\n  - System.Security.AccessControl.GenericAce.AuditFlags\n  - System.Security.AccessControl.GenericAce.Copy\n  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)\n  - System.Security.AccessControl.GenericAce.Equals(System.Object)\n  - System.Security.AccessControl.GenericAce.GetHashCode\n  - System.Security.AccessControl.GenericAce.InheritanceFlags\n  - System.Security.AccessControl.GenericAce.IsInherited\n  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)\n  - System.Security.AccessControl.GenericAce.PropagationFlags\n  - System.Security.AccessControl.KnownAce.AccessMask\n  - System.Security.AccessControl.KnownAce.SecurityIdentifier\n  - System.Security.AccessControl.QualifiedAce.AceQualifier\n  - System.Security.AccessControl.QualifiedAce.GetOpaque\n  - System.Security.AccessControl.QualifiedAce.IsCallback\n  - System.Security.AccessControl.QualifiedAce.OpaqueLength\n  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  id: '#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])'\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])\n  nameWithType: ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])\n  fullName: System.Security.AccessControl.ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public ObjectAce (System.Security.AccessControl.AceFlags aceFlags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, System.Security.AccessControl.ObjectAceFlags flags, Guid type, Guid inheritedType, bool isCallback, byte[] opaque);\n    parameters:\n    - id: aceFlags\n      type: System.Security.AccessControl.AceFlags\n      description: Parameter description to be filled\n    - id: qualifier\n      type: System.Security.AccessControl.AceQualifier\n      description: Parameter description to be filled\n    - id: accessMask\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: sid\n      type: System.Security.Principal.SecurityIdentifier\n      description: Parameter description to be filled\n    - id: flags\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Parameter description to be filled\n    - id: type\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: inheritedType\n      type: System.Guid\n      description: Parameter description to be filled\n    - id: isCallback\n      type: System.Boolean\n      description: Parameter description to be filled\n    - id: opaque\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.BinaryLength\n  id: BinaryLength\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: BinaryLength\n  nameWithType: ObjectAce.BinaryLength\n  fullName: System.Security.AccessControl.ObjectAce.BinaryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override int BinaryLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  id: GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: ObjectAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.ObjectAce.GetBinaryForm(Byte[],Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public override void GetBinaryForm (byte[] binaryForm, int offset);\n    parameters:\n    - id: binaryForm\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  id: InheritedObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: InheritedObjectAceType\n  nameWithType: ObjectAce.InheritedObjectAceType\n  fullName: System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public Guid InheritedObjectAceType { get; set; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  id: MaxOpaqueLength(System.Boolean)\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: MaxOpaqueLength(Boolean)\n  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)\n  fullName: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public static int MaxOpaqueLength (bool isCallback);\n    parameters:\n    - id: isCallback\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  id: ObjectAceFlags\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: ObjectAceFlags\n  nameWithType: ObjectAce.ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public System.Security.AccessControl.ObjectAceFlags ObjectAceFlags { get; set; }\n    return:\n      type: System.Security.AccessControl.ObjectAceFlags\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceType\n  id: ObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  langs:\n  - csharp\n  name: ObjectAceType\n  nameWithType: ObjectAce.ObjectAceType\n  fullName: System.Security.AccessControl.ObjectAce.ObjectAceType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.AccessControl\n  syntax:\n    content: public Guid ObjectAceType { get; set; }\n    return:\n      type: System.Guid\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.AccessControl.QualifiedAce\n  isExternal: false\n  name: System.Security.AccessControl.QualifiedAce\n- uid: System.Security.AccessControl.ObjectAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Security.AccessControl.ObjectAceFlags,System.Guid,System.Guid,System.Boolean,System.Byte[])\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])\n  nameWithType: ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])\n  fullName: System.Security.AccessControl.ObjectAce.ObjectAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])\n- uid: System.Security.AccessControl.AceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceFlags\n  nameWithType: AceFlags\n  fullName: System.Security.AccessControl.AceFlags\n- uid: System.Security.AccessControl.AceQualifier\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: AceQualifier\n  nameWithType: AceQualifier\n  fullName: System.Security.AccessControl.AceQualifier\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Principal.SecurityIdentifier\n  parent: System.Security.Principal\n  isExternal: false\n  name: SecurityIdentifier\n  nameWithType: SecurityIdentifier\n  fullName: System.Security.Principal.SecurityIdentifier\n- uid: System.Security.AccessControl.ObjectAceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAceFlags\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.AccessControl.ObjectAce.BinaryLength\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: BinaryLength\n  nameWithType: ObjectAce.BinaryLength\n  fullName: System.Security.AccessControl.ObjectAce.BinaryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.ObjectAce.GetBinaryForm(System.Byte[],System.Int32)\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: GetBinaryForm(Byte[],Int32)\n  nameWithType: ObjectAce.GetBinaryForm(Byte[],Int32)\n  fullName: System.Security.AccessControl.ObjectAce.GetBinaryForm(Byte[],Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: InheritedObjectAceType\n  nameWithType: ObjectAce.InheritedObjectAceType\n  fullName: System.Security.AccessControl.ObjectAce.InheritedObjectAceType\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(System.Boolean)\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: MaxOpaqueLength(Boolean)\n  nameWithType: ObjectAce.MaxOpaqueLength(Boolean)\n  fullName: System.Security.AccessControl.ObjectAce.MaxOpaqueLength(Boolean)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceFlags\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAce.ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAce.ObjectAceFlags\n- uid: System.Security.AccessControl.ObjectAceFlags\n  parent: System.Security.AccessControl\n  isExternal: false\n  name: ObjectAceFlags\n  nameWithType: ObjectAceFlags\n  fullName: System.Security.AccessControl.ObjectAceFlags\n- uid: System.Security.AccessControl.ObjectAce.ObjectAceType\n  parent: System.Security.AccessControl.ObjectAce\n  isExternal: false\n  name: ObjectAceType\n  nameWithType: ObjectAce.ObjectAceType\n  fullName: System.Security.AccessControl.ObjectAce.ObjectAceType\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n"}