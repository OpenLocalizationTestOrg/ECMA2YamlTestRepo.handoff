### YamlMime:ManagedReference
items:
- uid: System.Collections.Generic.HashSet`1
  id: HashSet`1
  children:
  - System.Collections.Generic.HashSet`1.#ctor
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer`1)
  - System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)
  - System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.HashSet`1.Add(`0)
  - System.Collections.Generic.HashSet`1.Clear
  - System.Collections.Generic.HashSet`1.Comparer
  - System.Collections.Generic.HashSet`1.Contains(`0)
  - System.Collections.Generic.HashSet`1.CopyTo(`0[])
  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  - System.Collections.Generic.HashSet`1.Count
  - System.Collections.Generic.HashSet`1.CreateSetComparer
  - System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.GetEnumerator
  - System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  - System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.Remove(`0)
  - System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate`1)
  - System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.HashSet`1.TrimExcess
  - System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable`1)
  langs:
  - csharp
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  type: Class
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("Count = {Count}")]

      [System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Generic.HashSetDebugView`1))]

      public class HashSet<T> : System.Collections.Generic.ICollection<T>, System.Collections.Generic.IEnumerable<T>, System.Collections.Generic.IReadOnlyCollection<T>, System.Collections.Generic.ISet<T>, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable
    typeParameters:
    - id: T
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection<T>
  - System.Collections.Generic.IEnumerable<T>
  - System.Collections.Generic.IReadOnlyCollection<T>
  - System.Collections.Generic.ISet<T>
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: HashSet()
  nameWithType: HashSet<T>.HashSet()
  fullName: System.Collections.Generic.HashSet<T>.HashSet()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1)
  id: '#ctor(System.Collections.Generic.IEnumerable`1)'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: HashSet(IEnumerable<T>)
  nameWithType: HashSet<T>.HashSet(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet (System.Collections.Generic.IEnumerable<T> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer`1)
  id: '#ctor(System.Collections.Generic.IEqualityComparer`1)'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: HashSet(IEqualityComparer<T>)
  nameWithType: HashSet<T>.HashSet(IEqualityComparer<T>)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEqualityComparer<T>)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet (System.Collections.Generic.IEqualityComparer<T> comparer);
    parameters:
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)
  id: '#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: HashSet(IEnumerable<T>,IEqualityComparer<T>)
  nameWithType: HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public HashSet (System.Collections.Generic.IEnumerable<T> collection, System.Collections.Generic.IEqualityComparer<T> comparer);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: HashSet(SerializationInfo,StreamingContext)
  nameWithType: HashSet<T>.HashSet(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: protected HashSet (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Parameter description to be filled
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Add(T)
  nameWithType: HashSet<T>.Add(T)
  fullName: System.Collections.Generic.HashSet<T>.Add(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Clear
  id: Clear
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Clear()
  nameWithType: HashSet<T>.Clear()
  fullName: System.Collections.Generic.HashSet<T>.Clear()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Comparer
  id: Comparer
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Comparer
  nameWithType: HashSet<T>.Comparer
  fullName: System.Collections.Generic.HashSet<T>.Comparer
  type: Property
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.IEqualityComparer<T> Comparer { get; }
    return:
      type: System.Collections.Generic.IEqualityComparer`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Contains(T)
  nameWithType: HashSet<T>.Contains(T)
  fullName: System.Collections.Generic.HashSet<T>.Contains(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: CopyTo(T[])
  nameWithType: HashSet<T>.CopyTo(T[])
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
  overload: System.Collections.Generic.HashSet`1.CopyTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: CopyTo(T[],Int32)
  nameWithType: HashSet<T>.CopyTo(T[],Int32)
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
  overload: System.Collections.Generic.HashSet`1.CopyTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  id: CopyTo(`0[],System.Int32,System.Int32)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: CopyTo(T[],Int32,Int32)
  nameWithType: HashSet<T>.CopyTo(T[],Int32,Int32)
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo (T[] array, int arrayIndex, int count);
    parameters:
    - id: array
      type: T[]
      description: Parameter description to be filled
    - id: arrayIndex
      type: System.Int32
      description: Parameter description to be filled
    - id: count
      type: System.Int32
      description: Parameter description to be filled
  overload: System.Collections.Generic.HashSet`1.CopyTo*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Count
  id: Count
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Count
  nameWithType: HashSet<T>.Count
  fullName: System.Collections.Generic.HashSet<T>.Count
  type: Property
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.CreateSetComparer
  id: CreateSetComparer
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: CreateSetComparer()
  nameWithType: HashSet<T>.CreateSetComparer()
  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public static System.Collections.Generic.IEqualityComparer<System.Collections.Generic.HashSet<T>> CreateSetComparer ();
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.HashSet{T}}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable`1)
  id: ExceptWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: ExceptWith(IEnumerable<T>)
  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void ExceptWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HashSet<T>.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public System.Collections.Generic.HashSet<T>.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.HashSet`1.Enumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: Parameter description to be filled
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable`1)
  id: IntersectWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: IntersectWith(IEnumerable<T>)
  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void IntersectWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)
  id: IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsProperSubsetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)
  id: IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsProperSupersetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable`1)
  id: IsSubsetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsSubsetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable`1)
  id: IsSupersetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool IsSupersetOf (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  id: OnDeserialization(System.Object)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: OnDeserialization(Object)
  nameWithType: HashSet<T>.OnDeserialization(Object)
  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public virtual void OnDeserialization (object sender);
    parameters:
    - id: sender
      type: System.Object
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable`1)
  id: Overlaps(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Overlaps(IEnumerable<T>)
  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.Overlaps(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Overlaps (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: Remove(T)
  nameWithType: HashSet<T>.Remove(T)
  fullName: System.Collections.Generic.HashSet<T>.Remove(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate`1)
  id: RemoveWhere(System.Predicate`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: RemoveWhere(Predicate<T>)
  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)
  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(Predicate<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public int RemoveWhere (Predicate<T> match);
    parameters:
    - id: match
      type: System.Predicate`1
      description: Parameter description to be filled
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable`1)
  id: SetEquals(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: SetEquals(IEnumerable<T>)
  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.SetEquals(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public bool SetEquals (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)
  id: SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void SymmetricExceptWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  id: System#Collections#Generic#ICollection{T}#Add(`0)
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: System.Collections.Generic.ICollection(T)
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection(T)
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection(T)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<T>.Add (T item);
    parameters:
    - id: item
      type: T
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: bool System.Collections.Generic.ICollection<T>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: HashSet<T>.System.Collections.Generic.IEnumerable()
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.Generic.IEnumerator<T> IEnumerable<T>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HashSet<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.TrimExcess
  id: TrimExcess
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: TrimExcess()
  nameWithType: HashSet<T>.TrimExcess()
  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void TrimExcess ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable`1)
  id: UnionWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  langs:
  - csharp
  name: UnionWith(IEnumerable<T>)
  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.UnionWith(IEnumerable<T>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Collections.Generic
  syntax:
    content: public void UnionWith (System.Collections.Generic.IEnumerable<T> other);
    parameters:
    - id: other
      type: System.Collections.Generic.IEnumerable`1
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Collections.Generic.HashSet`1.#ctor
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: HashSet()
  nameWithType: HashSet<T>.HashSet()
  fullName: System.Collections.Generic.HashSet<T>.HashSet()
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: HashSet(IEnumerable<T>)
  nameWithType: HashSet<T>.HashSet(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEqualityComparer`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: HashSet(IEqualityComparer<T>)
  nameWithType: HashSet<T>.HashSet(IEqualityComparer<T>)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEqualityComparer<T>)
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Collections.Generic.IEnumerable`1,System.Collections.Generic.IEqualityComparer`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: HashSet(IEnumerable<T>,IEqualityComparer<T>)
  nameWithType: HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(IEnumerable<T>,IEqualityComparer<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.HashSet`1.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: HashSet(SerializationInfo,StreamingContext)
  nameWithType: HashSet<T>.HashSet(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.HashSet<T>.HashSet(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Generic.HashSet`1.Add(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Add(T)
  nameWithType: HashSet<T>.Add(T)
  fullName: System.Collections.Generic.HashSet<T>.Add(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.HashSet`1.Clear
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Clear()
  nameWithType: HashSet<T>.Clear()
  fullName: System.Collections.Generic.HashSet<T>.Clear()
- uid: System.Collections.Generic.HashSet`1.Comparer
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Comparer
  nameWithType: HashSet<T>.Comparer
  fullName: System.Collections.Generic.HashSet<T>.Comparer
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<T>
  nameWithType: IEqualityComparer<T>
  fullName: System.Collections.Generic.IEqualityComparer<T>
- uid: System.Collections.Generic.HashSet`1.Contains(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Contains(T)
  nameWithType: HashSet<T>.Contains(T)
  fullName: System.Collections.Generic.HashSet<T>.Contains(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[])
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo(T[])
  nameWithType: HashSet<T>.CopyTo(T[])
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[])
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo(T[],Int32)
  nameWithType: HashSet<T>.CopyTo(T[],Int32)
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.HashSet`1.CopyTo(`0[],System.Int32,System.Int32)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CopyTo(T[],Int32,Int32)
  nameWithType: HashSet<T>.CopyTo(T[],Int32,Int32)
  fullName: System.Collections.Generic.HashSet<T>.CopyTo(T[],Int32,Int32)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T[]
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.HashSet`1.Count
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Count
  nameWithType: HashSet<T>.Count
  fullName: System.Collections.Generic.HashSet<T>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.HashSet`1.CreateSetComparer
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: CreateSetComparer()
  nameWithType: HashSet<T>.CreateSetComparer()
  fullName: System.Collections.Generic.HashSet<T>.CreateSetComparer()
- uid: System.Collections.Generic.IEqualityComparer{System.Collections.Generic.HashSet{T}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEqualityComparer<HashSet<T>>
  nameWithType: IEqualityComparer<HashSet<T>>
  fullName: System.Collections.Generic.IEqualityComparer<System.Collections.Generic.HashSet<T>>
- uid: System.Collections.Generic.HashSet`1.ExceptWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: ExceptWith(IEnumerable<T>)
  nameWithType: HashSet<T>.ExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.ExceptWith(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: GetEnumerator()
  nameWithType: HashSet<T>.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.GetEnumerator()
- uid: System.Collections.Generic.HashSet`1.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  name: HashSet<T>+Enumerator
  nameWithType: HashSet<T>+Enumerator
  fullName: System.Collections.Generic.HashSet<T>+Enumerator
- uid: System.Collections.Generic.HashSet`1.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Collections.Generic.HashSet<T>.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Collections.Generic.HashSet`1.IntersectWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IntersectWith(IEnumerable<T>)
  nameWithType: HashSet<T>.IntersectWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IntersectWith(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsProperSubsetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsProperSubsetOf(IEnumerable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsProperSupersetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsProperSupersetOf(IEnumerable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsSubsetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsSubsetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsSubsetOf(IEnumerable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: IsSupersetOf(IEnumerable<T>)
  nameWithType: HashSet<T>.IsSupersetOf(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.IsSupersetOf(IEnumerable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.OnDeserialization(System.Object)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: OnDeserialization(Object)
  nameWithType: HashSet<T>.OnDeserialization(Object)
  fullName: System.Collections.Generic.HashSet<T>.OnDeserialization(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.HashSet`1.Overlaps(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Overlaps(IEnumerable<T>)
  nameWithType: HashSet<T>.Overlaps(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.Overlaps(IEnumerable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.Remove(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: Remove(T)
  nameWithType: HashSet<T>.Remove(T)
  fullName: System.Collections.Generic.HashSet<T>.Remove(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.HashSet`1.RemoveWhere(System.Predicate`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: RemoveWhere(Predicate<T>)
  nameWithType: HashSet<T>.RemoveWhere(Predicate<T>)
  fullName: System.Collections.Generic.HashSet<T>.RemoveWhere(Predicate<T>)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Predicate`1
  parent: System
  isExternal: false
  name: Predicate<T>
  nameWithType: Predicate<T>
  fullName: System.Predicate<T>
- uid: System.Collections.Generic.HashSet`1.SetEquals(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: SetEquals(IEnumerable<T>)
  nameWithType: HashSet<T>.SetEquals(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.SetEquals(IEnumerable<T>)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: SymmetricExceptWith(IEnumerable<T>)
  nameWithType: HashSet<T>.SymmetricExceptWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.SymmetricExceptWith(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#Add(`0)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.Generic.ICollection(T)
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection(T)
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection(T)
- uid: T
  parent: ''
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: HashSet<T>.System.Collections.Generic.ICollection
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.ICollection
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.HashSet`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: HashSet<T>.System.Collections.Generic.IEnumerable()
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
- uid: System.Collections.Generic.HashSet`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HashSet<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.HashSet<T>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Generic.HashSet`1.TrimExcess
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: TrimExcess()
  nameWithType: HashSet<T>.TrimExcess()
  fullName: System.Collections.Generic.HashSet<T>.TrimExcess()
- uid: System.Collections.Generic.HashSet`1.UnionWith(System.Collections.Generic.IEnumerable`1)
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  name: UnionWith(IEnumerable<T>)
  nameWithType: HashSet<T>.UnionWith(IEnumerable<T>)
  fullName: System.Collections.Generic.HashSet<T>.UnionWith(IEnumerable<T>)
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
- uid: System.Collections.Generic.HashSet`1.CopyTo*
  parent: System.Collections.Generic.HashSet`1
  isExternal: false
  nameWithType: HashSet<T>.
