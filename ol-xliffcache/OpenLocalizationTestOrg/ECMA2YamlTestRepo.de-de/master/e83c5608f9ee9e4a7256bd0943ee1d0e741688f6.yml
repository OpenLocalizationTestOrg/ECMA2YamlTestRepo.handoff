### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  id: DbExpressionBuilder
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  - System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  langs:
  - csharp
  name: DbExpressionBuilder
  nameWithType: DbExpressionBuilder
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  type: Class
  syntax:
    content: public static class DbExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate Aggregate (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: Parameter description to be filled
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  id: AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionAggregate AggregateDistinct (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: Parameter description to be filled
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbFunctionAggregate
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression All (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbAndExpression And (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbAndExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  id: Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Any (this System.Data.Common.CommandTrees.DbExpression source);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbQuantifierExpression Any (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbQuantifierExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  id: As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate> As (this System.Data.Common.CommandTrees.DbAggregate value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbAggregate
      description: Parameter description to be filled
    - id: alias
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression> As (this System.Data.Common.CommandTrees.DbExpression value, string alias);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: alias
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  id: Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding Bind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpressionBinding BindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: varName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  id: Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCaseExpression Case (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> whenExpressions, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> thenExpressions, System.Data.Common.CommandTrees.DbExpression elseExpression);
    parameters:
    - id: whenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: thenExpressions
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: elseExpression
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbCaseExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCastExpression CastTo (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage toType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: toType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbCastExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  id: Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (object value);
    parameters:
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  id: Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression Constant (this System.Data.Metadata.Edm.TypeUsage constantType, object value);
    parameters:
    - id: constantType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    - id: value
      type: System.Object
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: Parameter description to be filled
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: Parameter description to be filled
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: Parameter description to be filled
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: Parameter description to be filled
    - id: keyValues
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  id: CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression CreateRef (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Metadata.Edm.EntityType entityType, System.Data.Common.CommandTrees.DbExpression[] keyValues);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: Parameter description to be filled
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: Parameter description to be filled
    - id: keyValues
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression CrossApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  id: CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbCrossJoinExpression CrossJoin (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding> inputs);
    parameters:
    - id: inputs
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbCrossJoinExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  id: Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDerefExpression Deref (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbDerefExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  id: Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbDistinctExpression Distinct (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbDistinctExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Divide (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  id: Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbElementExpression Element (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbElementExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression Equal (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExceptExpression Except (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbExceptExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  id: Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Exists (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  id: "False"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression False { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Filter (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression predicate);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: predicate
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression FullOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  id: GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbEntityRefExpression GetEntityRef (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbEntityRefExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  id: GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefKeyExpression GetRefKey (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefKeyExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression GreaterThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  id: GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBind (this System.Data.Common.CommandTrees.DbExpression input);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  id: GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupExpressionBinding GroupBindAs (this System.Data.Common.CommandTrees.DbExpression input, string varName, string groupVarName);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: varName
      type: System.String
      description: Parameter description to be filled
    - id: groupVarName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  id: GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbGroupByExpression GroupBy (this System.Data.Common.CommandTrees.DbGroupExpressionBinding input, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> keys, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbAggregate>> aggregates);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding
      description: Parameter description to be filled
    - id: keys
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: Parameter description to be filled
    - id: aggregates
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbGroupByExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression InnerJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIntersectExpression Intersect (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbIntersectExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambdaExpression Invoke (this System.Data.Common.CommandTrees.DbLambda lambda, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: lambda
      type: System.Data.Common.CommandTrees.DbLambda
      description: Parameter description to be filled
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLambdaExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  id: Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Invoke (this System.Data.Metadata.Edm.EdmFunction function, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: function
      type: System.Data.Metadata.Edm.EdmFunction
      description: Parameter description to be filled
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  id: IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsEmptyExpression IsEmpty (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbIsEmptyExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  id: IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsNullExpression IsNull (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbIsNullExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOf (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbIsOfExpression IsOfOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbIsOfExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression Join (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Join<TSelector> (this System.Data.Common.CommandTrees.DbExpression outer, System.Data.Common.CommandTrees.DbExpression inner, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> outerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> innerKey, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: outer
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: inner
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: outerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: innerKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression> variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: variables
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  id: Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLambda Lambda (System.Data.Common.CommandTrees.DbExpression body, System.Data.Common.CommandTrees.DbVariableReferenceExpression[] variables);
    parameters:
    - id: body
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: variables
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLambda
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: joinCondition
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  id: LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbJoinExpression LeftOuterJoin (this System.Data.Common.CommandTrees.DbExpressionBinding left, System.Data.Common.CommandTrees.DbExpressionBinding right, System.Data.Common.CommandTrees.DbExpression joinCondition);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: joinCondition
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbJoinExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThan (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression LessThanOrEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLikeExpression Like (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression pattern, System.Data.Common.CommandTrees.DbExpression escape);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: pattern
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: escape
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLikeExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Limit (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Minus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Modulo (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Multiply (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Common.CommandTrees.DbExpression navigateFrom, System.Data.Metadata.Edm.RelationshipEndMember fromEnd, System.Data.Metadata.Edm.RelationshipEndMember toEnd);
    parameters:
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: fromEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: Parameter description to be filled
    - id: toEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  id: Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRelationshipNavigationExpression Navigate (this System.Data.Metadata.Edm.RelationshipType type, string fromEndName, string toEndName, System.Data.Common.CommandTrees.DbExpression navigateFrom);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.RelationshipType
      description: Parameter description to be filled
    - id: fromEndName
      type: System.String
      description: Parameter description to be filled
    - id: toEndName
      type: System.String
      description: Parameter description to be filled
    - id: navigateFrom
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  id: Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Negate (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    - id: arguments
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  id: New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression New (this System.Data.Metadata.Edm.TypeUsage instanceType, System.Data.Common.CommandTrees.DbExpression[] arguments);
    parameters:
    - id: instanceType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    - id: arguments
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  id: NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression> elements);
    parameters:
    - id: elements
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  id: NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewCollection (System.Data.Common.CommandTrees.DbExpression[] elements);
    parameters:
    - id: elements
      type: System.Data.Common.CommandTrees.DbExpression[]
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  id: NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewEmptyCollection (this System.Data.Metadata.Edm.TypeUsage collectionType);
    parameters:
    - id: collectionType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNewInstanceExpression NewRow (System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> columnValues);
    parameters:
    - id: columnValues
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNewInstanceExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  id: Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNotExpression Not (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNotExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbComparisonExpression NotEqual (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbComparisonExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  id: Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbNullExpression Null (this System.Data.Metadata.Edm.TypeUsage nullType);
    parameters:
    - id: nullType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbNullExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfType (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOfTypeExpression OfTypeOnly (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage type);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbOfTypeExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbOrExpression Or (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbOrExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderBy (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: collation
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression OrderByDescending (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: collation
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  id: OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<string,System.Data.Common.CommandTrees.DbExpression>> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  id: OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbApplyExpression OuterApply (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpressionBinding apply);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: apply
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbApplyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbParameterReferenceExpression Parameter (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbParameterReferenceExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression Plus (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  id: Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Project (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Data.Common.CommandTrees.DbExpression projection);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: projection
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.EdmProperty propertyMetadata);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: propertyMetadata
      type: System.Data.Metadata.Edm.EdmProperty
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.NavigationProperty navigationProperty);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: navigationProperty
      type: System.Data.Metadata.Edm.NavigationProperty
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, System.Data.Metadata.Edm.RelationshipEndMember relationshipEnd);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: relationshipEnd
      type: System.Data.Metadata.Edm.RelationshipEndMember
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbPropertyExpression Property (this System.Data.Common.CommandTrees.DbExpression instance, string propertyName);
    parameters:
    - id: instance
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: propertyName
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbPropertyExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: Parameter description to be filled
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  id: RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbRefExpression RefFromKey (this System.Data.Metadata.Edm.EntitySet entitySet, System.Data.Common.CommandTrees.DbExpression keyRow, System.Data.Metadata.Edm.EntityType entityType);
    parameters:
    - id: entitySet
      type: System.Data.Metadata.Edm.EntitySet
      description: Parameter description to be filled
    - id: keyRow
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: entityType
      type: System.Data.Metadata.Edm.EntityType
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbRefExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  id: Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbScanExpression Scan (this System.Data.Metadata.Edm.EntitySetBase targetSet);
    parameters:
    - id: targetSet
      type: System.Data.Metadata.Edm.EntitySetBase
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbScanExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  id: Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression Select<TProjection> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,TProjection> projection);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: projection
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  id: SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbProjectExpression SelectMany<TSelector> (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> apply, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector> selector);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: apply
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: selector
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbProjectExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbSortExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  id: Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSkipExpression Skip (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: Parameter description to be filled
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSkipExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  id: Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression Sort (this System.Data.Common.CommandTrees.DbExpressionBinding input, System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause> sortOrder);
    parameters:
    - id: input
      type: System.Data.Common.CommandTrees.DbExpressionBinding
      description: Parameter description to be filled
    - id: sortOrder
      type: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbLimitExpression Take (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Common.CommandTrees.DbExpression count);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: count
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbLimitExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenBy (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: collation
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  id: ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortExpression ThenByDescending (this System.Data.Common.CommandTrees.DbSortExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> sortKey, string collation);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
    - id: sortKey
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    - id: collation
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortExpression
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClause (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: collation
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  id: ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbSortClause ToSortClauseDescending (this System.Data.Common.CommandTrees.DbExpression key, string collation);
    parameters:
    - id: key
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: collation
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbSortClause
      description: Parameter description to be filled
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  id: TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbTreatExpression TreatAs (this System.Data.Common.CommandTrees.DbExpression argument, System.Data.Metadata.Edm.TypeUsage treatType);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: treatType
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbTreatExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  id: "True"
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbConstantExpression True { get; }
    return:
      type: System.Data.Common.CommandTrees.DbConstantExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  id: UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbArithmeticExpression UnaryMinus (this System.Data.Common.CommandTrees.DbExpression argument);
    parameters:
    - id: argument
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbArithmeticExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Union (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbUnionAllExpression UnionAll (this System.Data.Common.CommandTrees.DbExpression left, System.Data.Common.CommandTrees.DbExpression right);
    parameters:
    - id: left
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: right
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbUnionAllExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  id: Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbVariableReferenceExpression Variable (this System.Data.Metadata.Edm.TypeUsage type, string name);
    parameters:
    - id: type
      type: System.Data.Metadata.Edm.TypeUsage
      description: Parameter description to be filled
    - id: name
      type: System.String
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbVariableReferenceExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  id: Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  langs:
  - csharp
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFilterExpression Where (this System.Data.Common.CommandTrees.DbExpression source, Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression> predicate);
    parameters:
    - id: source
      type: System.Data.Common.CommandTrees.DbExpression
      description: Parameter description to be filled
    - id: predicate
      type: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
      description: Parameter description to be filled
    return:
      type: System.Data.Common.CommandTrees.DbFilterExpression
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Aggregate(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Aggregate(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionAggregate
  nameWithType: DbFunctionAggregate
  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: AggregateDistinct(EdmFunction,DbExpression)
  nameWithType: DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.AggregateDistinct(EdmFunction,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionAggregate
  nameWithType: DbFunctionAggregate
  fullName: System.Data.Common.CommandTrees.DbFunctionAggregate
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: All(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: And(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.And(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.And(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbAndExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAndExpression
  nameWithType: DbAndExpression
  fullName: System.Data.Common.CommandTrees.DbAndExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Any(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbQuantifierExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbQuantifierExpression
  nameWithType: DbQuantifierExpression
  fullName: System.Data.Common.CommandTrees.DbQuantifierExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbAggregate@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbAggregate,String)
  nameWithType: DbExpressionBuilder.As(DbAggregate,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbAggregate,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<String,DbAggregate>
  nameWithType: KeyValuePair<String,DbAggregate>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>
- uid: System.Data.Common.CommandTrees.DbAggregate
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbAggregate
  nameWithType: DbAggregate
  fullName: System.Data.Common.CommandTrees.DbAggregate
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: As(DbExpression,String)
  nameWithType: DbExpressionBuilder.As(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As(DbExpression,String)
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<String,DbExpression>
  nameWithType: KeyValuePair<String,DbExpression>
  fullName: System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Bind(DbExpression)
  nameWithType: DbExpressionBuilder.Bind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Bind(DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: BindAs(DbExpression,String)
  nameWithType: DbExpressionBuilder.BindAs(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.BindAs(DbExpression,String)
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  nameWithType: DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Case(IEnumerable<DbExpression>,IEnumerable<DbExpression>,DbExpression)
- uid: System.Data.Common.CommandTrees.DbCaseExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCaseExpression
  nameWithType: DbCaseExpression
  fullName: System.Data.Common.CommandTrees.DbCaseExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CastTo(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CastTo(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbCastExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCastExpression
  nameWithType: DbCastExpression
  fullName: System.Data.Common.CommandTrees.DbCastExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(Object)
  nameWithType: DbExpressionBuilder.Constant(Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(Object)
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(System.Data.Metadata.Edm.TypeUsage@,System.Object)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Constant(TypeUsage,Object)
  nameWithType: DbExpressionBuilder.Constant(TypeUsage,Object)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant(TypeUsage,Object)
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Metadata.Edm.EntityType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: System.Data.Metadata.Edm.EntityType
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(System.Data.Metadata.Edm.EntitySet@,System.Data.Metadata.Edm.EntityType,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CreateRef(EntitySet,EntityType,DbExpression[])
  nameWithType: DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef(EntitySet,EntityType,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Metadata.Edm.EntityType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: System.Data.Metadata.Edm.EntityType
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System
  isExternal: true
  name: Func<DbExpression,KeyValuePair<String,DbExpression>>
  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: CrossJoin(IEnumerable<DbExpressionBinding>)
  nameWithType: DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossJoin(IEnumerable<DbExpressionBinding>)
- uid: System.Data.Common.CommandTrees.DbCrossJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbCrossJoinExpression
  nameWithType: DbCrossJoinExpression
  fullName: System.Data.Common.CommandTrees.DbCrossJoinExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpressionBinding}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpressionBinding>
  nameWithType: IEnumerable<DbExpressionBinding>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpressionBinding>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Deref(DbExpression)
  nameWithType: DbExpressionBuilder.Deref(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Deref(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDerefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDerefExpression
  nameWithType: DbDerefExpression
  fullName: System.Data.Common.CommandTrees.DbDerefExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Distinct(DbExpression)
  nameWithType: DbExpressionBuilder.Distinct(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Distinct(DbExpression)
- uid: System.Data.Common.CommandTrees.DbDistinctExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbDistinctExpression
  nameWithType: DbDistinctExpression
  fullName: System.Data.Common.CommandTrees.DbDistinctExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Divide(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Divide(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Divide(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Element(DbExpression)
  nameWithType: DbExpressionBuilder.Element(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Element(DbExpression)
- uid: System.Data.Common.CommandTrees.DbElementExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbElementExpression
  nameWithType: DbElementExpression
  fullName: System.Data.Common.CommandTrees.DbElementExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Equal(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Equal(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Equal(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Except(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Except(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Except(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExceptExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExceptExpression
  nameWithType: DbExceptExpression
  fullName: System.Data.Common.CommandTrees.DbExceptExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Exists(DbExpression)
  nameWithType: DbExpressionBuilder.Exists(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Exists(DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "False"
  nameWithType: DbExpressionBuilder.False
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.False
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Filter(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Filter(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbFilterExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFilterExpression
  nameWithType: DbFilterExpression
  fullName: System.Data.Common.CommandTrees.DbFilterExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetEntityRef(DbExpression)
  nameWithType: DbExpressionBuilder.GetEntityRef(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetEntityRef(DbExpression)
- uid: System.Data.Common.CommandTrees.DbEntityRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbEntityRefExpression
  nameWithType: DbEntityRefExpression
  fullName: System.Data.Common.CommandTrees.DbEntityRefExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GetRefKey(DbExpression)
  nameWithType: DbExpressionBuilder.GetRefKey(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GetRefKey(DbExpression)
- uid: System.Data.Common.CommandTrees.DbRefKeyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefKeyExpression
  nameWithType: DbRefKeyExpression
  fullName: System.Data.Common.CommandTrees.DbRefKeyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GreaterThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GreaterThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBind(DbExpression)
  nameWithType: DbExpressionBuilder.GroupBind(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBind(DbExpression)
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(System.Data.Common.CommandTrees.DbExpression@,System.String,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBindAs(DbExpression,String,String)
  nameWithType: DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBindAs(DbExpression,String,String)
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(System.Data.Common.CommandTrees.DbGroupExpressionBinding@,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  nameWithType: DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.GroupBy(DbGroupExpressionBinding,IEnumerable<KeyValuePair<String,DbExpression>>,IEnumerable<KeyValuePair<String,DbAggregate>>)
- uid: System.Data.Common.CommandTrees.DbGroupByExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupByExpression
  nameWithType: DbGroupByExpression
  fullName: System.Data.Common.CommandTrees.DbGroupByExpression
- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbGroupExpressionBinding
  nameWithType: DbGroupExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<String,DbExpression>>
  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbAggregate}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<String,DbAggregate>>
  nameWithType: IEnumerable<KeyValuePair<String,DbAggregate>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbAggregate>>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Intersect(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Intersect(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Intersect(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbIntersectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIntersectExpression
  nameWithType: DbIntersectExpression
  fullName: System.Data.Common.CommandTrees.DbIntersectExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbLambdaExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambdaExpression
  nameWithType: DbLambdaExpression
  fullName: System.Data.Common.CommandTrees.DbLambdaExpression
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Common.CommandTrees.DbLambda@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(DbLambda,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(DbLambda,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbLambdaExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambdaExpression
  nameWithType: DbLambdaExpression
  fullName: System.Data.Common.CommandTrees.DbLambdaExpression
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(System.Data.Metadata.Edm.EdmFunction@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Invoke(EdmFunction,DbExpression[])
  nameWithType: DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke(EdmFunction,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Metadata.Edm.EdmFunction
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmFunction
  nameWithType: EdmFunction
  fullName: System.Data.Metadata.Edm.EdmFunction
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsEmpty(DbExpression)
  nameWithType: DbExpressionBuilder.IsEmpty(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsEmpty(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsEmptyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsEmptyExpression
  nameWithType: DbIsEmptyExpression
  fullName: System.Data.Common.CommandTrees.DbIsEmptyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsNull(DbExpression)
  nameWithType: DbExpressionBuilder.IsNull(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsNull(DbExpression)
- uid: System.Data.Common.CommandTrees.DbIsNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsNullExpression
  nameWithType: DbIsNullExpression
  fullName: System.Data.Common.CommandTrees.DbIsNullExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOf(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOf(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbIsOfExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsOfExpression
  nameWithType: DbIsOfExpression
  fullName: System.Data.Common.CommandTrees.DbIsOfExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: IsOfOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.IsOfOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbIsOfExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbIsOfExpression
  nameWithType: DbIsOfExpression
  fullName: System.Data.Common.CommandTrees.DbIsOfExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join``1(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Join(DbExpression,DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,TSelector>
  nameWithType: Func<DbExpression,DbExpression,TSelector>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,IEnumerable<DbVariableReferenceExpression>)
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbVariableReferenceExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbVariableReferenceExpression>
  nameWithType: IEnumerable<DbVariableReferenceExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbVariableReferenceExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbVariableReferenceExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Lambda(DbExpression,DbVariableReferenceExpression[])
  nameWithType: DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda(DbExpression,DbVariableReferenceExpression[])
- uid: System.Data.Common.CommandTrees.DbLambda
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLambda
  nameWithType: DbLambda
  fullName: System.Data.Common.CommandTrees.DbLambda
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpression,DbExpression,Func<DbExpression,DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin(DbExpressionBinding,DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbJoinExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbJoinExpression
  nameWithType: DbJoinExpression
  fullName: System.Data.Common.CommandTrees.DbJoinExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThan(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThan(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThan(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: LessThanOrEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LessThanOrEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLikeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLikeExpression
  nameWithType: DbLikeExpression
  fullName: System.Data.Common.CommandTrees.DbLikeExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Like(DbExpression,DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLikeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLikeExpression
  nameWithType: DbLikeExpression
  fullName: System.Data.Common.CommandTrees.DbLikeExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Limit(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Limit(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Limit(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLimitExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLimitExpression
  nameWithType: DbLimitExpression
  fullName: System.Data.Common.CommandTrees.DbLimitExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Minus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Minus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Minus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Modulo(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Modulo(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Modulo(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Multiply(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Multiply(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Multiply(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(DbExpression,RelationshipEndMember,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRelationshipNavigationExpression
  nameWithType: DbRelationshipNavigationExpression
  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.RelationshipEndMember
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipEndMember
  nameWithType: RelationshipEndMember
  fullName: System.Data.Metadata.Edm.RelationshipEndMember
- uid: System.Data.Metadata.Edm.RelationshipEndMember
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipEndMember
  nameWithType: RelationshipEndMember
  fullName: System.Data.Metadata.Edm.RelationshipEndMember
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(System.Data.Metadata.Edm.RelationshipType@,System.String,System.String,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Navigate(RelationshipType,String,String,DbExpression)
  nameWithType: DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate(RelationshipType,String,String,DbExpression)
- uid: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRelationshipNavigationExpression
  nameWithType: DbRelationshipNavigationExpression
  fullName: System.Data.Common.CommandTrees.DbRelationshipNavigationExpression
- uid: System.Data.Metadata.Edm.RelationshipType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipType
  nameWithType: RelationshipType
  fullName: System.Data.Metadata.Edm.RelationshipType
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Negate(DbExpression)
  nameWithType: DbExpressionBuilder.Negate(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Negate(DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(System.Data.Metadata.Edm.TypeUsage@,System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: New(TypeUsage,DbExpression[])
  nameWithType: DbExpressionBuilder.New(TypeUsage,DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New(TypeUsage,DbExpression[])
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(IEnumerable<DbExpression>)
  nameWithType: DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(IEnumerable<DbExpression>)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbExpression}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbExpression>
  nameWithType: IEnumerable<DbExpression>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(System.Data.Common.CommandTrees.DbExpression[])
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewCollection(DbExpression[])
  nameWithType: DbExpressionBuilder.NewCollection(DbExpression[])
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection(DbExpression[])
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression[]
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewEmptyCollection(TypeUsage)
  nameWithType: DbExpressionBuilder.NewEmptyCollection(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewEmptyCollection(TypeUsage)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewRow(IEnumerable<KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.DbNewInstanceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNewInstanceExpression
  nameWithType: DbNewInstanceExpression
  fullName: System.Data.Common.CommandTrees.DbNewInstanceExpression
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<KeyValuePair<String,DbExpression>>
  nameWithType: IEnumerable<KeyValuePair<String,DbExpression>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Not(DbExpression)
  nameWithType: DbExpressionBuilder.Not(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Not(DbExpression)
- uid: System.Data.Common.CommandTrees.DbNotExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNotExpression
  nameWithType: DbNotExpression
  fullName: System.Data.Common.CommandTrees.DbNotExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: NotEqual(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NotEqual(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbComparisonExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbComparisonExpression
  nameWithType: DbComparisonExpression
  fullName: System.Data.Common.CommandTrees.DbComparisonExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(System.Data.Metadata.Edm.TypeUsage@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Null(TypeUsage)
  nameWithType: DbExpressionBuilder.Null(TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Null(TypeUsage)
- uid: System.Data.Common.CommandTrees.DbNullExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbNullExpression
  nameWithType: DbNullExpression
  fullName: System.Data.Common.CommandTrees.DbNullExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfType(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfType(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfType(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbOfTypeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOfTypeExpression
  nameWithType: DbOfTypeExpression
  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OfTypeOnly(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OfTypeOnly(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbOfTypeExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOfTypeExpression
  nameWithType: DbOfTypeExpression
  fullName: System.Data.Common.CommandTrees.DbOfTypeExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Or(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Or(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Or(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbOrExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbOrExpression
  nameWithType: DbOrExpression
  fullName: System.Data.Common.CommandTrees.DbOrExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending(DbExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpression,Func<DbExpression,KeyValuePair<String,DbExpression>>)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair{System.String,System.Data.Common.CommandTrees.DbExpression}}
  parent: System
  isExternal: true
  name: Func<DbExpression,KeyValuePair<String,DbExpression>>
  nameWithType: Func<DbExpression,KeyValuePair<String,DbExpression>>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Collections.Generic.KeyValuePair<System.String,System.Data.Common.CommandTrees.DbExpression>>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpressionBinding)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: OuterApply(DbExpressionBinding,DbExpressionBinding)
  nameWithType: DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply(DbExpressionBinding,DbExpressionBinding)
- uid: System.Data.Common.CommandTrees.DbApplyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbApplyExpression
  nameWithType: DbApplyExpression
  fullName: System.Data.Common.CommandTrees.DbApplyExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Parameter(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Parameter(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Parameter(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbParameterReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbParameterReferenceExpression
  nameWithType: DbParameterReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbParameterReferenceExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Plus(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Plus(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Plus(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Project(DbExpressionBinding,DbExpression)
  nameWithType: DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Project(DbExpressionBinding,DbExpression)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.EdmProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,EdmProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,EdmProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,EdmProperty)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.EdmProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EdmProperty
  nameWithType: EdmProperty
  fullName: System.Data.Metadata.Edm.EdmProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.NavigationProperty)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,NavigationProperty)
  nameWithType: DbExpressionBuilder.Property(DbExpression,NavigationProperty)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,NavigationProperty)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.NavigationProperty
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: NavigationProperty
  nameWithType: NavigationProperty
  fullName: System.Data.Metadata.Edm.NavigationProperty
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.RelationshipEndMember)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,RelationshipEndMember)
  nameWithType: DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,RelationshipEndMember)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.RelationshipEndMember
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: RelationshipEndMember
  nameWithType: RelationshipEndMember
  fullName: System.Data.Metadata.Edm.RelationshipEndMember
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Property(DbExpression,String)
  nameWithType: DbExpressionBuilder.Property(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property(DbExpression,String)
- uid: System.Data.Common.CommandTrees.DbPropertyExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbPropertyExpression
  nameWithType: DbPropertyExpression
  fullName: System.Data.Common.CommandTrees.DbPropertyExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(System.Data.Metadata.Edm.EntitySet@,System.Data.Common.CommandTrees.DbExpression,System.Data.Metadata.Edm.EntityType)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: RefFromKey(EntitySet,DbExpression,EntityType)
  nameWithType: DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey(EntitySet,DbExpression,EntityType)
- uid: System.Data.Common.CommandTrees.DbRefExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbRefExpression
  nameWithType: DbRefExpression
  fullName: System.Data.Common.CommandTrees.DbRefExpression
- uid: System.Data.Metadata.Edm.EntitySet
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySet
  nameWithType: EntitySet
  fullName: System.Data.Metadata.Edm.EntitySet
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.EntityType
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntityType
  nameWithType: EntityType
  fullName: System.Data.Metadata.Edm.EntityType
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(System.Data.Metadata.Edm.EntitySetBase@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Scan(EntitySetBase)
  nameWithType: DbExpressionBuilder.Scan(EntitySetBase)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Scan(EntitySetBase)
- uid: System.Data.Common.CommandTrees.DbScanExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbScanExpression
  nameWithType: DbScanExpression
  fullName: System.Data.Common.CommandTrees.DbScanExpression
- uid: System.Data.Metadata.Edm.EntitySetBase
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: EntitySetBase
  nameWithType: EntitySetBase
  fullName: System.Data.Metadata.Edm.EntitySetBase
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Select(DbExpression,Func<DbExpression,TProjection>)
  nameWithType: DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Select(DbExpression,Func<DbExpression,TProjection>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,TProjection}
  parent: System
  isExternal: true
  name: Func<DbExpression,TProjection>
  nameWithType: Func<DbExpression,TProjection>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,TProjection>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany``1(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,``0})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  nameWithType: DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.SelectMany(DbExpression,Func<DbExpression,DbExpression>,Func<DbExpression,DbExpression,TSelector>)
- uid: System.Data.Common.CommandTrees.DbProjectExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbProjectExpression
  nameWithType: DbProjectExpression
  fullName: System.Data.Common.CommandTrees.DbProjectExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression,TSelector>
  nameWithType: Func<DbExpression,DbExpression,TSelector>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,TSelector>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbSortExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbSortExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbSortExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause},System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  nameWithType: DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip(DbExpressionBinding,IEnumerable<DbSortClause>,DbExpression)
- uid: System.Data.Common.CommandTrees.DbSkipExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSkipExpression
  nameWithType: DbSkipExpression
  fullName: System.Data.Common.CommandTrees.DbSkipExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbSortClause>
  nameWithType: IEnumerable<DbSortClause>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(System.Data.Common.CommandTrees.DbExpressionBinding@,System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  nameWithType: DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Sort(DbExpressionBinding,IEnumerable<DbSortClause>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbExpressionBinding
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpressionBinding
  nameWithType: DbExpressionBinding
  fullName: System.Data.Common.CommandTrees.DbExpressionBinding
- uid: System.Collections.Generic.IEnumerable{System.Data.Common.CommandTrees.DbSortClause}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<DbSortClause>
  nameWithType: IEnumerable<DbSortClause>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Common.CommandTrees.DbSortClause>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Take(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Take(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Take(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbLimitExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbLimitExpression
  nameWithType: DbLimitExpression
  fullName: System.Data.Common.CommandTrees.DbLimitExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(System.Data.Common.CommandTrees.DbSortExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression},System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  nameWithType: DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending(DbSortExpression,Func<DbExpression,DbExpression>,String)
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Data.Common.CommandTrees.DbSortExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortExpression
  nameWithType: DbSortExpression
  fullName: System.Data.Common.CommandTrees.DbSortExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClause(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClause(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause(DbExpression,String)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(System.Data.Common.CommandTrees.DbExpression@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: ToSortClauseDescending(DbExpression,String)
  nameWithType: DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending(DbExpression,String)
- uid: System.Data.Common.CommandTrees.DbSortClause
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbSortClause
  nameWithType: DbSortClause
  fullName: System.Data.Common.CommandTrees.DbSortClause
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(System.Data.Common.CommandTrees.DbExpression@,System.Data.Metadata.Edm.TypeUsage)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: TreatAs(DbExpression,TypeUsage)
  nameWithType: DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.TreatAs(DbExpression,TypeUsage)
- uid: System.Data.Common.CommandTrees.DbTreatExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbTreatExpression
  nameWithType: DbTreatExpression
  fullName: System.Data.Common.CommandTrees.DbTreatExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: "True"
  nameWithType: DbExpressionBuilder.True
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.True
- uid: System.Data.Common.CommandTrees.DbConstantExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbConstantExpression
  nameWithType: DbConstantExpression
  fullName: System.Data.Common.CommandTrees.DbConstantExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnaryMinus(DbExpression)
  nameWithType: DbExpressionBuilder.UnaryMinus(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnaryMinus(DbExpression)
- uid: System.Data.Common.CommandTrees.DbArithmeticExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbArithmeticExpression
  nameWithType: DbArithmeticExpression
  fullName: System.Data.Common.CommandTrees.DbArithmeticExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Union(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.Union(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Union(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: UnionAll(DbExpression,DbExpression)
  nameWithType: DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.UnionAll(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.DbUnionAllExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbUnionAllExpression
  nameWithType: DbUnionAllExpression
  fullName: System.Data.Common.CommandTrees.DbUnionAllExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(System.Data.Metadata.Edm.TypeUsage@,System.String)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Variable(TypeUsage,String)
  nameWithType: DbExpressionBuilder.Variable(TypeUsage,String)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Variable(TypeUsage,String)
- uid: System.Data.Common.CommandTrees.DbVariableReferenceExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbVariableReferenceExpression
  nameWithType: DbVariableReferenceExpression
  fullName: System.Data.Common.CommandTrees.DbVariableReferenceExpression
- uid: System.Data.Metadata.Edm.TypeUsage
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: TypeUsage
  nameWithType: TypeUsage
  fullName: System.Data.Metadata.Edm.TypeUsage
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(System.Data.Common.CommandTrees.DbExpression@,System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression})
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  name: Where(DbExpression,Func<DbExpression,DbExpression>)
  nameWithType: DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Where(DbExpression,Func<DbExpression,DbExpression>)
- uid: System.Data.Common.CommandTrees.DbFilterExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFilterExpression
  nameWithType: DbFilterExpression
  fullName: System.Data.Common.CommandTrees.DbFilterExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Func{System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression}
  parent: System
  isExternal: true
  name: Func<DbExpression,DbExpression>
  nameWithType: Func<DbExpression,DbExpression>
  fullName: System.Func<System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression>
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.All*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Any*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.As*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Constant*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CreateRef*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.CrossApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.FullOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.InnerJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Invoke*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Lambda*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.LeftOuterJoin*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Like*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Navigate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.New*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.NewCollection*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OrderByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.OuterApply*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Property*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.RefFromKey*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.Skip*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenBy*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ThenByDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClause*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder.ToSortClauseDescending*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.DbExpressionBuilder
  isExternal: false
  nameWithType: DbExpressionBuilder.
