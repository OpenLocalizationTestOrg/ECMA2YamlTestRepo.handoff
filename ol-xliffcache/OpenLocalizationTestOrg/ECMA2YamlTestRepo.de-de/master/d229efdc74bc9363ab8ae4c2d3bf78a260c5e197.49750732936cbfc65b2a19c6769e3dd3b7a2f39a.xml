{"nodes":[{"pos":[376,384],"content":"KeySizes","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizes","pos":[0,8]}]},{"pos":[1206,1233],"content":"KeySizes(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizes(Int32,Int32,Int32)","pos":[0,27]}]},{"pos":[1613,1647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1710,1744],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1808,1842],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2035,2042],"content":"MaxSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxSize","pos":[0,7]}]},{"pos":[2327,2361],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2554,2561],"content":"MinSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MinSize","pos":[0,7]}]},{"pos":[2846,2880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3075,3083],"content":"SkipSize","needQuote":true,"needEscape":true,"nodes":[{"content":"SkipSize","pos":[0,8]}]},{"pos":[3371,3405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3516,3529],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[3697,3724],"content":"KeySizes(Int32,Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySizes(Int32,Int32,Int32)","pos":[0,27]}]},{"pos":[3921,3926],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4039,4044],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4157,4162],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4339,4346],"content":"MaxSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MaxSize","pos":[0,7]}]},{"pos":[4503,4508],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4685,4692],"content":"MinSize","needQuote":true,"needEscape":true,"nodes":[{"content":"MinSize","pos":[0,7]}]},{"pos":[4849,4854],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[5032,5040],"content":"SkipSize","needQuote":true,"needEscape":true,"nodes":[{"content":"SkipSize","pos":[0,8]}]},{"pos":[5199,5204],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.KeySizes\n  id: KeySizes\n  children:\n  - System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)\n  - System.Security.Cryptography.KeySizes.MaxSize\n  - System.Security.Cryptography.KeySizes.MinSize\n  - System.Security.Cryptography.KeySizes.SkipSize\n  langs:\n  - csharp\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class KeySizes\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)\n  id: '#ctor(System.Int32,System.Int32,System.Int32)'\n  parent: System.Security.Cryptography.KeySizes\n  langs:\n  - csharp\n  name: KeySizes(Int32,Int32,Int32)\n  nameWithType: KeySizes.KeySizes(Int32,Int32,Int32)\n  fullName: System.Security.Cryptography.KeySizes.KeySizes(Int32,Int32,Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public KeySizes (int minSize, int maxSize, int skipSize);\n    parameters:\n    - id: minSize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: maxSize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: skipSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeySizes.MaxSize\n  id: MaxSize\n  parent: System.Security.Cryptography.KeySizes\n  langs:\n  - csharp\n  name: MaxSize\n  nameWithType: KeySizes.MaxSize\n  fullName: System.Security.Cryptography.KeySizes.MaxSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int MaxSize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeySizes.MinSize\n  id: MinSize\n  parent: System.Security.Cryptography.KeySizes\n  langs:\n  - csharp\n  name: MinSize\n  nameWithType: KeySizes.MinSize\n  fullName: System.Security.Cryptography.KeySizes.MinSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int MinSize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.KeySizes.SkipSize\n  id: SkipSize\n  parent: System.Security.Cryptography.KeySizes\n  langs:\n  - csharp\n  name: SkipSize\n  nameWithType: KeySizes.SkipSize\n  fullName: System.Security.Cryptography.KeySizes.SkipSize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public int SkipSize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.KeySizes.#ctor(System.Int32,System.Int32,System.Int32)\n  parent: System.Security.Cryptography.KeySizes\n  isExternal: false\n  name: KeySizes(Int32,Int32,Int32)\n  nameWithType: KeySizes.KeySizes(Int32,Int32,Int32)\n  fullName: System.Security.Cryptography.KeySizes.KeySizes(Int32,Int32,Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.KeySizes.MaxSize\n  parent: System.Security.Cryptography.KeySizes\n  isExternal: false\n  name: MaxSize\n  nameWithType: KeySizes.MaxSize\n  fullName: System.Security.Cryptography.KeySizes.MaxSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.KeySizes.MinSize\n  parent: System.Security.Cryptography.KeySizes\n  isExternal: false\n  name: MinSize\n  nameWithType: KeySizes.MinSize\n  fullName: System.Security.Cryptography.KeySizes.MinSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.KeySizes.SkipSize\n  parent: System.Security.Cryptography.KeySizes\n  isExternal: false\n  name: SkipSize\n  nameWithType: KeySizes.SkipSize\n  fullName: System.Security.Cryptography.KeySizes.SkipSize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}