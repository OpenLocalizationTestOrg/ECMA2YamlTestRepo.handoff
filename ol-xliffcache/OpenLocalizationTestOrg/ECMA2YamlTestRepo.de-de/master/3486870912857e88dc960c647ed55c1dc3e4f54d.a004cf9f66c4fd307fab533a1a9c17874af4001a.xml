{"nodes":[{"pos":[3449,3473],"content":"RSACryptoServiceProvider","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider","pos":[0,24]}]},{"pos":[6135,6161],"content":"RSACryptoServiceProvider()","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider()","pos":[0,26]}]},{"pos":[6740,6771],"content":"RSACryptoServiceProvider(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider(Int32)","pos":[0,31]}]},{"pos":[7184,7218],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7529,7568],"content":"RSACryptoServiceProvider(CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider(CspParameters)","pos":[0,39]}]},{"pos":[8068,8102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8439,8484],"content":"RSACryptoServiceProvider(Int32,CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider(Int32,CspParameters)","pos":[0,45]}]},{"pos":[8980,9014],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9110,9144],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9393,9412],"content":"CspKeyContainerInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CspKeyContainerInfo","pos":[0,19]}]},{"pos":[9846,9880],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10165,10188],"content":"Decrypt(Byte[],Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypt(Byte[],Boolean)","pos":[0,23]}]},{"pos":[10574,10608],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10671,10705],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10763,10797],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11227,11263],"content":"Decrypt(Byte[],RSAEncryptionPadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypt(Byte[],RSAEncryptionPadding)","pos":[0,36]}]},{"pos":[11733,11767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11867,11901],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11959,11993],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12333,12353],"content":"DecryptValue(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DecryptValue(Byte[])","pos":[0,20]}]},{"pos":[12735,12769],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12827,12861],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13118,13134],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[13515,13549],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13834,13857],"content":"Encrypt(Byte[],Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypt(Byte[],Boolean)","pos":[0,23]}]},{"pos":[14243,14277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14340,14374],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14432,14466],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14896,14932],"content":"Encrypt(Byte[],RSAEncryptionPadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypt(Byte[],RSAEncryptionPadding)","pos":[0,36]}]},{"pos":[15402,15436],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15536,15570],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15628,15662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16002,16022],"content":"EncryptValue(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EncryptValue(Byte[])","pos":[0,20]}]},{"pos":[16404,16438],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16496,16530],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16799,16821],"content":"ExportCspBlob(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportCspBlob(Boolean)","pos":[0,22]}]},{"pos":[17240,17274],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17332,17366],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17641,17666],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[18139,18173],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18260,18294],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18651,18685],"content":"HashData(Stream,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Stream,HashAlgorithmName)","pos":[0,34]}]},{"pos":[19171,19205],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19308,19342],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19400,19434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19913,19959],"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","pos":[0,46]}]},{"pos":[20479,20513],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20575,20609],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20670,20704],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20807,20841],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20899,20933],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21276,21297],"content":"ImportCspBlob(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportCspBlob(Byte[])","pos":[0,21]}]},{"pos":[21679,21713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22044,22075],"content":"ImportParameters(RSAParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(RSAParameters)","pos":[0,31]}]},{"pos":[22560,22594],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22845,22865],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[23234,23268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23493,23500],"content":"KeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySize","pos":[0,7]}]},{"pos":[23826,23860],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24101,24116],"content":"PersistKeyInCsp","needQuote":true,"needEscape":true,"nodes":[{"content":"PersistKeyInCsp","pos":[0,15]}]},{"pos":[24465,24499],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24730,24740],"content":"PublicOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicOnly","pos":[0,10]}]},{"pos":[25069,25103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25350,25368],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[25731,25765],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26050,26073],"content":"SignData(Byte[],Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[],Object)","pos":[0,23]}]},{"pos":[26467,26501],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26562,26596],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26654,26688],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27055,27078],"content":"SignData(Stream,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Stream,Object)","pos":[0,23]}]},{"pos":[27495,27529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27590,27624],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27682,27716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28129,28164],"content":"SignData(Byte[],Int32,Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[],Int32,Int32,Object)","pos":[0,35]}]},{"pos":[28605,28639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28701,28735],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28796,28830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28891,28925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28983,29017],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29378,29401],"content":"SignHash(Byte[],String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignHash(Byte[],String)","pos":[0,23]}]},{"pos":[29796,29830],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29890,29924],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29982,30016],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30541,30595],"content":"SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)","pos":[0,54]}]},{"pos":[31163,31197],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31300,31334],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31433,31467],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31525,31559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31882,31900],"content":"UseMachineKeyStore","needQuote":true,"needEscape":true,"nodes":[{"content":"UseMachineKeyStore","pos":[0,18]}]},{"pos":[32265,32299],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32616,32648],"content":"VerifyData(Byte[],Object,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Byte[],Object,Byte[])","pos":[0,32]}]},{"pos":[33078,33112],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33173,33207],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33273,33307],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33366,33400],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33717,33749],"content":"VerifyHash(Byte[],String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyHash(Byte[],String,Byte[])","pos":[0,32]}]},{"pos":[34183,34217],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34277,34311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34380,34414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34473,34507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35066,35129],"content":"VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)","pos":[0,63]}]},{"pos":[35733,35767],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35833,35867],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35970,36004],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36103,36137],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36196,36230],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36438,36470],"content":"System.Security.Cryptography.RSA","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.RSA","pos":[0,32]}]},{"pos":[36630,36656],"content":"RSACryptoServiceProvider()","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider()","pos":[0,26]}]},{"pos":[36991,37022],"content":"RSACryptoServiceProvider(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider(Int32)","pos":[0,31]}]},{"pos":[37259,37264],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37515,37554],"content":"RSACryptoServiceProvider(CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider(CspParameters)","pos":[0,39]}]},{"pos":[37859,37872],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[38174,38219],"content":"RSACryptoServiceProvider(Int32,CspParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"RSACryptoServiceProvider(Int32,CspParameters)","pos":[0,45]}]},{"pos":[38484,38489],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[38654,38667],"content":"CspParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"CspParameters","pos":[0,13]}]},{"pos":[38926,38945],"content":"CspKeyContainerInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CspKeyContainerInfo","pos":[0,19]}]},{"pos":[39216,39235],"content":"CspKeyContainerInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"CspKeyContainerInfo","pos":[0,19]}]},{"pos":[39524,39547],"content":"Decrypt(Byte[],Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypt(Byte[],Boolean)","pos":[0,23]}]},{"pos":[39767,39771],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[39883,39887],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[40002,40009],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[40287,40323],"content":"Decrypt(Byte[],RSAEncryptionPadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Decrypt(Byte[],RSAEncryptionPadding)","pos":[0,36]}]},{"pos":[40569,40573],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[40685,40689],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[40861,40881],"content":"RSAEncryptionPadding","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAEncryptionPadding","pos":[0,20]}]},{"pos":[41162,41182],"content":"DecryptValue(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"DecryptValue(Byte[])","pos":[0,20]}]},{"pos":[41396,41400],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[41512,41516],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[41741,41757],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[41966,41973],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42216,42239],"content":"Encrypt(Byte[],Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypt(Byte[],Boolean)","pos":[0,23]}]},{"pos":[42459,42463],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[42575,42579],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[42694,42701],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42979,43015],"content":"Encrypt(Byte[],RSAEncryptionPadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"Encrypt(Byte[],RSAEncryptionPadding)","pos":[0,36]}]},{"pos":[43261,43265],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[43377,43381],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[43553,43573],"content":"RSAEncryptionPadding","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAEncryptionPadding","pos":[0,20]}]},{"pos":[43854,43874],"content":"EncryptValue(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"EncryptValue(Byte[])","pos":[0,20]}]},{"pos":[44088,44092],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[44204,44208],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[44439,44461],"content":"ExportCspBlob(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportCspBlob(Boolean)","pos":[0,22]}]},{"pos":[44679,44683],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[44798,44805],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45043,45068],"content":"ExportParameters(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ExportParameters(Boolean)","pos":[0,25]}]},{"pos":[45345,45358],"content":"RSAParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAParameters","pos":[0,13]}]},{"pos":[45511,45518],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45797,45831],"content":"HashData(Stream,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Stream,HashAlgorithmName)","pos":[0,34]}]},{"pos":[46073,46077],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[46197,46203],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[46377,46394],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[46738,46784],"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashData(Byte[],Int32,Int32,HashAlgorithmName)","pos":[0,46]}]},{"pos":[47050,47054],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[47166,47170],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[47283,47288],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47401,47406],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47575,47592],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[47868,47889],"content":"ImportCspBlob(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportCspBlob(Byte[])","pos":[0,21]}]},{"pos":[48105,48109],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[48371,48402],"content":"ImportParameters(RSAParameters)","needQuote":true,"needEscape":true,"nodes":[{"content":"ImportParameters(RSAParameters)","pos":[0,31]}]},{"pos":[48691,48704],"content":"RSAParameters","needQuote":true,"needEscape":true,"nodes":[{"content":"RSAParameters","pos":[0,13]}]},{"pos":[48964,48984],"content":"KeyExchangeAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"KeyExchangeAlgorithm","pos":[0,20]}]},{"pos":[49200,49206],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[49417,49424],"content":"KeySize","needQuote":true,"needEscape":true,"nodes":[{"content":"KeySize","pos":[0,7]}]},{"pos":[49613,49618],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49835,49850],"content":"PersistKeyInCsp","needQuote":true,"needEscape":true,"nodes":[{"content":"PersistKeyInCsp","pos":[0,15]}]},{"pos":[50057,50064],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50280,50290],"content":"PublicOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"PublicOnly","pos":[0,10]}]},{"pos":[50487,50494],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50718,50736],"content":"SignatureAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"SignatureAlgorithm","pos":[0,18]}]},{"pos":[50948,50954],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[51195,51218],"content":"SignData(Byte[],Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[],Object)","pos":[0,23]}]},{"pos":[51438,51442],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[51554,51558],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[51672,51678],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[51922,51945],"content":"SignData(Stream,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Stream,Object)","pos":[0,23]}]},{"pos":[52165,52169],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[52289,52295],"content":"Stream","needQuote":true,"needEscape":true,"nodes":[{"content":"Stream","pos":[0,6]}]},{"pos":[52414,52420],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[52687,52722],"content":"SignData(Byte[],Int32,Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignData(Byte[],Int32,Int32,Object)","pos":[0,35]}]},{"pos":[52966,52970],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[53082,53086],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[53199,53204],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53317,53322],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[53436,53442],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[53683,53706],"content":"SignHash(Byte[],String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignHash(Byte[],String)","pos":[0,23]}]},{"pos":[53926,53930],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[54042,54046],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[54160,54166],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[54489,54543],"content":"SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)","pos":[0,54]}]},{"pos":[54825,54829],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[54941,54945],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[55114,55131],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[55348,55367],"content":"RSASignaturePadding","needQuote":true,"needEscape":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]},{"pos":[55637,55655],"content":"UseMachineKeyStore","needQuote":true,"needEscape":true,"nodes":[{"content":"UseMachineKeyStore","pos":[0,18]}]},{"pos":[55868,55875],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56134,56166],"content":"VerifyData(Byte[],Object,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyData(Byte[],Object,Byte[])","pos":[0,32]}]},{"pos":[56407,56414],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[56530,56534],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[56648,56654],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[56768,56772],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[57027,57059],"content":"VerifyHash(Byte[],String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyHash(Byte[],String,Byte[])","pos":[0,32]}]},{"pos":[57300,57307],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57423,57427],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[57541,57547],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[57661,57665],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58002,58065],"content":"VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)","pos":[0,63]}]},{"pos":[58368,58375],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58491,58495],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58607,58611],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[58780,58797],"content":"HashAlgorithmName","needQuote":true,"needEscape":true,"nodes":[{"content":"HashAlgorithmName","pos":[0,17]}]},{"pos":[59014,59033],"content":"RSASignaturePadding","needQuote":true,"needEscape":true,"nodes":[{"content":"RSASignaturePadding","pos":[0,19]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.RSACryptoServiceProvider\n  id: RSACryptoServiceProvider\n  children:\n  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor\n  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)\n  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)\n  - System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo\n  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)\n  - System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])\n  - System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)\n  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)\n  - System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  - System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])\n  - System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)\n  - System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)\n  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  - System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])\n  - System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)\n  - System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm\n  - System.Security.Cryptography.RSACryptoServiceProvider.KeySize\n  - System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp\n  - System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly\n  - System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm\n  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)\n  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)\n  - System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)\n  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)\n  - System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore\n  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])\n  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])\n  - System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  langs:\n  - csharp\n  name: RSACryptoServiceProvider\n  nameWithType: RSACryptoServiceProvider\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class RSACryptoServiceProvider : System.Security.Cryptography.RSA, System.Security.Cryptography.ICspAsymmetricAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.AsymmetricAlgorithm\n  - System.Security.Cryptography.RSA\n  implements:\n  - System.Security.Cryptography.ICspAsymmetricAlgorithm\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.AsymmetricAlgorithm.Clear\n  - System.Security.Cryptography.AsymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.AsymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.AsymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.RSA.Create\n  - System.Security.Cryptography.RSA.Create(System.String)\n  - System.Security.Cryptography.RSA.FromXmlString(System.String)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.SignData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.ToXmlString(System.Boolean)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  - System.Security.Cryptography.RSA.VerifyData(System.IO.Stream,System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: RSACryptoServiceProvider()\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSACryptoServiceProvider ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: RSACryptoServiceProvider(Int32)\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSACryptoServiceProvider (int dwKeySize);\n    parameters:\n    - id: dwKeySize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: RSACryptoServiceProvider(CspParameters)\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)\n  id: '#ctor(System.Int32,System.Security.Cryptography.CspParameters)'\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: RSACryptoServiceProvider(Int32,CspParameters)\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public RSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);\n    parameters:\n    - id: dwKeySize\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: parameters\n      type: System.Security.Cryptography.CspParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo\n  id: CspKeyContainerInfo\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: CspKeyContainerInfo\n  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }\n    return:\n      type: System.Security.Cryptography.CspKeyContainerInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)\n  id: Decrypt(System.Byte[],System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: Decrypt(Byte[],Boolean)\n  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Decrypt (byte[] rgb, bool fOAEP);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: fOAEP\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: Decrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Decrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])\n  id: DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: DecryptValue(Byte[])\n  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] DecryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)\n  id: Encrypt(System.Byte[],System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: Encrypt(Byte[],Boolean)\n  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] Encrypt (byte[] rgb, bool fOAEP);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: fOAEP\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  id: Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: Encrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] Encrypt (byte[] data, System.Security.Cryptography.RSAEncryptionPadding padding);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: padding\n      type: System.Security.Cryptography.RSAEncryptionPadding\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])\n  id: EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: EncryptValue(Byte[])\n  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] EncryptValue (byte[] rgb);\n    parameters:\n    - id: rgb\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)\n  id: ExportCspBlob(System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: ExportCspBlob(Boolean)\n  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] ExportCspBlob (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)\n  id: ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: ExportParameters(Boolean)\n  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.RSAParameters ExportParameters (bool includePrivateParameters);\n    parameters:\n    - id: includePrivateParameters\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Cryptography.RSAParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  id: HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.HashData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])\n  id: ImportCspBlob(System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: ImportCspBlob(Byte[])\n  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public void ImportCspBlob (byte[] keyBlob);\n    parameters:\n    - id: keyBlob\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)\n  id: ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void ImportParameters (System.Security.Cryptography.RSAParameters parameters);\n    parameters:\n    - id: parameters\n      type: System.Security.Cryptography.RSAParameters\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string KeyExchangeAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize\n  id: KeySize\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: KeySize\n  nameWithType: RSACryptoServiceProvider.KeySize\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int KeySize { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp\n  id: PersistKeyInCsp\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: PersistKeyInCsp\n  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool PersistKeyInCsp { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly\n  id: PublicOnly\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: PublicOnly\n  nameWithType: RSACryptoServiceProvider.PublicOnly\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool PublicOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm\n  id: SignatureAlgorithm\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: SignatureAlgorithm\n  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string SignatureAlgorithm { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)\n  id: SignData(System.Byte[],System.Object)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: SignData(Byte[],Object)\n  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignData (byte[] buffer, object halg);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: halg\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)\n  id: SignData(System.IO.Stream,System.Object)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: SignData(Stream,Object)\n  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignData (System.IO.Stream inputStream, object halg);\n    parameters:\n    - id: inputStream\n      type: System.IO.Stream\n      description: Parameter description to be filled\n    - id: halg\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)\n  id: SignData(System.Byte[],System.Int32,System.Int32,System.Object)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: SignData(Byte[],Int32,Int32,Object)\n  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignData (byte[] buffer, int offset, int count, object halg);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: offset\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: count\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: halg\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignData*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)\n  id: SignHash(System.Byte[],System.String)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: SignHash(Byte[],String)\n  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public byte[] SignHash (byte[] rgbHash, string str);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: str\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override byte[] SignHash (byte[] hash, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: Parameter description to be filled\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore\n  id: UseMachineKeyStore\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: UseMachineKeyStore\n  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool UseMachineKeyStore { get; set; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])\n  id: VerifyData(System.Byte[],System.Object,System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: VerifyData(Byte[],Object,Byte[])\n  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool VerifyData (byte[] buffer, object halg, byte[] signature);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: halg\n      type: System.Object\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])\n  id: VerifyHash(System.Byte[],System.String,System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: VerifyHash(Byte[],String,Byte[])\n  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);\n    parameters:\n    - id: rgbHash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: str\n      type: System.String\n      description: Parameter description to be filled\n    - id: rgbSignature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  id: VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  langs:\n  - csharp\n  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool VerifyHash (byte[] hash, byte[] signature, System.Security.Cryptography.HashAlgorithmName hashAlgorithm, System.Security.Cryptography.RSASignaturePadding padding);\n    parameters:\n    - id: hash\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: signature\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: hashAlgorithm\n      type: System.Security.Cryptography.HashAlgorithmName\n      description: Parameter description to be filled\n    - id: padding\n      type: System.Security.Cryptography.RSASignaturePadding\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.RSA\n  isExternal: false\n  name: System.Security.Cryptography.RSA\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: RSACryptoServiceProvider()\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider()\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider()\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: RSACryptoServiceProvider(Int32)\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: RSACryptoServiceProvider(CspParameters)\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(CspParameters)\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: RSACryptoServiceProvider(Int32,CspParameters)\n  nameWithType: RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.RSACryptoServiceProvider(Int32,CspParameters)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CspParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspParameters\n  nameWithType: CspParameters\n  fullName: System.Security.Cryptography.CspParameters\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: CspKeyContainerInfo\n  nameWithType: RSACryptoServiceProvider.CspKeyContainerInfo\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.CspKeyContainerInfo\n- uid: System.Security.Cryptography.CspKeyContainerInfo\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CspKeyContainerInfo\n  nameWithType: CspKeyContainerInfo\n  fullName: System.Security.Cryptography.CspKeyContainerInfo\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: Decrypt(Byte[],Boolean)\n  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],Boolean)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: Decrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt(Byte[],RSAEncryptionPadding)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSAEncryptionPadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAEncryptionPadding\n  nameWithType: RSAEncryptionPadding\n  fullName: System.Security.Cryptography.RSAEncryptionPadding\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: DecryptValue(Byte[])\n  nameWithType: RSACryptoServiceProvider.DecryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.DecryptValue(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: RSACryptoServiceProvider.Dispose(Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: Encrypt(Byte[],Boolean)\n  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],Boolean)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(System.Byte[],System.Security.Cryptography.RSAEncryptionPadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: Encrypt(Byte[],RSAEncryptionPadding)\n  nameWithType: RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt(Byte[],RSAEncryptionPadding)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSAEncryptionPadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAEncryptionPadding\n  nameWithType: RSAEncryptionPadding\n  fullName: System.Security.Cryptography.RSAEncryptionPadding\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: EncryptValue(Byte[])\n  nameWithType: RSACryptoServiceProvider.EncryptValue(Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.EncryptValue(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: ExportCspBlob(Boolean)\n  nameWithType: RSACryptoServiceProvider.ExportCspBlob(Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportCspBlob(Boolean)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(System.Boolean)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: ExportParameters(Boolean)\n  nameWithType: RSACryptoServiceProvider.ExportParameters(Boolean)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ExportParameters(Boolean)\n- uid: System.Security.Cryptography.RSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAParameters\n  nameWithType: RSAParameters\n  fullName: System.Security.Cryptography.RSAParameters\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: HashData(Stream,HashAlgorithmName)\n  nameWithType: RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Stream,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  nameWithType: RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.HashData(Byte[],Int32,Int32,HashAlgorithmName)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: ImportCspBlob(Byte[])\n  nameWithType: RSACryptoServiceProvider.ImportCspBlob(Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportCspBlob(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.RSAParameters)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: ImportParameters(RSAParameters)\n  nameWithType: RSACryptoServiceProvider.ImportParameters(RSAParameters)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.ImportParameters(RSAParameters)\n- uid: System.Security.Cryptography.RSAParameters\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSAParameters\n  nameWithType: RSAParameters\n  fullName: System.Security.Cryptography.RSAParameters\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: RSACryptoServiceProvider.KeyExchangeAlgorithm\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeyExchangeAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.KeySize\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: KeySize\n  nameWithType: RSACryptoServiceProvider.KeySize\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.KeySize\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: PersistKeyInCsp\n  nameWithType: RSACryptoServiceProvider.PersistKeyInCsp\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PersistKeyInCsp\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: PublicOnly\n  nameWithType: RSACryptoServiceProvider.PublicOnly\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.PublicOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: SignatureAlgorithm\n  nameWithType: RSACryptoServiceProvider.SignatureAlgorithm\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignatureAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Object)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: SignData(Byte[],Object)\n  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Object)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Object)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.IO.Stream,System.Object)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: SignData(Stream,Object)\n  nameWithType: RSACryptoServiceProvider.SignData(Stream,Object)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Stream,Object)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32,System.Object)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: SignData(Byte[],Int32,Int32,Object)\n  nameWithType: RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignData(Byte[],Int32,Int32,Object)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.String)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: SignHash(Byte[],String)\n  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],String)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],String)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSASignaturePadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePadding\n  nameWithType: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: UseMachineKeyStore\n  nameWithType: RSACryptoServiceProvider.UseMachineKeyStore\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.UseMachineKeyStore\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(System.Byte[],System.Object,System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: VerifyData(Byte[],Object,Byte[])\n  nameWithType: RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyData(Byte[],Object,Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: VerifyHash(Byte[],String,Byte[])\n  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],String,Byte[])\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(System.Byte[],System.Byte[],System.Security.Cryptography.HashAlgorithmName,System.Security.Cryptography.RSASignaturePadding)\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  name: VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  nameWithType: RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n  fullName: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.HashAlgorithmName\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: HashAlgorithmName\n  nameWithType: HashAlgorithmName\n  fullName: System.Security.Cryptography.HashAlgorithmName\n- uid: System.Security.Cryptography.RSASignaturePadding\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: RSASignaturePadding\n  nameWithType: RSASignaturePadding\n  fullName: System.Security.Cryptography.RSASignaturePadding\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Decrypt*\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  nameWithType: RSACryptoServiceProvider.\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.Encrypt*\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  nameWithType: RSACryptoServiceProvider.\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.HashData*\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  nameWithType: RSACryptoServiceProvider.\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignData*\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  nameWithType: RSACryptoServiceProvider.\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.SignHash*\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  nameWithType: RSACryptoServiceProvider.\n- uid: System.Security.Cryptography.RSACryptoServiceProvider.VerifyHash*\n  parent: System.Security.Cryptography.RSACryptoServiceProvider\n  isExternal: false\n  nameWithType: RSACryptoServiceProvider.\n"}