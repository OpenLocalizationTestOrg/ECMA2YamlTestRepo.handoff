{"nodes":[{"pos":[3136,3154],"content":"GeometryCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection","pos":[0,18]}]},{"pos":[5123,5143],"content":"GeometryCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection()","pos":[0,20]}]},{"pos":[5770,5811],"content":"GeometryCollection(IEnumerable<ph id=\"ph1\">&lt;Geometry&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GeometryCollection(IEnumerable<Geometry>)"},{"pos":[6343,6377],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6600,6625],"content":"GeometryCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection(Int32)","pos":[0,25]}]},{"pos":[6998,7032],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7283,7296],"content":"Add(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Geometry)","pos":[0,13]}]},{"pos":[7667,7701],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7894,7901],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[8345,8352],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[8722,8756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9009,9029],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[9424,9458],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9675,9694],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[10100,10134],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10411,10443],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[10874,10908],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11169,11187],"content":"Contains(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Geometry)","pos":[0,18]}]},{"pos":[11573,11607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11666,11700],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11987,12011],"content":"CopyTo(Geometry[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Geometry[],Int32)","pos":[0,24]}]},{"pos":[12422,12456],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12517,12551],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12744,12749],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[13040,13074],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13293,13313],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[13704,13738],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13973,13992],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[14364,14398],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14457,14491],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14756,14782],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[15195,15229],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15518,15556],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[16005,16039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16248,16263],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[16679,16713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16972,16989],"content":"IndexOf(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Geometry)","pos":[0,17]}]},{"pos":[17371,17405],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17462,17496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17779,17801],"content":"Insert(Int32,Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Geometry)","pos":[0,22]}]},{"pos":[18187,18221],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18299,18333],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18552,18563],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[18927,18961],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19035,19069],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19326,19342],"content":"Remove(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Geometry)","pos":[0,16]}]},{"pos":[19722,19756],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19815,19849],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20076,20091],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[20428,20462],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20819,20857],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[21285,21319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21682,21722],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[22241,22275],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22600,22650],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[23073,23107],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23168,23202],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23489,23534],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[23941,23975],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24250,24289],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[24679,24713],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24998,25044],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[25487,25521],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25804,25840],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[26216,26250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26307,26341],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26634,26675],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[27067,27101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27160,27194],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27485,27525],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[27913,27947],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28004,28038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28353,28398],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[28806,28840],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28902,28936],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29205,29241],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[29621,29655],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29922,29957],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[30334,30368],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30651,30687],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[31096,31130],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31188,31222],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31511,31550],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[31936,31970],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32109,32150],"content":"System.Windows.Media.Animation.Animatable","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Windows.Media.Animation.Animatable","pos":[0,41]}]},{"pos":[32282,32302],"content":"GeometryCollection()","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection()","pos":[0,20]}]},{"pos":[32634,32675],"content":"GeometryCollection(IEnumerable<ph id=\"ph1\">&lt;Geometry&gt;</ph>)","needQuote":true,"needEscape":true,"source":"GeometryCollection(IEnumerable<Geometry>)"},{"pos":[32989,33010],"content":"IEnumerable<ph id=\"ph1\">&lt;Geometry&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Geometry>"},{"pos":[33276,33301],"content":"GeometryCollection(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection(Int32)","pos":[0,25]}]},{"pos":[33506,33511],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[33719,33732],"content":"Add(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Add(Geometry)","pos":[0,13]}]},{"pos":[33944,33952],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[34151,34158],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[34393,34400],"content":"Clone()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clone()","pos":[0,7]}]},{"pos":[34610,34628],"content":"GeometryCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection","pos":[0,18]}]},{"pos":[34877,34897],"content":"CloneCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCore(Freezable)","pos":[0,20]}]},{"pos":[35111,35120],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[35327,35346],"content":"CloneCurrentValue()","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValue()","pos":[0,19]}]},{"pos":[35580,35598],"content":"GeometryCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection","pos":[0,18]}]},{"pos":[35859,35891],"content":"CloneCurrentValueCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"CloneCurrentValueCore(Freezable)","pos":[0,32]}]},{"pos":[36129,36138],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[36367,36385],"content":"Contains(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(Geometry)","pos":[0,18]}]},{"pos":[36578,36585],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[36733,36741],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[36987,37011],"content":"CopyTo(Geometry[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(Geometry[],Int32)","pos":[0,24]}]},{"pos":[37245,37253],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[37388,37393],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37572,37577],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[37742,37747],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[37939,37959],"content":"CreateInstanceCore()","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateInstanceCore()","pos":[0,20]}]},{"pos":[38173,38182],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[38398,38417],"content":"FreezeCore(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"FreezeCore(Boolean)","pos":[0,19]}]},{"pos":[38612,38619],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38738,38745],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[38964,38990],"content":"GetAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAsFrozenCore(Freezable)","pos":[0,26]}]},{"pos":[39216,39225],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39468,39506],"content":"GetCurrentValueAsFrozenCore(Freezable)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentValueAsFrozenCore(Freezable)","pos":[0,38]}]},{"pos":[39756,39765],"content":"Freezable","needQuote":true,"needEscape":true,"nodes":[{"content":"Freezable","pos":[0,9]}]},{"pos":[39968,39983],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[40220,40249],"content":"GeometryCollection+Enumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"GeometryCollection+Enumerator","pos":[0,29]}]},{"pos":[40523,40540],"content":"IndexOf(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"IndexOf(Geometry)","pos":[0,17]}]},{"pos":[40729,40734],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40878,40886],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[41130,41152],"content":"Insert(Int32,Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Insert(Int32,Geometry)","pos":[0,22]}]},{"pos":[41351,41356],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[41500,41508],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[41720,41731],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[41939,41947],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[42080,42085],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[42296,42312],"content":"Remove(Geometry)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(Geometry)","pos":[0,16]}]},{"pos":[42501,42508],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[42656,42664],"content":"Geometry","needQuote":true,"needEscape":true,"nodes":[{"content":"Geometry","pos":[0,8]}]},{"pos":[42880,42895],"content":"RemoveAt(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RemoveAt(Int32)","pos":[0,15]}]},{"pos":[43080,43085],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43339,43377],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[43610,43617],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[43878,43918],"content":"System.Collections.Generic.IEnumerable()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.IEnumerable()","pos":[0,40]}]},{"pos":[44230,44251],"content":"IEnumerator<ph id=\"ph1\">&lt;Geometry&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<Geometry>"},{"pos":[44562,44612],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[44867,44872],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[44985,44990],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[45209,45254],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[45501,45508],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[45725,45764],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[45998,46004],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[46224,46270],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[46547,46558],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]},{"pos":[46799,46835],"content":"System.Collections.IList.Add(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Add(Object)","pos":[0,36]}]},{"pos":[47062,47067],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47181,47187],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[47411,47452],"content":"System.Collections.IList.Contains(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Contains(Object)","pos":[0,41]}]},{"pos":[47691,47698],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[47816,47822],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48045,48085],"content":"System.Collections.IList.IndexOf(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IndexOf(Object)","pos":[0,40]}]},{"pos":[48320,48325],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[48439,48445],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[48680,48725],"content":"System.Collections.IList.Insert(Int32,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Insert(Int32,Object)","pos":[0,45]}]},{"pos":[48970,48975],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[49089,49095],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[49307,49343],"content":"System.Collections.IList.IsFixedSize","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsFixedSize","pos":[0,36]}]},{"pos":[49572,49579],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[49792,49827],"content":"System.Collections.IList.IsReadOnly","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.IsReadOnly","pos":[0,35]}]},{"pos":[50054,50061],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[50282,50318],"content":"System.Collections.IList.Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Item(Int32)","pos":[0,36]}]},{"pos":[50546,50552],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[50667,50672],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[50892,50931],"content":"System.Collections.IList.Remove(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IList.Remove(Object)","pos":[0,39]}]},{"pos":[51165,51171],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.GeometryCollection\n  id: GeometryCollection\n  children:\n  - System.Windows.Media.GeometryCollection.#ctor\n  - System.Windows.Media.GeometryCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry})\n  - System.Windows.Media.GeometryCollection.#ctor(System.Int32)\n  - System.Windows.Media.GeometryCollection.Add(System.Windows.Media.Geometry)\n  - System.Windows.Media.GeometryCollection.Clear\n  - System.Windows.Media.GeometryCollection.Clone\n  - System.Windows.Media.GeometryCollection.CloneCore(System.Windows.Freezable)\n  - System.Windows.Media.GeometryCollection.CloneCurrentValue\n  - System.Windows.Media.GeometryCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Media.GeometryCollection.Contains(System.Windows.Media.Geometry)\n  - System.Windows.Media.GeometryCollection.CopyTo(System.Windows.Media.Geometry[],System.Int32)\n  - System.Windows.Media.GeometryCollection.Count\n  - System.Windows.Media.GeometryCollection.CreateInstanceCore\n  - System.Windows.Media.GeometryCollection.FreezeCore(System.Boolean)\n  - System.Windows.Media.GeometryCollection.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.GeometryCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.GeometryCollection.GetEnumerator\n  - System.Windows.Media.GeometryCollection.IndexOf(System.Windows.Media.Geometry)\n  - System.Windows.Media.GeometryCollection.Insert(System.Int32,System.Windows.Media.Geometry)\n  - System.Windows.Media.GeometryCollection.Item(System.Int32)\n  - System.Windows.Media.GeometryCollection.Remove(System.Windows.Media.Geometry)\n  - System.Windows.Media.GeometryCollection.RemoveAt(System.Int32)\n  - System.Windows.Media.GeometryCollection.System#Collections#Generic#ICollection{System#Windows#Media#Geometry}#IsReadOnly\n  - System.Windows.Media.GeometryCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Geometry}#GetEnumerator\n  - System.Windows.Media.GeometryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Windows.Media.GeometryCollection.System#Collections#ICollection#IsSynchronized\n  - System.Windows.Media.GeometryCollection.System#Collections#ICollection#SyncRoot\n  - System.Windows.Media.GeometryCollection.System#Collections#IEnumerable#GetEnumerator\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#Add(System.Object)\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#Contains(System.Object)\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#IsFixedSize\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#IsReadOnly\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#Item(System.Int32)\n  - System.Windows.Media.GeometryCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: GeometryCollection\n  nameWithType: GeometryCollection\n  fullName: System.Windows.Media.GeometryCollection\n  type: Class\n  syntax:\n    content: 'public sealed class GeometryCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.Media.Geometry>, System.Collections.Generic.IEnumerable<System.Windows.Media.Geometry>, System.Collections.Generic.IList<System.Windows.Media.Geometry>, System.Collections.IList'\n  inheritance:\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  implements:\n  - System.Collections.Generic.ICollection<System.Windows.Media.Geometry>\n  - System.Collections.Generic.IEnumerable<System.Windows.Media.Geometry>\n  - System.Collections.Generic.IList<System.Windows.Media.Geometry>\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: GeometryCollection()\n  nameWithType: GeometryCollection.GeometryCollection()\n  fullName: System.Windows.Media.GeometryCollection.GeometryCollection()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public GeometryCollection ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry})\n  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry})'\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: GeometryCollection(IEnumerable<Geometry>)\n  nameWithType: GeometryCollection.GeometryCollection(IEnumerable<Geometry>)\n  fullName: System.Windows.Media.GeometryCollection.GeometryCollection(IEnumerable<Geometry>)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public GeometryCollection (System.Collections.Generic.IEnumerable<System.Windows.Media.Geometry> collection);\n    parameters:\n    - id: collection\n      type: System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: GeometryCollection(Int32)\n  nameWithType: GeometryCollection.GeometryCollection(Int32)\n  fullName: System.Windows.Media.GeometryCollection.GeometryCollection(Int32)\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public GeometryCollection (int capacity);\n    parameters:\n    - id: capacity\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Add(System.Windows.Media.Geometry)\n  id: Add(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Add(Geometry)\n  nameWithType: GeometryCollection.Add(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Add(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Add (System.Windows.Media.Geometry value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Clear\n  id: Clear\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: GeometryCollection.Clear()\n  fullName: System.Windows.Media.GeometryCollection.Clear()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Clone\n  id: Clone\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: GeometryCollection.Clone()\n  fullName: System.Windows.Media.GeometryCollection.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.GeometryCollection Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.GeometryCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.CloneCore(System.Windows.Freezable)\n  id: CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: CloneCore(Freezable)\n  nameWithType: GeometryCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.CloneCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.CloneCurrentValue\n  id: CloneCurrentValue\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: CloneCurrentValue()\n  nameWithType: GeometryCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.GeometryCollection.CloneCurrentValue()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.GeometryCollection CloneCurrentValue ();\n    parameters: []\n    return:\n      type: System.Windows.Media.GeometryCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  id: CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: GeometryCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.CloneCurrentValueCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Contains(System.Windows.Media.Geometry)\n  id: Contains(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Contains(Geometry)\n  nameWithType: GeometryCollection.Contains(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Contains(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Contains (System.Windows.Media.Geometry value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.CopyTo(System.Windows.Media.Geometry[],System.Int32)\n  id: CopyTo(System.Windows.Media.Geometry[],System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: CopyTo(Geometry[],Int32)\n  nameWithType: GeometryCollection.CopyTo(Geometry[],Int32)\n  fullName: System.Windows.Media.GeometryCollection.CopyTo(Geometry[],Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void CopyTo (System.Windows.Media.Geometry[] array, int index);\n    parameters:\n    - id: array\n      type: System.Windows.Media.Geometry[]\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Count\n  id: Count\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: GeometryCollection.Count\n  fullName: System.Windows.Media.GeometryCollection.Count\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: GeometryCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.GeometryCollection.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.FreezeCore(System.Boolean)\n  id: FreezeCore(System.Boolean)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: FreezeCore(Boolean)\n  nameWithType: GeometryCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.GeometryCollection.FreezeCore(Boolean)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override bool FreezeCore (bool isChecking);\n    parameters:\n    - id: isChecking\n      type: System.Boolean\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.GetAsFrozenCore(System.Windows.Freezable)\n  id: GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: GeometryCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.GetAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: GeometryCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.GetCurrentValueAsFrozenCore(Freezable)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);\n    parameters:\n    - id: source\n      type: System.Windows.Freezable\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: GeometryCollection.GetEnumerator()\n  fullName: System.Windows.Media.GeometryCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.GeometryCollection.Enumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Windows.Media.GeometryCollection.Enumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.IndexOf(System.Windows.Media.Geometry)\n  id: IndexOf(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: IndexOf(Geometry)\n  nameWithType: GeometryCollection.IndexOf(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.IndexOf(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public int IndexOf (System.Windows.Media.Geometry value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Insert(System.Int32,System.Windows.Media.Geometry)\n  id: Insert(System.Int32,System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Insert(Int32,Geometry)\n  nameWithType: GeometryCollection.Insert(Int32,Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Insert(Int32,Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void Insert (int index, System.Windows.Media.Geometry value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: GeometryCollection.Item(Int32)\n  fullName: System.Windows.Media.GeometryCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public System.Windows.Media.Geometry this[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.Remove(System.Windows.Media.Geometry)\n  id: Remove(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: Remove(Geometry)\n  nameWithType: GeometryCollection.Remove(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Remove(Geometry)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public bool Remove (System.Windows.Media.Geometry value);\n    parameters:\n    - id: value\n      type: System.Windows.Media.Geometry\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: GeometryCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.GeometryCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#Generic#ICollection{System#Windows#Media#Geometry}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Windows#Media#Geometry}#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: GeometryCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Windows.Media.Geometry>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Geometry}#GetEnumerator\n  id: System#Collections#Generic#IEnumerable{System#Windows#Media#Geometry}#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: GeometryCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.Generic.IEnumerable()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.Generic.IEnumerator<System.Windows.Media.Geometry> IEnumerable<Geometry>.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Windows.Media.Geometry}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: GeometryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: GeometryCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: GeometryCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: GeometryCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Add(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Add(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Insert(Int32,Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: GeometryCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: GeometryCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: GeometryCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Windows.Media.GeometryCollection\n  langs:\n  - csharp\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: System.Windows.Media.Animation.Animatable\n- uid: System.Windows.Media.GeometryCollection.#ctor\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: GeometryCollection()\n  nameWithType: GeometryCollection.GeometryCollection()\n  fullName: System.Windows.Media.GeometryCollection.GeometryCollection()\n- uid: System.Windows.Media.GeometryCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry})\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: GeometryCollection(IEnumerable<Geometry>)\n  nameWithType: GeometryCollection.GeometryCollection(IEnumerable<Geometry>)\n  fullName: System.Windows.Media.GeometryCollection.GeometryCollection(IEnumerable<Geometry>)\n- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.Geometry}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Geometry>\n  nameWithType: IEnumerable<Geometry>\n  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.Geometry>\n- uid: System.Windows.Media.GeometryCollection.#ctor(System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: GeometryCollection(Int32)\n  nameWithType: GeometryCollection.GeometryCollection(Int32)\n  fullName: System.Windows.Media.GeometryCollection.GeometryCollection(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.Add(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Add(Geometry)\n  nameWithType: GeometryCollection.Add(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Add(Geometry)\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCollection.Clear\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: GeometryCollection.Clear()\n  fullName: System.Windows.Media.GeometryCollection.Clear()\n- uid: System.Windows.Media.GeometryCollection.Clone\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Clone()\n  nameWithType: GeometryCollection.Clone()\n  fullName: System.Windows.Media.GeometryCollection.Clone()\n- uid: System.Windows.Media.GeometryCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeometryCollection\n  nameWithType: GeometryCollection\n  fullName: System.Windows.Media.GeometryCollection\n- uid: System.Windows.Media.GeometryCollection.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: GeometryCollection.CloneCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.CloneCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.GeometryCollection.CloneCurrentValue\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: GeometryCollection.CloneCurrentValue()\n  fullName: System.Windows.Media.GeometryCollection.CloneCurrentValue()\n- uid: System.Windows.Media.GeometryCollection\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeometryCollection\n  nameWithType: GeometryCollection\n  fullName: System.Windows.Media.GeometryCollection\n- uid: System.Windows.Media.GeometryCollection.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: GeometryCollection.CloneCurrentValueCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.GeometryCollection.Contains(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Contains(Geometry)\n  nameWithType: GeometryCollection.Contains(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Contains(Geometry)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCollection.CopyTo(System.Windows.Media.Geometry[],System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: CopyTo(Geometry[],Int32)\n  nameWithType: GeometryCollection.CopyTo(Geometry[],Int32)\n  fullName: System.Windows.Media.GeometryCollection.CopyTo(Geometry[],Int32)\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.Count\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Count\n  nameWithType: GeometryCollection.Count\n  fullName: System.Windows.Media.GeometryCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.CreateInstanceCore\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: GeometryCollection.CreateInstanceCore()\n  fullName: System.Windows.Media.GeometryCollection.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.GeometryCollection.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: GeometryCollection.FreezeCore(Boolean)\n  fullName: System.Windows.Media.GeometryCollection.FreezeCore(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.GeometryCollection.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: GeometryCollection.GetAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.GeometryCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: GeometryCollection.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: System.Windows.Media.GeometryCollection.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: true\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.GeometryCollection.GetEnumerator\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: GeometryCollection.GetEnumerator()\n  fullName: System.Windows.Media.GeometryCollection.GetEnumerator()\n- uid: System.Windows.Media.GeometryCollection.Enumerator\n  parent: System.Windows.Media\n  isExternal: false\n  name: GeometryCollection+Enumerator\n  nameWithType: GeometryCollection+Enumerator\n  fullName: System.Windows.Media.GeometryCollection+Enumerator\n- uid: System.Windows.Media.GeometryCollection.IndexOf(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: IndexOf(Geometry)\n  nameWithType: GeometryCollection.IndexOf(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.IndexOf(Geometry)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCollection.Insert(System.Int32,System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Insert(Int32,Geometry)\n  nameWithType: GeometryCollection.Insert(Int32,Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Insert(Int32,Geometry)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCollection.Item(System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: GeometryCollection.Item(Int32)\n  fullName: System.Windows.Media.GeometryCollection.Item(Int32)\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.Remove(System.Windows.Media.Geometry)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: Remove(Geometry)\n  nameWithType: GeometryCollection.Remove(Geometry)\n  fullName: System.Windows.Media.GeometryCollection.Remove(Geometry)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Geometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: Geometry\n  nameWithType: Geometry\n  fullName: System.Windows.Media.Geometry\n- uid: System.Windows.Media.GeometryCollection.RemoveAt(System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: GeometryCollection.RemoveAt(Int32)\n  fullName: System.Windows.Media.GeometryCollection.RemoveAt(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.System#Collections#Generic#ICollection{System#Windows#Media#Geometry}#IsReadOnly\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: GeometryCollection.System.Collections.Generic.ICollection\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.GeometryCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#Geometry}#GetEnumerator\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.Generic.IEnumerable()\n  nameWithType: GeometryCollection.System.Collections.Generic.IEnumerable()\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.Generic.IEnumerable()\n- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.Geometry}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<Geometry>\n  nameWithType: IEnumerator<Geometry>\n  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.Geometry>\n- uid: System.Windows.Media.GeometryCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: GeometryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: GeometryCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.GeometryCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: GeometryCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: GeometryCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.Add(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Add(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Add(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.Contains(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Contains(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Contains(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.IndexOf(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.IndexOf(Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.Insert(Int32,Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Insert(Int32,Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Insert(Int32,Object)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#IsFixedSize\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: GeometryCollection.System.Collections.IList.IsFixedSize\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.IsFixedSize\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#IsReadOnly\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: GeometryCollection.System.Collections.IList.IsReadOnly\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.Item(Int32)\n  nameWithType: GeometryCollection.System.Collections.IList.Item(Int32)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Item(Int32)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Media.GeometryCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Windows.Media.GeometryCollection\n  isExternal: false\n  name: System.Collections.IList.Remove(Object)\n  nameWithType: GeometryCollection.System.Collections.IList.Remove(Object)\n  fullName: System.Windows.Media.GeometryCollection.System.Collections.IList.Remove(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}