{"nodes":[{"pos":[4111,4117],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[5255,5263],"content":"Children","needQuote":true,"needEscape":true,"nodes":[{"content":"Children","pos":[0,8]}]},{"pos":[5686,5720],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6157,6221],"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[6821,6855],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6963,6997],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7067,7101],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7556,7602],"content":"CreateTrustRelationship(Domain,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTrustRelationship(Domain,TrustDirection)","pos":[0,46]}]},{"pos":[8200,8234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8342,8376],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8673,8715],"content":"DeleteLocalSideOfTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteLocalSideOfTrustRelationship(String)","pos":[0,42]}]},{"pos":[9182,9216],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9559,9590],"content":"DeleteTrustRelationship(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteTrustRelationship(Domain)","pos":[0,31]}]},{"pos":[10091,10125],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10358,10375],"content":"DomainControllers","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllers","pos":[0,17]}]},{"pos":[10845,10879],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11098,11108],"content":"DomainMode","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainMode","pos":[0,10]}]},{"pos":[11525,11559],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11788,11803],"content":"DomainModeLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainModeLevel","pos":[0,15]}]},{"pos":[12148,12182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12453,12491],"content":"FindAllDiscoverableDomainControllers()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableDomainControllers()","pos":[0,38]}]},{"pos":[13034,13068],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13467,13511],"content":"FindAllDiscoverableDomainControllers(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableDomainControllers(String)","pos":[0,44]}]},{"pos":[14031,14065],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14177,14211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14556,14582],"content":"FindAllDomainControllers()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDomainControllers()","pos":[0,26]}]},{"pos":[15089,15123],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15486,15518],"content":"FindAllDomainControllers(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDomainControllers(String)","pos":[0,32]}]},{"pos":[16002,16036],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16148,16182],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16507,16529],"content":"FindDomainController()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController()","pos":[0,22]}]},{"pos":[17004,17038],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17473,17509],"content":"FindDomainController(LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController(LocatorOptions)","pos":[0,36]}]},{"pos":[18070,18104],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18206,18240],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18591,18619],"content":"FindDomainController(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController(String)","pos":[0,28]}]},{"pos":[19081,19115],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19217,19251],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19714,19757],"content":"FindDomainController(String,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController(String,LocatorOptions)","pos":[0,43]}]},{"pos":[20311,20345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20448,20482],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20584,20618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20911,20917],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[21314,21348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[21595,21621],"content":"GetAllTrustRelationships()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllTrustRelationships()","pos":[0,26]}]},{"pos":[22152,22186],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22419,22438],"content":"GetComputerDomain()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetComputerDomain()","pos":[0,19]}]},{"pos":[22891,22925],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23156,23174],"content":"GetCurrentDomain()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentDomain()","pos":[0,18]}]},{"pos":[23624,23658],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23891,23910],"content":"GetDirectoryEntry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDirectoryEntry()","pos":[0,19]}]},{"pos":[24349,24383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24718,24745],"content":"GetDomain(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDomain(DirectoryContext)","pos":[0,27]}]},{"pos":[25284,25318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25410,25444],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25737,25777],"content":"GetSelectiveAuthenticationStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSelectiveAuthenticationStatus(String)","pos":[0,40]}]},{"pos":[26238,26272],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26331,26365],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26636,26665],"content":"GetSidFilteringStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSidFilteringStatus(String)","pos":[0,29]}]},{"pos":[27093,27127],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27186,27220],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27489,27517],"content":"GetTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTrustRelationship(String)","pos":[0,28]}]},{"pos":[28007,28041],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28155,28189],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28434,28457],"content":"InfrastructureRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"InfrastructureRoleOwner","pos":[0,23]}]},{"pos":[28925,28959],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29170,29176],"content":"Parent","needQuote":true,"needEscape":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[29573,29607],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[29830,29842],"content":"PdcRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"PdcRoleOwner","pos":[0,12]}]},{"pos":[30277,30311],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[30664,30700],"content":"RaiseDomainFunctionality(DomainMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseDomainFunctionality(DomainMode)","pos":[0,36]}]},{"pos":[31216,31250],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[31535,31571],"content":"RaiseDomainFunctionalityLevel(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseDomainFunctionalityLevel(Int32)","pos":[0,36]}]},{"pos":[32005,32039],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[32382,32413],"content":"RepairTrustRelationship(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"RepairTrustRelationship(Domain)","pos":[0,31]}]},{"pos":[32914,32948],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33171,33183],"content":"RidRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"RidRoleOwner","pos":[0,12]}]},{"pos":[33618,33652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[33975,34023],"content":"SetSelectiveAuthenticationStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSelectiveAuthenticationStatus(String,Boolean)","pos":[0,48]}]},{"pos":[34513,34547],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34611,34645],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[34946,34983],"content":"SetSidFilteringStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSidFilteringStatus(String,Boolean)","pos":[0,37]}]},{"pos":[35440,35474],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35538,35572],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[35897,35946],"content":"UpdateLocalSideOfTrustRelationship(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,String)","pos":[0,49]}]},{"pos":[36452,36486],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[36559,36593],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37126,37190],"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[37801,37835],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[37951,37985],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38058,38092],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[38643,38689],"content":"UpdateTrustRelationship(Domain,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateTrustRelationship(Domain,TrustDirection)","pos":[0,46]}]},{"pos":[39295,39329],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39445,39479],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[39770,39809],"content":"VerifyOutboundTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyOutboundTrustRelationship(String)","pos":[0,39]}]},{"pos":[40267,40301],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[40756,40802],"content":"VerifyTrustRelationship(Domain,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyTrustRelationship(Domain,TrustDirection)","pos":[0,46]}]},{"pos":[41400,41434],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41542,41576],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[41739,41804],"content":"System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition","needQuote":true,"needEscape":true,"nodes":[{"content":"System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition","pos":[0,65]}]},{"pos":[41955,41963],"content":"Children","needQuote":true,"needEscape":true,"nodes":[{"content":"Children","pos":[0,8]}]},{"pos":[42209,42225],"content":"DomainCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainCollection","pos":[0,16]}]},{"pos":[42590,42654],"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[42934,42940],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43132,43146],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[43312,43318],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[43638,43684],"content":"CreateTrustRelationship(Domain,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateTrustRelationship(Domain,TrustDirection)","pos":[0,46]}]},{"pos":[43996,44002],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[44228,44242],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[44533,44575],"content":"DeleteLocalSideOfTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteLocalSideOfTrustRelationship(String)","pos":[0,42]}]},{"pos":[44811,44817],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45081,45112],"content":"DeleteTrustRelationship(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"DeleteTrustRelationship(Domain)","pos":[0,31]}]},{"pos":[45394,45400],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[45643,45660],"content":"DomainControllers","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllers","pos":[0,17]}]},{"pos":[45934,45960],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[46236,46246],"content":"DomainMode","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainMode","pos":[0,10]}]},{"pos":[46490,46500],"content":"DomainMode","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainMode","pos":[0,10]}]},{"pos":[46749,46764],"content":"DomainModeLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainModeLevel","pos":[0,15]}]},{"pos":[46945,46950],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[47176,47214],"content":"FindAllDiscoverableDomainControllers()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableDomainControllers()","pos":[0,38]}]},{"pos":[47530,47556],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[47873,47917],"content":"FindAllDiscoverableDomainControllers(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDiscoverableDomainControllers(String)","pos":[0,44]}]},{"pos":[48245,48271],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[48461,48467],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[48683,48709],"content":"FindAllDomainControllers()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDomainControllers()","pos":[0,26]}]},{"pos":[49001,49027],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[49332,49364],"content":"FindAllDomainControllers(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAllDomainControllers(String)","pos":[0,32]}]},{"pos":[49668,49694],"content":"DomainControllerCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainControllerCollection","pos":[0,26]}]},{"pos":[49884,49890],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[50102,50124],"content":"FindDomainController()","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController()","pos":[0,22]}]},{"pos":[50398,50414],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[50737,50773],"content":"FindDomainController(LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController(LocatorOptions)","pos":[0,36]}]},{"pos":[51075,51091],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[51337,51351],"content":"LocatorOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LocatorOptions","pos":[0,14]}]},{"pos":[51628,51656],"content":"FindDomainController(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController(String)","pos":[0,28]}]},{"pos":[51942,51958],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[52128,52134],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[52417,52460],"content":"FindDomainController(String,LocatorOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindDomainController(String,LocatorOptions)","pos":[0,43]}]},{"pos":[52776,52792],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[52962,52968],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[53160,53174],"content":"LocatorOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"LocatorOptions","pos":[0,14]}]},{"pos":[53422,53428],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[53660,53666],"content":"Forest","needQuote":true,"needEscape":true,"nodes":[{"content":"Forest","pos":[0,6]}]},{"pos":[53916,53942],"content":"GetAllTrustRelationships()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllTrustRelationships()","pos":[0,26]}]},{"pos":[54246,54284],"content":"TrustRelationshipInformationCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustRelationshipInformationCollection","pos":[0,38]}]},{"pos":[54591,54610],"content":"GetComputerDomain()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetComputerDomain()","pos":[0,19]}]},{"pos":[54868,54874],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[55116,55134],"content":"GetCurrentDomain()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetCurrentDomain()","pos":[0,18]}]},{"pos":[55390,55396],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[55639,55658],"content":"GetDirectoryEntry()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDirectoryEntry()","pos":[0,19]}]},{"pos":[55892,55906],"content":"DirectoryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryEntry","pos":[0,14]}]},{"pos":[56200,56227],"content":"GetDomain(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetDomain(DirectoryContext)","pos":[0,27]}]},{"pos":[56501,56507],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[56735,56751],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[57044,57084],"content":"GetSelectiveAuthenticationStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSelectiveAuthenticationStatus(String)","pos":[0,40]}]},{"pos":[57317,57324],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[57442,57448],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[57676,57705],"content":"GetSidFilteringStatus(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetSidFilteringStatus(String)","pos":[0,29]}]},{"pos":[57916,57923],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[58041,58047],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[58274,58302],"content":"GetTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTrustRelationship(String)","pos":[0,28]}]},{"pos":[58600,58628],"content":"TrustRelationshipInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustRelationshipInformation","pos":[0,28]}]},{"pos":[58822,58828],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[59043,59066],"content":"InfrastructureRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"InfrastructureRoleOwner","pos":[0,23]}]},{"pos":[59342,59358],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[59610,59616],"content":"Parent","needQuote":true,"needEscape":true,"nodes":[{"content":"Parent","pos":[0,6]}]},{"pos":[59848,59854],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[60092,60104],"content":"PdcRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"PdcRoleOwner","pos":[0,12]}]},{"pos":[60358,60374],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[60697,60733],"content":"RaiseDomainFunctionality(DomainMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseDomainFunctionality(DomainMode)","pos":[0,36]}]},{"pos":[61029,61039],"content":"DomainMode","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainMode","pos":[0,10]}]},{"pos":[61316,61352],"content":"RaiseDomainFunctionalityLevel(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"RaiseDomainFunctionalityLevel(Int32)","pos":[0,36]}]},{"pos":[61575,61580],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[61842,61873],"content":"RepairTrustRelationship(Domain)","needQuote":true,"needEscape":true,"nodes":[{"content":"RepairTrustRelationship(Domain)","pos":[0,31]}]},{"pos":[62155,62161],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[62399,62411],"content":"RidRoleOwner","needQuote":true,"needEscape":true,"nodes":[{"content":"RidRoleOwner","pos":[0,12]}]},{"pos":[62665,62681],"content":"DomainController","needQuote":true,"needEscape":true,"nodes":[{"content":"DomainController","pos":[0,16]}]},{"pos":[62989,63037],"content":"SetSelectiveAuthenticationStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSelectiveAuthenticationStatus(String,Boolean)","pos":[0,48]}]},{"pos":[63285,63291],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[63408,63415],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[63660,63697],"content":"SetSidFilteringStatus(String,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"SetSidFilteringStatus(String,Boolean)","pos":[0,37]}]},{"pos":[63923,63929],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64046,64053],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[64310,64359],"content":"UpdateLocalSideOfTrustRelationship(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,String)","pos":[0,49]}]},{"pos":[64609,64615],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[64731,64737],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65048,65112],"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)","pos":[0,64]}]},{"pos":[65392,65398],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[65590,65604],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[65770,65776],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[66096,66142],"content":"UpdateTrustRelationship(Domain,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"UpdateTrustRelationship(Domain,TrustDirection)","pos":[0,46]}]},{"pos":[66454,66460],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[66686,66700],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]},{"pos":[66988,67027],"content":"VerifyOutboundTrustRelationship(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyOutboundTrustRelationship(String)","pos":[0,39]}]},{"pos":[67257,67263],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[67583,67629],"content":"VerifyTrustRelationship(Domain,TrustDirection)","needQuote":true,"needEscape":true,"nodes":[{"content":"VerifyTrustRelationship(Domain,TrustDirection)","pos":[0,46]}]},{"pos":[67941,67947],"content":"Domain","needQuote":true,"needEscape":true,"nodes":[{"content":"Domain","pos":[0,6]}]},{"pos":[68173,68187],"content":"TrustDirection","needQuote":true,"needEscape":true,"nodes":[{"content":"TrustDirection","pos":[0,14]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  id: Domain\n  children:\n  - System.DirectoryServices.ActiveDirectory.Domain.Children\n  - System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  - System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  - System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  - System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  - System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  - System.DirectoryServices.ActiveDirectory.Domain.Forest\n  - System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  - System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  - System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  - System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Domain.Parent\n  - System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  - System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  - System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  - System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  - System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  - System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  - System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  langs:\n  - csharp\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n  type: Class\n  syntax:\n    content: 'public class Domain : System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.Name\n  - System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Children\n  id: Children\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: Children\n  nameWithType: Domain.Children\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Children { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void CreateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n    - id: trustPassword\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: CreateTrustRelationship(Domain,TrustDirection)\n  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  id: DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void DeleteLocalSideOfTrustRelationship (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DeleteTrustRelationship(Domain)\n  nameWithType: Domain.DeleteTrustRelationship(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  id: DomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DomainControllers\n  nameWithType: Domain.DomainControllers\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection DomainControllers { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  id: DomainMode\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DomainMode\n  nameWithType: Domain.DomainMode\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainMode DomainMode { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  id: DomainModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: DomainModeLevel\n  nameWithType: Domain.DomainModeLevel\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public int DomainModeLevel { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  id: FindAllDiscoverableDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDiscoverableDomainControllers()\n  nameWithType: Domain.FindAllDiscoverableDomainControllers()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  id: FindAllDiscoverableDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDiscoverableDomainControllers(String)\n  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDiscoverableDomainControllers (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  id: FindAllDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDomainControllers()\n  nameWithType: Domain.FindAllDomainControllers()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  id: FindAllDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindAllDomainControllers(String)\n  nameWithType: Domain.FindAllDomainControllers(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainControllerCollection FindAllDomainControllers (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  id: FindDomainController\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController()\n  nameWithType: Domain.FindDomainController()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController(LocatorOptions)\n  nameWithType: Domain.FindDomainController(LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  id: FindDomainController(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController(String)\n  nameWithType: Domain.FindDomainController(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  id: FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: FindDomainController(String,LocatorOptions)\n  nameWithType: Domain.FindDomainController(String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController FindDomainController (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);\n    parameters:\n    - id: siteName\n      type: System.String\n      description: Parameter description to be filled\n    - id: flag\n      type: System.DirectoryServices.ActiveDirectory.LocatorOptions\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest\n  id: Forest\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: Forest\n  nameWithType: Domain.Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Forest Forest { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Forest\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  id: GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetAllTrustRelationships()\n  nameWithType: Domain.GetAllTrustRelationships()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  id: GetComputerDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetComputerDomain()\n  nameWithType: Domain.GetComputerDomain()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Domain GetComputerDomain ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  id: GetCurrentDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetCurrentDomain()\n  nameWithType: Domain.GetCurrentDomain()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Domain GetCurrentDomain ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  id: GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetDirectoryEntry()\n  nameWithType: Domain.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.DirectoryEntry GetDirectoryEntry ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.DirectoryEntry\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetDomain(DirectoryContext)\n  nameWithType: Domain.GetDomain(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.Domain GetDomain (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  id: GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public bool GetSelectiveAuthenticationStatus (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  id: GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetSidFilteringStatus(String)\n  nameWithType: Domain.GetSidFilteringStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public bool GetSidFilteringStatus (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  id: GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: GetTrustRelationship(String)\n  nameWithType: Domain.GetTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation GetTrustRelationship (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  id: InfrastructureRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: InfrastructureRoleOwner\n  nameWithType: Domain.InfrastructureRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController InfrastructureRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent\n  id: Parent\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: Parent\n  nameWithType: Domain.Parent\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.Domain Parent { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  id: PdcRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: PdcRoleOwner\n  nameWithType: Domain.PdcRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController PdcRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  id: RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RaiseDomainFunctionality(DomainMode)\n  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void RaiseDomainFunctionality (System.DirectoryServices.ActiveDirectory.DomainMode domainMode);\n    parameters:\n    - id: domainMode\n      type: System.DirectoryServices.ActiveDirectory.DomainMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  id: RaiseDomainFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RaiseDomainFunctionalityLevel(Int32)\n  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void RaiseDomainFunctionalityLevel (int domainMode);\n    parameters:\n    - id: domainMode\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RepairTrustRelationship(Domain)\n  nameWithType: Domain.RepairTrustRelationship(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  id: RidRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: RidRoleOwner\n  nameWithType: Domain.RidRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.DomainController RidRoleOwner { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.DomainController\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: SetSelectiveAuthenticationStatus(String,Boolean)\n  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void SetSelectiveAuthenticationStatus (string targetDomainName, bool enable);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    - id: enable\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  id: SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: SetSidFilteringStatus(String,Boolean)\n  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void SetSidFilteringStatus (string targetDomainName, bool enable);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    - id: enable\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String,String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, string newTrustPassword);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    - id: newTrustPassword\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void UpdateLocalSideOfTrustRelationship (string targetDomainName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n    - id: newTrustPassword\n      type: System.String\n      description: Parameter description to be filled\n  overload: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: UpdateTrustRelationship(Domain,TrustDirection)\n  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n    - id: newTrustDirection\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  id: VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Domain.VerifyOutboundTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void VerifyOutboundTrustRelationship (string targetDomainName);\n    parameters:\n    - id: targetDomainName\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  langs:\n  - csharp\n  name: VerifyTrustRelationship(Domain,TrustDirection)\n  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Domain targetDomain, System.DirectoryServices.ActiveDirectory.TrustDirection direction);\n    parameters:\n    - id: targetDomain\n      type: System.DirectoryServices.ActiveDirectory.Domain\n      description: Parameter description to be filled\n    - id: direction\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n  isExternal: false\n  name: System.DirectoryServices.ActiveDirectory.ActiveDirectoryPartition\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Children\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Children\n  nameWithType: Domain.Children\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.Children\n- uid: System.DirectoryServices.ActiveDirectory.DomainCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainCollection\n  nameWithType: DomainCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: CreateTrustRelationship(Domain,TrustDirection)\n  nameWithType: Domain.CreateTrustRelationship(Domain,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.CreateTrustRelationship(Domain,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DeleteLocalSideOfTrustRelationship(String)\n  nameWithType: Domain.DeleteLocalSideOfTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteLocalSideOfTrustRelationship(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DeleteTrustRelationship(Domain)\n  nameWithType: Domain.DeleteTrustRelationship(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DeleteTrustRelationship(Domain)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainControllers\n  nameWithType: Domain.DomainControllers\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainControllers\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainMode\n  nameWithType: Domain.DomainMode\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainMode\n- uid: System.DirectoryServices.ActiveDirectory.DomainMode\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainMode\n  nameWithType: DomainMode\n  fullName: System.DirectoryServices.ActiveDirectory.DomainMode\n- uid: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: DomainModeLevel\n  nameWithType: Domain.DomainModeLevel\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.DomainModeLevel\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDiscoverableDomainControllers()\n  nameWithType: Domain.FindAllDiscoverableDomainControllers()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers()\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDiscoverableDomainControllers(String)\n  nameWithType: Domain.FindAllDiscoverableDomainControllers(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers(String)\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDomainControllers()\n  nameWithType: Domain.FindAllDomainControllers()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers()\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindAllDomainControllers(String)\n  nameWithType: Domain.FindAllDomainControllers(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers(String)\n- uid: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainControllerCollection\n  nameWithType: DomainControllerCollection\n  fullName: System.DirectoryServices.ActiveDirectory.DomainControllerCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController()\n  nameWithType: Domain.FindDomainController()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController()\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController(LocatorOptions)\n  nameWithType: Domain.FindDomainController(LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController(String)\n  nameWithType: Domain.FindDomainController(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: FindDomainController(String,LocatorOptions)\n  nameWithType: Domain.FindDomainController(String,LocatorOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController(String,LocatorOptions)\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: LocatorOptions\n  nameWithType: LocatorOptions\n  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Forest\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Forest\n  nameWithType: Domain.Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Forest\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Forest\n  nameWithType: Forest\n  fullName: System.DirectoryServices.ActiveDirectory.Forest\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetAllTrustRelationships()\n  nameWithType: Domain.GetAllTrustRelationships()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetAllTrustRelationships()\n- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustRelationshipInformationCollection\n  nameWithType: TrustRelationshipInformationCollection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetComputerDomain()\n  nameWithType: Domain.GetComputerDomain()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetComputerDomain()\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetCurrentDomain()\n  nameWithType: Domain.GetCurrentDomain()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetCurrentDomain()\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetDirectoryEntry()\n  nameWithType: Domain.GetDirectoryEntry()\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDirectoryEntry()\n- uid: System.DirectoryServices.DirectoryEntry\n  parent: System.DirectoryServices\n  isExternal: false\n  name: DirectoryEntry\n  nameWithType: DirectoryEntry\n  fullName: System.DirectoryServices.DirectoryEntry\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetDomain(DirectoryContext)\n  nameWithType: Domain.GetDomain(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetDomain(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetSelectiveAuthenticationStatus(String)\n  nameWithType: Domain.GetSelectiveAuthenticationStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSelectiveAuthenticationStatus(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetSidFilteringStatus(String)\n  nameWithType: Domain.GetSidFilteringStatus(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetSidFilteringStatus(String)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: GetTrustRelationship(String)\n  nameWithType: Domain.GetTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.GetTrustRelationship(String)\n- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustRelationshipInformation\n  nameWithType: TrustRelationshipInformation\n  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: InfrastructureRoleOwner\n  nameWithType: Domain.InfrastructureRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.InfrastructureRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Domain.Parent\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: Parent\n  nameWithType: Domain.Parent\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.Parent\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: PdcRoleOwner\n  nameWithType: Domain.PdcRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.PdcRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(System.DirectoryServices.ActiveDirectory.DomainMode)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RaiseDomainFunctionality(DomainMode)\n  nameWithType: Domain.RaiseDomainFunctionality(DomainMode)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionality(DomainMode)\n- uid: System.DirectoryServices.ActiveDirectory.DomainMode\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainMode\n  nameWithType: DomainMode\n  fullName: System.DirectoryServices.ActiveDirectory.DomainMode\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(System.Int32)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RaiseDomainFunctionalityLevel(Int32)\n  nameWithType: Domain.RaiseDomainFunctionalityLevel(Int32)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RaiseDomainFunctionalityLevel(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RepairTrustRelationship(Domain)\n  nameWithType: Domain.RepairTrustRelationship(Domain)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RepairTrustRelationship(Domain)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: RidRoleOwner\n  nameWithType: Domain.RidRoleOwner\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.RidRoleOwner\n- uid: System.DirectoryServices.ActiveDirectory.DomainController\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DomainController\n  nameWithType: DomainController\n  fullName: System.DirectoryServices.ActiveDirectory.DomainController\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: SetSelectiveAuthenticationStatus(String,Boolean)\n  nameWithType: Domain.SetSelectiveAuthenticationStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSelectiveAuthenticationStatus(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(System.String,System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: SetSidFilteringStatus(String,Boolean)\n  nameWithType: Domain.SetSidFilteringStatus(String,Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.SetSidFilteringStatus(String,Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String,String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  nameWithType: Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: UpdateTrustRelationship(Domain,TrustDirection)\n  nameWithType: Domain.UpdateTrustRelationship(Domain,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.UpdateTrustRelationship(Domain,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: VerifyOutboundTrustRelationship(String)\n  nameWithType: Domain.VerifyOutboundTrustRelationship(String)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyOutboundTrustRelationship(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Domain,System.DirectoryServices.ActiveDirectory.TrustDirection)\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  name: VerifyTrustRelationship(Domain,TrustDirection)\n  nameWithType: Domain.VerifyTrustRelationship(Domain,TrustDirection)\n  fullName: System.DirectoryServices.ActiveDirectory.Domain.VerifyTrustRelationship(Domain,TrustDirection)\n- uid: System.DirectoryServices.ActiveDirectory.Domain\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: Domain\n  nameWithType: Domain\n  fullName: System.DirectoryServices.ActiveDirectory.Domain\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDiscoverableDomainControllers*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  nameWithType: Domain.\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindAllDomainControllers*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  nameWithType: Domain.\n- uid: System.DirectoryServices.ActiveDirectory.Domain.FindDomainController*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  nameWithType: Domain.\n- uid: System.DirectoryServices.ActiveDirectory.Domain.UpdateLocalSideOfTrustRelationship*\n  parent: System.DirectoryServices.ActiveDirectory.Domain\n  isExternal: false\n  nameWithType: Domain.\n"}