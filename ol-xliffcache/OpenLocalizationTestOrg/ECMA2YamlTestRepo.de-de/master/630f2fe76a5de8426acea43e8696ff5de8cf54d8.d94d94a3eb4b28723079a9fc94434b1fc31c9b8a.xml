{"nodes":[{"pos":[418,435],"content":"ReflectionContext","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionContext","pos":[0,17]}]},{"pos":[1125,1144],"content":"ReflectionContext()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionContext()","pos":[0,19]}]},{"pos":[1655,1679],"content":"GetTypeForObject(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypeForObject(Object)","pos":[0,24]}]},{"pos":[2060,2094],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2165,2199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2452,2473],"content":"MapAssembly(Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"MapAssembly(Assembly)","pos":[0,21]}]},{"pos":[2883,2917],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2988,3022],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3267,3284],"content":"MapType(TypeInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"MapType(TypeInfo)","pos":[0,17]}]},{"pos":[3674,3708],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3779,3813],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3924,3937],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[4061,4080],"content":"ReflectionContext()","needQuote":true,"needEscape":true,"nodes":[{"content":"ReflectionContext()","pos":[0,19]}]},{"pos":[4352,4376],"content":"GetTypeForObject(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetTypeForObject(Object)","pos":[0,24]}]},{"pos":[4599,4607],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[4738,4744],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4951,4972],"content":"MapAssembly(Assembly)","needQuote":true,"needEscape":true,"nodes":[{"content":"MapAssembly(Assembly)","pos":[0,21]}]},{"pos":[5189,5197],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[5352,5360],"content":"Assembly","needQuote":true,"needEscape":true,"nodes":[{"content":"Assembly","pos":[0,8]}]},{"pos":[5578,5595],"content":"MapType(TypeInfo)","needQuote":true,"needEscape":true,"nodes":[{"content":"MapType(TypeInfo)","pos":[0,17]}]},{"pos":[5804,5812],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]},{"pos":[5967,5975],"content":"TypeInfo","needQuote":true,"needEscape":true,"nodes":[{"content":"TypeInfo","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ReflectionContext\n  id: ReflectionContext\n  children:\n  - System.Reflection.ReflectionContext.#ctor\n  - System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  - System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  - System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  langs:\n  - csharp\n  name: ReflectionContext\n  nameWithType: ReflectionContext\n  fullName: System.Reflection.ReflectionContext\n  type: Class\n  syntax:\n    content: public abstract class ReflectionContext\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionContext.#ctor\n  id: '#ctor'\n  parent: System.Reflection.ReflectionContext\n  langs:\n  - csharp\n  name: ReflectionContext()\n  nameWithType: ReflectionContext.ReflectionContext()\n  fullName: System.Reflection.ReflectionContext.ReflectionContext()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected ReflectionContext ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  id: GetTypeForObject(System.Object)\n  parent: System.Reflection.ReflectionContext\n  langs:\n  - csharp\n  name: GetTypeForObject(Object)\n  nameWithType: ReflectionContext.GetTypeForObject(Object)\n  fullName: System.Reflection.ReflectionContext.GetTypeForObject(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.TypeInfo GetTypeForObject (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  id: MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.ReflectionContext\n  langs:\n  - csharp\n  name: MapAssembly(Assembly)\n  nameWithType: ReflectionContext.MapAssembly(Assembly)\n  fullName: System.Reflection.ReflectionContext.MapAssembly(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.Assembly\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  id: MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.ReflectionContext\n  langs:\n  - csharp\n  name: MapType(TypeInfo)\n  nameWithType: ReflectionContext.MapType(TypeInfo)\n  fullName: System.Reflection.ReflectionContext.MapType(TypeInfo)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public abstract System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);\n    parameters:\n    - id: type\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n    return:\n      type: System.Reflection.TypeInfo\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.ReflectionContext.#ctor\n  parent: System.Reflection.ReflectionContext\n  isExternal: false\n  name: ReflectionContext()\n  nameWithType: ReflectionContext.ReflectionContext()\n  fullName: System.Reflection.ReflectionContext.ReflectionContext()\n- uid: System.Reflection.ReflectionContext.GetTypeForObject(System.Object)\n  parent: System.Reflection.ReflectionContext\n  isExternal: false\n  name: GetTypeForObject(Object)\n  nameWithType: ReflectionContext.GetTypeForObject(Object)\n  fullName: System.Reflection.ReflectionContext.GetTypeForObject(Object)\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.ReflectionContext.MapAssembly(System.Reflection.Assembly)\n  parent: System.Reflection.ReflectionContext\n  isExternal: false\n  name: MapAssembly(Assembly)\n  nameWithType: ReflectionContext.MapAssembly(Assembly)\n  fullName: System.Reflection.ReflectionContext.MapAssembly(Assembly)\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Reflection.ReflectionContext.MapType(System.Reflection.TypeInfo)\n  parent: System.Reflection.ReflectionContext\n  isExternal: false\n  name: MapType(TypeInfo)\n  nameWithType: ReflectionContext.MapType(TypeInfo)\n  fullName: System.Reflection.ReflectionContext.MapType(TypeInfo)\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n- uid: System.Reflection.TypeInfo\n  parent: System.Reflection\n  isExternal: false\n  name: TypeInfo\n  nameWithType: TypeInfo\n  fullName: System.Reflection.TypeInfo\n"}