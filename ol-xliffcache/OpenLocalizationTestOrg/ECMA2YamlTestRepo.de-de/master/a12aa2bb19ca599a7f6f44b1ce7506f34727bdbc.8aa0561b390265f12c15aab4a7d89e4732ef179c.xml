{"nodes":[{"pos":[589,608],"content":"DbGroupByExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupByExpression","pos":[0,19]}]},{"pos":[4467,4494],"content":"Accept(DbExpressionVisitor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept(DbExpressionVisitor)","pos":[0,27]}]},{"pos":[4979,5013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5348,5388],"content":"Accept(DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Accept(DbExpressionVisitor<TResultType>)"},{"pos":[5934,5968],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6024,6058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6285,6295],"content":"Aggregates","needQuote":true,"needEscape":true,"nodes":[{"content":"Aggregates","pos":[0,10]}]},{"pos":[6766,6800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7017,7022],"content":"Input","needQuote":true,"needEscape":true,"nodes":[{"content":"Input","pos":[0,5]}]},{"pos":[7436,7470],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7685,7689],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[8144,8178],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8320,8364],"content":"System.Data.Common.CommandTrees.DbExpression","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Data.Common.CommandTrees.DbExpression","pos":[0,44]}]},{"pos":[8574,8601],"content":"Accept(DbExpressionVisitor)","needQuote":true,"needEscape":true,"nodes":[{"content":"Accept(DbExpressionVisitor)","pos":[0,27]}]},{"pos":[8887,8906],"content":"DbExpressionVisitor","needQuote":true,"needEscape":true,"nodes":[{"content":"DbExpressionVisitor","pos":[0,19]}]},{"pos":[9221,9261],"content":"Accept(DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>)","needQuote":true,"needEscape":true,"source":"Accept(DbExpressionVisitor<TResultType>)"},{"pos":[9503,9514],"content":"TResultType","needQuote":true,"needEscape":true,"nodes":[{"content":"TResultType","pos":[0,11]}]},{"pos":[9698,9730],"content":"DbExpressionVisitor<ph id=\"ph1\">&lt;TResultType&gt;</ph>","needQuote":true,"needEscape":true,"source":"DbExpressionVisitor<TResultType>"},{"pos":[10017,10027],"content":"Aggregates","needQuote":true,"needEscape":true,"nodes":[{"content":"Aggregates","pos":[0,10]}]},{"pos":[10300,10318],"content":"IList<ph id=\"ph1\">&lt;DbAggregate&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<DbAggregate>"},{"pos":[10599,10604],"content":"Input","needQuote":true,"needEscape":true,"nodes":[{"content":"Input","pos":[0,5]}]},{"pos":[10851,10875],"content":"DbGroupExpressionBinding","needQuote":true,"needEscape":true,"nodes":[{"content":"DbGroupExpressionBinding","pos":[0,24]}]},{"pos":[11140,11144],"content":"Keys","needQuote":true,"needEscape":true,"nodes":[{"content":"Keys","pos":[0,4]}]},{"pos":[11406,11425],"content":"IList<ph id=\"ph1\">&lt;DbExpression&gt;</ph>","needQuote":true,"needEscape":true,"source":"IList<DbExpression>"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression\n  id: DbGroupByExpression\n  children:\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  - System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  langs:\n  - csharp\n  name: DbGroupByExpression\n  nameWithType: DbGroupByExpression\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression\n  type: Class\n  syntax:\n    content: 'public sealed class DbGroupByExpression : System.Data.Common.CommandTrees.DbExpression'\n  inheritance:\n  - System.Object\n  - System.Data.Common.CommandTrees.DbExpression\n  implements: []\n  inheritedMembers:\n  - System.Data.Common.CommandTrees.DbExpression.Equals(System.Object)\n  - System.Data.Common.CommandTrees.DbExpression.ExpressionKind\n  - System.Data.Common.CommandTrees.DbExpression.FromBinary(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.FromBoolean(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.FromByte(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTime(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.FromDateTimeOffset(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.FromDecimal(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.FromDouble(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.FromGeography(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.FromGeometry(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.FromGuid(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt16(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt32(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.FromInt64(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.FromSingle(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.FromString(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.GetHashCode\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Byte[])\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeography)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Data.Spatial.DbGeometry)\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Boolean})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Byte})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTime})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.DateTimeOffset})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Decimal})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Double})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Guid})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int16})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int32})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Int64})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.Nullable{System.Single})\n  - System.Data.Common.CommandTrees.DbExpression.op_Implicit(System.String)\n  - System.Data.Common.CommandTrees.DbExpression.ResultType\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  id: Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  id: Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)\n  type: Method\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public override TResultType Accept<TResultType> (System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType> visitor);\n    parameters:\n    - id: visitor\n      type: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n      description: Parameter description to be filled\n    return:\n      type: TResultType\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  id: Aggregates\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Aggregates\n  nameWithType: DbGroupByExpression.Aggregates\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbAggregate> Aggregates { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  id: Input\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Input\n  nameWithType: DbGroupByExpression.Input\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Data.Common.CommandTrees.DbGroupExpressionBinding Input { get; }\n    return:\n      type: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  id: Keys\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  langs:\n  - csharp\n  name: Keys\n  nameWithType: DbGroupByExpression.Keys\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  type: Property\n  assemblies:\n  - System.Data.Entity\n  namespace: System.Data.Common.CommandTrees\n  syntax:\n    content: public System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression> Keys { get; }\n    return:\n      type: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Data.Common.CommandTrees.DbExpression\n  isExternal: false\n  name: System.Data.Common.CommandTrees.DbExpression\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor)\n  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor)\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor)\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor\n  nameWithType: DbExpressionVisitor\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor`1)\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Accept(DbExpressionVisitor<TResultType>)\n  nameWithType: DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Accept(DbExpressionVisitor<TResultType>)\n- uid: TResultType\n  parent: ''\n  isExternal: true\n  name: TResultType\n  nameWithType: TResultType\n  fullName: TResultType\n- uid: System.Data.Common.CommandTrees.DbExpressionVisitor`1\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbExpressionVisitor<TResultType>\n  nameWithType: DbExpressionVisitor<TResultType>\n  fullName: System.Data.Common.CommandTrees.DbExpressionVisitor<TResultType>\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Aggregates\n  nameWithType: DbGroupByExpression.Aggregates\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Aggregates\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbAggregate}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbAggregate>\n  nameWithType: IList<DbAggregate>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbAggregate>\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Input\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Input\n  nameWithType: DbGroupByExpression.Input\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Input\n- uid: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n  parent: System.Data.Common.CommandTrees\n  isExternal: false\n  name: DbGroupExpressionBinding\n  nameWithType: DbGroupExpressionBinding\n  fullName: System.Data.Common.CommandTrees.DbGroupExpressionBinding\n- uid: System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n  parent: System.Data.Common.CommandTrees.DbGroupByExpression\n  isExternal: false\n  name: Keys\n  nameWithType: DbGroupByExpression.Keys\n  fullName: System.Data.Common.CommandTrees.DbGroupByExpression.Keys\n- uid: System.Collections.Generic.IList{System.Data.Common.CommandTrees.DbExpression}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IList<DbExpression>\n  nameWithType: IList<DbExpression>\n  fullName: System.Collections.Generic.IList<System.Data.Common.CommandTrees.DbExpression>\n"}