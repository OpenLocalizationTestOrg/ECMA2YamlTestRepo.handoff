{"nodes":[{"pos":[2851,2863],"content":"AdamInstance","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamInstance","pos":[0,12]}]},{"pos":[4175,4204],"content":"CheckReplicationConsistency()","needQuote":true,"needEscape":true,"nodes":[{"content":"CheckReplicationConsistency()","pos":[0,29]}]},{"pos":[4809,4825],"content":"ConfigurationSet","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigurationSet","pos":[0,16]}]},{"pos":[5284,5318],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5561,5577],"content":"DefaultPartition","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultPartition","pos":[0,16]}]},{"pos":[5946,5980],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6237,6253],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[6650,6684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6911,6921],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[7581,7613],"content":"FindAll(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAll(DirectoryContext,String)","pos":[0,32]}]},{"pos":[8210,8244],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8314,8348],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8456,8490],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8861,8893],"content":"FindOne(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,String)","pos":[0,32]}]},{"pos":[9480,9514],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9584,9618],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9716,9750],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10109,10142],"content":"GetAdamInstance(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAdamInstance(DirectoryContext)","pos":[0,33]}]},{"pos":[10717,10751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10849,10883],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11146,11174],"content":"GetAllReplicationNeighbors()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllReplicationNeighbors()","pos":[0,28]}]},{"pos":[11714,11748],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12023,12057],"content":"GetReplicationConnectionFailures()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationConnectionFailures()","pos":[0,34]}]},{"pos":[12613,12647],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12930,12959],"content":"GetReplicationCursors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationCursors(String)","pos":[0,29]}]},{"pos":[13458,13492],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13605,13639],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13924,13954],"content":"GetReplicationMetadata(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationMetadata(String)","pos":[0,30]}]},{"pos":[14465,14499],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14619,14653],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14940,14971],"content":"GetReplicationNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationNeighbors(String)","pos":[0,31]}]},{"pos":[15478,15512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15627,15661],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[15940,15976],"content":"GetReplicationOperationInformation()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationOperationInformation()","pos":[0,36]}]},{"pos":[16544,16578],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[16805,16813],"content":"HostName","needQuote":true,"needEscape":true,"nodes":[{"content":"HostName","pos":[0,8]}]},{"pos":[17153,17187],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[17434,17452],"content":"InboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"InboundConnections","pos":[0,18]}]},{"pos":[17956,17990],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18219,18228],"content":"IPAddress","needQuote":true,"needEscape":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[18580,18614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[18841,18849],"content":"LdapPort","needQuote":true,"needEscape":true,"nodes":[{"content":"LdapPort","pos":[0,8]}]},{"pos":[19185,19219],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[19468,19487],"content":"OutboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"OutboundConnections","pos":[0,19]}]},{"pos":[19994,20028],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20249,20254],"content":"Roles","needQuote":true,"needEscape":true,"nodes":[{"content":"Roles","pos":[0,5]}]},{"pos":[20684,20718],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[20937,20943],"content":"Save()","needQuote":true,"needEscape":true,"nodes":[{"content":"Save()","pos":[0,6]}]},{"pos":[21576,21604],"content":"SeizeRoleOwnership(AdamRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"SeizeRoleOwnership(AdamRole)","pos":[0,28]}]},{"pos":[22094,22128],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22355,22363],"content":"SiteName","needQuote":true,"needEscape":true,"nodes":[{"content":"SiteName","pos":[0,8]}]},{"pos":[22712,22746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[22971,22978],"content":"SslPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SslPort","pos":[0,7]}]},{"pos":[23311,23345],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[23608,23634],"content":"SyncFromAllServersCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncFromAllServersCallback","pos":[0,26]}]},{"pos":[24141,24175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[24600,24659],"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","pos":[0,59]}]},{"pos":[25234,25268],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25385,25419],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[25730,25766],"content":"SyncReplicaFromServer(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromServer(String,String)","pos":[0,36]}]},{"pos":[26236,26270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26339,26373],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[26728,26759],"content":"TransferRoleOwnership(AdamRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransferRoleOwnership(AdamRole)","pos":[0,31]}]},{"pos":[27258,27292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[27595,27634],"content":"TriggerSyncReplicaFromNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerSyncReplicaFromNeighbors(String)","pos":[0,39]}]},{"pos":[28099,28133],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[28287,28343],"content":"System.DirectoryServices.ActiveDirectory.DirectoryServer","needQuote":true,"needEscape":true,"nodes":[{"content":"System.DirectoryServices.ActiveDirectory.DirectoryServer","pos":[0,56]}]},{"pos":[28525,28554],"content":"CheckReplicationConsistency()","needQuote":true,"needEscape":true,"nodes":[{"content":"CheckReplicationConsistency()","pos":[0,29]}]},{"pos":[28880,28896],"content":"ConfigurationSet","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigurationSet","pos":[0,16]}]},{"pos":[29170,29186],"content":"ConfigurationSet","needQuote":true,"needEscape":true,"nodes":[{"content":"ConfigurationSet","pos":[0,16]}]},{"pos":[29460,29476],"content":"DefaultPartition","needQuote":true,"needEscape":true,"nodes":[{"content":"DefaultPartition","pos":[0,16]}]},{"pos":[29672,29678],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[29905,29921],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[30118,30125],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[30339,30349],"content":"Finalize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Finalize()","pos":[0,10]}]},{"pos":[30701,30733],"content":"FindAll(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindAll(DirectoryContext,String)","pos":[0,32]}]},{"pos":[31045,31067],"content":"AdamInstanceCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamInstanceCollection","pos":[0,22]}]},{"pos":[31327,31343],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[31513,31519],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[31803,31835],"content":"FindOne(DirectoryContext,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"FindOne(DirectoryContext,String)","pos":[0,32]}]},{"pos":[32137,32149],"content":"AdamInstance","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamInstance","pos":[0,12]}]},{"pos":[32389,32405],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[32575,32581],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[32859,32892],"content":"GetAdamInstance(DirectoryContext)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAdamInstance(DirectoryContext)","pos":[0,33]}]},{"pos":[33196,33208],"content":"AdamInstance","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamInstance","pos":[0,12]}]},{"pos":[33448,33464],"content":"DirectoryContext","needQuote":true,"needEscape":true,"nodes":[{"content":"DirectoryContext","pos":[0,16]}]},{"pos":[33748,33776],"content":"GetAllReplicationNeighbors()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetAllReplicationNeighbors()","pos":[0,28]}]},{"pos":[34087,34116],"content":"ReplicationNeighborCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationNeighborCollection","pos":[0,29]}]},{"pos":[34432,34466],"content":"GetReplicationConnectionFailures()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationConnectionFailures()","pos":[0,34]}]},{"pos":[34788,34816],"content":"ReplicationFailureCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationFailureCollection","pos":[0,28]}]},{"pos":[35134,35163],"content":"GetReplicationCursors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationCursors(String)","pos":[0,29]}]},{"pos":[35474,35501],"content":"ReplicationCursorCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationCursorCollection","pos":[0,27]}]},{"pos":[35693,35699],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[35940,35970],"content":"GetReplicationMetadata(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationMetadata(String)","pos":[0,30]}]},{"pos":[36290,36324],"content":"ActiveDirectoryReplicationMetadata","needQuote":true,"needEscape":true,"nodes":[{"content":"ActiveDirectoryReplicationMetadata","pos":[0,34]}]},{"pos":[36530,36536],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[36778,36809],"content":"GetReplicationNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationNeighbors(String)","pos":[0,31]}]},{"pos":[37126,37155],"content":"ReplicationNeighborCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationNeighborCollection","pos":[0,29]}]},{"pos":[37351,37357],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[37595,37631],"content":"GetReplicationOperationInformation()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetReplicationOperationInformation()","pos":[0,36]}]},{"pos":[37960,37991],"content":"ReplicationOperationInformation","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationOperationInformation","pos":[0,31]}]},{"pos":[38287,38295],"content":"HostName","needQuote":true,"needEscape":true,"nodes":[{"content":"HostName","pos":[0,8]}]},{"pos":[38475,38481],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[38703,38721],"content":"InboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"InboundConnections","pos":[0,18]}]},{"pos":[39014,39045],"content":"ReplicationConnectionCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationConnectionCollection","pos":[0,31]}]},{"pos":[39342,39351],"content":"IPAddress","needQuote":true,"needEscape":true,"nodes":[{"content":"IPAddress","pos":[0,9]}]},{"pos":[39533,39539],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[39751,39759],"content":"LdapPort","needQuote":true,"needEscape":true,"nodes":[{"content":"LdapPort","pos":[0,8]}]},{"pos":[39938,39943],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[40164,40183],"content":"OutboundConnections","needQuote":true,"needEscape":true,"nodes":[{"content":"OutboundConnections","pos":[0,19]}]},{"pos":[40478,40509],"content":"ReplicationConnectionCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ReplicationConnectionCollection","pos":[0,31]}]},{"pos":[40802,40807],"content":"Roles","needQuote":true,"needEscape":true,"nodes":[{"content":"Roles","pos":[0,5]}]},{"pos":[41061,41079],"content":"AdamRoleCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamRoleCollection","pos":[0,18]}]},{"pos":[41345,41351],"content":"Save()","needQuote":true,"needEscape":true,"nodes":[{"content":"Save()","pos":[0,6]}]},{"pos":[41684,41712],"content":"SeizeRoleOwnership(AdamRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"SeizeRoleOwnership(AdamRole)","pos":[0,28]}]},{"pos":[42002,42010],"content":"AdamRole","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamRole","pos":[0,8]}]},{"pos":[42260,42268],"content":"SiteName","needQuote":true,"needEscape":true,"nodes":[{"content":"SiteName","pos":[0,8]}]},{"pos":[42448,42454],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[42665,42672],"content":"SslPort","needQuote":true,"needEscape":true,"nodes":[{"content":"SslPort","pos":[0,7]}]},{"pos":[42849,42854],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[43082,43108],"content":"SyncFromAllServersCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncFromAllServersCallback","pos":[0,26]}]},{"pos":[43404,43422],"content":"SyncUpdateCallback","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncUpdateCallback","pos":[0,18]}]},{"pos":[43791,43850],"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromAllServers(String,SyncFromAllServersOptions)","pos":[0,59]}]},{"pos":[44132,44138],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[44341,44366],"content":"SyncFromAllServersOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncFromAllServersOptions","pos":[0,25]}]},{"pos":[44692,44728],"content":"SyncReplicaFromServer(String,String)","needQuote":true,"needEscape":true,"nodes":[{"content":"SyncReplicaFromServer(String,String)","pos":[0,36]}]},{"pos":[44964,44970],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45086,45092],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[45368,45399],"content":"TransferRoleOwnership(AdamRole)","needQuote":true,"needEscape":true,"nodes":[{"content":"TransferRoleOwnership(AdamRole)","pos":[0,31]}]},{"pos":[45695,45703],"content":"AdamRole","needQuote":true,"needEscape":true,"nodes":[{"content":"AdamRole","pos":[0,8]}]},{"pos":[45991,46030],"content":"TriggerSyncReplicaFromNeighbors(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"TriggerSyncReplicaFromNeighbors(String)","pos":[0,39]}]},{"pos":[46272,46278],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance\n  id: AdamInstance\n  children:\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.Save\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  - System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)\n  langs:\n  - csharp\n  name: AdamInstance\n  nameWithType: AdamInstance\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance\n  type: Class\n  syntax:\n    content: 'public class AdamInstance : System.DirectoryServices.ActiveDirectory.DirectoryServer'\n  inheritance:\n  - System.Object\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer\n  implements: []\n  inheritedMembers:\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Dispose\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.GetDirectoryEntry\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.MoveToAnotherSite(System.String)\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Name\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.Partitions\n  - System.DirectoryServices.ActiveDirectory.DirectoryServer.ToString\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency\n  id: CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: CheckReplicationConsistency()\n  nameWithType: AdamInstance.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void CheckReplicationConsistency ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  id: ConfigurationSet\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: ConfigurationSet\n  nameWithType: AdamInstance.ConfigurationSet\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.ConfigurationSet ConfigurationSet { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ConfigurationSet\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  id: DefaultPartition\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: DefaultPartition\n  nameWithType: AdamInstance.DefaultPartition\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public string DefaultPartition { get; set; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: AdamInstance.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize\n  id: Finalize\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Finalize()\n  nameWithType: AdamInstance.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: ~AdamInstance ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  id: FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: FindAll(DirectoryContext,String)\n  nameWithType: AdamInstance.FindAll(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(DirectoryContext,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.AdamInstanceCollection FindAll (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string partitionName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    - id: partitionName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  id: FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: FindOne(DirectoryContext,String)\n  nameWithType: AdamInstance.FindOne(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(DirectoryContext,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.AdamInstance FindOne (System.DirectoryServices.ActiveDirectory.DirectoryContext context, string partitionName);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    - id: partitionName\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamInstance\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  id: GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetAdamInstance(DirectoryContext)\n  nameWithType: AdamInstance.GetAdamInstance(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(DirectoryContext)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public static System.DirectoryServices.ActiveDirectory.AdamInstance GetAdamInstance (System.DirectoryServices.ActiveDirectory.DirectoryContext context);\n    parameters:\n    - id: context\n      type: System.DirectoryServices.ActiveDirectory.DirectoryContext\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamInstance\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors\n  id: GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetAllReplicationNeighbors()\n  nameWithType: AdamInstance.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetAllReplicationNeighbors ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures\n  id: GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationConnectionFailures()\n  nameWithType: AdamInstance.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection GetReplicationConnectionFailures ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)\n  id: GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationCursors(String)\n  nameWithType: AdamInstance.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection GetReplicationCursors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)\n  id: GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationMetadata(String)\n  nameWithType: AdamInstance.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata GetReplicationMetadata (string objectPath);\n    parameters:\n    - id: objectPath\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)\n  id: GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationNeighbors(String)\n  nameWithType: AdamInstance.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection GetReplicationNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation\n  id: GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: GetReplicationOperationInformation()\n  nameWithType: AdamInstance.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation GetReplicationOperationInformation ();\n    parameters: []\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  id: HostName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: HostName\n  nameWithType: AdamInstance.HostName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public string HostName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  id: InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: InboundConnections\n  nameWithType: AdamInstance.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection InboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  id: IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: IPAddress\n  nameWithType: AdamInstance.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override string IPAddress { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  id: LdapPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: LdapPort\n  nameWithType: AdamInstance.LdapPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public int LdapPort { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  id: OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: OutboundConnections\n  nameWithType: AdamInstance.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection OutboundConnections { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  id: Roles\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Roles\n  nameWithType: AdamInstance.Roles\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public System.DirectoryServices.ActiveDirectory.AdamRoleCollection Roles { get; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.AdamRoleCollection\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Save\n  id: Save\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: Save()\n  nameWithType: AdamInstance.Save()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Save()\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void Save ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  id: SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SeizeRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.SeizeRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(AdamRole)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void SeizeRoleOwnership (System.DirectoryServices.ActiveDirectory.AdamRole role);\n    parameters:\n    - id: role\n      type: System.DirectoryServices.ActiveDirectory.AdamRole\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  id: SiteName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SiteName\n  nameWithType: AdamInstance.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override string SiteName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  id: SslPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SslPort\n  nameWithType: AdamInstance.SslPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public int SslPort { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  id: SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SyncFromAllServersCallback\n  nameWithType: AdamInstance.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  type: Property\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override System.DirectoryServices.ActiveDirectory.SyncUpdateCallback SyncFromAllServersCallback { get; set; }\n    return:\n      type: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  id: SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void SyncReplicaFromAllServers (string partition, System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions options);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    - id: options\n      type: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)\n  id: SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: AdamInstance.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(String,String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void SyncReplicaFromServer (string partition, string sourceServer);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n    - id: sourceServer\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  id: TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: TransferRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.TransferRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(AdamRole)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public void TransferRoleOwnership (System.DirectoryServices.ActiveDirectory.AdamRole role);\n    parameters:\n    - id: role\n      type: System.DirectoryServices.ActiveDirectory.AdamRole\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)\n  id: TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  langs:\n  - csharp\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n  type: Method\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  syntax:\n    content: public override void TriggerSyncReplicaFromNeighbors (string partition);\n    parameters:\n    - id: partition\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryServer\n  isExternal: false\n  name: System.DirectoryServices.ActiveDirectory.DirectoryServer\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: CheckReplicationConsistency()\n  nameWithType: AdamInstance.CheckReplicationConsistency()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.CheckReplicationConsistency()\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: ConfigurationSet\n  nameWithType: AdamInstance.ConfigurationSet\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.ConfigurationSet\n- uid: System.DirectoryServices.ActiveDirectory.ConfigurationSet\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ConfigurationSet\n  nameWithType: ConfigurationSet\n  fullName: System.DirectoryServices.ActiveDirectory.ConfigurationSet\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: DefaultPartition\n  nameWithType: AdamInstance.DefaultPartition\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.DefaultPartition\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(System.Boolean)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AdamInstance.Dispose(Boolean)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Finalize()\n  nameWithType: AdamInstance.Finalize()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Finalize()\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: FindAll(DirectoryContext,String)\n  nameWithType: AdamInstance.FindAll(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindAll(DirectoryContext,String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamInstanceCollection\n  nameWithType: AdamInstanceCollection\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstanceCollection\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(System.DirectoryServices.ActiveDirectory.DirectoryContext,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: FindOne(DirectoryContext,String)\n  nameWithType: AdamInstance.FindOne(DirectoryContext,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.FindOne(DirectoryContext,String)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamInstance\n  nameWithType: AdamInstance\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(System.DirectoryServices.ActiveDirectory.DirectoryContext)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetAdamInstance(DirectoryContext)\n  nameWithType: AdamInstance.GetAdamInstance(DirectoryContext)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAdamInstance(DirectoryContext)\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamInstance\n  nameWithType: AdamInstance\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance\n- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: DirectoryContext\n  nameWithType: DirectoryContext\n  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetAllReplicationNeighbors()\n  nameWithType: AdamInstance.GetAllReplicationNeighbors()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetAllReplicationNeighbors()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationNeighborCollection\n  nameWithType: ReplicationNeighborCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationConnectionFailures()\n  nameWithType: AdamInstance.GetReplicationConnectionFailures()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationConnectionFailures()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationFailureCollection\n  nameWithType: ReplicationFailureCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationFailureCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationCursors(String)\n  nameWithType: AdamInstance.GetReplicationCursors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationCursors(String)\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationCursorCollection\n  nameWithType: ReplicationCursorCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationCursorCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationMetadata(String)\n  nameWithType: AdamInstance.GetReplicationMetadata(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationMetadata(String)\n- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ActiveDirectoryReplicationMetadata\n  nameWithType: ActiveDirectoryReplicationMetadata\n  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryReplicationMetadata\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationNeighbors(String)\n  nameWithType: AdamInstance.GetReplicationNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationNeighbors(String)\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationNeighborCollection\n  nameWithType: ReplicationNeighborCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationNeighborCollection\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: GetReplicationOperationInformation()\n  nameWithType: AdamInstance.GetReplicationOperationInformation()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.GetReplicationOperationInformation()\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationOperationInformation\n  nameWithType: ReplicationOperationInformation\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationOperationInformation\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: HostName\n  nameWithType: AdamInstance.HostName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.HostName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: InboundConnections\n  nameWithType: AdamInstance.InboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.InboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationConnectionCollection\n  nameWithType: ReplicationConnectionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: IPAddress\n  nameWithType: AdamInstance.IPAddress\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.IPAddress\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: LdapPort\n  nameWithType: AdamInstance.LdapPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.LdapPort\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: OutboundConnections\n  nameWithType: AdamInstance.OutboundConnections\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.OutboundConnections\n- uid: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: ReplicationConnectionCollection\n  nameWithType: ReplicationConnectionCollection\n  fullName: System.DirectoryServices.ActiveDirectory.ReplicationConnectionCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Roles\n  nameWithType: AdamInstance.Roles\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Roles\n- uid: System.DirectoryServices.ActiveDirectory.AdamRoleCollection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamRoleCollection\n  nameWithType: AdamRoleCollection\n  fullName: System.DirectoryServices.ActiveDirectory.AdamRoleCollection\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.Save\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: Save()\n  nameWithType: AdamInstance.Save()\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.Save()\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SeizeRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.SeizeRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SeizeRoleOwnership(AdamRole)\n- uid: System.DirectoryServices.ActiveDirectory.AdamRole\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamRole\n  nameWithType: AdamRole\n  fullName: System.DirectoryServices.ActiveDirectory.AdamRole\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SiteName\n  nameWithType: AdamInstance.SiteName\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SiteName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SslPort\n  nameWithType: AdamInstance.SslPort\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SslPort\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncFromAllServersCallback\n  nameWithType: AdamInstance.SyncFromAllServersCallback\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncFromAllServersCallback\n- uid: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncUpdateCallback\n  nameWithType: SyncUpdateCallback\n  fullName: System.DirectoryServices.ActiveDirectory.SyncUpdateCallback\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(System.String,System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  nameWithType: AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromAllServers(String,SyncFromAllServersOptions)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: SyncFromAllServersOptions\n  nameWithType: SyncFromAllServersOptions\n  fullName: System.DirectoryServices.ActiveDirectory.SyncFromAllServersOptions\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(System.String,System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: SyncReplicaFromServer(String,String)\n  nameWithType: AdamInstance.SyncReplicaFromServer(String,String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.SyncReplicaFromServer(String,String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(System.DirectoryServices.ActiveDirectory.AdamRole)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: TransferRoleOwnership(AdamRole)\n  nameWithType: AdamInstance.TransferRoleOwnership(AdamRole)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TransferRoleOwnership(AdamRole)\n- uid: System.DirectoryServices.ActiveDirectory.AdamRole\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: AdamRole\n  nameWithType: AdamRole\n  fullName: System.DirectoryServices.ActiveDirectory.AdamRole\n- uid: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(System.String)\n  parent: System.DirectoryServices.ActiveDirectory.AdamInstance\n  isExternal: false\n  name: TriggerSyncReplicaFromNeighbors(String)\n  nameWithType: AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n  fullName: System.DirectoryServices.ActiveDirectory.AdamInstance.TriggerSyncReplicaFromNeighbors(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n"}