{"nodes":[{"pos":[1212,1229],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[2013,2038],"content":"CngAlgorithmGroup(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup(String)","pos":[0,25]}]},{"pos":[2435,2469],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2694,2708],"content":"AlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"AlgorithmGroup","pos":[0,14]}]},{"pos":[3039,3073],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3296,3309],"content":"DiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"DiffieHellman","pos":[0,13]}]},{"pos":[3717,3751],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3954,3957],"content":"Dsa","needQuote":true,"needEscape":true,"nodes":[{"content":"Dsa","pos":[0,3]}]},{"pos":[4335,4369],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4596,4611],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[5025,5059],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5266,5271],"content":"ECDsa","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsa","pos":[0,5]}]},{"pos":[5655,5689],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5928,5942],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6293,6327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6386,6420],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6792,6817],"content":"Equals(CngAlgorithmGroup)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngAlgorithmGroup)","pos":[0,25]}]},{"pos":[7258,7292],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7351,7385],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7671,7684],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[8027,8061],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8470,8518],"content":"op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)","pos":[0,48]}]},{"pos":[9071,9105],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9200,9234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9293,9327],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9740,9790],"content":"op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)","pos":[0,50]}]},{"pos":[10349,10383],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10478,10512],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10571,10605],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10808,10811],"content":"Rsa","needQuote":true,"needEscape":true,"nodes":[{"content":"Rsa","pos":[0,3]}]},{"pos":[11189,11223],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11436,11446],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[11784,11818],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11929,11942],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[12103,12128],"content":"CngAlgorithmGroup(String)","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup(String)","pos":[0,25]}]},{"pos":[12340,12346],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12550,12564],"content":"AlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"AlgorithmGroup","pos":[0,14]}]},{"pos":[12754,12760],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[12963,12976],"content":"DiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"DiffieHellman","pos":[0,13]}]},{"pos":[13219,13236],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[13473,13476],"content":"Dsa","needQuote":true,"needEscape":true,"nodes":[{"content":"Dsa","pos":[0,3]}]},{"pos":[13699,13716],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[13965,13980],"content":"ECDiffieHellman","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDiffieHellman","pos":[0,15]}]},{"pos":[14227,14244],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[14483,14488],"content":"ECDsa","needQuote":true,"needEscape":true,"nodes":[{"content":"ECDsa","pos":[0,5]}]},{"pos":[14715,14732],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[14987,15001],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[15192,15199],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15317,15323],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[15567,15592],"content":"Equals(CngAlgorithmGroup)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(CngAlgorithmGroup)","pos":[0,25]}]},{"pos":[15805,15812],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15985,16002],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[16247,16260],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[16447,16452],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16746,16794],"content":"op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)","pos":[0,48]}]},{"pos":[17053,17060],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[17233,17250],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[17465,17482],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[17824,17874],"content":"op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)","pos":[0,50]}]},{"pos":[18137,18144],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18317,18334],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[18549,18566],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[18803,18806],"content":"Rsa","needQuote":true,"needEscape":true,"nodes":[{"content":"Rsa","pos":[0,3]}]},{"pos":[19029,19046],"content":"CngAlgorithmGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CngAlgorithmGroup","pos":[0,17]}]},{"pos":[19288,19298],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[19480,19486],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  id: CngAlgorithmGroup\n  children:\n  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  - System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  - System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  - System.Security.Cryptography.CngAlgorithmGroup.ToString\n  langs:\n  - csharp\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n  type: Class\n  syntax:\n    content: 'public sealed class CngAlgorithmGroup : IEquatable<System.Security.Cryptography.CngAlgorithmGroup>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable<System.Security.Cryptography.CngAlgorithmGroup>\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: CngAlgorithmGroup(String)\n  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)\n  type: Constructor\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public CngAlgorithmGroup (string algorithmGroup);\n    parameters:\n    - id: algorithmGroup\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  id: AlgorithmGroup\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: AlgorithmGroup\n  nameWithType: CngAlgorithmGroup.AlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public string AlgorithmGroup { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  id: DiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: DiffieHellman\n  nameWithType: CngAlgorithmGroup.DiffieHellman\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  id: Dsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Dsa\n  nameWithType: CngAlgorithmGroup.Dsa\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  id: ECDiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithmGroup.ECDiffieHellman\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  id: ECDsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: ECDsa\n  nameWithType: CngAlgorithmGroup.ECDsa\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngAlgorithmGroup.Equals(Object)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Equals(CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngAlgorithmGroup.GetHashCode()\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)\n  type: Operator\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n    - id: right\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  id: Rsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Rsa\n  nameWithType: CngAlgorithmGroup.Rsa\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  type: Property\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString\n  id: ToString\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CngAlgorithmGroup.ToString()\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()\n  type: Method\n  assemblies:\n  - System.Core\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: CngAlgorithmGroup(String)\n  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.CngAlgorithmGroup(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: AlgorithmGroup\n  nameWithType: CngAlgorithmGroup.AlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: DiffieHellman\n  nameWithType: CngAlgorithmGroup.DiffieHellman\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Dsa\n  nameWithType: CngAlgorithmGroup.Dsa\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Dsa\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithmGroup.ECDiffieHellman\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ECDsa\n  nameWithType: CngAlgorithmGroup.ECDsa\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngAlgorithmGroup.Equals(Object)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Equals(CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngAlgorithmGroup.GetHashCode()\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Rsa\n  nameWithType: CngAlgorithmGroup.Rsa\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.Rsa\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ToString()\n  nameWithType: CngAlgorithmGroup.ToString()\n  fullName: System.Security.Cryptography.CngAlgorithmGroup.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  nameWithType: CngAlgorithmGroup.\n"}