{"nodes":[{"pos":[1550,1574],"content":"ChangeConflictCollection","needQuote":true,"needEscape":true,"nodes":[{"content":"ChangeConflictCollection","pos":[0,24]}]},{"pos":[2681,2688],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[3224,3254],"content":"Contains(ObjectChangeConflict)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(ObjectChangeConflict)","pos":[0,30]}]},{"pos":[3682,3716],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3775,3809],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4116,4152],"content":"CopyTo(ObjectChangeConflict[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(ObjectChangeConflict[],Int32)","pos":[0,36]}]},{"pos":[4612,4646],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4712,4746],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4943,4948],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[5243,5277],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5490,5505],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[5979,6013],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6236,6247],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[6618,6652],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6734,6768],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7045,7073],"content":"Remove(ObjectChangeConflict)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(ObjectChangeConflict)","pos":[0,28]}]},{"pos":[7495,7529],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7588,7622],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7889,7912],"content":"ResolveAll(RefreshMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveAll(RefreshMode)","pos":[0,23]}]},{"pos":[8310,8344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8707,8738],"content":"ResolveAll(RefreshMode,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveAll(RefreshMode,Boolean)","pos":[0,31]}]},{"pos":[9177,9211],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9287,9321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9828,9888],"content":"System.Collections.Generic.ICollection(ObjectChangeConflict)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(ObjectChangeConflict)","pos":[0,60]}]},{"pos":[10398,10432],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10809,10847],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[11287,11321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11650,11700],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[12127,12161],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12222,12256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12547,12592],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[13003,13037],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13316,13355],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[13749,13783],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14072,14118],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[14565,14599],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14710,14723],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[14859,14866],"content":"Clear()","needQuote":true,"needEscape":true,"nodes":[{"content":"Clear()","pos":[0,7]}]},{"pos":[15155,15185],"content":"Contains(ObjectChangeConflict)","needQuote":true,"needEscape":true,"nodes":[{"content":"Contains(ObjectChangeConflict)","pos":[0,30]}]},{"pos":[15410,15417],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[15569,15589],"content":"ObjectChangeConflict","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectChangeConflict","pos":[0,20]}]},{"pos":[15867,15903],"content":"CopyTo(ObjectChangeConflict[],Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"CopyTo(ObjectChangeConflict[],Int32)","pos":[0,36]}]},{"pos":[16173,16193],"content":"ObjectChangeConflict","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectChangeConflict","pos":[0,20]}]},{"pos":[16348,16353],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16536,16541],"content":"Count","needQuote":true,"needEscape":true,"nodes":[{"content":"Count","pos":[0,5]}]},{"pos":[16714,16719],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[16910,16925],"content":"GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetEnumerator()","pos":[0,15]}]},{"pos":[17203,17236],"content":"IEnumerator<ph id=\"ph1\">&lt;ObjectChangeConflict&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerator<ObjectChangeConflict>"},{"pos":[17525,17536],"content":"Item(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Item(Int32)","pos":[0,11]}]},{"pos":[17756,17776],"content":"ObjectChangeConflict","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectChangeConflict","pos":[0,20]}]},{"pos":[17929,17934],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[18157,18185],"content":"Remove(ObjectChangeConflict)","needQuote":true,"needEscape":true,"nodes":[{"content":"Remove(ObjectChangeConflict)","pos":[0,28]}]},{"pos":[18406,18413],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18565,18585],"content":"ObjectChangeConflict","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectChangeConflict","pos":[0,20]}]},{"pos":[18843,18866],"content":"ResolveAll(RefreshMode)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveAll(RefreshMode)","pos":[0,23]}]},{"pos":[19101,19112],"content":"RefreshMode","needQuote":true,"needEscape":true,"nodes":[{"content":"RefreshMode","pos":[0,11]}]},{"pos":[19367,19398],"content":"ResolveAll(RefreshMode,Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveAll(RefreshMode,Boolean)","pos":[0,31]}]},{"pos":[19649,19660],"content":"RefreshMode","needQuote":true,"needEscape":true,"nodes":[{"content":"RefreshMode","pos":[0,11]}]},{"pos":[19797,19804],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[20106,20166],"content":"System.Collections.Generic.ICollection(ObjectChangeConflict)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection(ObjectChangeConflict)","pos":[0,60]}]},{"pos":[20484,20504],"content":"ObjectChangeConflict","needQuote":true,"needEscape":true,"nodes":[{"content":"ObjectChangeConflict","pos":[0,20]}]},{"pos":[20810,20848],"content":"System.Collections.Generic.ICollection","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.Generic.ICollection","pos":[0,38]}]},{"pos":[21089,21096],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[21342,21392],"content":"System.Collections.ICollection.CopyTo(Array,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.CopyTo(Array,Int32)","pos":[0,50]}]},{"pos":[21655,21660],"content":"Array","needQuote":true,"needEscape":true,"nodes":[{"content":"Array","pos":[0,5]}]},{"pos":[21773,21778],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[22001,22046],"content":"System.Collections.ICollection.IsSynchronized","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.IsSynchronized","pos":[0,45]}]},{"pos":[22301,22308],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[22529,22568],"content":"System.Collections.ICollection.SyncRoot","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.ICollection.SyncRoot","pos":[0,39]}]},{"pos":[22810,22816],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[23040,23086],"content":"System.Collections.IEnumerable.GetEnumerator()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Collections.IEnumerable.GetEnumerator()","pos":[0,46]}]},{"pos":[23371,23382],"content":"IEnumerator","needQuote":true,"needEscape":true,"nodes":[{"content":"IEnumerator","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.ChangeConflictCollection\n  id: ChangeConflictCollection\n  children:\n  - System.Data.Linq.ChangeConflictCollection.Clear\n  - System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)\n  - System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)\n  - System.Data.Linq.ChangeConflictCollection.Count\n  - System.Data.Linq.ChangeConflictCollection.GetEnumerator\n  - System.Data.Linq.ChangeConflictCollection.Item(System.Int32)\n  - System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)\n  - System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)\n  - System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)\n  - System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)\n  - System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly\n  - System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized\n  - System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot\n  - System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator\n  langs:\n  - csharp\n  name: ChangeConflictCollection\n  nameWithType: ChangeConflictCollection\n  fullName: System.Data.Linq.ChangeConflictCollection\n  type: Class\n  syntax:\n    content: 'public sealed class ChangeConflictCollection : System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>, System.Collections.Generic.IEnumerable<System.Data.Linq.ObjectChangeConflict>, System.Collections.ICollection'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>\n  - System.Collections.Generic.IEnumerable<System.Data.Linq.ObjectChangeConflict>\n  - System.Collections.ICollection\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.Clear\n  id: Clear\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: ChangeConflictCollection.Clear()\n  fullName: System.Data.Linq.ChangeConflictCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)\n  id: Contains(System.Data.Linq.ObjectChangeConflict)\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: Contains(ObjectChangeConflict)\n  nameWithType: ChangeConflictCollection.Contains(ObjectChangeConflict)\n  fullName: System.Data.Linq.ChangeConflictCollection.Contains(ObjectChangeConflict)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool Contains (System.Data.Linq.ObjectChangeConflict item);\n    parameters:\n    - id: item\n      type: System.Data.Linq.ObjectChangeConflict\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)\n  id: CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: CopyTo(ObjectChangeConflict[],Int32)\n  nameWithType: ChangeConflictCollection.CopyTo(ObjectChangeConflict[],Int32)\n  fullName: System.Data.Linq.ChangeConflictCollection.CopyTo(ObjectChangeConflict[],Int32)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void CopyTo (System.Data.Linq.ObjectChangeConflict[] array, int arrayIndex);\n    parameters:\n    - id: array\n      type: System.Data.Linq.ObjectChangeConflict[]\n      description: Parameter description to be filled\n    - id: arrayIndex\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.Count\n  id: Count\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: ChangeConflictCollection.Count\n  fullName: System.Data.Linq.ChangeConflictCollection.Count\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: ChangeConflictCollection.GetEnumerator()\n  fullName: System.Data.Linq.ChangeConflictCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Collections.Generic.IEnumerator<System.Data.Linq.ObjectChangeConflict> GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerator{System.Data.Linq.ObjectChangeConflict}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: ChangeConflictCollection.Item(Int32)\n  fullName: System.Data.Linq.ChangeConflictCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public System.Data.Linq.ObjectChangeConflict this[int index] { get; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n    return:\n      type: System.Data.Linq.ObjectChangeConflict\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)\n  id: Remove(System.Data.Linq.ObjectChangeConflict)\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: Remove(ObjectChangeConflict)\n  nameWithType: ChangeConflictCollection.Remove(ObjectChangeConflict)\n  fullName: System.Data.Linq.ChangeConflictCollection.Remove(ObjectChangeConflict)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool Remove (System.Data.Linq.ObjectChangeConflict item);\n    parameters:\n    - id: item\n      type: System.Data.Linq.ObjectChangeConflict\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)\n  id: ResolveAll(System.Data.Linq.RefreshMode)\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: ResolveAll(RefreshMode)\n  nameWithType: ChangeConflictCollection.ResolveAll(RefreshMode)\n  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll(RefreshMode)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void ResolveAll (System.Data.Linq.RefreshMode mode);\n    parameters:\n    - id: mode\n      type: System.Data.Linq.RefreshMode\n      description: Parameter description to be filled\n  overload: System.Data.Linq.ChangeConflictCollection.ResolveAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)\n  id: ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: ResolveAll(RefreshMode,Boolean)\n  nameWithType: ChangeConflictCollection.ResolveAll(RefreshMode,Boolean)\n  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll(RefreshMode,Boolean)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public void ResolveAll (System.Data.Linq.RefreshMode mode, bool autoResolveDeletes);\n    parameters:\n    - id: mode\n      type: System.Data.Linq.RefreshMode\n      description: Parameter description to be filled\n    - id: autoResolveDeletes\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Data.Linq.ChangeConflictCollection.ResolveAll*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)\n  id: System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)\n  isEii: true\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection(ObjectChangeConflict)\n  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection(ObjectChangeConflict)\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection(ObjectChangeConflict)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ICollection<ObjectChangeConflict>.Add (System.Data.Linq.ObjectChangeConflict item);\n    parameters:\n    - id: item\n      type: System.Data.Linq.ObjectChangeConflict\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly\n  id: System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly\n  isEii: true\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: System.Collections.Generic.ICollection\n  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: bool System.Collections.Generic.ICollection<System.Data.Linq.ObjectChangeConflict>.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ChangeConflictCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: Parameter description to be filled\n    - id: index\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ChangeConflictCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ChangeConflictCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator\n  id: System#Collections#IEnumerable#GetEnumerator\n  isEii: true\n  parent: System.Data.Linq.ChangeConflictCollection\n  langs:\n  - csharp\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Data.Linq.ChangeConflictCollection.Clear\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: ChangeConflictCollection.Clear()\n  fullName: System.Data.Linq.ChangeConflictCollection.Clear()\n- uid: System.Data.Linq.ChangeConflictCollection.Contains(System.Data.Linq.ObjectChangeConflict)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: Contains(ObjectChangeConflict)\n  nameWithType: ChangeConflictCollection.Contains(ObjectChangeConflict)\n  fullName: System.Data.Linq.ChangeConflictCollection.Contains(ObjectChangeConflict)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ObjectChangeConflict\n  parent: System.Data.Linq\n  isExternal: false\n  name: ObjectChangeConflict\n  nameWithType: ObjectChangeConflict\n  fullName: System.Data.Linq.ObjectChangeConflict\n- uid: System.Data.Linq.ChangeConflictCollection.CopyTo(System.Data.Linq.ObjectChangeConflict[],System.Int32)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: CopyTo(ObjectChangeConflict[],Int32)\n  nameWithType: ChangeConflictCollection.CopyTo(ObjectChangeConflict[],Int32)\n  fullName: System.Data.Linq.ChangeConflictCollection.CopyTo(ObjectChangeConflict[],Int32)\n- uid: System.Data.Linq.ObjectChangeConflict\n  parent: System.Data.Linq\n  isExternal: false\n  name: ObjectChangeConflict\n  nameWithType: ObjectChangeConflict\n  fullName: System.Data.Linq.ObjectChangeConflict[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.ChangeConflictCollection.Count\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: Count\n  nameWithType: ChangeConflictCollection.Count\n  fullName: System.Data.Linq.ChangeConflictCollection.Count\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.ChangeConflictCollection.GetEnumerator\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: ChangeConflictCollection.GetEnumerator()\n  fullName: System.Data.Linq.ChangeConflictCollection.GetEnumerator()\n- uid: System.Collections.Generic.IEnumerator{System.Data.Linq.ObjectChangeConflict}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerator<ObjectChangeConflict>\n  nameWithType: IEnumerator<ObjectChangeConflict>\n  fullName: System.Collections.Generic.IEnumerator<System.Data.Linq.ObjectChangeConflict>\n- uid: System.Data.Linq.ChangeConflictCollection.Item(System.Int32)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: ChangeConflictCollection.Item(Int32)\n  fullName: System.Data.Linq.ChangeConflictCollection.Item(Int32)\n- uid: System.Data.Linq.ObjectChangeConflict\n  parent: System.Data.Linq\n  isExternal: false\n  name: ObjectChangeConflict\n  nameWithType: ObjectChangeConflict\n  fullName: System.Data.Linq.ObjectChangeConflict\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.ChangeConflictCollection.Remove(System.Data.Linq.ObjectChangeConflict)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: Remove(ObjectChangeConflict)\n  nameWithType: ChangeConflictCollection.Remove(ObjectChangeConflict)\n  fullName: System.Data.Linq.ChangeConflictCollection.Remove(ObjectChangeConflict)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ObjectChangeConflict\n  parent: System.Data.Linq\n  isExternal: false\n  name: ObjectChangeConflict\n  nameWithType: ObjectChangeConflict\n  fullName: System.Data.Linq.ObjectChangeConflict\n- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: ResolveAll(RefreshMode)\n  nameWithType: ChangeConflictCollection.ResolveAll(RefreshMode)\n  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll(RefreshMode)\n- uid: System.Data.Linq.RefreshMode\n  parent: System.Data.Linq\n  isExternal: false\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Linq.RefreshMode\n- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll(System.Data.Linq.RefreshMode,System.Boolean)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: ResolveAll(RefreshMode,Boolean)\n  nameWithType: ChangeConflictCollection.ResolveAll(RefreshMode,Boolean)\n  fullName: System.Data.Linq.ChangeConflictCollection.ResolveAll(RefreshMode,Boolean)\n- uid: System.Data.Linq.RefreshMode\n  parent: System.Data.Linq\n  isExternal: false\n  name: RefreshMode\n  nameWithType: RefreshMode\n  fullName: System.Data.Linq.RefreshMode\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#Add(System.Data.Linq.ObjectChangeConflict)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection(ObjectChangeConflict)\n  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection(ObjectChangeConflict)\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection(ObjectChangeConflict)\n- uid: System.Data.Linq.ObjectChangeConflict\n  parent: System.Data.Linq\n  isExternal: false\n  name: ObjectChangeConflict\n  nameWithType: ObjectChangeConflict\n  fullName: System.Data.Linq.ObjectChangeConflict\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#Generic#ICollection{System#Data#Linq#ObjectChangeConflict}#IsReadOnly\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: System.Collections.Generic.ICollection\n  nameWithType: ChangeConflictCollection.System.Collections.Generic.ICollection\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.Generic.ICollection\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo(Array,Int32)\n  nameWithType: ChangeConflictCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.CopyTo(Array,Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: ChangeConflictCollection.System.Collections.ICollection.IsSynchronized\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.IsSynchronized\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: ChangeConflictCollection.System.Collections.ICollection.SyncRoot\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.ICollection.SyncRoot\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.ChangeConflictCollection.System#Collections#IEnumerable#GetEnumerator\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  name: System.Collections.IEnumerable.GetEnumerator()\n  nameWithType: ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator()\n  fullName: System.Data.Linq.ChangeConflictCollection.System.Collections.IEnumerable.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Data.Linq.ChangeConflictCollection.ResolveAll*\n  parent: System.Data.Linq.ChangeConflictCollection\n  isExternal: false\n  nameWithType: ChangeConflictCollection.\n"}