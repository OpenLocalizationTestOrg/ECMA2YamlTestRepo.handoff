### YamlMime:ManagedReference
items:
- uid: System.Activities.Expressions.InvokeFunc`15
  id: InvokeFunc`15
  children:
  - System.Activities.Expressions.InvokeFunc`15.#ctor
  - System.Activities.Expressions.InvokeFunc`15.Argument1
  - System.Activities.Expressions.InvokeFunc`15.Argument10
  - System.Activities.Expressions.InvokeFunc`15.Argument11
  - System.Activities.Expressions.InvokeFunc`15.Argument12
  - System.Activities.Expressions.InvokeFunc`15.Argument13
  - System.Activities.Expressions.InvokeFunc`15.Argument14
  - System.Activities.Expressions.InvokeFunc`15.Argument2
  - System.Activities.Expressions.InvokeFunc`15.Argument3
  - System.Activities.Expressions.InvokeFunc`15.Argument4
  - System.Activities.Expressions.InvokeFunc`15.Argument5
  - System.Activities.Expressions.InvokeFunc`15.Argument6
  - System.Activities.Expressions.InvokeFunc`15.Argument7
  - System.Activities.Expressions.InvokeFunc`15.Argument8
  - System.Activities.Expressions.InvokeFunc`15.Argument9
  - System.Activities.Expressions.InvokeFunc`15.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Expressions.InvokeFunc`15.Func
  - System.Activities.Expressions.InvokeFunc`15.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  langs:
  - csharp
  name: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>
  type: Class
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Func")]

      public sealed class InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult> : System.Activities.NativeActivity<TResult>
    typeParameters:
    - id: T1
      description: Parameter description to be filled
    - id: T2
      description: Parameter description to be filled
    - id: T3
      description: Parameter description to be filled
    - id: T4
      description: Parameter description to be filled
    - id: T5
      description: Parameter description to be filled
    - id: T6
      description: Parameter description to be filled
    - id: T7
      description: Parameter description to be filled
    - id: T8
      description: Parameter description to be filled
    - id: T9
      description: Parameter description to be filled
    - id: T10
      description: Parameter description to be filled
    - id: T11
      description: Parameter description to be filled
    - id: T12
      description: Parameter description to be filled
    - id: T13
      description: Parameter description to be filled
    - id: T14
      description: Parameter description to be filled
    - id: TResult
      description: Parameter description to be filled
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.ActivityWithResult
  - System.Activities.Activity`1
  - System.Activities.NativeActivity`1
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.Activity`1.FromValue(`0)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable)
  - System.Activities.Activity`1.FromVariable(System.Activities.Variable{`0})
  - System.Activities.Activity`1.op_Implicit(`0)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable)
  - System.Activities.Activity`1.op_Implicit(System.Activities.Variable{`0})
  - System.Activities.Activity`1.Result
  - System.Activities.ActivityWithResult.ResultType
  - System.Activities.NativeActivity`1.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity`1.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.NativeActivity`1.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity`1.CanInduceIdle
  - System.Activities.NativeActivity`1.Implementation
  - System.Activities.NativeActivity`1.ImplementationVersion
  - System.Activities.NativeActivity`1.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity`1.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.#ctor
  id: '#ctor'
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: InvokeFunc()
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.InvokeFunc()
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.InvokeFunc()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public InvokeFunc ();
    parameters: []
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument1
  id: Argument1
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument1
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument1
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument1
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T1> Argument1 { get; set; }
    return:
      type: System.Activities.InArgument{T1}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument10
  id: Argument10
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument10
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument10
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument10
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T10> Argument10 { get; set; }
    return:
      type: System.Activities.InArgument{T10}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument11
  id: Argument11
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument11
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument11
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument11
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T11> Argument11 { get; set; }
    return:
      type: System.Activities.InArgument{T11}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument12
  id: Argument12
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument12
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument12
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument12
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T12> Argument12 { get; set; }
    return:
      type: System.Activities.InArgument{T12}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument13
  id: Argument13
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument13
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument13
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument13
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T13> Argument13 { get; set; }
    return:
      type: System.Activities.InArgument{T13}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument14
  id: Argument14
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument14
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument14
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument14
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T14> Argument14 { get; set; }
    return:
      type: System.Activities.InArgument{T14}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument2
  id: Argument2
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument2
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument2
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument2
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T2> Argument2 { get; set; }
    return:
      type: System.Activities.InArgument{T2}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument3
  id: Argument3
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument3
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument3
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument3
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T3> Argument3 { get; set; }
    return:
      type: System.Activities.InArgument{T3}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument4
  id: Argument4
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument4
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument4
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument4
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T4> Argument4 { get; set; }
    return:
      type: System.Activities.InArgument{T4}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument5
  id: Argument5
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument5
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument5
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument5
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T5> Argument5 { get; set; }
    return:
      type: System.Activities.InArgument{T5}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument6
  id: Argument6
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument6
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument6
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument6
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T6> Argument6 { get; set; }
    return:
      type: System.Activities.InArgument{T6}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument7
  id: Argument7
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument7
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument7
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument7
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T7> Argument7 { get; set; }
    return:
      type: System.Activities.InArgument{T7}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument8
  id: Argument8
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument8
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument8
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument8
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T8> Argument8 { get; set; }
    return:
      type: System.Activities.InArgument{T8}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Argument9
  id: Argument9
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Argument9
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument9
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument9
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.InArgument<T9> Argument9 { get; set; }
    return:
      type: System.Activities.InArgument{T9}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Execute(NativeActivityContext)
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.Func
  id: Func
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: Func
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Func
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Func
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: public System.Activities.ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult> Func { get; set; }
    return:
      type: System.Activities.ActivityFunc`15
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Activities.Expressions.InvokeFunc`15.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  id: OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Expressions.InvokeFunc`15
  langs:
  - csharp
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Expressions
  syntax:
    content: protected override void OnCreateDynamicUpdateMap (System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata metadata, System.Activities.Activity originalActivity);
    parameters:
    - id: metadata
      type: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
      description: Parameter description to be filled
    - id: originalActivity
      type: System.Activities.Activity
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Activities.NativeActivity`1
  isExternal: false
  name: System.Activities.NativeActivity<TResult>
- uid: System.Activities.Expressions.InvokeFunc`15.#ctor
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: InvokeFunc()
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.InvokeFunc()
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.InvokeFunc()
- uid: System.Activities.Expressions.InvokeFunc`15.Argument1
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument1
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument1
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument1
- uid: System.Activities.InArgument{T1}
  parent: System.Activities
  isExternal: false
  name: InArgument<T1>
  nameWithType: InArgument<T1>
  fullName: System.Activities.InArgument<T1>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument10
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument10
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument10
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument10
- uid: System.Activities.InArgument{T10}
  parent: System.Activities
  isExternal: false
  name: InArgument<T10>
  nameWithType: InArgument<T10>
  fullName: System.Activities.InArgument<T10>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument11
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument11
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument11
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument11
- uid: System.Activities.InArgument{T11}
  parent: System.Activities
  isExternal: false
  name: InArgument<T11>
  nameWithType: InArgument<T11>
  fullName: System.Activities.InArgument<T11>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument12
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument12
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument12
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument12
- uid: System.Activities.InArgument{T12}
  parent: System.Activities
  isExternal: false
  name: InArgument<T12>
  nameWithType: InArgument<T12>
  fullName: System.Activities.InArgument<T12>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument13
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument13
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument13
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument13
- uid: System.Activities.InArgument{T13}
  parent: System.Activities
  isExternal: false
  name: InArgument<T13>
  nameWithType: InArgument<T13>
  fullName: System.Activities.InArgument<T13>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument14
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument14
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument14
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument14
- uid: System.Activities.InArgument{T14}
  parent: System.Activities
  isExternal: false
  name: InArgument<T14>
  nameWithType: InArgument<T14>
  fullName: System.Activities.InArgument<T14>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument2
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument2
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument2
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument2
- uid: System.Activities.InArgument{T2}
  parent: System.Activities
  isExternal: false
  name: InArgument<T2>
  nameWithType: InArgument<T2>
  fullName: System.Activities.InArgument<T2>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument3
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument3
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument3
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument3
- uid: System.Activities.InArgument{T3}
  parent: System.Activities
  isExternal: false
  name: InArgument<T3>
  nameWithType: InArgument<T3>
  fullName: System.Activities.InArgument<T3>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument4
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument4
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument4
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument4
- uid: System.Activities.InArgument{T4}
  parent: System.Activities
  isExternal: false
  name: InArgument<T4>
  nameWithType: InArgument<T4>
  fullName: System.Activities.InArgument<T4>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument5
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument5
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument5
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument5
- uid: System.Activities.InArgument{T5}
  parent: System.Activities
  isExternal: false
  name: InArgument<T5>
  nameWithType: InArgument<T5>
  fullName: System.Activities.InArgument<T5>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument6
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument6
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument6
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument6
- uid: System.Activities.InArgument{T6}
  parent: System.Activities
  isExternal: false
  name: InArgument<T6>
  nameWithType: InArgument<T6>
  fullName: System.Activities.InArgument<T6>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument7
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument7
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument7
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument7
- uid: System.Activities.InArgument{T7}
  parent: System.Activities
  isExternal: false
  name: InArgument<T7>
  nameWithType: InArgument<T7>
  fullName: System.Activities.InArgument<T7>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument8
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument8
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument8
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument8
- uid: System.Activities.InArgument{T8}
  parent: System.Activities
  isExternal: false
  name: InArgument<T8>
  nameWithType: InArgument<T8>
  fullName: System.Activities.InArgument<T8>
- uid: System.Activities.Expressions.InvokeFunc`15.Argument9
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Argument9
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument9
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Argument9
- uid: System.Activities.InArgument{T9}
  parent: System.Activities
  isExternal: false
  name: InArgument<T9>
  nameWithType: InArgument<T9>
  fullName: System.Activities.InArgument<T9>
- uid: System.Activities.Expressions.InvokeFunc`15.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Execute(NativeActivityContext)
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Expressions.InvokeFunc`15.Func
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: Func
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Func
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.Func
- uid: System.Activities.ActivityFunc`15
  parent: System.Activities
  isExternal: false
  name: ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>
  nameWithType: ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>
  fullName: System.Activities.ActivityFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>
- uid: System.Activities.Expressions.InvokeFunc`15.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.Expressions.InvokeFunc`15
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  nameWithType: InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
  fullName: System.Activities.Expressions.InvokeFunc<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,TResult>.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata,Activity)
- uid: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: NativeActivityUpdateMapMetadata
  nameWithType: NativeActivityUpdateMapMetadata
  fullName: System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
