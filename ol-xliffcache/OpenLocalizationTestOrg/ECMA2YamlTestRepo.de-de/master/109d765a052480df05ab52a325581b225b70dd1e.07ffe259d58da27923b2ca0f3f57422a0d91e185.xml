{"nodes":[{"pos":[678,690],"content":"MACTripleDES","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES","pos":[0,12]}]},{"pos":[2984,2998],"content":"MACTripleDES()","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES()","pos":[0,14]}]},{"pos":[3495,3515],"content":"MACTripleDES(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES(Byte[])","pos":[0,20]}]},{"pos":[3868,3902],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4159,4186],"content":"MACTripleDES(String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES(String,Byte[])","pos":[0,27]}]},{"pos":[4580,4614],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4677,4711],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4944,4960],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[5317,5351],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5636,5664],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[6068,6102],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6165,6199],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6261,6295],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6500,6511],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[6842,6876],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7083,7095],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[7567,7574],"content":"Padding","needQuote":true,"needEscape":true,"nodes":[{"content":"Padding","pos":[0,7]}]},{"pos":[7937,7971],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8116,8163],"content":"System.Security.Cryptography.KeyedHashAlgorithm","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Cryptography.KeyedHashAlgorithm","pos":[0,47]}]},{"pos":[8299,8313],"content":"MACTripleDES()","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES()","pos":[0,14]}]},{"pos":[8577,8597],"content":"MACTripleDES(Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES(Byte[])","pos":[0,20]}]},{"pos":[8787,8791],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9003,9030],"content":"MACTripleDES(String,Byte[])","needQuote":true,"needEscape":true,"nodes":[{"content":"MACTripleDES(String,Byte[])","pos":[0,27]}]},{"pos":[9236,9242],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9356,9360],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[9561,9577],"content":"Dispose(Boolean)","needQuote":true,"needEscape":true,"nodes":[{"content":"Dispose(Boolean)","pos":[0,16]}]},{"pos":[9762,9769],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[10000,10028],"content":"HashCore(Byte[],Int32,Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"HashCore(Byte[],Int32,Int32)","pos":[0,28]}]},{"pos":[10234,10238],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[10351,10356],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10469,10474],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[10661,10672],"content":"HashFinal()","needQuote":true,"needEscape":true,"nodes":[{"content":"HashFinal()","pos":[0,11]}]},{"pos":[10844,10848],"content":"Byte","needQuote":true,"needEscape":true,"nodes":[{"content":"Byte","pos":[0,4]}]},{"pos":[11036,11048],"content":"Initialize()","needQuote":true,"needEscape":true,"nodes":[{"content":"Initialize()","pos":[0,12]}]},{"pos":[11295,11302],"content":"Padding","needQuote":true,"needEscape":true,"nodes":[{"content":"Padding","pos":[0,7]}]},{"pos":[11517,11528],"content":"PaddingMode","needQuote":true,"needEscape":true,"nodes":[{"content":"PaddingMode","pos":[0,11]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.MACTripleDES\n  id: MACTripleDES\n  children:\n  - System.Security.Cryptography.MACTripleDES.#ctor\n  - System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])\n  - System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])\n  - System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)\n  - System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.MACTripleDES.HashFinal\n  - System.Security.Cryptography.MACTripleDES.Initialize\n  - System.Security.Cryptography.MACTripleDES.Padding\n  langs:\n  - csharp\n  name: MACTripleDES\n  nameWithType: MACTripleDES\n  fullName: System.Security.Cryptography.MACTripleDES\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class MACTripleDES : System.Security.Cryptography.KeyedHashAlgorithm\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.HashAlgorithm\n  - System.Security.Cryptography.KeyedHashAlgorithm\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.HashAlgorithm.CanReuseTransform\n  - System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks\n  - System.Security.Cryptography.HashAlgorithm.Clear\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)\n  - System.Security.Cryptography.HashAlgorithm.Dispose\n  - System.Security.Cryptography.HashAlgorithm.Hash\n  - System.Security.Cryptography.HashAlgorithm.HashSize\n  - System.Security.Cryptography.HashAlgorithm.HashSizeValue\n  - System.Security.Cryptography.HashAlgorithm.HashValue\n  - System.Security.Cryptography.HashAlgorithm.InputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.OutputBlockSize\n  - System.Security.Cryptography.HashAlgorithm.State\n  - System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)\n  - System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)\n  - System.Security.Cryptography.KeyedHashAlgorithm.Create\n  - System.Security.Cryptography.KeyedHashAlgorithm.Create(System.String)\n  - System.Security.Cryptography.KeyedHashAlgorithm.Key\n  - System.Security.Cryptography.KeyedHashAlgorithm.KeyValue\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: MACTripleDES()\n  nameWithType: MACTripleDES.MACTripleDES()\n  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public MACTripleDES ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])\n  id: '#ctor(System.Byte[])'\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: MACTripleDES(Byte[])\n  nameWithType: MACTripleDES.MACTripleDES(Byte[])\n  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public MACTripleDES (byte[] rgbKey);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])\n  id: '#ctor(System.String,System.Byte[])'\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: MACTripleDES(String,Byte[])\n  nameWithType: MACTripleDES.MACTripleDES(String,Byte[])\n  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(String,Byte[])\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public MACTripleDES (string strTripleDES, byte[] rgbKey);\n    parameters:\n    - id: strTripleDES\n      type: System.String\n      description: Parameter description to be filled\n    - id: rgbKey\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: MACTripleDES.Dispose(Boolean)\n  fullName: System.Security.Cryptography.MACTripleDES.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)\n  id: HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: MACTripleDES.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.MACTripleDES.HashCore(Byte[],Int32,Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override void HashCore (byte[] rgbData, int ibStart, int cbSize);\n    parameters:\n    - id: rgbData\n      type: System.Byte[]\n      description: Parameter description to be filled\n    - id: ibStart\n      type: System.Int32\n      description: Parameter description to be filled\n    - id: cbSize\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.HashFinal\n  id: HashFinal\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: HashFinal()\n  nameWithType: MACTripleDES.HashFinal()\n  fullName: System.Security.Cryptography.MACTripleDES.HashFinal()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: protected override byte[] HashFinal ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.Initialize\n  id: Initialize\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: Initialize()\n  nameWithType: MACTripleDES.Initialize()\n  fullName: System.Security.Cryptography.MACTripleDES.Initialize()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override void Initialize ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Cryptography.MACTripleDES.Padding\n  id: Padding\n  parent: System.Security.Cryptography.MACTripleDES\n  langs:\n  - csharp\n  name: Padding\n  nameWithType: MACTripleDES.Padding\n  fullName: System.Security.Cryptography.MACTripleDES.Padding\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public System.Security.Cryptography.PaddingMode Padding { get; set; }\n    return:\n      type: System.Security.Cryptography.PaddingMode\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Cryptography.KeyedHashAlgorithm\n  isExternal: false\n  name: System.Security.Cryptography.KeyedHashAlgorithm\n- uid: System.Security.Cryptography.MACTripleDES.#ctor\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: MACTripleDES()\n  nameWithType: MACTripleDES.MACTripleDES()\n  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES()\n- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.Byte[])\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: MACTripleDES(Byte[])\n  nameWithType: MACTripleDES.MACTripleDES(Byte[])\n  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(Byte[])\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.MACTripleDES.#ctor(System.String,System.Byte[])\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: MACTripleDES(String,Byte[])\n  nameWithType: MACTripleDES.MACTripleDES(String,Byte[])\n  fullName: System.Security.Cryptography.MACTripleDES.MACTripleDES(String,Byte[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.MACTripleDES.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: MACTripleDES.Dispose(Boolean)\n  fullName: System.Security.Cryptography.MACTripleDES.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.MACTripleDES.HashCore(System.Byte[],System.Int32,System.Int32)\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: HashCore(Byte[],Int32,Int32)\n  nameWithType: MACTripleDES.HashCore(Byte[],Int32,Int32)\n  fullName: System.Security.Cryptography.MACTripleDES.HashCore(Byte[],Int32,Int32)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.MACTripleDES.HashFinal\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: HashFinal()\n  nameWithType: MACTripleDES.HashFinal()\n  fullName: System.Security.Cryptography.MACTripleDES.HashFinal()\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte[]\n- uid: System.Security.Cryptography.MACTripleDES.Initialize\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: Initialize()\n  nameWithType: MACTripleDES.Initialize()\n  fullName: System.Security.Cryptography.MACTripleDES.Initialize()\n- uid: System.Security.Cryptography.MACTripleDES.Padding\n  parent: System.Security.Cryptography.MACTripleDES\n  isExternal: false\n  name: Padding\n  nameWithType: MACTripleDES.Padding\n  fullName: System.Security.Cryptography.MACTripleDES.Padding\n- uid: System.Security.Cryptography.PaddingMode\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: PaddingMode\n  nameWithType: PaddingMode\n  fullName: System.Security.Cryptography.PaddingMode\n"}