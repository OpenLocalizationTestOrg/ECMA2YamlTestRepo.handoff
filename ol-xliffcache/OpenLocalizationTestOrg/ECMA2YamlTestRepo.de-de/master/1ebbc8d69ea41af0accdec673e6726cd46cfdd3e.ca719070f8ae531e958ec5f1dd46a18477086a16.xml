{"nodes":[{"pos":[622,633],"content":"StringToken","needQuote":true,"needEscape":true,"nodes":[{"content":"StringToken","pos":[0,11]}]},{"pos":[1124,1138],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[1462,1496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1555,1589],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[1901,1920],"content":"Equals(StringToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(StringToken)","pos":[0,19]}]},{"pos":[2294,2328],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2387,2421],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2671,2684],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[3000,3034],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3371,3407],"content":"op_Equality(StringToken,StringToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(StringToken,StringToken)","pos":[0,36]}]},{"pos":[3863,3897],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3976,4010],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4069,4103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4444,4482],"content":"op_Inequality(StringToken,StringToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(StringToken,StringToken)","pos":[0,38]}]},{"pos":[4944,4978],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5057,5091],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5150,5184],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5367,5372],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[5645,5679],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5793,5809],"content":"System.ValueType","needQuote":true,"needEscape":true,"nodes":[{"content":"System.ValueType","pos":[0,16]}]},{"pos":[5947,5961],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[6134,6141],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6259,6265],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[6473,6492],"content":"Equals(StringToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(StringToken)","pos":[0,19]}]},{"pos":[6675,6682],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[6837,6848],"content":"StringToken","needQuote":true,"needEscape":true,"nodes":[{"content":"StringToken","pos":[0,11]}]},{"pos":[7051,7064],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[7233,7238],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7484,7520],"content":"op_Equality(StringToken,StringToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Equality(StringToken,StringToken)","pos":[0,36]}]},{"pos":[7737,7744],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[7899,7910],"content":"StringToken","needQuote":true,"needEscape":true,"nodes":[{"content":"StringToken","pos":[0,11]}]},{"pos":[8089,8100],"content":"StringToken","needQuote":true,"needEscape":true,"nodes":[{"content":"StringToken","pos":[0,11]}]},{"pos":[8376,8414],"content":"op_Inequality(StringToken,StringToken)","needQuote":true,"needEscape":true,"nodes":[{"content":"op_Inequality(StringToken,StringToken)","pos":[0,38]}]},{"pos":[8635,8642],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[8797,8808],"content":"StringToken","needQuote":true,"needEscape":true,"nodes":[{"content":"StringToken","pos":[0,11]}]},{"pos":[8987,8998],"content":"StringToken","needQuote":true,"needEscape":true,"nodes":[{"content":"StringToken","pos":[0,11]}]},{"pos":[9195,9200],"content":"Token","needQuote":true,"needEscape":true,"nodes":[{"content":"Token","pos":[0,5]}]},{"pos":[9353,9358],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.Emit.StringToken\n  id: StringToken\n  children:\n  - System.Reflection.Emit.StringToken.Equals(System.Object)\n  - System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)\n  - System.Reflection.Emit.StringToken.GetHashCode\n  - System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  - System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  - System.Reflection.Emit.StringToken.Token\n  langs:\n  - csharp\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n  type: Struct\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct StringToken\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.StringToken.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Reflection.Emit.StringToken\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: StringToken.Equals(Object)\n  fullName: System.Reflection.Emit.StringToken.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.StringToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)\n  id: Equals(System.Reflection.Emit.StringToken)\n  parent: System.Reflection.Emit.StringToken\n  langs:\n  - csharp\n  name: Equals(StringToken)\n  nameWithType: StringToken.Equals(StringToken)\n  fullName: System.Reflection.Emit.StringToken.Equals(StringToken)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public bool Equals (System.Reflection.Emit.StringToken obj);\n    parameters:\n    - id: obj\n      type: System.Reflection.Emit.StringToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  overload: System.Reflection.Emit.StringToken.Equals*\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.StringToken.GetHashCode\n  id: GetHashCode\n  parent: System.Reflection.Emit.StringToken\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: StringToken.GetHashCode()\n  fullName: System.Reflection.Emit.StringToken.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  id: op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  parent: System.Reflection.Emit.StringToken\n  langs:\n  - csharp\n  name: op_Equality(StringToken,StringToken)\n  nameWithType: StringToken.op_Equality(StringToken,StringToken)\n  fullName: System.Reflection.Emit.StringToken.op_Equality(StringToken,StringToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Equality (System.Reflection.Emit.StringToken a, System.Reflection.Emit.StringToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.StringToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.StringToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  id: op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  parent: System.Reflection.Emit.StringToken\n  langs:\n  - csharp\n  name: op_Inequality(StringToken,StringToken)\n  nameWithType: StringToken.op_Inequality(StringToken,StringToken)\n  fullName: System.Reflection.Emit.StringToken.op_Inequality(StringToken,StringToken)\n  type: Operator\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public static bool op_Inequality (System.Reflection.Emit.StringToken a, System.Reflection.Emit.StringToken b);\n    parameters:\n    - id: a\n      type: System.Reflection.Emit.StringToken\n      description: Parameter description to be filled\n    - id: b\n      type: System.Reflection.Emit.StringToken\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.Emit.StringToken.Token\n  id: Token\n  parent: System.Reflection.Emit.StringToken\n  langs:\n  - csharp\n  name: Token\n  nameWithType: StringToken.Token\n  fullName: System.Reflection.Emit.StringToken.Token\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection.Emit\n  syntax:\n    content: public int Token { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.ValueType\n  isExternal: false\n  name: System.ValueType\n- uid: System.Reflection.Emit.StringToken.Equals(System.Object)\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: StringToken.Equals(Object)\n  fullName: System.Reflection.Emit.StringToken.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Reflection.Emit.StringToken.Equals(System.Reflection.Emit.StringToken)\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  name: Equals(StringToken)\n  nameWithType: StringToken.Equals(StringToken)\n  fullName: System.Reflection.Emit.StringToken.Equals(StringToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.StringToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n- uid: System.Reflection.Emit.StringToken.GetHashCode\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: StringToken.GetHashCode()\n  fullName: System.Reflection.Emit.StringToken.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.StringToken.op_Equality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  name: op_Equality(StringToken,StringToken)\n  nameWithType: StringToken.op_Equality(StringToken,StringToken)\n  fullName: System.Reflection.Emit.StringToken.op_Equality(StringToken,StringToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.StringToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n- uid: System.Reflection.Emit.StringToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n- uid: System.Reflection.Emit.StringToken.op_Inequality(System.Reflection.Emit.StringToken,System.Reflection.Emit.StringToken)\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  name: op_Inequality(StringToken,StringToken)\n  nameWithType: StringToken.op_Inequality(StringToken,StringToken)\n  fullName: System.Reflection.Emit.StringToken.op_Inequality(StringToken,StringToken)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.Emit.StringToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n- uid: System.Reflection.Emit.StringToken\n  parent: System.Reflection.Emit\n  isExternal: false\n  name: StringToken\n  nameWithType: StringToken\n  fullName: System.Reflection.Emit.StringToken\n- uid: System.Reflection.Emit.StringToken.Token\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  name: Token\n  nameWithType: StringToken.Token\n  fullName: System.Reflection.Emit.StringToken.Token\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.Emit.StringToken.Equals*\n  parent: System.Reflection.Emit.StringToken\n  isExternal: false\n  nameWithType: StringToken.\n"}