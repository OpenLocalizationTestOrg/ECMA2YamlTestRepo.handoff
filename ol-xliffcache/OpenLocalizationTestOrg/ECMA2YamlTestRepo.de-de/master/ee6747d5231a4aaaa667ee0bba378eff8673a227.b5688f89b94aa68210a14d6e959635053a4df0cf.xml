{"nodes":[{"pos":[328,336],"content":"Equality","needQuote":true,"needEscape":true,"nodes":[{"content":"Equality","pos":[0,8]}]},{"pos":[1427,1442],"content":"Equality(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equality(Int32)","pos":[0,15]}]},{"pos":[1766,1800],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2047,2078],"content":"EvaluateEquality(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"EvaluateEquality(Object,Object)","pos":[0,31]}]},{"pos":[2439,2473],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2532,2566],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2625,2659],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2900,2928],"content":"JScriptEquals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"JScriptEquals(Object,Object)","pos":[0,28]}]},{"pos":[3287,3321],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3380,3414],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3473,3507],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3631,3657],"content":"Microsoft.JScript.BinaryOp","needQuote":true,"needEscape":true,"nodes":[{"content":"Microsoft.JScript.BinaryOp","pos":[0,26]}]},{"pos":[3777,3792],"content":"Equality(Int32)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equality(Int32)","pos":[0,15]}]},{"pos":[3954,3959],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[4152,4183],"content":"EvaluateEquality(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"EvaluateEquality(Object,Object)","pos":[0,31]}]},{"pos":[4379,4386],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[4504,4510],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4626,4632],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[4824,4852],"content":"JScriptEquals(Object,Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"JScriptEquals(Object,Object)","pos":[0,28]}]},{"pos":[5042,5049],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[5167,5173],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[5289,5295],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.Equality\n  id: Equality\n  children:\n  - Microsoft.JScript.Equality.#ctor(System.Int32)\n  - Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)\n  - Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)\n  langs:\n  - csharp\n  name: Equality\n  nameWithType: Equality\n  fullName: Microsoft.JScript.Equality\n  type: Class\n  syntax:\n    content: 'public class Equality : Microsoft.JScript.BinaryOp'\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.AST\n  - Microsoft.JScript.BinaryOp\n  implements: []\n  inheritedMembers:\n  - Microsoft.JScript.BinaryOp.GetOperator(System.Reflection.IReflect,System.Reflection.IReflect)\n  - Microsoft.JScript.BinaryOp.operand1\n  - Microsoft.JScript.BinaryOp.operand2\n  - Microsoft.JScript.BinaryOp.operatorMeth\n  - Microsoft.JScript.BinaryOp.operatorTok\n  - Microsoft.JScript.BinaryOp.type1\n  - Microsoft.JScript.BinaryOp.type2\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.JScript.Equality.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: Microsoft.JScript.Equality\n  langs:\n  - csharp\n  name: Equality(Int32)\n  nameWithType: Equality.Equality(Int32)\n  fullName: Microsoft.JScript.Equality.Equality(Int32)\n  type: Constructor\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  syntax:\n    content: public Equality (int operatorTok);\n    parameters:\n    - id: operatorTok\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)\n  id: EvaluateEquality(System.Object,System.Object)\n  parent: Microsoft.JScript.Equality\n  langs:\n  - csharp\n  name: EvaluateEquality(Object,Object)\n  nameWithType: Equality.EvaluateEquality(Object,Object)\n  fullName: Microsoft.JScript.Equality.EvaluateEquality(Object,Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  syntax:\n    content: public bool EvaluateEquality (object v1, object v2);\n    parameters:\n    - id: v1\n      type: System.Object\n      description: Parameter description to be filled\n    - id: v2\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)\n  id: JScriptEquals(System.Object,System.Object)\n  parent: Microsoft.JScript.Equality\n  langs:\n  - csharp\n  name: JScriptEquals(Object,Object)\n  nameWithType: Equality.JScriptEquals(Object,Object)\n  fullName: Microsoft.JScript.Equality.JScriptEquals(Object,Object)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  syntax:\n    content: public static bool JScriptEquals (object v1, object v2);\n    parameters:\n    - id: v1\n      type: System.Object\n      description: Parameter description to be filled\n    - id: v2\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: Microsoft.JScript.BinaryOp\n  isExternal: false\n  name: Microsoft.JScript.BinaryOp\n- uid: Microsoft.JScript.Equality.#ctor(System.Int32)\n  parent: Microsoft.JScript.Equality\n  isExternal: false\n  name: Equality(Int32)\n  nameWithType: Equality.Equality(Int32)\n  fullName: Microsoft.JScript.Equality.Equality(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: Microsoft.JScript.Equality.EvaluateEquality(System.Object,System.Object)\n  parent: Microsoft.JScript.Equality\n  isExternal: false\n  name: EvaluateEquality(Object,Object)\n  nameWithType: Equality.EvaluateEquality(Object,Object)\n  fullName: Microsoft.JScript.Equality.EvaluateEquality(Object,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.Equality.JScriptEquals(System.Object,System.Object)\n  parent: Microsoft.JScript.Equality\n  isExternal: false\n  name: JScriptEquals(Object,Object)\n  nameWithType: Equality.JScriptEquals(Object,Object)\n  fullName: Microsoft.JScript.Equality.JScriptEquals(Object,Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n"}