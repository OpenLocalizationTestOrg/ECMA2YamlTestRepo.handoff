{"nodes":[{"pos":[662,685],"content":"ExceptionHandlingClause","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionHandlingClause","pos":[0,23]}]},{"pos":[1435,1460],"content":"ExceptionHandlingClause()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionHandlingClause()","pos":[0,25]}]},{"pos":[1969,1978],"content":"CatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"CatchType","pos":[0,9]}]},{"pos":[2285,2319],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[2530,2542],"content":"FilterOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"FilterOffset","pos":[0,12]}]},{"pos":[2858,2892],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3089,3094],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[3470,3504],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3717,3730],"content":"HandlerLength","needQuote":true,"needEscape":true,"nodes":[{"content":"HandlerLength","pos":[0,13]}]},{"pos":[4049,4083],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4296,4309],"content":"HandlerOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"HandlerOffset","pos":[0,13]}]},{"pos":[4628,4662],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4865,4875],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[5200,5234],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5439,5448],"content":"TryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"TryLength","pos":[0,9]}]},{"pos":[5755,5789],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5994,6003],"content":"TryOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"TryOffset","pos":[0,9]}]},{"pos":[6310,6344],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6455,6468],"content":"System.Object","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Object","pos":[0,13]}]},{"pos":[6604,6629],"content":"ExceptionHandlingClause()","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionHandlingClause()","pos":[0,25]}]},{"pos":[6915,6924],"content":"CatchType","needQuote":true,"needEscape":true,"nodes":[{"content":"CatchType","pos":[0,9]}]},{"pos":[7103,7107],"content":"Type","needQuote":true,"needEscape":true,"nodes":[{"content":"Type","pos":[0,4]}]},{"pos":[7295,7307],"content":"FilterOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"FilterOffset","pos":[0,12]}]},{"pos":[7493,7498],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[7681,7686],"content":"Flags","needQuote":true,"needEscape":true,"nodes":[{"content":"Flags","pos":[0,5]}]},{"pos":[7905,7935],"content":"ExceptionHandlingClauseOptions","needQuote":true,"needEscape":true,"nodes":[{"content":"ExceptionHandlingClauseOptions","pos":[0,30]}]},{"pos":[8187,8200],"content":"HandlerLength","needQuote":true,"needEscape":true,"nodes":[{"content":"HandlerLength","pos":[0,13]}]},{"pos":[8388,8393],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8584,8597],"content":"HandlerOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"HandlerOffset","pos":[0,13]}]},{"pos":[8785,8790],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[8976,8986],"content":"ToString()","needQuote":true,"needEscape":true,"nodes":[{"content":"ToString()","pos":[0,10]}]},{"pos":[9169,9175],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[9364,9373],"content":"TryLength","needQuote":true,"needEscape":true,"nodes":[{"content":"TryLength","pos":[0,9]}]},{"pos":[9553,9558],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[9745,9754],"content":"TryOffset","needQuote":true,"needEscape":true,"nodes":[{"content":"TryOffset","pos":[0,9]}]},{"pos":[9934,9939],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.ExceptionHandlingClause\n  id: ExceptionHandlingClause\n  children:\n  - System.Reflection.ExceptionHandlingClause.#ctor\n  - System.Reflection.ExceptionHandlingClause.CatchType\n  - System.Reflection.ExceptionHandlingClause.FilterOffset\n  - System.Reflection.ExceptionHandlingClause.Flags\n  - System.Reflection.ExceptionHandlingClause.HandlerLength\n  - System.Reflection.ExceptionHandlingClause.HandlerOffset\n  - System.Reflection.ExceptionHandlingClause.ToString\n  - System.Reflection.ExceptionHandlingClause.TryLength\n  - System.Reflection.ExceptionHandlingClause.TryOffset\n  langs:\n  - csharp\n  name: ExceptionHandlingClause\n  nameWithType: ExceptionHandlingClause\n  fullName: System.Reflection.ExceptionHandlingClause\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ExceptionHandlingClause\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.#ctor\n  id: '#ctor'\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: ExceptionHandlingClause()\n  nameWithType: ExceptionHandlingClause.ExceptionHandlingClause()\n  fullName: System.Reflection.ExceptionHandlingClause.ExceptionHandlingClause()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: protected ExceptionHandlingClause ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.CatchType\n  id: CatchType\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: CatchType\n  nameWithType: ExceptionHandlingClause.CatchType\n  fullName: System.Reflection.ExceptionHandlingClause.CatchType\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual Type CatchType { get; }\n    return:\n      type: System.Type\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.FilterOffset\n  id: FilterOffset\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: FilterOffset\n  nameWithType: ExceptionHandlingClause.FilterOffset\n  fullName: System.Reflection.ExceptionHandlingClause.FilterOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int FilterOffset { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.Flags\n  id: Flags\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: Flags\n  nameWithType: ExceptionHandlingClause.Flags\n  fullName: System.Reflection.ExceptionHandlingClause.Flags\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual System.Reflection.ExceptionHandlingClauseOptions Flags { get; }\n    return:\n      type: System.Reflection.ExceptionHandlingClauseOptions\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.HandlerLength\n  id: HandlerLength\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: HandlerLength\n  nameWithType: ExceptionHandlingClause.HandlerLength\n  fullName: System.Reflection.ExceptionHandlingClause.HandlerLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int HandlerLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.HandlerOffset\n  id: HandlerOffset\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: HandlerOffset\n  nameWithType: ExceptionHandlingClause.HandlerOffset\n  fullName: System.Reflection.ExceptionHandlingClause.HandlerOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int HandlerOffset { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.ToString\n  id: ToString\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: ExceptionHandlingClause.ToString()\n  fullName: System.Reflection.ExceptionHandlingClause.ToString()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.TryLength\n  id: TryLength\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: TryLength\n  nameWithType: ExceptionHandlingClause.TryLength\n  fullName: System.Reflection.ExceptionHandlingClause.TryLength\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int TryLength { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Reflection.ExceptionHandlingClause.TryOffset\n  id: TryOffset\n  parent: System.Reflection.ExceptionHandlingClause\n  langs:\n  - csharp\n  name: TryOffset\n  nameWithType: ExceptionHandlingClause.TryOffset\n  fullName: System.Reflection.ExceptionHandlingClause.TryOffset\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Reflection\n  syntax:\n    content: public virtual int TryOffset { get; }\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Object\n  isExternal: false\n  name: System.Object\n- uid: System.Reflection.ExceptionHandlingClause.#ctor\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: ExceptionHandlingClause()\n  nameWithType: ExceptionHandlingClause.ExceptionHandlingClause()\n  fullName: System.Reflection.ExceptionHandlingClause.ExceptionHandlingClause()\n- uid: System.Reflection.ExceptionHandlingClause.CatchType\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: CatchType\n  nameWithType: ExceptionHandlingClause.CatchType\n  fullName: System.Reflection.ExceptionHandlingClause.CatchType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Reflection.ExceptionHandlingClause.FilterOffset\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: FilterOffset\n  nameWithType: ExceptionHandlingClause.FilterOffset\n  fullName: System.Reflection.ExceptionHandlingClause.FilterOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ExceptionHandlingClause.Flags\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: Flags\n  nameWithType: ExceptionHandlingClause.Flags\n  fullName: System.Reflection.ExceptionHandlingClause.Flags\n- uid: System.Reflection.ExceptionHandlingClauseOptions\n  parent: System.Reflection\n  isExternal: false\n  name: ExceptionHandlingClauseOptions\n  nameWithType: ExceptionHandlingClauseOptions\n  fullName: System.Reflection.ExceptionHandlingClauseOptions\n- uid: System.Reflection.ExceptionHandlingClause.HandlerLength\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: HandlerLength\n  nameWithType: ExceptionHandlingClause.HandlerLength\n  fullName: System.Reflection.ExceptionHandlingClause.HandlerLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ExceptionHandlingClause.HandlerOffset\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: HandlerOffset\n  nameWithType: ExceptionHandlingClause.HandlerOffset\n  fullName: System.Reflection.ExceptionHandlingClause.HandlerOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ExceptionHandlingClause.ToString\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: ToString()\n  nameWithType: ExceptionHandlingClause.ToString()\n  fullName: System.Reflection.ExceptionHandlingClause.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Reflection.ExceptionHandlingClause.TryLength\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: TryLength\n  nameWithType: ExceptionHandlingClause.TryLength\n  fullName: System.Reflection.ExceptionHandlingClause.TryLength\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Reflection.ExceptionHandlingClause.TryOffset\n  parent: System.Reflection.ExceptionHandlingClause\n  isExternal: false\n  name: TryOffset\n  nameWithType: ExceptionHandlingClause.TryOffset\n  fullName: System.Reflection.ExceptionHandlingClause.TryOffset\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n"}