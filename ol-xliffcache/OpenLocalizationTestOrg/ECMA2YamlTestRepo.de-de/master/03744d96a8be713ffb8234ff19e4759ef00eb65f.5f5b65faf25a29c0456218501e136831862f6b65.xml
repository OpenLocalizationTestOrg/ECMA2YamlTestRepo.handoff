{"nodes":[{"pos":[895,916],"content":"CompensationExtension","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensationExtension","pos":[0,21]}]},{"pos":[2092,2115],"content":"CompensationExtension()","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensationExtension()","pos":[0,23]}]},{"pos":[2978,3044],"content":"CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectValues(IDictionary&lt;XName,Object&gt;,IDictionary&lt;XName,Object&gt;)","pos":[0,66],"source":"CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)"}]},{"pos":[3765,3799],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3933,3967],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4352,4392],"content":"PublishValues(IDictionary<XName,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"PublishValues(IDictionary&lt;XName,Object&gt;)","pos":[0,40],"source":"PublishValues(IDictionary<XName,Object>)"}]},{"pos":[4967,5001],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5372,5450],"content":"System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()","pos":[0,78]}]},{"pos":[6044,6078],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6523,6610],"content":"System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)","pos":[0,87]}]},{"pos":[7222,7256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7406,7458],"content":"System.Activities.Persistence.PersistenceParticipant","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Persistence.PersistenceParticipant","pos":[0,52]}]},{"pos":[7612,7635],"content":"CompensationExtension()","needQuote":true,"needEscape":true,"nodes":[{"content":"CompensationExtension()","pos":[0,23]}]},{"pos":[8101,8167],"content":"CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"CollectValues(IDictionary&lt;XName,Object&gt;,IDictionary&lt;XName,Object&gt;)","pos":[0,66],"source":"CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)"}]},{"pos":[8551,8576],"content":"IDictionary<XName,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;XName,Object&gt;","pos":[0,25],"source":"IDictionary<XName,Object>"}]},{"pos":[8855,8880],"content":"IDictionary<XName,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;XName,Object&gt;","pos":[0,25],"source":"IDictionary<XName,Object>"}]},{"pos":[9249,9289],"content":"PublishValues(IDictionary<XName,Object>)","needQuote":true,"needEscape":true,"nodes":[{"content":"PublishValues(IDictionary&lt;XName,Object&gt;)","pos":[0,40],"source":"PublishValues(IDictionary<XName,Object>)"}]},{"pos":[9621,9646],"content":"IDictionary<XName,Object>","needQuote":true,"needEscape":true,"nodes":[{"content":"IDictionary&lt;XName,Object&gt;","pos":[0,25],"source":"IDictionary<XName,Object>"}]},{"pos":[10001,10079],"content":"System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()","pos":[0,78]}]},{"pos":[10465,10484],"content":"IEnumerable<ph id=\"ph1\">&lt;Object&gt;</ph>","needQuote":true,"needEscape":true,"source":"IEnumerable<Object>"},{"pos":[10848,10935],"content":"System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)","pos":[0,87]}]},{"pos":[11332,11353],"content":"WorkflowInstanceProxy","needQuote":true,"needEscape":true,"nodes":[{"content":"WorkflowInstanceProxy","pos":[0,21]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.CompensationExtension\n  id: CompensationExtension\n  children:\n  - System.Activities.Statements.CompensationExtension.#ctor\n  - System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  - System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  - System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  - System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  langs:\n  - csharp\n  name: CompensationExtension\n  nameWithType: CompensationExtension\n  fullName: System.Activities.Statements.CompensationExtension\n  type: Class\n  syntax:\n    content: 'public class CompensationExtension : System.Activities.Persistence.PersistenceParticipant, System.Activities.Hosting.IWorkflowInstanceExtension'\n  inheritance:\n  - System.Object\n  - System.Activities.Persistence.PersistenceParticipant\n  implements:\n  - System.Activities.Hosting.IWorkflowInstanceExtension\n  inheritedMembers:\n  - System.Activities.Persistence.PersistenceParticipant.MapValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object},System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensationExtension.#ctor\n  id: '#ctor'\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: CompensationExtension()\n  nameWithType: CompensationExtension.CompensationExtension()\n  fullName: System.Activities.Statements.CompensationExtension.CompensationExtension()\n  type: Constructor\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: public CompensationExtension ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  id: CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)\n  fullName: System.Activities.Statements.CompensationExtension.CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void CollectValues (out System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> readWriteValues, out System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> writeOnlyValues);\n    parameters:\n    - id: readWriteValues\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: Parameter description to be filled\n    - id: writeOnlyValues\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  id: PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: PublishValues(IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.PublishValues(IDictionary<XName,Object>)\n  fullName: System.Activities.Statements.CompensationExtension.PublishValues(IDictionary<XName,Object>)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: protected override void PublishValues (System.Collections.Generic.IDictionary<System.Xml.Linq.XName,object> readWriteValues);\n    parameters:\n    - id: readWriteValues\n      type: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  id: System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  isEii: true\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: System.Collections.Generic.IEnumerable<object> IWorkflowInstanceExtension.GetAdditionalExtensions ();\n    parameters: []\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Object}\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  id: System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  isEii: true\n  parent: System.Activities.Statements.CompensationExtension\n  langs:\n  - csharp\n  name: System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  type: Method\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  syntax:\n    content: void IWorkflowInstanceExtension.SetInstance (System.Activities.Hosting.WorkflowInstanceProxy instance);\n    parameters:\n    - id: instance\n      type: System.Activities.Hosting.WorkflowInstanceProxy\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Activities.Persistence.PersistenceParticipant\n  isExternal: false\n  name: System.Activities.Persistence.PersistenceParticipant\n- uid: System.Activities.Statements.CompensationExtension.#ctor\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: CompensationExtension()\n  nameWithType: CompensationExtension.CompensationExtension()\n  fullName: System.Activities.Statements.CompensationExtension.CompensationExtension()\n- uid: System.Activities.Statements.CompensationExtension.CollectValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@,System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}@)\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)\n  fullName: System.Activities.Statements.CompensationExtension.CollectValues(IDictionary<XName,Object>,IDictionary<XName,Object>)\n- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<XName,Object>\n  nameWithType: IDictionary<XName,Object>\n  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>\n- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<XName,Object>\n  nameWithType: IDictionary<XName,Object>\n  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>\n- uid: System.Activities.Statements.CompensationExtension.PublishValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: PublishValues(IDictionary<XName,Object>)\n  nameWithType: CompensationExtension.PublishValues(IDictionary<XName,Object>)\n  fullName: System.Activities.Statements.CompensationExtension.PublishValues(IDictionary<XName,Object>)\n- uid: System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<XName,Object>\n  nameWithType: IDictionary<XName,Object>\n  fullName: System.Collections.Generic.IDictionary<System.Xml.Linq.XName,System.Object>\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#GetAdditionalExtensions\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()\n  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.GetAdditionalExtensions()\n- uid: System.Collections.Generic.IEnumerable{System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Object>\n  nameWithType: IEnumerable<Object>\n  fullName: System.Collections.Generic.IEnumerable<System.Object>\n- uid: System.Activities.Statements.CompensationExtension.System#Activities#Hosting#IWorkflowInstanceExtension#SetInstance(System.Activities.Hosting.WorkflowInstanceProxy)\n  parent: System.Activities.Statements.CompensationExtension\n  isExternal: false\n  name: System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  nameWithType: CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n  fullName: System.Activities.Statements.CompensationExtension.System.Activities.Hosting.IWorkflowInstanceExtension.SetInstance(WorkflowInstanceProxy)\n- uid: System.Activities.Hosting.WorkflowInstanceProxy\n  parent: System.Activities.Hosting\n  isExternal: false\n  name: WorkflowInstanceProxy\n  nameWithType: WorkflowInstanceProxy\n  fullName: System.Activities.Hosting.WorkflowInstanceProxy\n"}