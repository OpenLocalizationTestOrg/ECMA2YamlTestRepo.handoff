### YamlMime:ManagedReference
items:
- uid: System.Linq.Lookup`2
  id: Lookup`2
  children:
  - System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
  - System.Linq.Lookup`2.Contains(`0)
  - System.Linq.Lookup`2.Count
  - System.Linq.Lookup`2.GetEnumerator
  - System.Linq.Lookup`2.Item(`0)
  - System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: Lookup<TKey,TElement>
  nameWithType: Lookup<TKey,TElement>
  fullName: System.Linq.Lookup<TKey,TElement>
  type: Class
  syntax:
    content: 'public class Lookup<TKey,TElement> : System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey,TElement>>, System.Linq.ILookup<TKey,TElement>'
    typeParameters:
    - id: TKey
      description: Parameter description to be filled
    - id: TElement
      description: Parameter description to be filled
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey,TElement>>
  - System.Linq.ILookup<TKey,TElement>
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
  id: ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
  parent: System.Linq.Lookup`2
  langs:
  - csharp
  name: ApplyResultSelector(Func<TKey,IEnumerable<TElement>,TResult>)
  nameWithType: Lookup<TKey,TElement>.ApplyResultSelector(Func<TKey,IEnumerable<TElement>,TResult>)
  fullName: System.Linq.Lookup<TKey,TElement>.ApplyResultSelector(Func<TKey,IEnumerable<TElement>,TResult>)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerable<TResult> ApplyResultSelector<TResult> (Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult> resultSelector);
    parameters:
    - id: resultSelector
      type: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TResult}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Lookup`2.Contains(`0)
  id: Contains(`0)
  parent: System.Linq.Lookup`2
  langs:
  - csharp
  name: Contains(TKey)
  nameWithType: Lookup<TKey,TElement>.Contains(TKey)
  fullName: System.Linq.Lookup<TKey,TElement>.Contains(TKey)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public bool Contains (TKey key);
    parameters:
    - id: key
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Boolean
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Lookup`2.Count
  id: Count
  parent: System.Linq.Lookup`2
  langs:
  - csharp
  name: Count
  nameWithType: Lookup<TKey,TElement>.Count
  fullName: System.Linq.Lookup<TKey,TElement>.Count
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Lookup`2.GetEnumerator
  id: GetEnumerator
  parent: System.Linq.Lookup`2
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Lookup<TKey,TElement>.GetEnumerator()
  fullName: System.Linq.Lookup<TKey,TElement>.GetEnumerator()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerator<System.Linq.IGrouping<TKey,TElement>> GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Linq.IGrouping{TKey,TElement}}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Lookup`2.Item(`0)
  id: Item(`0)
  parent: System.Linq.Lookup`2
  langs:
  - csharp
  name: Item(TKey)
  nameWithType: Lookup<TKey,TElement>.Item(TKey)
  fullName: System.Linq.Lookup<TKey,TElement>.Item(TKey)
  type: Property
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: public System.Collections.Generic.IEnumerable<TElement> this[TKey key] { get; }
    parameters:
    - id: key
      type: TKey
      description: Parameter description to be filled
    return:
      type: System.Collections.Generic.IEnumerable{TElement}
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
- uid: System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Linq.Lookup`2
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Lookup<TKey,TElement>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Linq.Lookup<TKey,TElement>.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Linq
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: Parameter description to be filled
  platform:
  - net-11
  - net-20
  - netcore-10
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Linq.Lookup`2.ApplyResultSelector``1(System.Func{`0,System.Collections.Generic.IEnumerable{`1},``0})
  parent: System.Linq.Lookup`2
  isExternal: false
  name: ApplyResultSelector(Func<TKey,IEnumerable<TElement>,TResult>)
  nameWithType: Lookup<TKey,TElement>.ApplyResultSelector(Func<TKey,IEnumerable<TElement>,TResult>)
  fullName: System.Linq.Lookup<TKey,TElement>.ApplyResultSelector(Func<TKey,IEnumerable<TElement>,TResult>)
- uid: System.Collections.Generic.IEnumerable{TResult}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TResult>
  nameWithType: IEnumerable<TResult>
  fullName: System.Collections.Generic.IEnumerable<TResult>
- uid: System.Func{TKey,System.Collections.Generic.IEnumerable{TElement},TResult}
  parent: System
  isExternal: true
  name: Func<TKey,IEnumerable<TElement>,TResult>
  nameWithType: Func<TKey,IEnumerable<TElement>,TResult>
  fullName: System.Func<TKey,System.Collections.Generic.IEnumerable<TElement>,TResult>
- uid: System.Linq.Lookup`2.Contains(`0)
  parent: System.Linq.Lookup`2
  isExternal: false
  name: Contains(TKey)
  nameWithType: Lookup<TKey,TElement>.Contains(TKey)
  fullName: System.Linq.Lookup<TKey,TElement>.Contains(TKey)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Linq.Lookup`2.Count
  parent: System.Linq.Lookup`2
  isExternal: false
  name: Count
  nameWithType: Lookup<TKey,TElement>.Count
  fullName: System.Linq.Lookup<TKey,TElement>.Count
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Linq.Lookup`2.GetEnumerator
  parent: System.Linq.Lookup`2
  isExternal: false
  name: GetEnumerator()
  nameWithType: Lookup<TKey,TElement>.GetEnumerator()
  fullName: System.Linq.Lookup<TKey,TElement>.GetEnumerator()
- uid: System.Collections.Generic.IEnumerator{System.Linq.IGrouping{TKey,TElement}}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerator<IGrouping<TKey,TElement>>
  nameWithType: IEnumerator<IGrouping<TKey,TElement>>
  fullName: System.Collections.Generic.IEnumerator<System.Linq.IGrouping<TKey,TElement>>
- uid: System.Linq.Lookup`2.Item(`0)
  parent: System.Linq.Lookup`2
  isExternal: false
  name: Item(TKey)
  nameWithType: Lookup<TKey,TElement>.Item(TKey)
  fullName: System.Linq.Lookup<TKey,TElement>.Item(TKey)
- uid: System.Collections.Generic.IEnumerable{TElement}
  parent: System.Collections.Generic
  isExternal: false
  name: IEnumerable<TElement>
  nameWithType: IEnumerable<TElement>
  fullName: System.Collections.Generic.IEnumerable<TElement>
- uid: TKey
  parent: ''
  isExternal: true
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: System.Linq.Lookup`2.System#Collections#IEnumerable#GetEnumerator
  parent: System.Linq.Lookup`2
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Lookup<TKey,TElement>.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Linq.Lookup<TKey,TElement>.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
