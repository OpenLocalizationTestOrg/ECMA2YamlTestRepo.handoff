{"nodes":[{"pos":[1323,1335],"content":"NetCodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"NetCodeGroup","pos":[0,12]}]},{"pos":[2987,3021],"content":"NetCodeGroup(IMembershipCondition)","needQuote":true,"needEscape":true,"nodes":[{"content":"NetCodeGroup(IMembershipCondition)","pos":[0,34]}]},{"pos":[3483,3517],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[3728,3746],"content":"AbsentOriginScheme","needQuote":true,"needEscape":true,"nodes":[{"content":"AbsentOriginScheme","pos":[0,18]}]},{"pos":[4069,4103],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[4422,4464],"content":"AddConnectAccess(String,CodeConnectAccess)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddConnectAccess(String,CodeConnectAccess)","pos":[0,42]}]},{"pos":[4921,4955],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5052,5086],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5301,5321],"content":"AnyOtherOriginScheme","needQuote":true,"needEscape":true,"nodes":[{"content":"AnyOtherOriginScheme","pos":[0,20]}]},{"pos":[5650,5684],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[5889,5904],"content":"AttributeString","needQuote":true,"needEscape":true,"nodes":[{"content":"AttributeString","pos":[0,15]}]},{"pos":[6222,6256],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[6439,6445],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[6791,6825],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7154,7192],"content":"CreateXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateXml(SecurityElement,PolicyLevel)","pos":[0,38]}]},{"pos":[7665,7699],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[7782,7816],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8033,8047],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[8369,8403],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8462,8496],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[8713,8736],"content":"GetConnectAccessRules()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetConnectAccessRules()","pos":[0,23]}]},{"pos":[9132,9166],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9363,9376],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[9694,9728],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[9923,9933],"content":"MergeLogic","needQuote":true,"needEscape":true,"nodes":[{"content":"MergeLogic","pos":[0,10]}]},{"pos":[10236,10270],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[10597,10634],"content":"ParseXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseXml(SecurityElement,PolicyLevel)","pos":[0,37]}]},{"pos":[11092,11126],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11209,11243],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[11452,11469],"content":"PermissionSetName","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSetName","pos":[0,17]}]},{"pos":[11793,11827],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[12038,12058],"content":"ResetConnectAccess()","needQuote":true,"needEscape":true,"nodes":[{"content":"ResetConnectAccess()","pos":[0,20]}]},{"pos":[12587,12604],"content":"Resolve(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolve(Evidence)","pos":[0,17]}]},{"pos":[13024,13058],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13141,13175],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[13466,13501],"content":"ResolveMatchingCodeGroups(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMatchingCodeGroups(Evidence)","pos":[0,35]}]},{"pos":[13969,14003],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14080,14114],"content":"Parameter description to be filled","needQuote":true,"needEscape":true,"nodes":[{"content":"Parameter description to be filled","pos":[0,34]}]},{"pos":[14244,14276],"content":"System.Security.Policy.CodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"System.Security.Policy.CodeGroup","pos":[0,32]}]},{"pos":[14445,14479],"content":"NetCodeGroup(IMembershipCondition)","needQuote":true,"needEscape":true,"nodes":[{"content":"NetCodeGroup(IMembershipCondition)","pos":[0,34]}]},{"pos":[14739,14759],"content":"IMembershipCondition","needQuote":true,"needEscape":true,"nodes":[{"content":"IMembershipCondition","pos":[0,20]}]},{"pos":[14989,15007],"content":"AbsentOriginScheme","needQuote":true,"needEscape":true,"nodes":[{"content":"AbsentOriginScheme","pos":[0,18]}]},{"pos":[15189,15195],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15435,15477],"content":"AddConnectAccess(String,CodeConnectAccess)","needQuote":true,"needEscape":true,"nodes":[{"content":"AddConnectAccess(String,CodeConnectAccess)","pos":[0,42]}]},{"pos":[15707,15713],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[15872,15889],"content":"CodeConnectAccess","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeConnectAccess","pos":[0,17]}]},{"pos":[16115,16135],"content":"AnyOtherOriginScheme","needQuote":true,"needEscape":true,"nodes":[{"content":"AnyOtherOriginScheme","pos":[0,20]}]},{"pos":[16321,16327],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16510,16525],"content":"AttributeString","needQuote":true,"needEscape":true,"nodes":[{"content":"AttributeString","pos":[0,15]}]},{"pos":[16701,16707],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[16879,16885],"content":"Copy()","needQuote":true,"needEscape":true,"nodes":[{"content":"Copy()","pos":[0,6]}]},{"pos":[17078,17087],"content":"CodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeGroup","pos":[0,9]}]},{"pos":[17354,17392],"content":"CreateXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"CreateXml(SecurityElement,PolicyLevel)","pos":[0,38]}]},{"pos":[17641,17656],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[17836,17847],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[18062,18076],"content":"Equals(Object)","needQuote":true,"needEscape":true,"nodes":[{"content":"Equals(Object)","pos":[0,14]}]},{"pos":[18251,18258],"content":"Boolean","needQuote":true,"needEscape":true,"nodes":[{"content":"Boolean","pos":[0,7]}]},{"pos":[18376,18382],"content":"Object","needQuote":true,"needEscape":true,"nodes":[{"content":"Object","pos":[0,6]}]},{"pos":[18571,18594],"content":"GetConnectAccessRules()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetConnectAccessRules()","pos":[0,23]}]},{"pos":[18819,18834],"content":"DictionaryEntry","needQuote":true,"needEscape":true,"nodes":[{"content":"DictionaryEntry","pos":[0,15]}]},{"pos":[19045,19058],"content":"GetHashCode()","needQuote":true,"needEscape":true,"nodes":[{"content":"GetHashCode()","pos":[0,13]}]},{"pos":[19229,19234],"content":"Int32","needQuote":true,"needEscape":true,"nodes":[{"content":"Int32","pos":[0,5]}]},{"pos":[19410,19420],"content":"MergeLogic","needQuote":true,"needEscape":true,"nodes":[{"content":"MergeLogic","pos":[0,10]}]},{"pos":[19586,19592],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[19836,19873],"content":"ParseXml(SecurityElement,PolicyLevel)","needQuote":true,"needEscape":true,"nodes":[{"content":"ParseXml(SecurityElement,PolicyLevel)","pos":[0,37]}]},{"pos":[20120,20135],"content":"SecurityElement","needQuote":true,"needEscape":true,"nodes":[{"content":"SecurityElement","pos":[0,15]}]},{"pos":[20315,20326],"content":"PolicyLevel","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyLevel","pos":[0,11]}]},{"pos":[20537,20554],"content":"PermissionSetName","needQuote":true,"needEscape":true,"nodes":[{"content":"PermissionSetName","pos":[0,17]}]},{"pos":[20734,20740],"content":"String","needQuote":true,"needEscape":true,"nodes":[{"content":"String","pos":[0,6]}]},{"pos":[20926,20946],"content":"ResetConnectAccess()","needQuote":true,"needEscape":true,"nodes":[{"content":"ResetConnectAccess()","pos":[0,20]}]},{"pos":[21224,21241],"content":"Resolve(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"Resolve(Evidence)","pos":[0,17]}]},{"pos":[21462,21477],"content":"PolicyStatement","needQuote":true,"needEscape":true,"nodes":[{"content":"PolicyStatement","pos":[0,15]}]},{"pos":[21661,21669],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]},{"pos":[21915,21950],"content":"ResolveMatchingCodeGroups(Evidence)","needQuote":true,"needEscape":true,"nodes":[{"content":"ResolveMatchingCodeGroups(Evidence)","pos":[0,35]}]},{"pos":[22201,22210],"content":"CodeGroup","needQuote":true,"needEscape":true,"nodes":[{"content":"CodeGroup","pos":[0,9]}]},{"pos":[22382,22390],"content":"Evidence","needQuote":true,"needEscape":true,"nodes":[{"content":"Evidence","pos":[0,8]}]}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Policy.NetCodeGroup\n  id: NetCodeGroup\n  children:\n  - System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  - System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  - System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  - System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  - System.Security.Policy.NetCodeGroup.AttributeString\n  - System.Security.Policy.NetCodeGroup.Copy\n  - System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  - System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  - System.Security.Policy.NetCodeGroup.GetHashCode\n  - System.Security.Policy.NetCodeGroup.MergeLogic\n  - System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.NetCodeGroup.PermissionSetName\n  - System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  - System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  - System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  langs:\n  - csharp\n  name: NetCodeGroup\n  nameWithType: NetCodeGroup\n  fullName: System.Security.Policy.NetCodeGroup\n  type: Class\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class NetCodeGroup : System.Security.Policy.CodeGroup\n  inheritance:\n  - System.Object\n  - System.Security.Policy.CodeGroup\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Policy.CodeGroup.AddChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.Children\n  - System.Security.Policy.CodeGroup.Description\n  - System.Security.Policy.CodeGroup.Equals(System.Security.Policy.CodeGroup,System.Boolean)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement)\n  - System.Security.Policy.CodeGroup.FromXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  - System.Security.Policy.CodeGroup.MembershipCondition\n  - System.Security.Policy.CodeGroup.Name\n  - System.Security.Policy.CodeGroup.PolicyStatement\n  - System.Security.Policy.CodeGroup.RemoveChild(System.Security.Policy.CodeGroup)\n  - System.Security.Policy.CodeGroup.ToXml\n  - System.Security.Policy.CodeGroup.ToXml(System.Security.Policy.PolicyLevel)\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  id: '#ctor(System.Security.Policy.IMembershipCondition)'\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: NetCodeGroup(IMembershipCondition)\n  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)\n  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public NetCodeGroup (System.Security.Policy.IMembershipCondition membershipCondition);\n    parameters:\n    - id: membershipCondition\n      type: System.Security.Policy.IMembershipCondition\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  id: AbsentOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AbsentOriginScheme\n  nameWithType: NetCodeGroup.AbsentOriginScheme\n  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public static readonly string AbsentOriginScheme;\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  id: AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AddConnectAccess(String,CodeConnectAccess)\n  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)\n  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void AddConnectAccess (string originScheme, System.Security.Policy.CodeConnectAccess connectAccess);\n    parameters:\n    - id: originScheme\n      type: System.String\n      description: Parameter description to be filled\n    - id: connectAccess\n      type: System.Security.Policy.CodeConnectAccess\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  id: AnyOtherOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AnyOtherOriginScheme\n  nameWithType: NetCodeGroup.AnyOtherOriginScheme\n  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  type: Field\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public static readonly string AnyOtherOriginScheme;\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.AttributeString\n  id: AttributeString\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: AttributeString\n  nameWithType: NetCodeGroup.AttributeString\n  fullName: System.Security.Policy.NetCodeGroup.AttributeString\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override string AttributeString { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.Copy\n  id: Copy\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: NetCodeGroup.Copy()\n  fullName: System.Security.Policy.NetCodeGroup.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.CodeGroup Copy ();\n    parameters: []\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: CreateXml(SecurityElement,PolicyLevel)\n  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: protected override void CreateXml (System.Security.SecurityElement element, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: element\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: NetCodeGroup.Equals(Object)\n  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override bool Equals (object o);\n    parameters:\n    - id: o\n      type: System.Object\n      description: Parameter description to be filled\n    return:\n      type: System.Boolean\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  id: GetConnectAccessRules\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: GetConnectAccessRules()\n  nameWithType: NetCodeGroup.GetConnectAccessRules()\n  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public System.Collections.DictionaryEntry[] GetConnectAccessRules ();\n    parameters: []\n    return:\n      type: System.Collections.DictionaryEntry[]\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: NetCodeGroup.GetHashCode()\n  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.MergeLogic\n  id: MergeLogic\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: MergeLogic\n  nameWithType: NetCodeGroup.MergeLogic\n  fullName: System.Security.Policy.NetCodeGroup.MergeLogic\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override string MergeLogic { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  id: ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: ParseXml(SecurityElement,PolicyLevel)\n  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: protected override void ParseXml (System.Security.SecurityElement e, System.Security.Policy.PolicyLevel level);\n    parameters:\n    - id: e\n      type: System.Security.SecurityElement\n      description: Parameter description to be filled\n    - id: level\n      type: System.Security.Policy.PolicyLevel\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.PermissionSetName\n  id: PermissionSetName\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: PermissionSetName\n  nameWithType: NetCodeGroup.PermissionSetName\n  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override string PermissionSetName { get; }\n    return:\n      type: System.String\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  id: ResetConnectAccess\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: ResetConnectAccess()\n  nameWithType: NetCodeGroup.ResetConnectAccess()\n  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public void ResetConnectAccess ();\n    parameters: []\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  id: Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: Resolve(Evidence)\n  nameWithType: NetCodeGroup.Resolve(Evidence)\n  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.PolicyStatement Resolve (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.PolicyStatement\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\n- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  id: ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  langs:\n  - csharp\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security.Policy\n  syntax:\n    content: public override System.Security.Policy.CodeGroup ResolveMatchingCodeGroups (System.Security.Policy.Evidence evidence);\n    parameters:\n    - id: evidence\n      type: System.Security.Policy.Evidence\n      description: Parameter description to be filled\n    return:\n      type: System.Security.Policy.CodeGroup\n      description: Parameter description to be filled\n  platform:\n  - net-11\n  - net-20\n  - netcore-10\nreferences:\n- uid: System.Security.Policy.CodeGroup\n  isExternal: false\n  name: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.NetCodeGroup.#ctor(System.Security.Policy.IMembershipCondition)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: NetCodeGroup(IMembershipCondition)\n  nameWithType: NetCodeGroup.NetCodeGroup(IMembershipCondition)\n  fullName: System.Security.Policy.NetCodeGroup.NetCodeGroup(IMembershipCondition)\n- uid: System.Security.Policy.IMembershipCondition\n  parent: System.Security.Policy\n  isExternal: false\n  name: IMembershipCondition\n  nameWithType: IMembershipCondition\n  fullName: System.Security.Policy.IMembershipCondition\n- uid: System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AbsentOriginScheme\n  nameWithType: NetCodeGroup.AbsentOriginScheme\n  fullName: System.Security.Policy.NetCodeGroup.AbsentOriginScheme\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.NetCodeGroup.AddConnectAccess(System.String,System.Security.Policy.CodeConnectAccess)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AddConnectAccess(String,CodeConnectAccess)\n  nameWithType: NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)\n  fullName: System.Security.Policy.NetCodeGroup.AddConnectAccess(String,CodeConnectAccess)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.CodeConnectAccess\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeConnectAccess\n  nameWithType: CodeConnectAccess\n  fullName: System.Security.Policy.CodeConnectAccess\n- uid: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AnyOtherOriginScheme\n  nameWithType: NetCodeGroup.AnyOtherOriginScheme\n  fullName: System.Security.Policy.NetCodeGroup.AnyOtherOriginScheme\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.NetCodeGroup.AttributeString\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: AttributeString\n  nameWithType: NetCodeGroup.AttributeString\n  fullName: System.Security.Policy.NetCodeGroup.AttributeString\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.NetCodeGroup.Copy\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Copy()\n  nameWithType: NetCodeGroup.Copy()\n  fullName: System.Security.Policy.NetCodeGroup.Copy()\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.NetCodeGroup.CreateXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: CreateXml(SecurityElement,PolicyLevel)\n  nameWithType: NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.NetCodeGroup.CreateXml(SecurityElement,PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.NetCodeGroup.Equals(System.Object)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: NetCodeGroup.Equals(Object)\n  fullName: System.Security.Policy.NetCodeGroup.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Security.Policy.NetCodeGroup.GetConnectAccessRules\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: GetConnectAccessRules()\n  nameWithType: NetCodeGroup.GetConnectAccessRules()\n  fullName: System.Security.Policy.NetCodeGroup.GetConnectAccessRules()\n- uid: System.Collections.DictionaryEntry\n  parent: System.Collections\n  isExternal: false\n  name: DictionaryEntry\n  nameWithType: DictionaryEntry\n  fullName: System.Collections.DictionaryEntry[]\n- uid: System.Security.Policy.NetCodeGroup.GetHashCode\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: NetCodeGroup.GetHashCode()\n  fullName: System.Security.Policy.NetCodeGroup.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Policy.NetCodeGroup.MergeLogic\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: MergeLogic\n  nameWithType: NetCodeGroup.MergeLogic\n  fullName: System.Security.Policy.NetCodeGroup.MergeLogic\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.NetCodeGroup.ParseXml(System.Security.SecurityElement,System.Security.Policy.PolicyLevel)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ParseXml(SecurityElement,PolicyLevel)\n  nameWithType: NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)\n  fullName: System.Security.Policy.NetCodeGroup.ParseXml(SecurityElement,PolicyLevel)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Policy.PolicyLevel\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyLevel\n  nameWithType: PolicyLevel\n  fullName: System.Security.Policy.PolicyLevel\n- uid: System.Security.Policy.NetCodeGroup.PermissionSetName\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: PermissionSetName\n  nameWithType: NetCodeGroup.PermissionSetName\n  fullName: System.Security.Policy.NetCodeGroup.PermissionSetName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Policy.NetCodeGroup.ResetConnectAccess\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ResetConnectAccess()\n  nameWithType: NetCodeGroup.ResetConnectAccess()\n  fullName: System.Security.Policy.NetCodeGroup.ResetConnectAccess()\n- uid: System.Security.Policy.NetCodeGroup.Resolve(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: Resolve(Evidence)\n  nameWithType: NetCodeGroup.Resolve(Evidence)\n  fullName: System.Security.Policy.NetCodeGroup.Resolve(Evidence)\n- uid: System.Security.Policy.PolicyStatement\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyStatement\n  nameWithType: PolicyStatement\n  fullName: System.Security.Policy.PolicyStatement\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n- uid: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(System.Security.Policy.Evidence)\n  parent: System.Security.Policy.NetCodeGroup\n  isExternal: false\n  name: ResolveMatchingCodeGroups(Evidence)\n  nameWithType: NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n  fullName: System.Security.Policy.NetCodeGroup.ResolveMatchingCodeGroups(Evidence)\n- uid: System.Security.Policy.CodeGroup\n  parent: System.Security.Policy\n  isExternal: false\n  name: CodeGroup\n  nameWithType: CodeGroup\n  fullName: System.Security.Policy.CodeGroup\n- uid: System.Security.Policy.Evidence\n  parent: System.Security.Policy\n  isExternal: false\n  name: Evidence\n  nameWithType: Evidence\n  fullName: System.Security.Policy.Evidence\n"}